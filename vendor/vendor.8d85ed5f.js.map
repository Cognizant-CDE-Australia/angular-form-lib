{"version":3,"sources":["webpack:///vendor/vendor.8d85ed5f.js","webpack:///webpack/bootstrap 8d85ed5f9b03cbceca1b","webpack:///../~/angular/index.js","webpack:///../~/angular-translate/dist/angular-translate.js","webpack:///../~/angular-animate/index.js","webpack:///../~/angular-scroll/angular-scroll.min.js","webpack:///../~/highlightjs/highlight.pack.js","webpack:///../~/angular-animate/angular-animate.js","webpack:///../~/angular/angular.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","0","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","1","2","appendChild","m","c","angular","5","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","this","runTranslate","$translate","key","storageKey","storage","fallbackFromIncorrectStorageValue","preferred","preferredLanguage","isString","use","put","displayName","get","$translateSanitizationProvider","$sanitize","strategies","currentStrategy","hasConfiguredStrategy","hasShownNoStrategyConfiguredWarning","sanitize","value","mode","htmlSanitizeValue","escape","htmlEscapeValue","sanitizeParameters","mapInterpolationParameters","escapeParameters","escaped","addStrategy","strategyName","strategyFunction","removeStrategy","useStrategy","strategy","$get","$injector","$log","applyStrategies","selectedStrategies","forEach","selectedStrategy","isFunction","Error","showNoStrategyConfiguredWarning","warn","has","self","arguments","isArray","element","text","html","iteratee","isObject","result","propertyValue","propertyKey","isNumber","$STORAGE_KEY","$windowProvider","pascalprechtTranslateOverrider","$preferredLanguage","$languageKeyAliases","$fallbackLanguage","$fallbackWasString","$uses","$nextLang","$storageFactory","$storagePrefix","$missingTranslationHandlerFactory","$interpolationFactory","$loaderFactory","$loaderOptions","$notFoundIndicatorLeft","$notFoundIndicatorRight","loaderCache","$translationTable","$availableLanguageKeys","$storageKey","$interpolatorFactories","$cloakClassName","$postCompilingEnabled","$forceAsyncReloadEnabled","NESTED_OBJECT_DELIMITER","directivePriority","statefulFilter","uniformLanguageTagResolver","languageTagResolver","default","tag","split","join","java","temp","parts","toLowerCase","toUpperCase","bcp47","version","getFirstBrowserLanguage","getLocale","language","nav","navigator","browserLanguagePropertyKeys","languages","locale","indexOf","array","searchElement","len","trim","toString","replace","negotiateLocale","avail","lowercase","n","alias","langKeyAlias","hasWildcardKey","hasExactKey","Object","prototype","hasOwnProperty","slice","translations","langKey","translationTable","extend","flatObject","cloakClassName","name","data","path","prevKey","keyWithPath","keyWithShortPath","val","concat","addInterpolation","useMessageFormatInterpolation","useInterpolation","useSanitizeValueStrategy","setupPreferredLanguage","translationNotFoundIndicator","indicator","translationNotFoundIndicatorLeft","translationNotFoundIndicatorRight","fallbackLanguage","fallbackStack","useUrlLoader","url","options","useLoader","useStaticFilesLoader","loaderFactory","useLocalStorage","useStorage","useCookieStorage","storageFactory","storagePrefix","prefix","useMissingTranslationHandlerLog","useMissingTranslationHandler","usePostCompiling","forceAsyncReload","uniformLanguageTag","standard","determinePreferredLanguage","fn","registerAvailableLanguageKeys","languageKeys","aliases","useLoaderCache","cache","priority","state","$rootScope","$q","Storage","fallbackIndex","startFallbackIteration","defaultInterpolator","pendingLoader","interpolatorHashMap","langPromises","translationId","interpolateParams","interpolationId","defaultTranslationText","translateAll","translationIds","results","promises","translate","deferred","defer","regardless","resolve","then","promise","all","promiseToWaitFor","index","promiseResolved","determineTranslation","reject","applyNotFoundIndicators","useLanguage","$emit","setLocale","eachInterpolator","interpolator","loadAsync","loaderOptions","$http","onLoaderSuccess","table","onLoaderError","eachInterpolationFactory","interpolatorFactory","getInterpolationIdentifier","getTranslationTable","onResolve","getFallbackTranslation","Interpolator","translation","substr","interpolate","getFallbackTranslationInstant","translateByHandler","resultString","resolveForFallbackLanguage","fallbackLanguageIndex","resolveForFallbackLanguageInstant","fallbackTranslation","fallbackTranslationInstant","missingTranslationHandlerTranslation","_translationId","determineTranslationInstant","clearNextLangAndPromise","useFallbackLanguage","langKeyPosition","proposedLanguage","aliasedKey","isPostCompilingEnabled","isForceAsyncReloadEnabled","refresh","oneTranslationsLoaded","tables","loadingKeys","allTranslationsLoaded","tableData","instant","isUndefined","possibleLangKeys","j","d","possibleLangKey","versionInfo","equals","processAsyncResult","fallbackLanguageId","$translateDefaultInterpolation","$interpolate","$translateSanitization","$locale","$translateInterpolator","$identifier","string","interpolationParams","interpolatedText","translateDirective","$compile","$parse","restrict","scope","compile","tElement","tAttr","translateValuesExist","translateValues","translateInterpolation","translateValueExist","outerHTML","match","interpolateRegExp","startSymbol","endSymbol","watcherRegExp","iElement","iAttr","preText","postText","initInterpolationParams","$parent","attr","attributeName","observeElementTranslation","_unwatchOld","isDefined","interpolateMatches","watcherMatches","$watch","newValue","updateTranslations","observeAttributeTranslation","translateAttr","$observe","firstAttributeChangedEvent","defaultText","observeValueAttribute","attrName","updateTranslation","applyTranslation","successful","globallyEnabled","locallyDefined","translateCompile","locallyEnabled","contents","$attr","translateDefault","unbind","$on","translateCloakDirective","applyCloak","addClass","removeCloak","removeClass","removeListener","translateCloak","translateFilterFactory","translateFilter","interpolation","$stateful","$translationCache","$cacheFactory","run","$inject","provider","constant","directive","filter","6","26","duScrollDefaultEasing","Math","pow","t","r","o","l","u","a","HTMLDocument","nodeType","DOCUMENT_NODE","s","HTMLElement","ELEMENT_NODE","duScrollTo","isElement","duScrollToElement","duScrollToAnimated","scrollTo","scrollLeft","scrollTop","f","duScrollLeft","duScrollTop","round","S","g","h","v","which","y","ceil","bind","isNaN","getBoundingClientRect","top","scrollX","documentElement","body","scrollY","duScrollToElementAnimated","duScrollTopAnimated","duScrollLeftAnimated","Date","getTime","max","cancel","container","clientHeight","scrollHeight","pageYOffset","innerHeight","spies","currentlyActive","getTargetPosition","offset","height","spy","$element","$broadcast","$id","handler","off","$scope","parentNode","getContainer","on","triggerHandler","splice","addSpy","removeSpy","createContext","destroyContext","getContextForScope","getContainerId","setContainer","removeContainer","link","href","duSmoothScroll","substring","getElementById","getElementsByName","stopPropagation","preventDefault","parseInt","duration","pre","target","targetId","getTargetElement","flushTargetCache","ngHref","duScrollspy","27","hljs","node","nodeName","testRe","re","lexeme","exec","isNotHighlighted","test","blockLanguage","block","classes","className","getLanguage","inherit","parent","obj","nodeStream","_nodeStream","child","firstChild","nextSibling","nodeValue","event","mergeStreams","original","highlighted","selectStream","open","attr_str","Array","map","attributes","close","render","processed","nodeStack","stream","reverse","pop","compileLanguage","reStr","source","langRe","global","RegExp","case_insensitive","compileMode","compiled","keywords","beginKeywords","compiled_keywords","flatten","str","kw","pair","Number","keys","lexemesRe","lexemes","begin","beginRe","end","endsWithParent","endRe","terminator_end","illegal","illegalRe","relevance","contains","expanded_contains","variants","starts","terminators","Boolean","highlight","ignore_illegals","continuation","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","buildSpan","classname","insideSpan","leaveOpen","noPrefix","classPrefix","openSpan","closeSpan","processKeywords","mode_buffer","last_index","lastIndex","keyword_match","processSubLanguage","explicit","subLanguage","continuations","highlightAuto","processBuffer","startNewMode","markup","returnBegin","excludeBegin","create","processLexeme","buffer","new_mode","end_mode","origin","returnEnd","excludeEnd","current","count","message","languageSubset","second_best","fixMarkup","tabReplace","p1","useBR","buildClassName","prevClassName","currentLang","resultLang","highlightBlock","createElementNS","innerHTML","textContent","originalStream","resultNode","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","registerLanguage","lang","listLanguages","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","IDENT_RE_RU","OneS_KEYWORDS","OneS_BUILT_IN","DQUOTE","STR_START","STR_CONT","keyword","built_in","IDENT_FUNC_RETURN_TYPE_RE","AS3_REST_ARG_MODE","literal","NUMBER","common","STRING","PARAMS","COMMENT_MODE_1","COMMENT_MODE_2","COMMENTS","command","property","preprocessor","XML_IDENT_RE","PHP","TAG_INTERNALS","title","KEYWORDS","SHORTKEYS","BACKTICK_ESCAPE","BUILT_IN","LITERAL","VARIABLE","PREPROCESSOR","CONSTANT","FUNCTION","VAR","QUOTE_STRING","APOS_STRING","operator","LITERALS","COMMENT_MODES","CHAR_STRING","DATE","DBL_QUOTED_VARIABLE","PROCEDURE","OBJECT","DECLARATION_MODIFIERS","DOCUMENTATION","LANGUAGE_ANNOTATIONS","SUBST","EXPRESSIONS","annotation","SYMBOLSTART","SYMBOL_RE","SIMPLE_NUMBER_RE","SYMBOL","COLLECTION","HINT","HINT_COL","KEY","LIST","BODY","NAME","DEFAULT_CONTAINS","JS_IDENT_RE","TITLE","PARAMS_RE","CPP_PRIMATIVE_TYPES","STRINGS","NUMBERS","FUNCTION_TITLE","CPP_KEYWORDS","GENERIC_IDENT_RE","RULE","D_KEYWORDS","decimal_integer_re","decimal_integer_nosus_re","binary_integer_re","hexadecimal_digits_re","hexadecimal_integer_re","decimal_exponent_re","decimal_float_re","hexadecimal_float_re","integer_re","float_re","escape_sequence_re","D_INTEGER_MODE","D_FLOAT_MODE","D_CHARACTER_MODE","D_ESCAPE_SEQUENCE","D_STRING_MODE","D_WYSIWYG_DELIMITED_STRING_MODE","D_ALTERNATE_WYSIWYG_STRING_MODE","D_HEX_STRING_MODE","D_TOKEN_STRING_MODE","D_HASHBANG_MODE","D_SPECIAL_TOKEN_SEQUENCE_MODE","D_ATTRIBUTE_MODE","D_NESTING_COMMENT_MODE","CLASS","FILTER","built_ins","LABEL","flow","winutils","EXPRESSION_KEYWORDS","ELIXIR_IDENT_RE","ELIXIR_METHOD_RE","ELIXIR_KEYWORDS","ELIXIR_DEFAULT_CONTAINS","CONSTRUCTOR","RECORD","RUBY_METHOD_RE","RUBY_KEYWORDS","YARDOCTAG","IRB_OBJECT","RUBY_DEFAULT_CONTAINS","SIMPLE_PROMPT","DEFAULT_PROMPT","RVM_PROMPT","IRB_DEFAULT","special_functions","reserved","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","NAMED_FUN","FUNCTION_CALL","TUPLE","VAR1","VAR2","RECORD_ACCESS","BLOCK_STATEMENTS","BASIC_MODES","F_KEYWORDS","TYPEPARAM","GCODE_IDENT_RE","GCODE_CLOSE_RE","GCODE_KEYWORDS","GCODE_START","GCODE_CODE","GO_KEYWORDS","typename","PRAGMA","START_BRACKET","END_BRACKET","JAVA_NUMBER_RE","JAVA_NUMBER_MODE","TYPES","VALUE_CONTAINER","ARRAY","VARIABLE_NAME_RE","DEFAULT","TYPE_ANNOTATION","SUBTYPE","CHAR","INTERPOLATION","INTERPOLATED_VARIABLE","COMMAND","MACROCALL","LASSO_IDENT_RE","LASSO_ANGLE_RE","LASSO_CLOSE_RE","LASSO_KEYWORDS","HTML_COMMENT","LASSO_NOPROCESS","LASSO_START","LASSO_DATAMEMBER","LASSO_CODE","INTERP_IDENT_RE","RULES","VALUE","STRING_MODE","IDENT_MODE","FUNCT_MODE","ident","PARENS_MODE","VALUE_WITH_RULESETS","MIXIN_GUARD_MODE","RULE_MODE","AT_RULE_MODE","VAR_RULE_MODE","SELECTOR_MODE","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","SHEBANG","KEYWORD","IDENT","MEC","QUOTED_LIST","QUOTED","QUOTED_ATOM","TITLE1","TITLE2","SUBST_SIMPLE","OPENING_LONG_BRACKET","CLOSING_LONG_BRACKET","LONG_BRACKETS","COMMON_CONTAINS","TRANSPOSE","pragma","TODO","CCOMMENT","NUMCODE","ATOM","STRING_FMT","IMPLICATION","HEAD_BODY_CONJUNCTION","PERL_KEYWORDS","METHOD","STRING_CONTAINS","PERL_DEFAULT_CONTAINS","NIX_KEYWORDS","ANTIQUOTE","ATTRS","SINGLE_QUOTE","DOUBLE_QUOTE","CONSTANTS","DEFINES","VARIABLES","LANGUAGES","PARAMETERS","COMPILER","API_CLASS","OBJC_KEYWORDS","LEXEMES","CLASS_KEYWORDS","SPECIAL_VARS","PREPRO","MODIFIERS","FUNCTIONS","OXYGENE_KEYWORDS","CURLY_COMMENT","PAREN_COMMENT","CURLY_SUBCOMMENT","MACRO","TABLE","backtickEscape","variable","PARENTED","LINE_COMMENT","BACKTICK_STRING","CHAR_CODE","SPACE_CODE","PRED_OP","inner","PUPPET_KEYWORDS","PROMPT","Q_KEYWORDS","IDENTIFIER","NUM_SUFFIX","BLOCK_COMMENT","ANNOTATION","TYPE","SCHEME_IDENT_RE","SCHEME_SIMPLE_NUMBER_RE","SCHEME_COMPLEX_NUMBER_RE","BUILTINS","QUOTED_IDENT","HEXCOLOR","smali_instr_low_prio","smali_instr_high_prio","smali_keywords","VAR_IDENT_RE","COMMENT_MODE","STEP21_IDENT_RE","STEP21_CLOSE_RE","STEP21_KEYWORDS","STEP21_START","STEP21_CODE","HEX_COLOR","AT_KEYWORDS","PSEUDO_SELECTORS","TAGS","TAG_END","ATTRIBUTES","ILLEGAL","SWIFT_KEYWORDS","COMMAND1","COMMAND2","SPECIAL","BUILT_IN_TYPES","TPID","TPLABEL","TPDATA","TPIO","FUNCTION_NAMES","INTEGER_RE","EXPONENT_RE","DECIMAL_LITERAL_RE","BASED_INTEGER_RE","BASED_LITERAL_RE","pseudo","BUILTIN_MODULES","XL_KEYWORDS","XL_CONSTANT","XL_VARIABLE","XL_ID","DOUBLE_QUOTE_TEXT","SINGLE_QUOTE_TEXT","LONG_TEXT","BASED_NUMBER","IMPORT","FUNCTION_DEFINITION","CONTAINS","28","NG_ANIMATE_CHILDREN","attrs","ngAnimateChildren","$$rAF","$document","bod","offsetWidth","config","$provide","$animateProvider","extractElementNode","elm","prepareElement","stripCommentsFromElement","isMatchingElement","elm1","elm2","noop","selectors","$$selectors","NG_ANIMATE_STATE","NG_ANIMATE_CLASS_NAME","rootAnimateState","running","decorator","$delegate","$sniffer","$rootElement","$$asyncCallback","blockElementAnimations","lookup","matches","flagMap","transitions","animations","klass","selectorFactoryName","animationRunner","animationEvent","registerAnimation","animationFactory","afterFn","beforeFn","charAt","after","before","fns","cancellations","allCompleteFn","afterAnimationComplete","animation","progress","classNameAdd","classNameRemove","isSetClassOperation","isClassBased","currentClassName","isAnimatableClassName","beforeComplete","beforeCancel","afterComplete","afterCancel","animationLookup","created","cancelFn","performAnimation","parentElement","afterElement","domOperation","doneCallback","fireDOMCallback","animationPhase","eventName","elementEvents","fireBeforeCallbackAsync","fireAfterCallbackAsync","fireDoneCallbackAsync","fireDOMOperation","hasBeenRun","closeAnimation","runner","cleanup","localAnimationCount","_data","events","skipAnimations","ngAnimateState","runningAnimations","active","totalActiveAnimations","totalActive","lastAnimation","last","disabled","animationsDisabled","skipAnimation","animationsToCancel","operation","hasClass","one","activeLeaveAnimation","globalAnimationCounter","cancelled","cancelChildAnimations","nodes","getElementsByClassName","structural","removeAnimations","removeData","allowChildAnimations","parentRunningAnimation","hasParent","isRoot","animateChildrenFlag","$$postDigest","classNameFilter","enter","leave","move","setClass","add","remove","enabled","register","$window","$timeout","$$animateReflow","clearCacheAfterReflow","cancelAnimationReflow","animationReflowQueue","lookupCache","afterReflow","animationCloseHandler","totalTime","animationElementQueue","futureTimestamp","now","closingTimestamp","closingTimer","closeAllAnimations","elements","elementData","NG_ANIMATE_CSS_DATA_KEY","closeAnimationFn","getElementAnimationDetails","cacheKey","transitionDelayStyle","animationDelayStyle","transitionDurationStyle","transitionPropertyStyle","transitionDuration","transitionDelay","animationDuration","animationDelay","elementStyles","getComputedStyle","TRANSITION_PROP","DURATION_KEY","parseMaxTime","PROPERTY_KEY","DELAY_KEY","ANIMATION_PROP","aDuration","ANIMATION_ITERATION_COUNT_KEY","total","maxValue","values","parseFloat","getCacheKey","parentID","NG_ANIMATE_PARENT_KEY","parentCounter","getAttribute","animateSetup","calculationDecorator","eventCacheKey","itemIndex","stagger","staggerClassName","staggerCacheKey","applyClasses","formerData","timings","isCurrentlyAnimating","blockTransitions","blockKeyframeAnimations","isStructuralAnimation","isAnimating","style","NG_ANIMATE_BLOCK_CLASS_NAME","unblockTransitions","prop","unblockKeyframeAnimations","animateRun","activeAnimationComplete","onEnd","css3AnimationEvents","onAnimationProgress","activeClassName","animateClose","appliedStyles","removeProperty","ev","originalEvent","timeStamp","$manualTimeStamp","elapsedTime","toFixed","ELAPSED_TIME_MAX_DECIMAL_PLACES","startTime","maxDelayTime","maxDuration","maxDelay","ONE_SECOND","ANIMATIONEND_EVENT","TRANSITIONEND_EVENT","propertyStyle","CSS_PREFIX","delayStyle","prepareStaggerDelay","oldStyle","setAttribute","staggerTime","animationTime","CLOSING_TIME_BUFFER","staggerDelay","animateBefore","animateAfter","animate","animationComplete","preReflowCancellation","suffixClasses","suffix","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","animationCompleted","beforeSetClass","cancellationMethod","beforeAddClass","beforeRemoveClass","30","minErr","code","template","templateArgs","stringify","JSON","arg","toJson","encodeURIComponent","isArrayLike","isWindow","iterator","context","sortedKeys","sort","forEachSorted","reverseParams","iteratorFn","nextUid","digit","uid","charCodeAt","String","fromCharCode","unshift","setHashKey","$$hashKey","dst","int","extra","identity","$","valueFn","isDate","isRegExp","location","alert","setInterval","isScope","$evalAsync","isFile","isBlob","isPromiseLike","find","list","includes","arrayRemove","copy","destination","stackSource","stackDest","ngMinErr","shallowCopy","o1","o2","keySet","t1","t2","array1","array2","sliceArgs","args","startIndex","curryArgs","toJsonReplacer","pretty","fromJson","json","parse","toBoolean","startingTag","jqLite","clone","empty","TEXT_NODE","elemHtml","append","tryDecodeURIComponent","decodeURIComponent","parseKeyValue","keyValue","key_value","toKeyValue","arrayValue","encodeUriQuery","encodeUriSegment","pctEncodeSpaces","angularInit","bootstrap","appElement","names","NG_APP_CLASS_REGEXP","doBootstrap","injector","createInjector","invoke","$apply","NG_DEFER_BOOTSTRAP","resumeBootstrap","extraModules","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","bindJQuery","jQuery","JQLitePrototype","isolateScope","controller","inheritedData","jqLitePatchJQueryRemove","JQLite","assertArg","reason","assertArgFn","acceptArrayAnnotation","constructor","assertNotHasOwnProperty","getter","bindFnToScope","lastInstance","getBlockElements","startNode","endNode","setupModuleLoader","ensure","$injectorMinErr","$$minErr","requires","configFn","invokeLater","method","insertMethod","invokeQueue","moduleInstance","runBlocks","_invokeQueue","_runBlocks","service","publishExternalAPI","uppercase","counter","$$csp","csp","angularModule","$LocaleProvider","$$sanitizeUri","$$SanitizeUriProvider","$CompileProvider","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","scriptDirective","select","selectDirective","styleDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtml","ngBindHtmlDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngIf","ngIfDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","required","requiredDirective","ngRequired","ngValue","ngValueDirective","ngIncludeFillContentDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$animate","$AnimateProvider","$browser","$BrowserProvider","$CacheFactoryProvider","$controller","$ControllerProvider","$DocumentProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$InterpolateProvider","$interval","$IntervalProvider","$HttpProvider","$httpBackend","$HttpBackendProvider","$location","$LocationProvider","$LogProvider","$ParseProvider","$RootScopeProvider","$QProvider","$sce","$SceProvider","$sceDelegate","$SceDelegateProvider","$SnifferProvider","$templateCache","$TemplateCacheProvider","$TimeoutProvider","$WindowProvider","$$RAFProvider","$$AsyncCallbackProvider","jqNextId","jqId","camelCase","SPECIAL_CHARS_REGEXP","_","MOZ_HACK_REGEXP","dispatchThis","filterElems","getterIfNoArguments","removePatch","param","set","setIndex","setLength","childIndex","childLength","children","fireEvent","originalJqFn","$original","jqLiteIsTextNode","HTML_REGEXP","jqLiteBuildFragment","tmp","wrap","jj","fragment","createDocumentFragment","createTextNode","TAG_NAME_REGEXP","wrapMap","_default","XHTML_TAG_REGEXP","removeChild","lastChild","childNodes","jqLiteParseHTML","parsed","SINGLE_TAG_REGEXP","jqLiteMinErr","jqLiteAddNodes","jqLiteClone","cloneNode","jqLiteDealoc","jqLiteRemoveData","jqLiteOff","unsupported","jqLiteExpandoStore","handle","eventHandler","removeEventListenerFn","expandoId","ng339","expandoStore","jqCache","$destroy","jqLiteData","isSetter","keyDefined","isSimpleGetter","jqLiteHasClass","selector","jqLiteRemoveClass","cssClasses","cssClass","jqLiteAddClass","existingClasses","jqLiteController","jqLiteInheritedData","ii","host","jqLiteEmpty","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","createEventHandler","returnValue","cancelBubble","srcElement","defaultPrevented","prevent","isDefaultPrevented","eventHandlersCopy","msie","elem","hashKey","nextUidFn","objType","HashMap","isolatedUid","annotate","fnText","argDecl","STRIP_COMMENTS","FN_ARGS","FN_ARG_SPLIT","FN_ARG","underscore","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","providerCache","providerSuffix","factoryFn","instanceCache","serviceName","decorFn","origProvider","orig$get","origInstance","instanceInjector","loadModules","moduleFn","loadedModules","invokeArgs","stack","createInternalInjector","getService","INSTANTIATING","err","locals","Type","instance","returnedValue","Constructor","servicename","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","scroll","hash","scrollIntoView","supported","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","error","getHash","startPoller","interval","setTimeout","check","pollFns","pollFn","pollTimeout","fireUrlChange","lastBrowserUrl","urlChangeListeners","listener","rawDocument","history","clearTimeout","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","addPollFn","baseElement","reloadLocation","sameBase","stripHash","replaceState","pushState","urlChangeInit","onUrlChange","hashchange","$$checkUrlChange","baseHref","lastCookies","lastCookieString","cookiePath","cookies","cookieLength","cookieArray","cookie","unescape","delay","timeoutId","deferId","cacheFactory","cacheId","entry","freshEnd","staleEnd","nextEntry","prevEntry","caches","size","stats","capacity","MAX_VALUE","lruHash","lruEntry","removeAll","destroy","info","$$sanitizeUriProvider","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","EVENT_HANDLER_ATTR_REGEXP","registerDirective","directiveFactory","directives","require","aHrefSanitizationWhitelist","regexp","imgSrcSanitizationWhitelist","$compileNodes","transcludeFn","maxPriority","ignoreDirective","previousCompileContext","compositeLinkFn","compileNodes","safeAddClass","cloneConnectFn","transcludeControllers","parentBoundTranscludeFn","$linkNode","eq","nodeList","nodeLinkFn","childLinkFn","childScope","childBoundTranscludeFn","nodeListLength","stableNodeList","linkFns","$new","transcludeOnThisElement","createBoundTranscludeFn","transclude","templateOnThisElement","linkFnFound","Attributes","collectDirectives","applyDirectivesToNode","$$element","terminal","previousBoundTranscludeFn","boundTranscludeFn","transcludedScope","cloneFn","controllers","scopeCreated","$$transcluded","attrsMap","addDirective","directiveNormalize","nodeName_","nName","ngAttrName","isNgAttr","nAttrs","attrStartName","attrEndName","specified","NG_ATTR_BINDING","directiveNName","addAttrInterpolateDirective","addTextInterpolateDirective","byPriority","groupScan","attrStart","attrEnd","depth","hasAttribute","$compileMinErr","groupElementsLinkFnWrapper","linkFn","compileNode","templateAttrs","jqCollection","originalReplaceDirective","preLinkFns","postLinkFns","addLinkFns","post","directiveName","newIsolateScopeDirective","$$isolateScope","cloneAndAnnotateFn","getControllers","elementControllers","retrievalMethod","optional","linkNode","controllersBoundTransclude","cloneAttachFn","hasElementTranscludeDirective","LOCAL_REGEXP","templateDirective","$$originalDirective","definition","scopeName","lastValue","parentGet","parentSet","compare","$$isolateBindings","$$observers","$$scope","b","assign","parentValue","controllerDirectives","controllerInstance","$attrs","$transclude","controllerAs","scopeToChild","templateUrl","newScopeDirective","$template","directiveValue","terminalPriority","nonTlbTranscludeDirective","hasTranscludeDirective","hasTemplate","$compileNode","replaceDirective","childTranscludeFn","$$start","$$end","assertNoDuplicate","$$tlb","createComment","replaceWith","denormalizeTemplate","newTemplateAttrs","templateDirectives","unprocessedDirectives","markDirectivesAsIsolate","mergeTemplateAttributes","compileTemplateUrl","tDirectives","startAttrName","endAttrName","srcAttr","dstAttr","$set","tAttrs","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","getTrustedResourceUrl","success","content","tempTemplateAttrs","beforeTemplateLinkNode","linkRootElement","oldClasses","response","headers","ignoreChildLinkFn","rootElement","diff","what","previousDirective","interpolateFn","templateNode","hasCompileParent","bindings","getTrustedContext","attrNormalizedName","HTML","RESOURCE_URL","$$inter","oldValue","$updateClass","elementsToRemove","newNode","firstElementToRemove","removeCount","j2","replaceChild","expando","k","kk","$normalize","$addClass","classVal","$removeClass","newClasses","toAdd","tokenDifference","toRemove","writeAttr","booleanKey","removeAttr","listeners","PREFIX_REGEXP","str1","str2","tokens1","tokens2","outer","token","CNTRL_REG","expression","identifier","exception","cause","parseHeaders","line","headersGetter","headersObj","transformData","isSuccess","status","JSON_START","JSON_END","PROTECTION_PREFIX","CONTENT_TYPE_APPLICATION_JSON","Content-Type","defaults","transformResponse","transformRequest","Accept","patch","xsrfCookieName","xsrfHeaderName","interceptorFactories","interceptors","responseInterceptorFactories","responseInterceptors","requestConfig","resp","mergeHeaders","execHeaders","headerContent","headerFn","header","defHeaderName","lowercaseDefHeaderName","reqHeaderName","defHeaders","reqHeaders","defaultHeadersIteration","serverRequest","reqData","withCredentials","sendReq","chain","when","reversedInterceptors","interceptor","request","requestError","responseError","thenFn","rejectFn","createShortMethods","createShortMethodsWithData","done","headersString","statusText","resolvePromise","$$phase","removePendingReq","idx","pendingRequests","cachedResp","buildUrl","params","defaultCache","xsrfValue","urlIsSameOrigin","timeout","responseType","toISOString","interceptorFactory","responseFn","createXhr","XMLHttpRequest","ActiveXObject","createHttpBackend","$browserDefer","jsonpReq","callbackId","addEventListenerFn","onreadystatechange","readyState","ABORTED","timeoutRequest","jsonpDone","xhr","abort","completeRequest","urlResolve","protocol","setRequestHeader","responseHeaders","getAllResponseHeaders","responseText","send","mustHaveExpression","trustedContext","endIndex","exp","hasInterpolation","startSymbolLength","endSymbolLength","$interpolateMinErr","part","getTrusted","valueOf","newErr","invokeApply","clearInterval","iteration","skipApply","$$intervalId","notify","intervals","NUMBER_FORMATS","DECIMAL_SEP","GROUP_SEP","PATTERNS","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","CURRENCY_SYM","DATETIME_FORMATS","MONTH","SHORTMONTH","DAY","SHORTDAY","AMPMS","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","pluralCat","num","encodePath","segments","parseAbsoluteUrl","absoluteUrl","locationObj","appBase","parsedUrl","$$protocol","$$host","hostname","$$port","port","DEFAULT_PORTS","parseAppUrl","relativeUrl","prefixed","$$path","pathname","$$search","search","$$hash","beginsWith","whole","trimEmptyHash","stripFile","lastIndexOf","serverBase","LocationHtml5Url","basePrefix","$$html5","appBaseNoFile","$$parse","pathUrl","$locationMinErr","$$compose","$$url","$$absUrl","$$parseLinkUrl","relHref","appUrl","prevAppUrl","rewrittenUrl","LocationHashbangUrl","hashPrefix","removeWindowsDriveName","base","firstPathSegmentMatch","windowsFilePathExp","withoutBaseUrl","withoutHashUrl","LocationHashbangInHtml5Url","locationGetter","locationGetterSetter","preprocess","html5Mode","afterLocationChange","oldUrl","absUrl","LocationMode","initialUrl","IGNORE_URI_REGEXP","ctrlKey","metaKey","absHref","animVal","newUrl","$digest","changeCounter","currentReplace","$$replace","debug","debugEnabled","flag","formatError","sourceURL","consoleLog","console","logFn","log","hasApply","arg1","arg2","ensureSafeMemberName","fullExpression","$parseMinErr","getStringValue","ensureSafeObject","ensureSafeFunction","CALL","APPLY","BIND","setter","setValue","fullExp","propertyObj","unwrapPromises","promiseWarning","$$v","isPossiblyDangerousMemberName","cspSafeGetterFn","key0","key1","key2","key3","key4","eso","expensiveChecks","eso0","eso1","eso2","eso3","eso4","pathVal","getterFnWithExtraArgs","getterFn","getterFnCache","getterFnCacheExpensive","getterFnCacheDefault","pathKeys","pathKeysLength","needsEnsureSafeObject","lookupJs","wrapWithEso","evaledFnGetter","Function","cacheDefault","cacheExpensive","$parseOptions","logPromiseWarnings","$parseOptionsExpensive","promiseWarningCache","parsedExpression","parseOptions","lexer","Lexer","parser","Parser","qFactory","nextTick","exceptionHandler","defaultCallback","defaultErrback","ref","pending","createInternalRejectedPromise","errback","progressback","wrappedCallback","wrappedErrback","wrappedProgressback","catch","finally","makePromise","resolved","handleCallback","isResolved","callbackOutput","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","webkitCancelRequestAnimationFrame","rafSupported","raf","timer","TTL","$rootScopeMinErr","lastDirtyWatch","digestTtl","Scope","$$watchers","$$nextSibling","$$prevSibling","$$childHead","$$childTail","$root","$$destroyed","$$asyncQueue","$$postDigestQueue","$$listeners","$$listenerCount","beginPhase","phase","clearPhase","compileToFn","decrementListenerCount","initWatchVal","isolate","$$childScopeClass","watchExp","objectEquality","watcher","listenFn","newVal","oldVal","originalFn","$watchCollection","$watchCollectionWatch","objGetter","newLength","bothNaN","internalArray","oldLength","changeDetected","internalObject","$watchCollectionAction","initRun","veryOldValue","trackVeryOldValue","watch","watchers","dirty","next","logIdx","logMsg","asyncTask","asyncQueue","postDigestQueue","ttl","watchLog","$eval","traverseScopesLoop","expr","namedListeners","indexOfListener","targetScope","listenerArgs","currentScope","uri","isImage","normalizedVal","regex","escapeForRegexp","adjustMatcher","matcher","$sceMinErr","adjustMatchers","matchers","adjustedMatchers","SCE_CONTEXTS","resourceUrlWhitelist","resourceUrlBlacklist","matchUrl","isResourceUrlAllowedByPolicy","allowed","generateHolderType","Base","holderType","trustedValue","$$unwrapTrustedValue","trustAs","byType","maybeTrusted","trustedValueHolderBase","htmlSanitizer","CSS","URL","JS","msieDocumentMode","sce","isEnabled","parseAs","enumValue","lName","vendorPrefix","eventSupport","android","userAgent","boxee","documentMode","vendorRegex","bodyStyle","webkitTransition","webkitAnimation","hasEvent","divElm","deferreds","$$timeoutId","urlParsingNode","requestUrl","originUrl","filters","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","comparator","comparatorType","predicates","objKey","filtered","formats","amount","currencySymbol","formatNumber","number","fractionSize","pattern","groupSep","decimalSep","isFinite","isNegative","abs","numStr","formatedText","hasExponent","fractionLen","min","fraction","lgroup","group","padNumber","digits","neg","dateGetter","date","dateStrGetter","shortForm","timeZoneGetter","zone","getTimezoneOffset","paddedZone","ampmGetter","getHours","jsonStringToDate","R_ISO8601_STR","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","ms","format","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","object","limit","Infinity","sortPredicate","reverseOrder","comp","reverseComparator","descending","v1","v2","predicate","ngDirective","FormController","toggleValidCss","isValid","validationErrorKey","VALID_CLASS","INVALID_CLASS","parentForm","nullFormCtrl","invalidCount","errors","$error","controls","$name","$dirty","$pristine","$valid","$invalid","$addControl","PRISTINE_CLASS","control","$removeControl","queue","validationToken","$setValidity","$setDirty","DIRTY_CLASS","$setPristine","validate","ctrl","validatorName","validity","testFlags","flags","addNativeHtml5Validators","badFlags","ignoreFlags","$$hasNativeValidators","validator","$parsers","textInputType","VALIDITY_STATE_PROPERTY","placeholder","noevent","$$validityState","composing","ngTrim","revalidate","$viewValue","$setViewValue","deferListener","keyCode","$render","$isEmpty","patternValidator","ngPattern","validateRegex","patternObj","$formatters","ngMinlength","minlength","minLengthValidator","ngMaxlength","maxlength","maxLengthValidator","numberInputType","NUMBER_REGEXP","numberBadFlags","minValidator","maxValidator","urlInputType","urlValidator","URL_REGEXP","emailInputType","emailValidator","EMAIL_REGEXP","radioInputType","checked","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","arrayDifference","arrayClasses","addClasses","digestClassCounts","removeClasses","classCounts","classesToUpdate","updateClasses","ngClassWatchAction","$index","old$index","mod","manualLowercase","ch","manualUppercase","isActive_","querySelector","full","major","minor","dot","codeName","attachEvent","removeEventListener","detachEvent","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","ready","trigger","fired","removeAttribute","css","currentStyle","lowercasedName","getNamedItem","ret","getText","textProp","NODE_TYPE_TEXT_PROPERTY","$dv","multiple","selected","nodeCount","dealoc","onFn","eventFns","compareDocumentPosition","adown","bup","eventmap","mouseleave","mouseenter","related","relatedTarget","replaceNode","insertBefore","contentDocument","prepend","wrapNode","newElement","toggleClass","condition","classCondition","nextElementSibling","extraParameters","dummyEvent","eventFnsCopy","handlerArgs","arg3","$animateMinErr","$$classNameFilter","PATH_MATCH","http","https","ftp","paramValue","OPERATORS","null","true","false","+","-","*","/","%","^","=","===","!==","==","!=","<",">","<=",">=","&&","||","&","|","!","ESCAPE","'","\"","lex","lastCh","tokens","is","readString","peek","readNumber","isIdent","readIdent","isWhitespace","ch2","ch3","fn2","fn3","throwError","chars","was","isExpOperator","start","colStr","peekCh","lastDot","peekIndex","methodName","quote","rawString","hex","rep","ZERO","statements","primary","expect","filterChain","consume","arrayDeclaration","functionCall","objectIndex","fieldAccess","msg","peekToken","e1","e2","e3","e4","unaryFn","right","ternaryFn","left","middle","binaryFn","statement","argsFn","fnInvoke","assignment","ternary","logicalOR","logicalAND","equality","relational","additive","multiplicative","unary","field","indexFn","contextGetter","fnPtr","elementFns","allConstant","elementFn","keyValues","yyyy","yy","MMMM","MMM","MM","M","dd","HH","H","hh","mm","ss","sss","EEEE","EEE","Z","xlinkHref","propName","normalized","formDirectiveFactory","isNgForm","formElement","action","preventDefaultListener","parentFormCtrl","inputType","email","radio","checkbox","hidden","button","submit","reset","file","NgModelController","NaN","$modelValue","$viewChangeListeners","ngModelGet","ngModelSet","formatters","ctrls","modelCtrl","formCtrl","viewValue","CONSTANT_VALUE_REGEXP","tpl","tplAttr","templateElement","getTrustedHtml","forceAsyncEvents","blur","focus","$event","previousElements","srcExp","onloadExp","onload","autoScrollExp","autoscroll","previousElement","currentElement","cleanupLastIncludeContent","parseAsResourceUrl","afterAnimation","thisChangeId","newScope","BRACE","numberExp","whenExp","whens","whensExpFns","isWhen","getBlockStart","getBlockEnd","NG_REMOVED","ngRepeatMinErr","trackByExp","trackByExpGetter","trackByIdExpFn","trackByIdArrayFn","trackByIdObjFn","lhs","rhs","valueIdentifier","keyIdentifier","hashFnLocals","lastBlockMap","collection","nextNode","arrayLength","trackById","trackByIdFn","collectionKeys","previousNode","nextBlockMap","nextBlockOrder","$first","$last","$middle","$odd","$even","newStyles","oldStyles","cases","ngSwitchController","watchExpr","selectedTranscludes","selectedElements","selectedScopes","change","selectedTransclude","selectedScope","caseElement","anchor","ngOptionsMinErr","NG_OPTIONS_REGEXP","nullModelCtrl","nullOption","unknownOption","optionsMap","ngModelCtrl","databound","init","ngModelCtrl_","nullOption_","unknownOption_","addOption","removeOption","hasOption","renderUnknownOption","unknownVal","setupAsSingle","selectElement","selectCtrl","emptyOption","setupAsMultiple","lastView","items","setupAsOptions","getSelectedSet","selectedSet","modelValue","trackFn","trackIndex","valueName","optionGroupName","optionGroup","existingParent","existingOptions","existingOption","groupLength","groupIndex","lastElement","label","optionGroups","","optionGroupNames","valuesFn","keyName","groupByFn","modelCast","displayFn","optionGroupsCache","optGroupTemplate","optionTemplate","optionsExp","track","optionElement","toDisplay","nullSelectCtrl","selectCtrlName"],"mappings":"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ACA,KACA,KACA,KACA,SACA,SACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,SACA,KACA,IACA,IACA,QACA,OACA,UACA,OACA,SACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,KACA,KACA,MACA,SAGAC,EAAA,qBAEAC,GACA,gBACA,cACA,aACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,OACA,sBACA,aACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,oBACA,kBACA,SACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,SACA,uBACA,aACA,aACA,cACA,eACA,eACA,eACA,QACA,OACA,YACA,QACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,UACA,oBACA,gBACA,SACA,YACA,UACA,cACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,QACA,OACA,cACA,wBACA,eACA,yBACA,YACA,mBACA,eACA,aACA,eACA,yBACA,cACA,SACA,UACA,OACA,oBACA,kBACA,mBACA,WACA,UACA,UACA,kBACA,OACA,iBACA,cACA,aACA,mBACA,sBACA,kBACA,SACA,gBACA,cACA,eACA,aACA,QACA,OACA,aACA,YACA,aACA,YACA,WACA,YACA,WACA,YACA,SACA,OACA,SACA,aACA,kBACA,UACA,QACA,UACA,UACA,gBACA,iBACA,gBACA,gBACA,WACA,gBACA,aACA,aACA,UACA,iBACA,eACA,gBACA,cACA,mBACA,oBACA,oBACA,cACA,qBACA,iBACA,WACA,SACA,SACA,QACA,WACA,eACA,aACA,kBACA,kBACA,wBACA,uBACA,wBACA,cA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","file":"vendor/vendor.8d85ed5f.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/ \t\tif(moreModules[0]) {\n/******/ \t\t\tinstalledModules[0] = 0;\n/******/ \t\t\treturn __webpack_require__(0);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"js/\" + chunkId + \".\" + {\"1\":\"ea91a102\",\"2\":\"76507cf9\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(6);\n\t__webpack_require__(26);\n\t__webpack_require__(5);\n\tmodule.exports = __webpack_require__(27);\n\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(30);\n\tmodule.exports = angular;\n\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * angular-translate - v2.7.2 - 2015-06-01\n\t * http://github.com/angular-translate/angular-translate\n\t * Copyright (c) 2015 ; Licensed MIT\n\t */\n\t(function (root, factory) {\n\t  if (true) {\n\t    // AMD. Register as an anonymous module unless amdModuleId is set\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return (factory());\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // Node. Does not work with strict CommonJS, but\n\t    // only CommonJS-like environments that support module.exports,\n\t    // like Node.\n\t    module.exports = factory();\n\t  } else {\n\t    factory();\n\t  }\n\t}(this, function () {\n\t\n\t/**\n\t * @ngdoc overview\n\t * @name pascalprecht.translate\n\t *\n\t * @description\n\t * The main module which holds everything together.\n\t */\n\tangular.module('pascalprecht.translate', ['ng'])\n\t  .run(runTranslate);\n\t\n\tfunction runTranslate($translate) {\n\t\n\t  'use strict';\n\t\n\t  var key = $translate.storageKey(),\n\t    storage = $translate.storage();\n\t\n\t  var fallbackFromIncorrectStorageValue = function () {\n\t    var preferred = $translate.preferredLanguage();\n\t    if (angular.isString(preferred)) {\n\t      $translate.use(preferred);\n\t      // $translate.use() will also remember the language.\n\t      // So, we don't need to call storage.put() here.\n\t    } else {\n\t      storage.put(key, $translate.use());\n\t    }\n\t  };\n\t\n\t  fallbackFromIncorrectStorageValue.displayName = 'fallbackFromIncorrectStorageValue';\n\t\n\t  if (storage) {\n\t    if (!storage.get(key)) {\n\t      fallbackFromIncorrectStorageValue();\n\t    } else {\n\t      $translate.use(storage.get(key))['catch'](fallbackFromIncorrectStorageValue);\n\t    }\n\t  } else if (angular.isString($translate.preferredLanguage())) {\n\t    $translate.use($translate.preferredLanguage());\n\t  }\n\t}\n\trunTranslate.$inject = ['$translate'];\n\t\n\trunTranslate.displayName = 'runTranslate';\n\t\n\t/**\n\t * @ngdoc object\n\t * @name pascalprecht.translate.$translateSanitizationProvider\n\t *\n\t * @description\n\t *\n\t * Configurations for $translateSanitization\n\t */\n\tangular.module('pascalprecht.translate').provider('$translateSanitization', $translateSanitizationProvider);\n\t\n\tfunction $translateSanitizationProvider () {\n\t\n\t  'use strict';\n\t\n\t  var $sanitize,\n\t      currentStrategy = null, // TODO change to either 'sanitize', 'escape' or ['sanitize', 'escapeParameters'] in 3.0.\n\t      hasConfiguredStrategy = false,\n\t      hasShownNoStrategyConfiguredWarning = false,\n\t      strategies;\n\t\n\t  /**\n\t   * Definition of a sanitization strategy function\n\t   * @callback StrategyFunction\n\t   * @param {string|object} value - value to be sanitized (either a string or an interpolated value map)\n\t   * @param {string} mode - either 'text' for a string (translation) or 'params' for the interpolated params\n\t   * @return {string|object}\n\t   */\n\t\n\t  /**\n\t   * @ngdoc property\n\t   * @name strategies\n\t   * @propertyOf pascalprecht.translate.$translateSanitizationProvider\n\t   *\n\t   * @description\n\t   * Following strategies are built-in:\n\t   * <dl>\n\t   *   <dt>sanitize</dt>\n\t   *   <dd>Sanitizes HTML in the translation text using $sanitize</dd>\n\t   *   <dt>escape</dt>\n\t   *   <dd>Escapes HTML in the translation</dd>\n\t   *   <dt>sanitizeParameters</dt>\n\t   *   <dd>Sanitizes HTML in the values of the interpolation parameters using $sanitize</dd>\n\t   *   <dt>escapeParameters</dt>\n\t   *   <dd>Escapes HTML in the values of the interpolation parameters</dd>\n\t   *   <dt>escaped</dt>\n\t   *   <dd>Support legacy strategy name 'escaped' for backwards compatibility (will be removed in 3.0)</dd>\n\t   * </dl>\n\t   *\n\t   */\n\t\n\t  strategies = {\n\t    sanitize: function (value, mode) {\n\t      if (mode === 'text') {\n\t        value = htmlSanitizeValue(value);\n\t      }\n\t      return value;\n\t    },\n\t    escape: function (value, mode) {\n\t      if (mode === 'text') {\n\t        value = htmlEscapeValue(value);\n\t      }\n\t      return value;\n\t    },\n\t    sanitizeParameters: function (value, mode) {\n\t      if (mode === 'params') {\n\t        value = mapInterpolationParameters(value, htmlSanitizeValue);\n\t      }\n\t      return value;\n\t    },\n\t    escapeParameters: function (value, mode) {\n\t      if (mode === 'params') {\n\t        value = mapInterpolationParameters(value, htmlEscapeValue);\n\t      }\n\t      return value;\n\t    }\n\t  };\n\t  // Support legacy strategy name 'escaped' for backwards compatibility.\n\t  // TODO should be removed in 3.0\n\t  strategies.escaped = strategies.escapeParameters;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateSanitizationProvider#addStrategy\n\t   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n\t   *\n\t   * @description\n\t   * Adds a sanitization strategy to the list of known strategies.\n\t   *\n\t   * @param {string} strategyName - unique key for a strategy\n\t   * @param {StrategyFunction} strategyFunction - strategy function\n\t   * @returns {object} this\n\t   */\n\t  this.addStrategy = function (strategyName, strategyFunction) {\n\t    strategies[strategyName] = strategyFunction;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateSanitizationProvider#removeStrategy\n\t   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n\t   *\n\t   * @description\n\t   * Removes a sanitization strategy from the list of known strategies.\n\t   *\n\t   * @param {string} strategyName - unique key for a strategy\n\t   * @returns {object} this\n\t   */\n\t  this.removeStrategy = function (strategyName) {\n\t    delete strategies[strategyName];\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateSanitizationProvider#useStrategy\n\t   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n\t   *\n\t   * @description\n\t   * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.\n\t   *\n\t   * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.\n\t   * @returns {object} this\n\t   */\n\t  this.useStrategy = function (strategy) {\n\t    hasConfiguredStrategy = true;\n\t    currentStrategy = strategy;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name pascalprecht.translate.$translateSanitization\n\t   * @requires $injector\n\t   * @requires $log\n\t   *\n\t   * @description\n\t   * Sanitizes interpolation parameters and translated texts.\n\t   *\n\t   */\n\t  this.$get = ['$injector', '$log', function ($injector, $log) {\n\t\n\t    var applyStrategies = function (value, mode, selectedStrategies) {\n\t      angular.forEach(selectedStrategies, function (selectedStrategy) {\n\t        if (angular.isFunction(selectedStrategy)) {\n\t          value = selectedStrategy(value, mode);\n\t        } else if (angular.isFunction(strategies[selectedStrategy])) {\n\t          value = strategies[selectedStrategy](value, mode);\n\t        } else {\n\t          throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \\'' + selectedStrategy + '\\'');\n\t        }\n\t      });\n\t      return value;\n\t    };\n\t\n\t    // TODO: should be removed in 3.0\n\t    var showNoStrategyConfiguredWarning = function () {\n\t      if (!hasConfiguredStrategy && !hasShownNoStrategyConfiguredWarning) {\n\t        $log.warn('pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details.');\n\t        hasShownNoStrategyConfiguredWarning = true;\n\t      }\n\t    };\n\t\n\t    if ($injector.has('$sanitize')) {\n\t      $sanitize = $injector.get('$sanitize');\n\t    }\n\t\n\t    return {\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translateSanitization#useStrategy\n\t       * @methodOf pascalprecht.translate.$translateSanitization\n\t       *\n\t       * @description\n\t       * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.\n\t       *\n\t       * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.\n\t       */\n\t      useStrategy: (function (self) {\n\t        return function (strategy) {\n\t          self.useStrategy(strategy);\n\t        };\n\t      })(this),\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translateSanitization#sanitize\n\t       * @methodOf pascalprecht.translate.$translateSanitization\n\t       *\n\t       * @description\n\t       * Sanitizes a value.\n\t       *\n\t       * @param {string|object} value The value which should be sanitized.\n\t       * @param {string} mode The current sanitization mode, either 'params' or 'text'.\n\t       * @param {string|StrategyFunction|array} [strategy] Optional custom strategy which should be used instead of the currently selected strategy.\n\t       * @returns {string|object} sanitized value\n\t       */\n\t      sanitize: function (value, mode, strategy) {\n\t        if (!currentStrategy) {\n\t          showNoStrategyConfiguredWarning();\n\t        }\n\t\n\t        if (arguments.length < 3) {\n\t          strategy = currentStrategy;\n\t        }\n\t\n\t        if (!strategy) {\n\t          return value;\n\t        }\n\t\n\t        var selectedStrategies = angular.isArray(strategy) ? strategy : [strategy];\n\t        return applyStrategies(value, mode, selectedStrategies);\n\t      }\n\t    };\n\t  }];\n\t\n\t  var htmlEscapeValue = function (value) {\n\t    var element = angular.element('<div></div>');\n\t    element.text(value); // not chainable, see #1044\n\t    return element.html();\n\t  };\n\t\n\t  var htmlSanitizeValue = function (value) {\n\t    if (!$sanitize) {\n\t      throw new Error('pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as \\'escape\\'.');\n\t    }\n\t    return $sanitize(value);\n\t  };\n\t\n\t  var mapInterpolationParameters = function (value, iteratee) {\n\t    if (angular.isObject(value)) {\n\t      var result = angular.isArray(value) ? [] : {};\n\t\n\t      angular.forEach(value, function (propertyValue, propertyKey) {\n\t        result[propertyKey] = mapInterpolationParameters(propertyValue, iteratee);\n\t      });\n\t\n\t      return result;\n\t    } else if (angular.isNumber(value)) {\n\t      return value;\n\t    } else {\n\t      return iteratee(value);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc object\n\t * @name pascalprecht.translate.$translateProvider\n\t * @description\n\t *\n\t * $translateProvider allows developers to register translation-tables, asynchronous loaders\n\t * and similar to configure translation behavior directly inside of a module.\n\t *\n\t */\n\tangular.module('pascalprecht.translate')\n\t.constant('pascalprechtTranslateOverrider', {})\n\t.provider('$translate', $translate);\n\t\n\tfunction $translate($STORAGE_KEY, $windowProvider, $translateSanitizationProvider, pascalprechtTranslateOverrider) {\n\t\n\t  'use strict';\n\t\n\t  var $translationTable = {},\n\t      $preferredLanguage,\n\t      $availableLanguageKeys = [],\n\t      $languageKeyAliases,\n\t      $fallbackLanguage,\n\t      $fallbackWasString,\n\t      $uses,\n\t      $nextLang,\n\t      $storageFactory,\n\t      $storageKey = $STORAGE_KEY,\n\t      $storagePrefix,\n\t      $missingTranslationHandlerFactory,\n\t      $interpolationFactory,\n\t      $interpolatorFactories = [],\n\t      $loaderFactory,\n\t      $cloakClassName = 'translate-cloak',\n\t      $loaderOptions,\n\t      $notFoundIndicatorLeft,\n\t      $notFoundIndicatorRight,\n\t      $postCompilingEnabled = false,\n\t      $forceAsyncReloadEnabled = false,\n\t      NESTED_OBJECT_DELIMITER = '.',\n\t      loaderCache,\n\t      directivePriority = 0,\n\t      statefulFilter = true,\n\t      uniformLanguageTagResolver = 'default',\n\t      languageTagResolver = {\n\t        'default': function (tag) {\n\t          return (tag || '').split('-').join('_');\n\t        },\n\t        java: function (tag) {\n\t          var temp = (tag || '').split('-').join('_');\n\t          var parts = temp.split('_');\n\t          return parts.length > 1 ? (parts[0].toLowerCase() + '_' + parts[1].toUpperCase()) : temp;\n\t        },\n\t        bcp47: function (tag) {\n\t          var temp = (tag || '').split('_').join('-');\n\t          var parts = temp.split('-');\n\t          return parts.length > 1 ? (parts[0].toLowerCase() + '-' + parts[1].toUpperCase()) : temp;\n\t        }\n\t      };\n\t\n\t  var version = '2.7.2';\n\t\n\t  // tries to determine the browsers language\n\t  var getFirstBrowserLanguage = function () {\n\t\n\t    // internal purpose only\n\t    if (angular.isFunction(pascalprechtTranslateOverrider.getLocale)) {\n\t      return pascalprechtTranslateOverrider.getLocale();\n\t    }\n\t\n\t    var nav = $windowProvider.$get().navigator,\n\t        browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage'],\n\t        i,\n\t        language;\n\t\n\t    // support for HTML 5.1 \"navigator.languages\"\n\t    if (angular.isArray(nav.languages)) {\n\t      for (i = 0; i < nav.languages.length; i++) {\n\t        language = nav.languages[i];\n\t        if (language && language.length) {\n\t          return language;\n\t        }\n\t      }\n\t    }\n\t\n\t    // support for other well known properties in browsers\n\t    for (i = 0; i < browserLanguagePropertyKeys.length; i++) {\n\t      language = nav[browserLanguagePropertyKeys[i]];\n\t      if (language && language.length) {\n\t        return language;\n\t      }\n\t    }\n\t\n\t    return null;\n\t  };\n\t  getFirstBrowserLanguage.displayName = 'angular-translate/service: getFirstBrowserLanguage';\n\t\n\t  // tries to determine the browsers locale\n\t  var getLocale = function () {\n\t    var locale = getFirstBrowserLanguage() || '';\n\t    if (languageTagResolver[uniformLanguageTagResolver]) {\n\t      locale = languageTagResolver[uniformLanguageTagResolver](locale);\n\t    }\n\t    return locale;\n\t  };\n\t  getLocale.displayName = 'angular-translate/service: getLocale';\n\t\n\t  /**\n\t   * @name indexOf\n\t   * @private\n\t   *\n\t   * @description\n\t   * indexOf polyfill. Kinda sorta.\n\t   *\n\t   * @param {array} array Array to search in.\n\t   * @param {string} searchElement Element to search for.\n\t   *\n\t   * @returns {int} Index of search element.\n\t   */\n\t  var indexOf = function(array, searchElement) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      if (array[i] === searchElement) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t\n\t  /**\n\t   * @name trim\n\t   * @private\n\t   *\n\t   * @description\n\t   * trim polyfill\n\t   *\n\t   * @returns {string} The string stripped of whitespace from both ends\n\t   */\n\t  var trim = function() {\n\t    return this.toString().replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t\n\t  var negotiateLocale = function (preferred) {\n\t\n\t    var avail = [],\n\t        locale = angular.lowercase(preferred),\n\t        i = 0,\n\t        n = $availableLanguageKeys.length;\n\t\n\t    for (; i < n; i++) {\n\t      avail.push(angular.lowercase($availableLanguageKeys[i]));\n\t    }\n\t\n\t    if (indexOf(avail, locale) > -1) {\n\t      return preferred;\n\t    }\n\t\n\t    if ($languageKeyAliases) {\n\t      var alias;\n\t      for (var langKeyAlias in $languageKeyAliases) {\n\t        var hasWildcardKey = false;\n\t        var hasExactKey = Object.prototype.hasOwnProperty.call($languageKeyAliases, langKeyAlias) &&\n\t          angular.lowercase(langKeyAlias) === angular.lowercase(preferred);\n\t\n\t        if (langKeyAlias.slice(-1) === '*') {\n\t          hasWildcardKey = langKeyAlias.slice(0, -1) === preferred.slice(0, langKeyAlias.length-1);\n\t        }\n\t        if (hasExactKey || hasWildcardKey) {\n\t          alias = $languageKeyAliases[langKeyAlias];\n\t          if (indexOf(avail, angular.lowercase(alias)) > -1) {\n\t            return alias;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (preferred) {\n\t      var parts = preferred.split('_');\n\t\n\t      if (parts.length > 1 && indexOf(avail, angular.lowercase(parts[0])) > -1) {\n\t        return parts[0];\n\t      }\n\t    }\n\t\n\t    // If everything fails, just return the preferred, unchanged.\n\t    return preferred;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#translations\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Registers a new translation table for specific language key.\n\t   *\n\t   * To register a translation table for specific language, pass a defined language\n\t   * key as first parameter.\n\t   *\n\t   * <pre>\n\t   *  // register translation table for language: 'de_DE'\n\t   *  $translateProvider.translations('de_DE', {\n\t   *    'GREETING': 'Hallo Welt!'\n\t   *  });\n\t   *\n\t   *  // register another one\n\t   *  $translateProvider.translations('en_US', {\n\t   *    'GREETING': 'Hello world!'\n\t   *  });\n\t   * </pre>\n\t   *\n\t   * When registering multiple translation tables for for the same language key,\n\t   * the actual translation table gets extended. This allows you to define module\n\t   * specific translation which only get added, once a specific module is loaded in\n\t   * your app.\n\t   *\n\t   * Invoking this method with no arguments returns the translation table which was\n\t   * registered with no language key. Invoking it with a language key returns the\n\t   * related translation table.\n\t   *\n\t   * @param {string} key A language key.\n\t   * @param {object} translationTable A plain old JavaScript object that represents a translation table.\n\t   *\n\t   */\n\t  var translations = function (langKey, translationTable) {\n\t\n\t    if (!langKey && !translationTable) {\n\t      return $translationTable;\n\t    }\n\t\n\t    if (langKey && !translationTable) {\n\t      if (angular.isString(langKey)) {\n\t        return $translationTable[langKey];\n\t      }\n\t    } else {\n\t      if (!angular.isObject($translationTable[langKey])) {\n\t        $translationTable[langKey] = {};\n\t      }\n\t      angular.extend($translationTable[langKey], flatObject(translationTable));\n\t    }\n\t    return this;\n\t  };\n\t\n\t  this.translations = translations;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#cloakClassName\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   *\n\t   * Let's you change the class name for `translate-cloak` directive.\n\t   * Default class name is `translate-cloak`.\n\t   *\n\t   * @param {string} name translate-cloak class name\n\t   */\n\t  this.cloakClassName = function (name) {\n\t    if (!name) {\n\t      return $cloakClassName;\n\t    }\n\t    $cloakClassName = name;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @name flatObject\n\t   * @private\n\t   *\n\t   * @description\n\t   * Flats an object. This function is used to flatten given translation data with\n\t   * namespaces, so they are later accessible via dot notation.\n\t   */\n\t  var flatObject = function (data, path, result, prevKey) {\n\t    var key, keyWithPath, keyWithShortPath, val;\n\t\n\t    if (!path) {\n\t      path = [];\n\t    }\n\t    if (!result) {\n\t      result = {};\n\t    }\n\t    for (key in data) {\n\t      if (!Object.prototype.hasOwnProperty.call(data, key)) {\n\t        continue;\n\t      }\n\t      val = data[key];\n\t      if (angular.isObject(val)) {\n\t        flatObject(val, path.concat(key), result, key);\n\t      } else {\n\t        keyWithPath = path.length ? ('' + path.join(NESTED_OBJECT_DELIMITER) + NESTED_OBJECT_DELIMITER + key) : key;\n\t        if(path.length && key === prevKey){\n\t          // Create shortcut path (foo.bar == foo.bar.bar)\n\t          keyWithShortPath = '' + path.join(NESTED_OBJECT_DELIMITER);\n\t          // Link it to original path\n\t          result[keyWithShortPath] = '@:' + keyWithPath;\n\t        }\n\t        result[keyWithPath] = val;\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t  flatObject.displayName = 'flatObject';\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#addInterpolation\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Adds interpolation services to angular-translate, so it can manage them.\n\t   *\n\t   * @param {object} factory Interpolation service factory\n\t   */\n\t  this.addInterpolation = function (factory) {\n\t    $interpolatorFactories.push(factory);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useMessageFormatInterpolation\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use interpolation functionality of messageformat.js.\n\t   * This is useful when having high level pluralization and gender selection.\n\t   */\n\t  this.useMessageFormatInterpolation = function () {\n\t    return this.useInterpolation('$translateMessageFormatInterpolation');\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useInterpolation\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate which interpolation style to use as default, application-wide.\n\t   * Simply pass a factory/service name. The interpolation service has to implement\n\t   * the correct interface.\n\t   *\n\t   * @param {string} factory Interpolation service name.\n\t   */\n\t  this.useInterpolation = function (factory) {\n\t    $interpolationFactory = factory;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useSanitizeStrategy\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Simply sets a sanitation strategy type.\n\t   *\n\t   * @param {string} value Strategy type.\n\t   */\n\t  this.useSanitizeValueStrategy = function (value) {\n\t    $translateSanitizationProvider.useStrategy(value);\n\t    return this;\n\t  };\n\t\n\t /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#preferredLanguage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells the module which of the registered translation tables to use for translation\n\t   * at initial startup by passing a language key. Similar to `$translateProvider#use`\n\t   * only that it says which language to **prefer**.\n\t   *\n\t   * @param {string} langKey A language key.\n\t   *\n\t   */\n\t  this.preferredLanguage = function(langKey) {\n\t    setupPreferredLanguage(langKey);\n\t    return this;\n\t\n\t  };\n\t  var setupPreferredLanguage = function (langKey) {\n\t    if (langKey) {\n\t      $preferredLanguage = langKey;\n\t    }\n\t    return $preferredLanguage;\n\t  };\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicator\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Sets an indicator which is used when a translation isn't found. E.g. when\n\t   * setting the indicator as 'X' and one tries to translate a translation id\n\t   * called `NOT_FOUND`, this will result in `X NOT_FOUND X`.\n\t   *\n\t   * Internally this methods sets a left indicator and a right indicator using\n\t   * `$translateProvider.translationNotFoundIndicatorLeft()` and\n\t   * `$translateProvider.translationNotFoundIndicatorRight()`.\n\t   *\n\t   * **Note**: These methods automatically add a whitespace between the indicators\n\t   * and the translation id.\n\t   *\n\t   * @param {string} indicator An indicator, could be any string.\n\t   */\n\t  this.translationNotFoundIndicator = function (indicator) {\n\t    this.translationNotFoundIndicatorLeft(indicator);\n\t    this.translationNotFoundIndicatorRight(indicator);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Sets an indicator which is used when a translation isn't found left to the\n\t   * translation id.\n\t   *\n\t   * @param {string} indicator An indicator.\n\t   */\n\t  this.translationNotFoundIndicatorLeft = function (indicator) {\n\t    if (!indicator) {\n\t      return $notFoundIndicatorLeft;\n\t    }\n\t    $notFoundIndicatorLeft = indicator;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Sets an indicator which is used when a translation isn't found right to the\n\t   * translation id.\n\t   *\n\t   * @param {string} indicator An indicator.\n\t   */\n\t  this.translationNotFoundIndicatorRight = function (indicator) {\n\t    if (!indicator) {\n\t      return $notFoundIndicatorRight;\n\t    }\n\t    $notFoundIndicatorRight = indicator;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#fallbackLanguage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells the module which of the registered translation tables to use when missing translations\n\t   * at initial startup by passing a language key. Similar to `$translateProvider#use`\n\t   * only that it says which language to **fallback**.\n\t   *\n\t   * @param {string||array} langKey A language key.\n\t   *\n\t   */\n\t  this.fallbackLanguage = function (langKey) {\n\t    fallbackStack(langKey);\n\t    return this;\n\t  };\n\t\n\t  var fallbackStack = function (langKey) {\n\t    if (langKey) {\n\t      if (angular.isString(langKey)) {\n\t        $fallbackWasString = true;\n\t        $fallbackLanguage = [ langKey ];\n\t      } else if (angular.isArray(langKey)) {\n\t        $fallbackWasString = false;\n\t        $fallbackLanguage = langKey;\n\t      }\n\t      if (angular.isString($preferredLanguage)  && indexOf($fallbackLanguage, $preferredLanguage) < 0) {\n\t        $fallbackLanguage.push($preferredLanguage);\n\t      }\n\t\n\t      return this;\n\t    } else {\n\t      if ($fallbackWasString) {\n\t        return $fallbackLanguage[0];\n\t      } else {\n\t        return $fallbackLanguage;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#use\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Set which translation table to use for translation by given language key. When\n\t   * trying to 'use' a language which isn't provided, it'll throw an error.\n\t   *\n\t   * You actually don't have to use this method since `$translateProvider#preferredLanguage`\n\t   * does the job too.\n\t   *\n\t   * @param {string} langKey A language key.\n\t   */\n\t  this.use = function (langKey) {\n\t    if (langKey) {\n\t      if (!$translationTable[langKey] && (!$loaderFactory)) {\n\t        // only throw an error, when not loading translation data asynchronously\n\t        throw new Error('$translateProvider couldn\\'t find translationTable for langKey: \\'' + langKey + '\\'');\n\t      }\n\t      $uses = langKey;\n\t      return this;\n\t    }\n\t    return $uses;\n\t  };\n\t\n\t /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#storageKey\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells the module which key must represent the choosed language by a user in the storage.\n\t   *\n\t   * @param {string} key A key for the storage.\n\t   */\n\t  var storageKey = function(key) {\n\t    if (!key) {\n\t      if ($storagePrefix) {\n\t        return $storagePrefix + $storageKey;\n\t      }\n\t      return $storageKey;\n\t    }\n\t    $storageKey = key;\n\t    return this;\n\t  };\n\t\n\t  this.storageKey = storageKey;\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useUrlLoader\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use `$translateUrlLoader` extension service as loader.\n\t   *\n\t   * @param {string} url Url\n\t   * @param {Object=} options Optional configuration object\n\t   */\n\t  this.useUrlLoader = function (url, options) {\n\t    return this.useLoader('$translateUrlLoader', angular.extend({ url: url }, options));\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useStaticFilesLoader\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use `$translateStaticFilesLoader` extension service as loader.\n\t   *\n\t   * @param {Object=} options Optional configuration object\n\t   */\n\t  this.useStaticFilesLoader = function (options) {\n\t    return this.useLoader('$translateStaticFilesLoader', options);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useLoader\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use any other service as loader.\n\t   *\n\t   * @param {string} loaderFactory Factory name to use\n\t   * @param {Object=} options Optional configuration object\n\t   */\n\t  this.useLoader = function (loaderFactory, options) {\n\t    $loaderFactory = loaderFactory;\n\t    $loaderOptions = options || {};\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useLocalStorage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use `$translateLocalStorage` service as storage layer.\n\t   *\n\t   */\n\t  this.useLocalStorage = function () {\n\t    return this.useStorage('$translateLocalStorage');\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useCookieStorage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use `$translateCookieStorage` service as storage layer.\n\t   */\n\t  this.useCookieStorage = function () {\n\t    return this.useStorage('$translateCookieStorage');\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useStorage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use custom service as storage layer.\n\t   */\n\t  this.useStorage = function (storageFactory) {\n\t    $storageFactory = storageFactory;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#storagePrefix\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Sets prefix for storage key.\n\t   *\n\t   * @param {string} prefix Storage key prefix\n\t   */\n\t  this.storagePrefix = function (prefix) {\n\t    if (!prefix) {\n\t      return prefix;\n\t    }\n\t    $storagePrefix = prefix;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandlerLog\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to use built-in log handler when trying to translate\n\t   * a translation Id which doesn't exist.\n\t   *\n\t   * This is actually a shortcut method for `useMissingTranslationHandler()`.\n\t   *\n\t   */\n\t  this.useMissingTranslationHandlerLog = function () {\n\t    return this.useMissingTranslationHandler('$translateMissingTranslationHandlerLog');\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandler\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Expects a factory name which later gets instantiated with `$injector`.\n\t   * This method can be used to tell angular-translate to use a custom\n\t   * missingTranslationHandler. Just build a factory which returns a function\n\t   * and expects a translation id as argument.\n\t   *\n\t   * Example:\n\t   * <pre>\n\t   *  app.config(function ($translateProvider) {\n\t   *    $translateProvider.useMissingTranslationHandler('customHandler');\n\t   *  });\n\t   *\n\t   *  app.factory('customHandler', function (dep1, dep2) {\n\t   *    return function (translationId) {\n\t   *      // something with translationId and dep1 and dep2\n\t   *    };\n\t   *  });\n\t   * </pre>\n\t   *\n\t   * @param {string} factory Factory name\n\t   */\n\t  this.useMissingTranslationHandler = function (factory) {\n\t    $missingTranslationHandlerFactory = factory;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#usePostCompiling\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * If post compiling is enabled, all translated values will be processed\n\t   * again with AngularJS' $compile.\n\t   *\n\t   * Example:\n\t   * <pre>\n\t   *  app.config(function ($translateProvider) {\n\t   *    $translateProvider.usePostCompiling(true);\n\t   *  });\n\t   * </pre>\n\t   *\n\t   * @param {string} factory Factory name\n\t   */\n\t  this.usePostCompiling = function (value) {\n\t    $postCompilingEnabled = !(!value);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#forceAsyncReload\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * If force async reload is enabled, async loader will always be called\n\t   * even if $translationTable already contains the language key, adding\n\t   * possible new entries to the $translationTable.\n\t   *\n\t   * Example:\n\t   * <pre>\n\t   *  app.config(function ($translateProvider) {\n\t   *    $translateProvider.forceAsyncReload(true);\n\t   *  });\n\t   * </pre>\n\t   *\n\t   * @param {boolean} value - valid values are true or false\n\t   */\n\t  this.forceAsyncReload = function (value) {\n\t    $forceAsyncReloadEnabled = !(!value);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#uniformLanguageTag\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate which language tag should be used as a result when determining\n\t   * the current browser language.\n\t   *\n\t   * This setting must be set before invoking {@link pascalprecht.translate.$translateProvider#methods_determinePreferredLanguage determinePreferredLanguage()}.\n\t   *\n\t   * <pre>\n\t   * $translateProvider\n\t   *   .uniformLanguageTag('bcp47')\n\t   *   .determinePreferredLanguage()\n\t   * </pre>\n\t   *\n\t   * The resolver currently supports:\n\t   * * default\n\t   *     (traditionally: hyphens will be converted into underscores, i.e. en-US => en_US)\n\t   *     en-US => en_US\n\t   *     en_US => en_US\n\t   *     en-us => en_us\n\t   * * java\n\t   *     like default, but the second part will be always in uppercase\n\t   *     en-US => en_US\n\t   *     en_US => en_US\n\t   *     en-us => en_US\n\t   * * BCP 47 (RFC 4646 & 4647)\n\t   *     en-US => en-US\n\t   *     en_US => en-US\n\t   *     en-us => en-US\n\t   *\n\t   * See also:\n\t   * * http://en.wikipedia.org/wiki/IETF_language_tag\n\t   * * http://www.w3.org/International/core/langtags/\n\t   * * http://tools.ietf.org/html/bcp47\n\t   *\n\t   * @param {string|object} options - options (or standard)\n\t   * @param {string} options.standard - valid values are 'default', 'bcp47', 'java'\n\t   */\n\t  this.uniformLanguageTag = function (options) {\n\t\n\t    if (!options) {\n\t      options = {};\n\t    } else if (angular.isString(options)) {\n\t      options = {\n\t        standard: options\n\t      };\n\t    }\n\t\n\t    uniformLanguageTagResolver = options.standard;\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#determinePreferredLanguage\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Tells angular-translate to try to determine on its own which language key\n\t   * to set as preferred language. When `fn` is given, angular-translate uses it\n\t   * to determine a language key, otherwise it uses the built-in `getLocale()`\n\t   * method.\n\t   *\n\t   * The `getLocale()` returns a language key in the format `[lang]_[country]` or\n\t   * `[lang]` depending on what the browser provides.\n\t   *\n\t   * Use this method at your own risk, since not all browsers return a valid\n\t   * locale (see {@link pascalprecht.translate.$translateProvider#methods_uniformLanguageTag uniformLanguageTag()}).\n\t   *\n\t   * @param {Function=} fn Function to determine a browser's locale\n\t   */\n\t  this.determinePreferredLanguage = function (fn) {\n\t\n\t    var locale = (fn && angular.isFunction(fn)) ? fn() : getLocale();\n\t\n\t    if (!$availableLanguageKeys.length) {\n\t      $preferredLanguage = locale;\n\t    } else {\n\t      $preferredLanguage = negotiateLocale(locale);\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#registerAvailableLanguageKeys\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Registers a set of language keys the app will work with. Use this method in\n\t   * combination with\n\t   * {@link pascalprecht.translate.$translateProvider#determinePreferredLanguage determinePreferredLanguage}.\n\t   * When available languages keys are registered, angular-translate\n\t   * tries to find the best fitting language key depending on the browsers locale,\n\t   * considering your language key convention.\n\t   *\n\t   * @param {object} languageKeys Array of language keys the your app will use\n\t   * @param {object=} aliases Alias map.\n\t   */\n\t  this.registerAvailableLanguageKeys = function (languageKeys, aliases) {\n\t    if (languageKeys) {\n\t      $availableLanguageKeys = languageKeys;\n\t      if (aliases) {\n\t        $languageKeyAliases = aliases;\n\t      }\n\t      return this;\n\t    }\n\t    return $availableLanguageKeys;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#useLoaderCache\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Registers a cache for internal $http based loaders.\n\t   * {@link pascalprecht.translate.$translateProvider#determinePreferredLanguage determinePreferredLanguage}.\n\t   * When false the cache will be disabled (default). When true or undefined\n\t   * the cache will be a default (see $cacheFactory). When an object it will\n\t   * be treat as a cache object itself: the usage is $http({cache: cache})\n\t   *\n\t   * @param {object} cache boolean, string or cache-object\n\t   */\n\t  this.useLoaderCache = function (cache) {\n\t    if (cache === false) {\n\t      // disable cache\n\t      loaderCache = undefined;\n\t    } else if (cache === true) {\n\t      // enable cache using AJS defaults\n\t      loaderCache = true;\n\t    } else if (typeof(cache) === 'undefined') {\n\t      // enable cache using default\n\t      loaderCache = '$translationCache';\n\t    } else if (cache) {\n\t      // enable cache using given one (see $cacheFactory)\n\t      loaderCache = cache;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#directivePriority\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Sets the default priority of the translate directive. The standard value is `0`.\n\t   * Calling this function without an argument will return the current value.\n\t   *\n\t   * @param {number} priority for the translate-directive\n\t   */\n\t  this.directivePriority = function (priority) {\n\t    if (priority === undefined) {\n\t      // getter\n\t      return directivePriority;\n\t    } else {\n\t      // setter with chaining\n\t      directivePriority = priority;\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateProvider#statefulFilter\n\t   * @methodOf pascalprecht.translate.$translateProvider\n\t   *\n\t   * @description\n\t   * Since AngularJS 1.3, filters which are not stateless (depending at the scope)\n\t   * have to explicit define this behavior.\n\t   * Sets whether the translate filter should be stateful or stateless. The standard value is `true`\n\t   * meaning being stateful.\n\t   * Calling this function without an argument will return the current value.\n\t   *\n\t   * @param {boolean} state - defines the state of the filter\n\t   */\n\t  this.statefulFilter = function (state) {\n\t    if (state === undefined) {\n\t      // getter\n\t      return statefulFilter;\n\t    } else {\n\t      // setter with chaining\n\t      statefulFilter = state;\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc object\n\t   * @name pascalprecht.translate.$translate\n\t   * @requires $interpolate\n\t   * @requires $log\n\t   * @requires $rootScope\n\t   * @requires $q\n\t   *\n\t   * @description\n\t   * The `$translate` service is the actual core of angular-translate. It expects a translation id\n\t   * and optional interpolate parameters to translate contents.\n\t   *\n\t   * <pre>\n\t   *  $translate('HEADLINE_TEXT').then(function (translation) {\n\t   *    $scope.translatedText = translation;\n\t   *  });\n\t   * </pre>\n\t   *\n\t   * @param {string|array} translationId A token which represents a translation id\n\t   *                                     This can be optionally an array of translation ids which\n\t   *                                     results that the function returns an object where each key\n\t   *                                     is the translation id and the value the translation.\n\t   * @param {object=} interpolateParams An object hash for dynamic values\n\t   * @param {string} interpolationId The id of the interpolation to use\n\t   * @returns {object} promise\n\t   */\n\t  this.$get = [\n\t    '$log',\n\t    '$injector',\n\t    '$rootScope',\n\t    '$q',\n\t    function ($log, $injector, $rootScope, $q) {\n\t\n\t      var Storage,\n\t          defaultInterpolator = $injector.get($interpolationFactory || '$translateDefaultInterpolation'),\n\t          pendingLoader = false,\n\t          interpolatorHashMap = {},\n\t          langPromises = {},\n\t          fallbackIndex,\n\t          startFallbackIteration;\n\t\n\t      var $translate = function (translationId, interpolateParams, interpolationId, defaultTranslationText) {\n\t\n\t        // Duck detection: If the first argument is an array, a bunch of translations was requested.\n\t        // The result is an object.\n\t        if (angular.isArray(translationId)) {\n\t          // Inspired by Q.allSettled by Kris Kowal\n\t          // https://github.com/kriskowal/q/blob/b0fa72980717dc202ffc3cbf03b936e10ebbb9d7/q.js#L1553-1563\n\t          // This transforms all promises regardless resolved or rejected\n\t          var translateAll = function (translationIds) {\n\t            var results = {}; // storing the actual results\n\t            var promises = []; // promises to wait for\n\t            // Wraps the promise a) being always resolved and b) storing the link id->value\n\t            var translate = function (translationId) {\n\t              var deferred = $q.defer();\n\t              var regardless = function (value) {\n\t                results[translationId] = value;\n\t                deferred.resolve([translationId, value]);\n\t              };\n\t              // we don't care whether the promise was resolved or rejected; just store the values\n\t              $translate(translationId, interpolateParams, interpolationId, defaultTranslationText).then(regardless, regardless);\n\t              return deferred.promise;\n\t            };\n\t            for (var i = 0, c = translationIds.length; i < c; i++) {\n\t              promises.push(translate(translationIds[i]));\n\t            }\n\t            // wait for all (including storing to results)\n\t            return $q.all(promises).then(function () {\n\t              // return the results\n\t              return results;\n\t            });\n\t          };\n\t          return translateAll(translationId);\n\t        }\n\t\n\t        var deferred = $q.defer();\n\t\n\t        // trim off any whitespace\n\t        if (translationId) {\n\t          translationId = trim.apply(translationId);\n\t        }\n\t\n\t        var promiseToWaitFor = (function () {\n\t          var promise = $preferredLanguage ?\n\t            langPromises[$preferredLanguage] :\n\t            langPromises[$uses];\n\t\n\t          fallbackIndex = 0;\n\t\n\t          if ($storageFactory && !promise) {\n\t            // looks like there's no pending promise for $preferredLanguage or\n\t            // $uses. Maybe there's one pending for a language that comes from\n\t            // storage.\n\t            var langKey = Storage.get($storageKey);\n\t            promise = langPromises[langKey];\n\t\n\t            if ($fallbackLanguage && $fallbackLanguage.length) {\n\t                var index = indexOf($fallbackLanguage, langKey);\n\t                // maybe the language from storage is also defined as fallback language\n\t                // we increase the fallback language index to not search in that language\n\t                // as fallback, since it's probably the first used language\n\t                // in that case the index starts after the first element\n\t                fallbackIndex = (index === 0) ? 1 : 0;\n\t\n\t                // but we can make sure to ALWAYS fallback to preferred language at least\n\t                if (indexOf($fallbackLanguage, $preferredLanguage) < 0) {\n\t                  $fallbackLanguage.push($preferredLanguage);\n\t                }\n\t            }\n\t          }\n\t          return promise;\n\t        }());\n\t\n\t        if (!promiseToWaitFor) {\n\t          // no promise to wait for? okay. Then there's no loader registered\n\t          // nor is a one pending for language that comes from storage.\n\t          // We can just translate.\n\t          determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText).then(deferred.resolve, deferred.reject);\n\t        } else {\n\t          var promiseResolved = function () {\n\t            determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText).then(deferred.resolve, deferred.reject);\n\t          };\n\t          promiseResolved.displayName = 'promiseResolved';\n\t\n\t          promiseToWaitFor['finally'](promiseResolved, deferred.reject);\n\t        }\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @name applyNotFoundIndicators\n\t       * @private\n\t       *\n\t       * @description\n\t       * Applies not fount indicators to given translation id, if needed.\n\t       * This function gets only executed, if a translation id doesn't exist,\n\t       * which is why a translation id is expected as argument.\n\t       *\n\t       * @param {string} translationId Translation id.\n\t       * @returns {string} Same as given translation id but applied with not found\n\t       * indicators.\n\t       */\n\t      var applyNotFoundIndicators = function (translationId) {\n\t        // applying notFoundIndicators\n\t        if ($notFoundIndicatorLeft) {\n\t          translationId = [$notFoundIndicatorLeft, translationId].join(' ');\n\t        }\n\t        if ($notFoundIndicatorRight) {\n\t          translationId = [translationId, $notFoundIndicatorRight].join(' ');\n\t        }\n\t        return translationId;\n\t      };\n\t\n\t      /**\n\t       * @name useLanguage\n\t       * @private\n\t       *\n\t       * @description\n\t       * Makes actual use of a language by setting a given language key as used\n\t       * language and informs registered interpolators to also use the given\n\t       * key as locale.\n\t       *\n\t       * @param {key} Locale key.\n\t       */\n\t      var useLanguage = function (key) {\n\t        $uses = key;\n\t        $rootScope.$emit('$translateChangeSuccess', {language: key});\n\t\n\t        if ($storageFactory) {\n\t          Storage.put($translate.storageKey(), $uses);\n\t        }\n\t        // inform default interpolator\n\t        defaultInterpolator.setLocale($uses);\n\t\n\t        var eachInterpolator = function (interpolator, id) {\n\t          interpolatorHashMap[id].setLocale($uses);\n\t        };\n\t        eachInterpolator.displayName = 'eachInterpolatorLocaleSetter';\n\t\n\t        // inform all others too!\n\t        angular.forEach(interpolatorHashMap, eachInterpolator);\n\t        $rootScope.$emit('$translateChangeEnd', {language: key});\n\t      };\n\t\n\t      /**\n\t       * @name loadAsync\n\t       * @private\n\t       *\n\t       * @description\n\t       * Kicks of registered async loader using `$injector` and applies existing\n\t       * loader options. When resolved, it updates translation tables accordingly\n\t       * or rejects with given language key.\n\t       *\n\t       * @param {string} key Language key.\n\t       * @return {Promise} A promise.\n\t       */\n\t      var loadAsync = function (key) {\n\t        if (!key) {\n\t          throw 'No language key specified for loading.';\n\t        }\n\t\n\t        var deferred = $q.defer();\n\t\n\t        $rootScope.$emit('$translateLoadingStart', {language: key});\n\t        pendingLoader = true;\n\t\n\t        var cache = loaderCache;\n\t        if (typeof(cache) === 'string') {\n\t          // getting on-demand instance of loader\n\t          cache = $injector.get(cache);\n\t        }\n\t\n\t        var loaderOptions = angular.extend({}, $loaderOptions, {\n\t          key: key,\n\t          $http: angular.extend({}, {\n\t            cache: cache\n\t          }, $loaderOptions.$http)\n\t        });\n\t\n\t        var onLoaderSuccess = function (data) {\n\t          var translationTable = {};\n\t          $rootScope.$emit('$translateLoadingSuccess', {language: key});\n\t\n\t          if (angular.isArray(data)) {\n\t            angular.forEach(data, function (table) {\n\t              angular.extend(translationTable, flatObject(table));\n\t            });\n\t          } else {\n\t            angular.extend(translationTable, flatObject(data));\n\t          }\n\t          pendingLoader = false;\n\t          deferred.resolve({\n\t            key: key,\n\t            table: translationTable\n\t          });\n\t          $rootScope.$emit('$translateLoadingEnd', {language: key});\n\t        };\n\t        onLoaderSuccess.displayName = 'onLoaderSuccess';\n\t\n\t        var onLoaderError = function (key) {\n\t          $rootScope.$emit('$translateLoadingError', {language: key});\n\t          deferred.reject(key);\n\t          $rootScope.$emit('$translateLoadingEnd', {language: key});\n\t        };\n\t        onLoaderError.displayName = 'onLoaderError';\n\t\n\t        $injector.get($loaderFactory)(loaderOptions)\n\t          .then(onLoaderSuccess, onLoaderError);\n\t\n\t        return deferred.promise;\n\t      };\n\t\n\t      if ($storageFactory) {\n\t        Storage = $injector.get($storageFactory);\n\t\n\t        if (!Storage.get || !Storage.put) {\n\t          throw new Error('Couldn\\'t use storage \\'' + $storageFactory + '\\', missing get() or put() method!');\n\t        }\n\t      }\n\t\n\t      // if we have additional interpolations that were added via\n\t      // $translateProvider.addInterpolation(), we have to map'em\n\t      if ($interpolatorFactories.length) {\n\t        var eachInterpolationFactory = function (interpolatorFactory) {\n\t          var interpolator = $injector.get(interpolatorFactory);\n\t          // setting initial locale for each interpolation service\n\t          interpolator.setLocale($preferredLanguage || $uses);\n\t          // make'em recognizable through id\n\t          interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator;\n\t        };\n\t        eachInterpolationFactory.displayName = 'interpolationFactoryAdder';\n\t\n\t        angular.forEach($interpolatorFactories, eachInterpolationFactory);\n\t      }\n\t\n\t      /**\n\t       * @name getTranslationTable\n\t       * @private\n\t       *\n\t       * @description\n\t       * Returns a promise that resolves to the translation table\n\t       * or is rejected if an error occurred.\n\t       *\n\t       * @param langKey\n\t       * @returns {Q.promise}\n\t       */\n\t      var getTranslationTable = function (langKey) {\n\t        var deferred = $q.defer();\n\t        if (Object.prototype.hasOwnProperty.call($translationTable, langKey)) {\n\t          deferred.resolve($translationTable[langKey]);\n\t        } else if (langPromises[langKey]) {\n\t          var onResolve = function (data) {\n\t            translations(data.key, data.table);\n\t            deferred.resolve(data.table);\n\t          };\n\t          onResolve.displayName = 'translationTableResolver';\n\t          langPromises[langKey].then(onResolve, deferred.reject);\n\t        } else {\n\t          deferred.reject();\n\t        }\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @name getFallbackTranslation\n\t       * @private\n\t       *\n\t       * @description\n\t       * Returns a promise that will resolve to the translation\n\t       * or be rejected if no translation was found for the language.\n\t       * This function is currently only used for fallback language translation.\n\t       *\n\t       * @param langKey The language to translate to.\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {Q.promise}\n\t       */\n\t      var getFallbackTranslation = function (langKey, translationId, interpolateParams, Interpolator) {\n\t        var deferred = $q.defer();\n\t\n\t        var onResolve = function (translationTable) {\n\t          if (Object.prototype.hasOwnProperty.call(translationTable, translationId)) {\n\t            Interpolator.setLocale(langKey);\n\t            var translation = translationTable[translationId];\n\t            if (translation.substr(0, 2) === '@:') {\n\t              getFallbackTranslation(langKey, translation.substr(2), interpolateParams, Interpolator)\n\t                .then(deferred.resolve, deferred.reject);\n\t            } else {\n\t              deferred.resolve(Interpolator.interpolate(translationTable[translationId], interpolateParams));\n\t            }\n\t            Interpolator.setLocale($uses);\n\t          } else {\n\t            deferred.reject();\n\t          }\n\t        };\n\t        onResolve.displayName = 'fallbackTranslationResolver';\n\t\n\t        getTranslationTable(langKey).then(onResolve, deferred.reject);\n\t\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @name getFallbackTranslationInstant\n\t       * @private\n\t       *\n\t       * @description\n\t       * Returns a translation\n\t       * This function is currently only used for fallback language translation.\n\t       *\n\t       * @param langKey The language to translate to.\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {string} translation\n\t       */\n\t      var getFallbackTranslationInstant = function (langKey, translationId, interpolateParams, Interpolator) {\n\t        var result, translationTable = $translationTable[langKey];\n\t\n\t        if (translationTable && Object.prototype.hasOwnProperty.call(translationTable, translationId)) {\n\t          Interpolator.setLocale(langKey);\n\t          result = Interpolator.interpolate(translationTable[translationId], interpolateParams);\n\t          if (result.substr(0, 2) === '@:') {\n\t            return getFallbackTranslationInstant(langKey, result.substr(2), interpolateParams, Interpolator);\n\t          }\n\t          Interpolator.setLocale($uses);\n\t        }\n\t\n\t        return result;\n\t      };\n\t\n\t\n\t      /**\n\t       * @name translateByHandler\n\t       * @private\n\t       *\n\t       * Translate by missing translation handler.\n\t       *\n\t       * @param translationId\n\t       * @returns translation created by $missingTranslationHandler or translationId is $missingTranslationHandler is\n\t       * absent\n\t       */\n\t      var translateByHandler = function (translationId, interpolateParams) {\n\t        // If we have a handler factory - we might also call it here to determine if it provides\n\t        // a default text for a translationid that can't be found anywhere in our tables\n\t        if ($missingTranslationHandlerFactory) {\n\t          var resultString = $injector.get($missingTranslationHandlerFactory)(translationId, $uses, interpolateParams);\n\t          if (resultString !== undefined) {\n\t            return resultString;\n\t          } else {\n\t            return translationId;\n\t          }\n\t        } else {\n\t          return translationId;\n\t        }\n\t      };\n\t\n\t      /**\n\t       * @name resolveForFallbackLanguage\n\t       * @private\n\t       *\n\t       * Recursive helper function for fallbackTranslation that will sequentially look\n\t       * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.\n\t       *\n\t       * @param fallbackLanguageIndex\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {Q.promise} Promise that will resolve to the translation.\n\t       */\n\t      var resolveForFallbackLanguage = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator, defaultTranslationText) {\n\t        var deferred = $q.defer();\n\t\n\t        if (fallbackLanguageIndex < $fallbackLanguage.length) {\n\t          var langKey = $fallbackLanguage[fallbackLanguageIndex];\n\t          getFallbackTranslation(langKey, translationId, interpolateParams, Interpolator).then(\n\t            deferred.resolve,\n\t            function () {\n\t              // Look in the next fallback language for a translation.\n\t              // It delays the resolving by passing another promise to resolve.\n\t              resolveForFallbackLanguage(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator, defaultTranslationText).then(deferred.resolve);\n\t            }\n\t          );\n\t        } else {\n\t          // No translation found in any fallback language\n\t          // if a default translation text is set in the directive, then return this as a result\n\t          if (defaultTranslationText) {\n\t            deferred.resolve(defaultTranslationText);\n\t          } else {\n\t            // if no default translation is set and an error handler is defined, send it to the handler\n\t            // and then return the result\n\t            deferred.resolve(translateByHandler(translationId, interpolateParams));\n\t          }\n\t        }\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @name resolveForFallbackLanguageInstant\n\t       * @private\n\t       *\n\t       * Recursive helper function for fallbackTranslation that will sequentially look\n\t       * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.\n\t       *\n\t       * @param fallbackLanguageIndex\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {string} translation\n\t       */\n\t      var resolveForFallbackLanguageInstant = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator) {\n\t        var result;\n\t\n\t        if (fallbackLanguageIndex < $fallbackLanguage.length) {\n\t          var langKey = $fallbackLanguage[fallbackLanguageIndex];\n\t          result = getFallbackTranslationInstant(langKey, translationId, interpolateParams, Interpolator);\n\t          if (!result) {\n\t            result = resolveForFallbackLanguageInstant(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator);\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t\n\t      /**\n\t       * Translates with the usage of the fallback languages.\n\t       *\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {Q.promise} Promise, that resolves to the translation.\n\t       */\n\t      var fallbackTranslation = function (translationId, interpolateParams, Interpolator, defaultTranslationText) {\n\t        // Start with the fallbackLanguage with index 0\n\t        return resolveForFallbackLanguage((startFallbackIteration>0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator, defaultTranslationText);\n\t      };\n\t\n\t      /**\n\t       * Translates with the usage of the fallback languages.\n\t       *\n\t       * @param translationId\n\t       * @param interpolateParams\n\t       * @param Interpolator\n\t       * @returns {String} translation\n\t       */\n\t      var fallbackTranslationInstant = function (translationId, interpolateParams, Interpolator) {\n\t        // Start with the fallbackLanguage with index 0\n\t        return resolveForFallbackLanguageInstant((startFallbackIteration>0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator);\n\t      };\n\t\n\t      var determineTranslation = function (translationId, interpolateParams, interpolationId, defaultTranslationText) {\n\t\n\t        var deferred = $q.defer();\n\t\n\t        var table = $uses ? $translationTable[$uses] : $translationTable,\n\t            Interpolator = (interpolationId) ? interpolatorHashMap[interpolationId] : defaultInterpolator;\n\t\n\t        // if the translation id exists, we can just interpolate it\n\t        if (table && Object.prototype.hasOwnProperty.call(table, translationId)) {\n\t          var translation = table[translationId];\n\t\n\t          // If using link, rerun $translate with linked translationId and return it\n\t          if (translation.substr(0, 2) === '@:') {\n\t\n\t            $translate(translation.substr(2), interpolateParams, interpolationId, defaultTranslationText)\n\t              .then(deferred.resolve, deferred.reject);\n\t          } else {\n\t            deferred.resolve(Interpolator.interpolate(translation, interpolateParams));\n\t          }\n\t        } else {\n\t          var missingTranslationHandlerTranslation;\n\t          // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise\n\t          if ($missingTranslationHandlerFactory && !pendingLoader) {\n\t            missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams);\n\t          }\n\t\n\t          // since we couldn't translate the inital requested translation id,\n\t          // we try it now with one or more fallback languages, if fallback language(s) is\n\t          // configured.\n\t          if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n\t            fallbackTranslation(translationId, interpolateParams, Interpolator, defaultTranslationText)\n\t                .then(function (translation) {\n\t                  deferred.resolve(translation);\n\t                }, function (_translationId) {\n\t                  deferred.reject(applyNotFoundIndicators(_translationId));\n\t                });\n\t          } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {\n\t            // looks like the requested translation id doesn't exists.\n\t            // Now, if there is a registered handler for missing translations and no\n\t            // asyncLoader is pending, we execute the handler\n\t            if (defaultTranslationText) {\n\t              deferred.resolve(defaultTranslationText);\n\t              } else {\n\t                deferred.resolve(missingTranslationHandlerTranslation);\n\t              }\n\t          } else {\n\t            if (defaultTranslationText) {\n\t              deferred.resolve(defaultTranslationText);\n\t            } else {\n\t              deferred.reject(applyNotFoundIndicators(translationId));\n\t            }\n\t          }\n\t        }\n\t        return deferred.promise;\n\t      };\n\t\n\t      var determineTranslationInstant = function (translationId, interpolateParams, interpolationId) {\n\t\n\t        var result, table = $uses ? $translationTable[$uses] : $translationTable,\n\t            Interpolator = defaultInterpolator;\n\t\n\t        // if the interpolation id exists use custom interpolator\n\t        if (interpolatorHashMap && Object.prototype.hasOwnProperty.call(interpolatorHashMap, interpolationId)) {\n\t          Interpolator = interpolatorHashMap[interpolationId];\n\t        }\n\t\n\t        // if the translation id exists, we can just interpolate it\n\t        if (table && Object.prototype.hasOwnProperty.call(table, translationId)) {\n\t          var translation = table[translationId];\n\t\n\t          // If using link, rerun $translate with linked translationId and return it\n\t          if (translation.substr(0, 2) === '@:') {\n\t            result = determineTranslationInstant(translation.substr(2), interpolateParams, interpolationId);\n\t          } else {\n\t            result = Interpolator.interpolate(translation, interpolateParams);\n\t          }\n\t        } else {\n\t          var missingTranslationHandlerTranslation;\n\t          // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise\n\t          if ($missingTranslationHandlerFactory && !pendingLoader) {\n\t            missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams);\n\t          }\n\t\n\t          // since we couldn't translate the inital requested translation id,\n\t          // we try it now with one or more fallback languages, if fallback language(s) is\n\t          // configured.\n\t          if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n\t            fallbackIndex = 0;\n\t            result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator);\n\t          } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {\n\t            // looks like the requested translation id doesn't exists.\n\t            // Now, if there is a registered handler for missing translations and no\n\t            // asyncLoader is pending, we execute the handler\n\t            result = missingTranslationHandlerTranslation;\n\t          } else {\n\t            result = applyNotFoundIndicators(translationId);\n\t          }\n\t        }\n\t\n\t        return result;\n\t      };\n\t\n\t      var clearNextLangAndPromise = function(key) {\n\t        if ($nextLang === key) {\n\t          $nextLang = undefined;\n\t        }\n\t        langPromises[key] = undefined;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#preferredLanguage\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the language key for the preferred language.\n\t       *\n\t       * @param {string} langKey language String or Array to be used as preferredLanguage (changing at runtime)\n\t       *\n\t       * @return {string} preferred language key\n\t       */\n\t      $translate.preferredLanguage = function (langKey) {\n\t        if(langKey) {\n\t          setupPreferredLanguage(langKey);\n\t        }\n\t        return $preferredLanguage;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#cloakClassName\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the configured class name for `translate-cloak` directive.\n\t       *\n\t       * @return {string} cloakClassName\n\t       */\n\t      $translate.cloakClassName = function () {\n\t        return $cloakClassName;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#fallbackLanguage\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the language key for the fallback languages or sets a new fallback stack.\n\t       *\n\t       * @param {string=} langKey language String or Array of fallback languages to be used (to change stack at runtime)\n\t       *\n\t       * @return {string||array} fallback language key\n\t       */\n\t      $translate.fallbackLanguage = function (langKey) {\n\t        if (langKey !== undefined && langKey !== null) {\n\t          fallbackStack(langKey);\n\t\n\t          // as we might have an async loader initiated and a new translation language might have been defined\n\t          // we need to add the promise to the stack also. So - iterate.\n\t          if ($loaderFactory) {\n\t            if ($fallbackLanguage && $fallbackLanguage.length) {\n\t              for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n\t                if (!langPromises[$fallbackLanguage[i]]) {\n\t                  langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]);\n\t                }\n\t              }\n\t            }\n\t          }\n\t          $translate.use($translate.use());\n\t        }\n\t        if ($fallbackWasString) {\n\t          return $fallbackLanguage[0];\n\t        } else {\n\t          return $fallbackLanguage;\n\t        }\n\t\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#useFallbackLanguage\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Sets the first key of the fallback language stack to be used for translation.\n\t       * Therefore all languages in the fallback array BEFORE this key will be skipped!\n\t       *\n\t       * @param {string=} langKey Contains the langKey the iteration shall start with. Set to false if you want to\n\t       * get back to the whole stack\n\t       */\n\t      $translate.useFallbackLanguage = function (langKey) {\n\t        if (langKey !== undefined && langKey !== null) {\n\t          if (!langKey) {\n\t            startFallbackIteration = 0;\n\t          } else {\n\t            var langKeyPosition = indexOf($fallbackLanguage, langKey);\n\t            if (langKeyPosition > -1) {\n\t              startFallbackIteration = langKeyPosition;\n\t            }\n\t          }\n\t\n\t        }\n\t\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#proposedLanguage\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the language key of language that is currently loaded asynchronously.\n\t       *\n\t       * @return {string} language key\n\t       */\n\t      $translate.proposedLanguage = function () {\n\t        return $nextLang;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#storage\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns registered storage.\n\t       *\n\t       * @return {object} Storage\n\t       */\n\t      $translate.storage = function () {\n\t        return Storage;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#use\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Tells angular-translate which language to use by given language key. This method is\n\t       * used to change language at runtime. It also takes care of storing the language\n\t       * key in a configured store to let your app remember the choosed language.\n\t       *\n\t       * When trying to 'use' a language which isn't available it tries to load it\n\t       * asynchronously with registered loaders.\n\t       *\n\t       * Returns promise object with loaded language file data\n\t       * @example\n\t       * $translate.use(\"en_US\").then(function(data){\n\t       *   $scope.text = $translate(\"HELLO\");\n\t       * });\n\t       *\n\t       * @param {string} key Language key\n\t       * @return {string} Language key\n\t       */\n\t      $translate.use = function (key) {\n\t        if (!key) {\n\t          return $uses;\n\t        }\n\t\n\t        var deferred = $q.defer();\n\t\n\t        $rootScope.$emit('$translateChangeStart', {language: key});\n\t\n\t        // Try to get the aliased language key\n\t        var aliasedKey = negotiateLocale(key);\n\t        if (aliasedKey) {\n\t          key = aliasedKey;\n\t        }\n\t\n\t        // if there isn't a translation table for the language we've requested,\n\t        // we load it asynchronously\n\t        if (($forceAsyncReloadEnabled || !$translationTable[key]) && $loaderFactory && !langPromises[key]) {\n\t          $nextLang = key;\n\t          langPromises[key] = loadAsync(key).then(function (translation) {\n\t            translations(translation.key, translation.table);\n\t            deferred.resolve(translation.key);\n\t            useLanguage(translation.key);\n\t            return translation;\n\t          }, function (key) {\n\t            $rootScope.$emit('$translateChangeError', {language: key});\n\t            deferred.reject(key);\n\t            $rootScope.$emit('$translateChangeEnd', {language: key});\n\t            return $q.reject(key);\n\t          });\n\t          langPromises[key]['finally'](function () {\n\t            clearNextLangAndPromise(key);\n\t          });\n\t        } else if ($nextLang === key && langPromises[key]) {\n\t          // we are already loading this asynchronously\n\t          // resolve our new deferred when the old langPromise is resolved\n\t          langPromises[key].then(function (translation) {\n\t            deferred.resolve(translation.key);\n\t            return translation;\n\t          }, function (key) {\n\t            deferred.reject(key);\n\t            return $q.reject(key);\n\t          });\n\t        } else {\n\t          deferred.resolve(key);\n\t          useLanguage(key);\n\t        }\n\t\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#storageKey\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the key for the storage.\n\t       *\n\t       * @return {string} storage key\n\t       */\n\t      $translate.storageKey = function () {\n\t        return storageKey();\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#isPostCompilingEnabled\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns whether post compiling is enabled or not\n\t       *\n\t       * @return {bool} storage key\n\t       */\n\t      $translate.isPostCompilingEnabled = function () {\n\t        return $postCompilingEnabled;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#isForceAsyncReloadEnabled\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns whether force async reload is enabled or not\n\t       *\n\t       * @return {boolean} forceAsyncReload value\n\t       */\n\t      $translate.isForceAsyncReloadEnabled = function () {\n\t        return $forceAsyncReloadEnabled;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#refresh\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Refreshes a translation table pointed by the given langKey. If langKey is not specified,\n\t       * the module will drop all existent translation tables and load new version of those which\n\t       * are currently in use.\n\t       *\n\t       * Refresh means that the module will drop target translation table and try to load it again.\n\t       *\n\t       * In case there are no loaders registered the refresh() method will throw an Error.\n\t       *\n\t       * If the module is able to refresh translation tables refresh() method will broadcast\n\t       * $translateRefreshStart and $translateRefreshEnd events.\n\t       *\n\t       * @example\n\t       * // this will drop all currently existent translation tables and reload those which are\n\t       * // currently in use\n\t       * $translate.refresh();\n\t       * // this will refresh a translation table for the en_US language\n\t       * $translate.refresh('en_US');\n\t       *\n\t       * @param {string} langKey A language key of the table, which has to be refreshed\n\t       *\n\t       * @return {promise} Promise, which will be resolved in case a translation tables refreshing\n\t       * process is finished successfully, and reject if not.\n\t       */\n\t      $translate.refresh = function (langKey) {\n\t        if (!$loaderFactory) {\n\t          throw new Error('Couldn\\'t refresh translation table, no loader registered!');\n\t        }\n\t\n\t        var deferred = $q.defer();\n\t\n\t        function resolve() {\n\t          deferred.resolve();\n\t          $rootScope.$emit('$translateRefreshEnd', {language: langKey});\n\t        }\n\t\n\t        function reject() {\n\t          deferred.reject();\n\t          $rootScope.$emit('$translateRefreshEnd', {language: langKey});\n\t        }\n\t\n\t        $rootScope.$emit('$translateRefreshStart', {language: langKey});\n\t\n\t        if (!langKey) {\n\t          // if there's no language key specified we refresh ALL THE THINGS!\n\t          var tables = [], loadingKeys = {};\n\t\n\t          // reload registered fallback languages\n\t          if ($fallbackLanguage && $fallbackLanguage.length) {\n\t            for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n\t              tables.push(loadAsync($fallbackLanguage[i]));\n\t              loadingKeys[$fallbackLanguage[i]] = true;\n\t            }\n\t          }\n\t\n\t          // reload currently used language\n\t          if ($uses && !loadingKeys[$uses]) {\n\t            tables.push(loadAsync($uses));\n\t          }\n\t\n\t          var allTranslationsLoaded = function (tableData) {\n\t            $translationTable = {};\n\t            angular.forEach(tableData, function (data) {\n\t              translations(data.key, data.table);\n\t            });\n\t            if ($uses) {\n\t              useLanguage($uses);\n\t            }\n\t            resolve();\n\t          };\n\t          allTranslationsLoaded.displayName = 'refreshPostProcessor';\n\t\n\t          $q.all(tables).then(allTranslationsLoaded, reject);\n\t\n\t        } else if ($translationTable[langKey]) {\n\t\n\t          var oneTranslationsLoaded = function (data) {\n\t            translations(data.key, data.table);\n\t            if (langKey === $uses) {\n\t              useLanguage($uses);\n\t            }\n\t            resolve();\n\t          };\n\t          oneTranslationsLoaded.displayName = 'refreshPostProcessor';\n\t\n\t          loadAsync(langKey).then(oneTranslationsLoaded, reject);\n\t\n\t        } else {\n\t          reject();\n\t        }\n\t        return deferred.promise;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#instant\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns a translation instantly from the internal state of loaded translation. All rules\n\t       * regarding the current language, the preferred language of even fallback languages will be\n\t       * used except any promise handling. If a language was not found, an asynchronous loading\n\t       * will be invoked in the background.\n\t       *\n\t       * @param {string|array} translationId A token which represents a translation id\n\t       *                                     This can be optionally an array of translation ids which\n\t       *                                     results that the function's promise returns an object where\n\t       *                                     each key is the translation id and the value the translation.\n\t       * @param {object} interpolateParams Params\n\t       * @param {string} interpolationId The id of the interpolation to use\n\t       *\n\t       * @return {string|object} translation\n\t       */\n\t      $translate.instant = function (translationId, interpolateParams, interpolationId) {\n\t\n\t        // Detect undefined and null values to shorten the execution and prevent exceptions\n\t        if (translationId === null || angular.isUndefined(translationId)) {\n\t          return translationId;\n\t        }\n\t\n\t        // Duck detection: If the first argument is an array, a bunch of translations was requested.\n\t        // The result is an object.\n\t        if (angular.isArray(translationId)) {\n\t          var results = {};\n\t          for (var i = 0, c = translationId.length; i < c; i++) {\n\t            results[translationId[i]] = $translate.instant(translationId[i], interpolateParams, interpolationId);\n\t          }\n\t          return results;\n\t        }\n\t\n\t        // We discarded unacceptable values. So we just need to verify if translationId is empty String\n\t        if (angular.isString(translationId) && translationId.length < 1) {\n\t          return translationId;\n\t        }\n\t\n\t        // trim off any whitespace\n\t        if (translationId) {\n\t          translationId = trim.apply(translationId);\n\t        }\n\t\n\t        var result, possibleLangKeys = [];\n\t        if ($preferredLanguage) {\n\t          possibleLangKeys.push($preferredLanguage);\n\t        }\n\t        if ($uses) {\n\t          possibleLangKeys.push($uses);\n\t        }\n\t        if ($fallbackLanguage && $fallbackLanguage.length) {\n\t          possibleLangKeys = possibleLangKeys.concat($fallbackLanguage);\n\t        }\n\t        for (var j = 0, d = possibleLangKeys.length; j < d; j++) {\n\t          var possibleLangKey = possibleLangKeys[j];\n\t          if ($translationTable[possibleLangKey]) {\n\t            if (typeof $translationTable[possibleLangKey][translationId] !== 'undefined') {\n\t              result = determineTranslationInstant(translationId, interpolateParams, interpolationId);\n\t            } else if ($notFoundIndicatorLeft || $notFoundIndicatorRight) {\n\t              result = applyNotFoundIndicators(translationId);\n\t            }\n\t          }\n\t          if (typeof result !== 'undefined') {\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (!result && result !== '') {\n\t          // Return translation of default interpolator if not found anything.\n\t          result = defaultInterpolator.interpolate(translationId, interpolateParams);\n\t          if ($missingTranslationHandlerFactory && !pendingLoader) {\n\t            result = translateByHandler(translationId, interpolateParams);\n\t          }\n\t        }\n\t\n\t        return result;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#versionInfo\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the current version information for the angular-translate library\n\t       *\n\t       * @return {string} angular-translate version\n\t       */\n\t      $translate.versionInfo = function () {\n\t        return version;\n\t      };\n\t\n\t      /**\n\t       * @ngdoc function\n\t       * @name pascalprecht.translate.$translate#loaderCache\n\t       * @methodOf pascalprecht.translate.$translate\n\t       *\n\t       * @description\n\t       * Returns the defined loaderCache.\n\t       *\n\t       * @return {boolean|string|object} current value of loaderCache\n\t       */\n\t      $translate.loaderCache = function () {\n\t        return loaderCache;\n\t      };\n\t\n\t      // internal purpose only\n\t      $translate.directivePriority = function () {\n\t        return directivePriority;\n\t      };\n\t\n\t      // internal purpose only\n\t      $translate.statefulFilter = function () {\n\t        return statefulFilter;\n\t      };\n\t\n\t      if ($loaderFactory) {\n\t\n\t        // If at least one async loader is defined and there are no\n\t        // (default) translations available we should try to load them.\n\t        if (angular.equals($translationTable, {})) {\n\t          $translate.use($translate.use());\n\t        }\n\t\n\t        // Also, if there are any fallback language registered, we start\n\t        // loading them asynchronously as soon as we can.\n\t        if ($fallbackLanguage && $fallbackLanguage.length) {\n\t          var processAsyncResult = function (translation) {\n\t            translations(translation.key, translation.table);\n\t            $rootScope.$emit('$translateChangeEnd', { language: translation.key });\n\t            return translation;\n\t          };\n\t          for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n\t            var fallbackLanguageId = $fallbackLanguage[i];\n\t            if ($forceAsyncReloadEnabled || !$translationTable[fallbackLanguageId]) {\n\t              langPromises[fallbackLanguageId] = loadAsync(fallbackLanguageId).then(processAsyncResult);\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return $translate;\n\t    }\n\t  ];\n\t}\n\t$translate.$inject = ['$STORAGE_KEY', '$windowProvider', '$translateSanitizationProvider', 'pascalprechtTranslateOverrider'];\n\t\n\t$translate.displayName = 'displayName';\n\t\n\t/**\n\t * @ngdoc object\n\t * @name pascalprecht.translate.$translateDefaultInterpolation\n\t * @requires $interpolate\n\t *\n\t * @description\n\t * Uses angular's `$interpolate` services to interpolate strings against some values.\n\t *\n\t * Be aware to configure a proper sanitization strategy.\n\t *\n\t * See also:\n\t * * {@link pascalprecht.translate.$translateSanitization}\n\t *\n\t * @return {object} $translateDefaultInterpolation Interpolator service\n\t */\n\tangular.module('pascalprecht.translate').factory('$translateDefaultInterpolation', $translateDefaultInterpolation);\n\t\n\tfunction $translateDefaultInterpolation ($interpolate, $translateSanitization) {\n\t\n\t  'use strict';\n\t\n\t  var $translateInterpolator = {},\n\t      $locale,\n\t      $identifier = 'default';\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateDefaultInterpolation#setLocale\n\t   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n\t   *\n\t   * @description\n\t   * Sets current locale (this is currently not use in this interpolation).\n\t   *\n\t   * @param {string} locale Language key or locale.\n\t   */\n\t  $translateInterpolator.setLocale = function (locale) {\n\t    $locale = locale;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateDefaultInterpolation#getInterpolationIdentifier\n\t   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n\t   *\n\t   * @description\n\t   * Returns an identifier for this interpolation service.\n\t   *\n\t   * @returns {string} $identifier\n\t   */\n\t  $translateInterpolator.getInterpolationIdentifier = function () {\n\t    return $identifier;\n\t  };\n\t\n\t  /**\n\t   * @deprecated will be removed in 3.0\n\t   * @see {@link pascalprecht.translate.$translateSanitization}\n\t   */\n\t  $translateInterpolator.useSanitizeValueStrategy = function (value) {\n\t    $translateSanitization.useStrategy(value);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc function\n\t   * @name pascalprecht.translate.$translateDefaultInterpolation#interpolate\n\t   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n\t   *\n\t   * @description\n\t   * Interpolates given string agains given interpolate params using angulars\n\t   * `$interpolate` service.\n\t   *\n\t   * @returns {string} interpolated string.\n\t   */\n\t  $translateInterpolator.interpolate = function (string, interpolationParams) {\n\t    interpolationParams = interpolationParams || {};\n\t    interpolationParams = $translateSanitization.sanitize(interpolationParams, 'params');\n\t\n\t    var interpolatedText = $interpolate(string)(interpolationParams);\n\t    interpolatedText = $translateSanitization.sanitize(interpolatedText, 'text');\n\t\n\t    return interpolatedText;\n\t  };\n\t\n\t  return $translateInterpolator;\n\t}\n\t$translateDefaultInterpolation.$inject = ['$interpolate', '$translateSanitization'];\n\t\n\t$translateDefaultInterpolation.displayName = '$translateDefaultInterpolation';\n\t\n\tangular.module('pascalprecht.translate').constant('$STORAGE_KEY', 'NG_TRANSLATE_LANG_KEY');\n\t\n\tangular.module('pascalprecht.translate')\n\t/**\n\t * @ngdoc directive\n\t * @name pascalprecht.translate.directive:translate\n\t * @requires $compile\n\t * @requires $filter\n\t * @requires $interpolate\n\t * @restrict A\n\t *\n\t * @description\n\t * Translates given translation id either through attribute or DOM content.\n\t * Internally it uses `translate` filter to translate translation id. It possible to\n\t * pass an optional `translate-values` object literal as string into translation id.\n\t *\n\t * @param {string=} translate Translation id which could be either string or interpolated string.\n\t * @param {string=} translate-values Values to pass into translation id. Can be passed as object literal string or interpolated object.\n\t * @param {string=} translate-attr-ATTR translate Translation id and put it into ATTR attribute.\n\t * @param {string=} translate-default will be used unless translation was successful\n\t * @param {boolean=} translate-compile (default true if present) defines locally activation of {@link pascalprecht.translate.$translateProvider#methods_usePostCompiling}\n\t *\n\t * @example\n\t   <example module=\"ngView\">\n\t    <file name=\"index.html\">\n\t      <div ng-controller=\"TranslateCtrl\">\n\t\n\t        <pre translate=\"TRANSLATION_ID\"></pre>\n\t        <pre translate>TRANSLATION_ID</pre>\n\t        <pre translate translate-attr-title=\"TRANSLATION_ID\"></pre>\n\t        <pre translate=\"{{translationId}}\"></pre>\n\t        <pre translate>{{translationId}}</pre>\n\t        <pre translate=\"WITH_VALUES\" translate-values=\"{value: 5}\"></pre>\n\t        <pre translate translate-values=\"{value: 5}\">WITH_VALUES</pre>\n\t        <pre translate=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>\n\t        <pre translate translate-values=\"{{values}}\">WITH_VALUES</pre>\n\t        <pre translate translate-attr-title=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>\n\t\n\t      </div>\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('ngView', ['pascalprecht.translate'])\n\t\n\t      .config(function ($translateProvider) {\n\t\n\t        $translateProvider.translations('en',{\n\t          'TRANSLATION_ID': 'Hello there!',\n\t          'WITH_VALUES': 'The following value is dynamic: {{value}}'\n\t        }).preferredLanguage('en');\n\t\n\t      });\n\t\n\t      angular.module('ngView').controller('TranslateCtrl', function ($scope) {\n\t        $scope.translationId = 'TRANSLATION_ID';\n\t\n\t        $scope.values = {\n\t          value: 78\n\t        };\n\t      });\n\t    </file>\n\t    <file name=\"scenario.js\">\n\t      it('should translate', function () {\n\t        inject(function ($rootScope, $compile) {\n\t          $rootScope.translationId = 'TRANSLATION_ID';\n\t\n\t          element = $compile('<p translate=\"TRANSLATION_ID\"></p>')($rootScope);\n\t          $rootScope.$digest();\n\t          expect(element.text()).toBe('Hello there!');\n\t\n\t          element = $compile('<p translate=\"{{translationId}}\"></p>')($rootScope);\n\t          $rootScope.$digest();\n\t          expect(element.text()).toBe('Hello there!');\n\t\n\t          element = $compile('<p translate>TRANSLATION_ID</p>')($rootScope);\n\t          $rootScope.$digest();\n\t          expect(element.text()).toBe('Hello there!');\n\t\n\t          element = $compile('<p translate>{{translationId}}</p>')($rootScope);\n\t          $rootScope.$digest();\n\t          expect(element.text()).toBe('Hello there!');\n\t\n\t          element = $compile('<p translate translate-attr-title=\"TRANSLATION_ID\"></p>')($rootScope);\n\t          $rootScope.$digest();\n\t          expect(element.attr('title')).toBe('Hello there!');\n\t        });\n\t      });\n\t    </file>\n\t   </example>\n\t */\n\t.directive('translate', translateDirective);\n\tfunction translateDirective($translate, $q, $interpolate, $compile, $parse, $rootScope) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name trim\n\t   * @private\n\t   *\n\t   * @description\n\t   * trim polyfill\n\t   *\n\t   * @returns {string} The string stripped of whitespace from both ends\n\t   */\n\t  var trim = function() {\n\t    return this.toString().replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t\n\t  return {\n\t    restrict: 'AE',\n\t    scope: true,\n\t    priority: $translate.directivePriority(),\n\t    compile: function (tElement, tAttr) {\n\t\n\t      var translateValuesExist = (tAttr.translateValues) ?\n\t        tAttr.translateValues : undefined;\n\t\n\t      var translateInterpolation = (tAttr.translateInterpolation) ?\n\t        tAttr.translateInterpolation : undefined;\n\t\n\t      var translateValueExist = tElement[0].outerHTML.match(/translate-value-+/i);\n\t\n\t      var interpolateRegExp = '^(.*)(' + $interpolate.startSymbol() + '.*' + $interpolate.endSymbol() + ')(.*)',\n\t          watcherRegExp = '^(.*)' + $interpolate.startSymbol() + '(.*)' + $interpolate.endSymbol() + '(.*)';\n\t\n\t      return function linkFn(scope, iElement, iAttr) {\n\t\n\t        scope.interpolateParams = {};\n\t        scope.preText = '';\n\t        scope.postText = '';\n\t        var translationIds = {};\n\t\n\t        var initInterpolationParams = function (interpolateParams, iAttr, tAttr) {\n\t          // initial setup\n\t          if (iAttr.translateValues) {\n\t            angular.extend(interpolateParams, $parse(iAttr.translateValues)(scope.$parent));\n\t          }\n\t          // initially fetch all attributes if existing and fill the params\n\t          if (translateValueExist) {\n\t            for (var attr in tAttr) {\n\t              if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {\n\t                var attributeName = angular.lowercase(attr.substr(14, 1)) + attr.substr(15);\n\t                interpolateParams[attributeName] = tAttr[attr];\n\t              }\n\t            }\n\t          }\n\t        };\n\t\n\t        // Ensures any change of the attribute \"translate\" containing the id will\n\t        // be re-stored to the scope's \"translationId\".\n\t        // If the attribute has no content, the element's text value (white spaces trimmed off) will be used.\n\t        var observeElementTranslation = function (translationId) {\n\t\n\t          // Remove any old watcher\n\t          if (angular.isFunction(observeElementTranslation._unwatchOld)) {\n\t            observeElementTranslation._unwatchOld();\n\t            observeElementTranslation._unwatchOld = undefined;\n\t          }\n\t\n\t          if (angular.equals(translationId , '') || !angular.isDefined(translationId)) {\n\t            // Resolve translation id by inner html if required\n\t            var interpolateMatches = trim.apply(iElement.text()).match(interpolateRegExp);\n\t            // Interpolate translation id if required\n\t            if (angular.isArray(interpolateMatches)) {\n\t              scope.preText = interpolateMatches[1];\n\t              scope.postText = interpolateMatches[3];\n\t              translationIds.translate = $interpolate(interpolateMatches[2])(scope.$parent);\n\t              var watcherMatches = iElement.text().match(watcherRegExp);\n\t              if (angular.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length) {\n\t                observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {\n\t                  translationIds.translate = newValue;\n\t                  updateTranslations();\n\t                });\n\t              }\n\t            } else {\n\t              translationIds.translate = iElement.text().replace(/^\\s+|\\s+$/g,'');\n\t            }\n\t          } else {\n\t            translationIds.translate = translationId;\n\t          }\n\t          updateTranslations();\n\t        };\n\t\n\t        var observeAttributeTranslation = function (translateAttr) {\n\t          iAttr.$observe(translateAttr, function (translationId) {\n\t            translationIds[translateAttr] = translationId;\n\t            updateTranslations();\n\t          });\n\t        };\n\t\n\t        // initial setup with values\n\t        initInterpolationParams(scope.interpolateParams, iAttr, tAttr);\n\t\n\t        var firstAttributeChangedEvent = true;\n\t        iAttr.$observe('translate', function (translationId) {\n\t          if (typeof translationId === 'undefined') {\n\t            // case of element \"<translate>xyz</translate>\"\n\t            observeElementTranslation('');\n\t          } else {\n\t            // case of regular attribute\n\t            if (translationId !== '' || !firstAttributeChangedEvent) {\n\t              translationIds.translate = translationId;\n\t              updateTranslations();\n\t            }\n\t          }\n\t          firstAttributeChangedEvent = false;\n\t        });\n\t\n\t        for (var translateAttr in iAttr) {\n\t          if (iAttr.hasOwnProperty(translateAttr) && translateAttr.substr(0, 13) === 'translateAttr') {\n\t            observeAttributeTranslation(translateAttr);\n\t          }\n\t        }\n\t\n\t        iAttr.$observe('translateDefault', function (value) {\n\t          scope.defaultText = value;\n\t        });\n\t\n\t        if (translateValuesExist) {\n\t          iAttr.$observe('translateValues', function (interpolateParams) {\n\t            if (interpolateParams) {\n\t              scope.$parent.$watch(function () {\n\t                angular.extend(scope.interpolateParams, $parse(interpolateParams)(scope.$parent));\n\t              });\n\t            }\n\t          });\n\t        }\n\t\n\t        if (translateValueExist) {\n\t          var observeValueAttribute = function (attrName) {\n\t            iAttr.$observe(attrName, function (value) {\n\t              var attributeName = angular.lowercase(attrName.substr(14, 1)) + attrName.substr(15);\n\t              scope.interpolateParams[attributeName] = value;\n\t            });\n\t          };\n\t          for (var attr in iAttr) {\n\t            if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {\n\t              observeValueAttribute(attr);\n\t            }\n\t          }\n\t        }\n\t\n\t        // Master update function\n\t        var updateTranslations = function () {\n\t          for (var key in translationIds) {\n\t\n\t            if (translationIds.hasOwnProperty(key) && translationIds[key] !== undefined) {\n\t              updateTranslation(key, translationIds[key], scope, scope.interpolateParams, scope.defaultText);\n\t            }\n\t          }\n\t        };\n\t\n\t        // Put translation processing function outside loop\n\t        var updateTranslation = function(translateAttr, translationId, scope, interpolateParams, defaultTranslationText) {\n\t          if (translationId) {\n\t            $translate(translationId, interpolateParams, translateInterpolation, defaultTranslationText)\n\t              .then(function (translation) {\n\t                applyTranslation(translation, scope, true, translateAttr);\n\t              }, function (translationId) {\n\t                applyTranslation(translationId, scope, false, translateAttr);\n\t              });\n\t          } else {\n\t            // as an empty string cannot be translated, we can solve this using successful=false\n\t            applyTranslation(translationId, scope, false, translateAttr);\n\t          }\n\t        };\n\t\n\t        var applyTranslation = function (value, scope, successful, translateAttr) {\n\t          if (translateAttr === 'translate') {\n\t            // default translate into innerHTML\n\t            if (!successful && typeof scope.defaultText !== 'undefined') {\n\t              value = scope.defaultText;\n\t            }\n\t            iElement.html(scope.preText + value + scope.postText);\n\t            var globallyEnabled = $translate.isPostCompilingEnabled();\n\t            var locallyDefined = typeof tAttr.translateCompile !== 'undefined';\n\t            var locallyEnabled = locallyDefined && tAttr.translateCompile !== 'false';\n\t            if ((globallyEnabled && !locallyDefined) || locallyEnabled) {\n\t              $compile(iElement.contents())(scope);\n\t            }\n\t          } else {\n\t            // translate attribute\n\t            if (!successful && typeof scope.defaultText !== 'undefined') {\n\t              value = scope.defaultText;\n\t            }\n\t            var attributeName = iAttr.$attr[translateAttr];\n\t            if (attributeName.substr(0, 5) === 'data-') {\n\t              // ensure html5 data prefix is stripped\n\t              attributeName = attributeName.substr(5);\n\t            }\n\t            attributeName = attributeName.substr(15);\n\t            iElement.attr(attributeName, value);\n\t          }\n\t        };\n\t\n\t        if (translateValuesExist || translateValueExist || iAttr.translateDefault) {\n\t          scope.$watch('interpolateParams', updateTranslations, true);\n\t        }\n\t\n\t        // Ensures the text will be refreshed after the current language was changed\n\t        // w/ $translate.use(...)\n\t        var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslations);\n\t\n\t        // ensure translation will be looked up at least one\n\t        if (iElement.text().length) {\n\t          if (iAttr.translate) {\n\t            observeElementTranslation(iAttr.translate);\n\t          } else {\n\t            observeElementTranslation('');\n\t          }\n\t        } else if (iAttr.translate) {\n\t          // ensure attribute will be not skipped\n\t          observeElementTranslation(iAttr.translate);\n\t        }\n\t        updateTranslations();\n\t        scope.$on('$destroy', unbind);\n\t      };\n\t    }\n\t  };\n\t}\n\ttranslateDirective.$inject = ['$translate', '$q', '$interpolate', '$compile', '$parse', '$rootScope'];\n\t\n\ttranslateDirective.displayName = 'translateDirective';\n\t\n\tangular.module('pascalprecht.translate')\n\t/**\n\t * @ngdoc directive\n\t * @name pascalprecht.translate.directive:translateCloak\n\t * @requires $rootScope\n\t * @requires $translate\n\t * @restrict A\n\t *\n\t * $description\n\t * Adds a `translate-cloak` class name to the given element where this directive\n\t * is applied initially and removes it, once a loader has finished loading.\n\t *\n\t * This directive can be used to prevent initial flickering when loading translation\n\t * data asynchronously.\n\t *\n\t * The class name is defined in\n\t * {@link pascalprecht.translate.$translateProvider#cloakClassName $translate.cloakClassName()}.\n\t *\n\t * @param {string=} translate-cloak If a translationId is provided, it will be used for showing\n\t *                                  or hiding the cloak. Basically it relies on the translation\n\t *                                  resolve.\n\t */\n\t.directive('translateCloak', translateCloakDirective);\n\t\n\tfunction translateCloakDirective($rootScope, $translate) {\n\t\n\t  'use strict';\n\t\n\t  return {\n\t    compile: function (tElement) {\n\t      var applyCloak = function () {\n\t        tElement.addClass($translate.cloakClassName());\n\t      },\n\t      removeCloak = function () {\n\t        tElement.removeClass($translate.cloakClassName());\n\t      },\n\t      removeListener = $rootScope.$on('$translateChangeEnd', function () {\n\t        removeCloak();\n\t        removeListener();\n\t        removeListener = null;\n\t      });\n\t      applyCloak();\n\t\n\t      return function linkFn(scope, iElement, iAttr) {\n\t        // Register a watcher for the defined translation allowing a fine tuned cloak\n\t        if (iAttr.translateCloak && iAttr.translateCloak.length) {\n\t          iAttr.$observe('translateCloak', function (translationId) {\n\t            $translate(translationId).then(removeCloak, applyCloak);\n\t          });\n\t        }\n\t      };\n\t    }\n\t  };\n\t}\n\ttranslateCloakDirective.$inject = ['$rootScope', '$translate'];\n\t\n\ttranslateCloakDirective.displayName = 'translateCloakDirective';\n\t\n\tangular.module('pascalprecht.translate')\n\t/**\n\t * @ngdoc filter\n\t * @name pascalprecht.translate.filter:translate\n\t * @requires $parse\n\t * @requires pascalprecht.translate.$translate\n\t * @function\n\t *\n\t * @description\n\t * Uses `$translate` service to translate contents. Accepts interpolate parameters\n\t * to pass dynamized values though translation.\n\t *\n\t * @param {string} translationId A translation id to be translated.\n\t * @param {*=} interpolateParams Optional object literal (as hash or string) to pass values into translation.\n\t *\n\t * @returns {string} Translated text.\n\t *\n\t * @example\n\t   <example module=\"ngView\">\n\t    <file name=\"index.html\">\n\t      <div ng-controller=\"TranslateCtrl\">\n\t\n\t        <pre>{{ 'TRANSLATION_ID' | translate }}</pre>\n\t        <pre>{{ translationId | translate }}</pre>\n\t        <pre>{{ 'WITH_VALUES' | translate:'{value: 5}' }}</pre>\n\t        <pre>{{ 'WITH_VALUES' | translate:values }}</pre>\n\t\n\t      </div>\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('ngView', ['pascalprecht.translate'])\n\t\n\t      .config(function ($translateProvider) {\n\t\n\t        $translateProvider.translations('en', {\n\t          'TRANSLATION_ID': 'Hello there!',\n\t          'WITH_VALUES': 'The following value is dynamic: {{value}}'\n\t        });\n\t        $translateProvider.preferredLanguage('en');\n\t\n\t      });\n\t\n\t      angular.module('ngView').controller('TranslateCtrl', function ($scope) {\n\t        $scope.translationId = 'TRANSLATION_ID';\n\t\n\t        $scope.values = {\n\t          value: 78\n\t        };\n\t      });\n\t    </file>\n\t   </example>\n\t */\n\t.filter('translate', translateFilterFactory);\n\t\n\tfunction translateFilterFactory($parse, $translate) {\n\t\n\t  'use strict';\n\t\n\t  var translateFilter = function (translationId, interpolateParams, interpolation) {\n\t\n\t    if (!angular.isObject(interpolateParams)) {\n\t      interpolateParams = $parse(interpolateParams)(this);\n\t    }\n\t\n\t    return $translate.instant(translationId, interpolateParams, interpolation);\n\t  };\n\t\n\t  if ($translate.statefulFilter()) {\n\t    translateFilter.$stateful = true;\n\t  }\n\t\n\t  return translateFilter;\n\t}\n\ttranslateFilterFactory.$inject = ['$parse', '$translate'];\n\t\n\ttranslateFilterFactory.displayName = 'translateFilterFactory';\n\t\n\tangular.module('pascalprecht.translate')\n\t\n\t/**\n\t * @ngdoc object\n\t * @name pascalprecht.translate.$translationCache\n\t * @requires $cacheFactory\n\t *\n\t * @description\n\t * The first time a translation table is used, it is loaded in the translation cache for quick retrieval. You\n\t * can load translation tables directly into the cache by consuming the\n\t * `$translationCache` service directly.\n\t *\n\t * @return {object} $cacheFactory object.\n\t */\n\t  .factory('$translationCache', $translationCache);\n\t\n\tfunction $translationCache($cacheFactory) {\n\t\n\t  'use strict';\n\t\n\t  return $cacheFactory('translations');\n\t}\n\t$translationCache.$inject = ['$cacheFactory'];\n\t\n\t$translationCache.displayName = '$translationCache';\n\treturn 'pascalprecht.translate';\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(28);\n\tmodule.exports = 'ngAnimate';\n\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports) {\n\n\tvar duScrollDefaultEasing=function(e){\"use strict\";return.5>e?Math.pow(2*e,2)/2:1-Math.pow(2*(1-e),2)/2};angular.module(\"duScroll\",[\"duScroll.scrollspy\",\"duScroll.smoothScroll\",\"duScroll.scrollContainer\",\"duScroll.spyContext\",\"duScroll.scrollHelpers\"]).value(\"duScrollDuration\",350).value(\"duScrollSpyWait\",100).value(\"duScrollGreedy\",!1).value(\"duScrollOffset\",0).value(\"duScrollEasing\",duScrollDefaultEasing).value(\"duScrollCancelOnEvents\",\"scroll mousedown mousewheel touchmove keydown\").value(\"duScrollBottomSpy\",!1),angular.module(\"duScroll.scrollHelpers\",[\"duScroll.requestAnimation\"]).run([\"$window\",\"$q\",\"cancelAnimation\",\"requestAnimation\",\"duScrollEasing\",\"duScrollDuration\",\"duScrollOffset\",\"duScrollCancelOnEvents\",function(e,t,n,r,o,l,u,i){\"use strict\";var c={},a=function(e){return\"undefined\"!=typeof HTMLDocument&&e instanceof HTMLDocument||e.nodeType&&e.nodeType===e.DOCUMENT_NODE},s=function(e){return\"undefined\"!=typeof HTMLElement&&e instanceof HTMLElement||e.nodeType&&e.nodeType===e.ELEMENT_NODE},d=function(e){return s(e)||a(e)?e:e[0]};c.duScrollTo=function(t,n,r,o){var l;if(angular.isElement(t)?l=this.duScrollToElement:angular.isDefined(r)&&(l=this.duScrollToAnimated),l)return l.apply(this,arguments);var u=d(this);return a(u)?e.scrollTo(t,n):(u.scrollLeft=t,void(u.scrollTop=n))};var f,p;c.duScrollToAnimated=function(e,l,u,c){u&&!c&&(c=o);var a=this.duScrollLeft(),s=this.duScrollTop(),d=Math.round(e-a),m=Math.round(l-s),S=null,g=0,h=this,v=function(e){(!e||g&&e.which>0)&&(i&&h.unbind(i,v),n(f),p.reject(),f=null)};if(f&&v(),p=t.defer(),0===u||!d&&!m)return 0===u&&h.duScrollTo(e,l),p.resolve(),p.promise;var y=function(e){null===S&&(S=e),g=e-S;var t=g>=u?1:c(g/u);h.scrollTo(a+Math.ceil(d*t),s+Math.ceil(m*t)),1>t?f=r(y):(i&&h.unbind(i,v),f=null,p.resolve())};return h.duScrollTo(a,s),i&&h.bind(i,v),f=r(y),p.promise},c.duScrollToElement=function(e,t,n,r){var o=d(this);(!angular.isNumber(t)||isNaN(t))&&(t=u);var l=this.duScrollTop()+d(e).getBoundingClientRect().top-t;return s(o)&&(l-=o.getBoundingClientRect().top),this.duScrollTo(0,l,n,r)},c.duScrollLeft=function(t,n,r){if(angular.isNumber(t))return this.duScrollTo(t,this.duScrollTop(),n,r);var o=d(this);return a(o)?e.scrollX||document.documentElement.scrollLeft||document.body.scrollLeft:o.scrollLeft},c.duScrollTop=function(t,n,r){if(angular.isNumber(t))return this.duScrollTo(this.duScrollLeft(),t,n,r);var o=d(this);return a(o)?e.scrollY||document.documentElement.scrollTop||document.body.scrollTop:o.scrollTop},c.duScrollToElementAnimated=function(e,t,n,r){return this.duScrollToElement(e,t,n||l,r)},c.duScrollTopAnimated=function(e,t,n){return this.duScrollTop(e,t||l,n)},c.duScrollLeftAnimated=function(e,t,n){return this.duScrollLeft(e,t||l,n)},angular.forEach(c,function(e,t){angular.element.prototype[t]=e;var n=t.replace(/^duScroll/,\"scroll\");angular.isUndefined(angular.element.prototype[n])&&(angular.element.prototype[n]=e)})}]),angular.module(\"duScroll.polyfill\",[]).factory(\"polyfill\",[\"$window\",function(e){\"use strict\";var t=[\"webkit\",\"moz\",\"o\",\"ms\"];return function(n,r){if(e[n])return e[n];for(var o,l=n.substr(0,1).toUpperCase()+n.substr(1),u=0;u<t.length;u++)if(o=t[u]+l,e[o])return e[o];return r}}]),angular.module(\"duScroll.requestAnimation\",[\"duScroll.polyfill\"]).factory(\"requestAnimation\",[\"polyfill\",\"$timeout\",function(e,t){\"use strict\";var n=0,r=function(e,r){var o=(new Date).getTime(),l=Math.max(0,16-(o-n)),u=t(function(){e(o+l)},l);return n=o+l,u};return e(\"requestAnimationFrame\",r)}]).factory(\"cancelAnimation\",[\"polyfill\",\"$timeout\",function(e,t){\"use strict\";var n=function(e){t.cancel(e)};return e(\"cancelAnimationFrame\",n)}]),angular.module(\"duScroll.spyAPI\",[\"duScroll.scrollContainerAPI\"]).factory(\"spyAPI\",[\"$rootScope\",\"$timeout\",\"$window\",\"$document\",\"scrollContainerAPI\",\"duScrollGreedy\",\"duScrollSpyWait\",\"duScrollBottomSpy\",function(e,t,n,r,o,l,u,i){\"use strict\";var c=function(o){var c=!1,a=!1,s=function(){a=!1;var t,u=o.container,c=u[0],s=0;\"undefined\"!=typeof HTMLElement&&c instanceof HTMLElement||c.nodeType&&c.nodeType===c.ELEMENT_NODE?(s=c.getBoundingClientRect().top,t=Math.round(c.scrollTop+c.clientHeight)>=c.scrollHeight):t=Math.round(n.pageYOffset+n.innerHeight)>=r[0].body.scrollHeight;var d,f,p,m,S,g,h=i&&t?\"bottom\":\"top\";for(m=o.spies,f=o.currentlyActive,p=void 0,d=0;d<m.length;d++)S=m[d],g=S.getTargetPosition(),g&&(i&&t||g.top+S.offset-s<20&&(l||-1*g.top+s)<g.height)&&(!p||p[h]<g[h])&&(p={spy:S},p[h]=g[h]);p&&(p=p.spy),f===p||l&&!p||(f&&(f.$element.removeClass(\"active\"),e.$broadcast(\"duScrollspy:becameInactive\",f.$element)),p&&(p.$element.addClass(\"active\"),e.$broadcast(\"duScrollspy:becameActive\",p.$element)),o.currentlyActive=p)};return u?function(){c?a=!0:(s(),c=t(function(){c=!1,a&&s()},u,!1))}:s},a={},s=function(e){var t=e.$id,n={spies:[]};return n.handler=c(n),a[t]=n,e.$on(\"$destroy\",function(){d(e)}),t},d=function(e){var t=e.$id,n=a[t],r=n.container;r&&r.off(\"scroll\",n.handler),delete a[t]},f=s(e),p=function(e){return a[e.$id]?a[e.$id]:e.$parent?p(e.$parent):a[f]},m=function(e){var t,n,r=e.$scope;if(r)return p(r);for(n in a)if(t=a[n],-1!==t.spies.indexOf(e))return t},S=function(e){for(;e.parentNode;)if(e=e.parentNode,e===document)return!0;return!1},g=function(e){var t=m(e);t&&(t.spies.push(e),t.container&&S(t.container)||(t.container&&t.container.off(\"scroll\",t.handler),t.container=o.getContainer(e.$scope),t.container.on(\"scroll\",t.handler).triggerHandler(\"scroll\")))},h=function(e){var t=m(e);e===t.currentlyActive&&(t.currentlyActive=null);var n=t.spies.indexOf(e);-1!==n&&t.spies.splice(n,1),e.$element=null};return{addSpy:g,removeSpy:h,createContext:s,destroyContext:d,getContextForScope:p}}]),angular.module(\"duScroll.scrollContainerAPI\",[]).factory(\"scrollContainerAPI\",[\"$document\",function(e){\"use strict\";var t={},n=function(e,n){var r=e.$id;return t[r]=n,r},r=function(e){return t[e.$id]?e.$id:e.$parent?r(e.$parent):void 0},o=function(n){var o=r(n);return o?t[o]:e},l=function(e){var n=r(e);n&&delete t[n]};return{getContainerId:r,getContainer:o,setContainer:n,removeContainer:l}}]),angular.module(\"duScroll.smoothScroll\",[\"duScroll.scrollHelpers\",\"duScroll.scrollContainerAPI\"]).directive(\"duSmoothScroll\",[\"duScrollDuration\",\"duScrollOffset\",\"scrollContainerAPI\",function(e,t,n){\"use strict\";return{link:function(r,o,l){o.on(\"click\",function(o){if(l.href&&-1!==l.href.indexOf(\"#\")||\"\"!==l.duSmoothScroll){var u=l.href?l.href.replace(/.*(?=#[^\\s]+$)/,\"\").substring(1):l.duSmoothScroll,i=document.getElementById(u)||document.getElementsByName(u)[0];if(i&&i.getBoundingClientRect){o.stopPropagation&&o.stopPropagation(),o.preventDefault&&o.preventDefault();var c=l.offset?parseInt(l.offset,10):t,a=l.duration?parseInt(l.duration,10):e,s=n.getContainer(r);s.duScrollToElement(angular.element(i),isNaN(c)?0:c,isNaN(a)?0:a)}}})}}}]),angular.module(\"duScroll.spyContext\",[\"duScroll.spyAPI\"]).directive(\"duSpyContext\",[\"spyAPI\",function(e){\"use strict\";return{restrict:\"A\",scope:!0,compile:function(t,n,r){return{pre:function(t,n,r,o){e.createContext(t)}}}}}]),angular.module(\"duScroll.scrollContainer\",[\"duScroll.scrollContainerAPI\"]).directive(\"duScrollContainer\",[\"scrollContainerAPI\",function(e){\"use strict\";return{restrict:\"A\",scope:!0,compile:function(t,n,r){return{pre:function(t,n,r,o){r.$observe(\"duScrollContainer\",function(r){angular.isString(r)&&(r=document.getElementById(r)),r=angular.isElement(r)?angular.element(r):n,e.setContainer(t,r),t.$on(\"$destroy\",function(){e.removeContainer(t)})})}}}}}]),angular.module(\"duScroll.scrollspy\",[\"duScroll.spyAPI\"]).directive(\"duScrollspy\",[\"spyAPI\",\"duScrollOffset\",\"$timeout\",\"$rootScope\",function(e,t,n,r){\"use strict\";var o=function(e,t,n,r){angular.isElement(e)?this.target=e:angular.isString(e)&&(this.targetId=e),this.$scope=t,this.$element=n,this.offset=r};return o.prototype.getTargetElement=function(){return!this.target&&this.targetId&&(this.target=document.getElementById(this.targetId)||document.getElementsByName(this.targetId)[0]),this.target},o.prototype.getTargetPosition=function(){var e=this.getTargetElement();return e?e.getBoundingClientRect():void 0},o.prototype.flushTargetCache=function(){this.targetId&&(this.target=void 0)},{link:function(l,u,i){var c,a=i.ngHref||i.href;a&&-1!==a.indexOf(\"#\")?c=a.replace(/.*(?=#[^\\s]+$)/,\"\").substring(1):i.duScrollspy?c=i.duScrollspy:i.duSmoothScroll&&(c=i.duSmoothScroll),c&&n(function(){var n=new o(c,l,u,-(i.offset?parseInt(i.offset,10):t));e.addSpy(n),l.$on(\"$locationChangeSuccess\",n.flushTargetCache.bind(n));var a=r.$on(\"$stateChangeSuccess\",n.flushTargetCache.bind(n));l.$on(\"$destroy\",function(){e.removeSpy(n),a()})},0,!1)}}}]);\n\t//# sourceMappingURL=angular-scroll.min.js.map\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function(factory) {\n\t\n\t  // Setup highlight.js for different environments. First is Node.js or\n\t  // CommonJS.\n\t  if(true) {\n\t    factory(exports);\n\t  } else {\n\t    // Export hljs globally even when using AMD for cases when this script\n\t    // is loaded with others that may still expect a global hljs.\n\t    window.hljs = factory({});\n\t\n\t    // Finally register the global hljs with AMD.\n\t    if(typeof define === 'function' && define.amd) {\n\t      define('hljs', [], function() {\n\t        return window.hljs;\n\t      });\n\t    }\n\t  }\n\t\n\t}(function(hljs) {\n\t\n\t  /* Utility functions */\n\t\n\t  function escape(value) {\n\t    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');\n\t  }\n\t\n\t  function tag(node) {\n\t    return node.nodeName.toLowerCase();\n\t  }\n\t\n\t  function testRe(re, lexeme) {\n\t    var match = re && re.exec(lexeme);\n\t    return match && match.index == 0;\n\t  }\n\t\n\t  function isNotHighlighted(language) {\n\t    return /no-?highlight|plain|text/.test(language);\n\t  }\n\t\n\t  function blockLanguage(block) {\n\t    var i, match, length,\n\t        classes = block.className + ' ';\n\t\n\t    classes += block.parentNode ? block.parentNode.className : '';\n\t\n\t    // language-* takes precedence over non-prefixed class names and\n\t    match = /\\blang(?:uage)?-([\\w-]+)\\b/.exec(classes);\n\t    if (match) {\n\t      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n\t    }\n\t\n\t    classes = classes.split(/\\s+/);\n\t    for(i = 0, length = classes.length; i < length; i++) {\n\t      if(getLanguage(classes[i]) || isNotHighlighted(classes[i])) {\n\t        return classes[i];\n\t      }\n\t    }\n\t\n\t  }\n\t\n\t  function inherit(parent, obj) {\n\t    var result = {}, key;\n\t    for (key in parent)\n\t      result[key] = parent[key];\n\t    if (obj)\n\t      for (key in obj)\n\t        result[key] = obj[key];\n\t    return result;\n\t  }\n\t\n\t  /* Stream merging */\n\t\n\t  function nodeStream(node) {\n\t    var result = [];\n\t    (function _nodeStream(node, offset) {\n\t      for (var child = node.firstChild; child; child = child.nextSibling) {\n\t        if (child.nodeType == 3)\n\t          offset += child.nodeValue.length;\n\t        else if (child.nodeType == 1) {\n\t          result.push({\n\t            event: 'start',\n\t            offset: offset,\n\t            node: child\n\t          });\n\t          offset = _nodeStream(child, offset);\n\t          // Prevent void elements from having an end tag that would actually\n\t          // double them in the output. There are more void elements in HTML\n\t          // but we list only those realistically expected in code display.\n\t          if (!tag(child).match(/br|hr|img|input/)) {\n\t            result.push({\n\t              event: 'stop',\n\t              offset: offset,\n\t              node: child\n\t            });\n\t          }\n\t        }\n\t      }\n\t      return offset;\n\t    })(node, 0);\n\t    return result;\n\t  }\n\t\n\t  function mergeStreams(original, highlighted, value) {\n\t    var processed = 0;\n\t    var result = '';\n\t    var nodeStack = [];\n\t\n\t    function selectStream() {\n\t      if (!original.length || !highlighted.length) {\n\t        return original.length ? original : highlighted;\n\t      }\n\t      if (original[0].offset != highlighted[0].offset) {\n\t        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n\t      }\n\t\n\t      /*\n\t      To avoid starting the stream just before it should stop the order is\n\t      ensured that original always starts first and closes last:\n\t\n\t      if (event1 == 'start' && event2 == 'start')\n\t        return original;\n\t      if (event1 == 'start' && event2 == 'stop')\n\t        return highlighted;\n\t      if (event1 == 'stop' && event2 == 'start')\n\t        return original;\n\t      if (event1 == 'stop' && event2 == 'stop')\n\t        return highlighted;\n\t\n\t      ... which is collapsed to:\n\t      */\n\t      return highlighted[0].event == 'start' ? original : highlighted;\n\t    }\n\t\n\t    function open(node) {\n\t      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';}\n\t      result += '<' + tag(node) + Array.prototype.map.call(node.attributes, attr_str).join('') + '>';\n\t    }\n\t\n\t    function close(node) {\n\t      result += '</' + tag(node) + '>';\n\t    }\n\t\n\t    function render(event) {\n\t      (event.event == 'start' ? open : close)(event.node);\n\t    }\n\t\n\t    while (original.length || highlighted.length) {\n\t      var stream = selectStream();\n\t      result += escape(value.substr(processed, stream[0].offset - processed));\n\t      processed = stream[0].offset;\n\t      if (stream == original) {\n\t        /*\n\t        On any opening or closing tag of the original markup we first close\n\t        the entire highlighted node stack, then render the original tag along\n\t        with all the following original tags at the same offset and then\n\t        reopen all the tags on the highlighted stack.\n\t        */\n\t        nodeStack.reverse().forEach(close);\n\t        do {\n\t          render(stream.splice(0, 1)[0]);\n\t          stream = selectStream();\n\t        } while (stream == original && stream.length && stream[0].offset == processed);\n\t        nodeStack.reverse().forEach(open);\n\t      } else {\n\t        if (stream[0].event == 'start') {\n\t          nodeStack.push(stream[0].node);\n\t        } else {\n\t          nodeStack.pop();\n\t        }\n\t        render(stream.splice(0, 1)[0]);\n\t      }\n\t    }\n\t    return result + escape(value.substr(processed));\n\t  }\n\t\n\t  /* Initialization */\n\t\n\t  function compileLanguage(language) {\n\t\n\t    function reStr(re) {\n\t        return (re && re.source) || re;\n\t    }\n\t\n\t    function langRe(value, global) {\n\t      return new RegExp(\n\t        reStr(value),\n\t        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n\t      );\n\t    }\n\t\n\t    function compileMode(mode, parent) {\n\t      if (mode.compiled)\n\t        return;\n\t      mode.compiled = true;\n\t\n\t      mode.keywords = mode.keywords || mode.beginKeywords;\n\t      if (mode.keywords) {\n\t        var compiled_keywords = {};\n\t\n\t        var flatten = function(className, str) {\n\t          if (language.case_insensitive) {\n\t            str = str.toLowerCase();\n\t          }\n\t          str.split(' ').forEach(function(kw) {\n\t            var pair = kw.split('|');\n\t            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n\t          });\n\t        };\n\t\n\t        if (typeof mode.keywords == 'string') { // string\n\t          flatten('keyword', mode.keywords);\n\t        } else {\n\t          Object.keys(mode.keywords).forEach(function (className) {\n\t            flatten(className, mode.keywords[className]);\n\t          });\n\t        }\n\t        mode.keywords = compiled_keywords;\n\t      }\n\t      mode.lexemesRe = langRe(mode.lexemes || /\\b\\w+\\b/, true);\n\t\n\t      if (parent) {\n\t        if (mode.beginKeywords) {\n\t          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n\t        }\n\t        if (!mode.begin)\n\t          mode.begin = /\\B|\\b/;\n\t        mode.beginRe = langRe(mode.begin);\n\t        if (!mode.end && !mode.endsWithParent)\n\t          mode.end = /\\B|\\b/;\n\t        if (mode.end)\n\t          mode.endRe = langRe(mode.end);\n\t        mode.terminator_end = reStr(mode.end) || '';\n\t        if (mode.endsWithParent && parent.terminator_end)\n\t          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n\t      }\n\t      if (mode.illegal)\n\t        mode.illegalRe = langRe(mode.illegal);\n\t      if (mode.relevance === undefined)\n\t        mode.relevance = 1;\n\t      if (!mode.contains) {\n\t        mode.contains = [];\n\t      }\n\t      var expanded_contains = [];\n\t      mode.contains.forEach(function(c) {\n\t        if (c.variants) {\n\t          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});\n\t        } else {\n\t          expanded_contains.push(c == 'self' ? mode : c);\n\t        }\n\t      });\n\t      mode.contains = expanded_contains;\n\t      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\t\n\t      if (mode.starts) {\n\t        compileMode(mode.starts, parent);\n\t      }\n\t\n\t      var terminators =\n\t        mode.contains.map(function(c) {\n\t          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n\t        })\n\t        .concat([mode.terminator_end, mode.illegal])\n\t        .map(reStr)\n\t        .filter(Boolean);\n\t      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n\t    }\n\t\n\t    compileMode(language);\n\t  }\n\t\n\t  /*\n\t  Core highlighting function. Accepts a language name, or an alias, and a\n\t  string with the code to highlight. Returns an object with the following\n\t  properties:\n\t\n\t  - relevance (int)\n\t  - value (an HTML string with highlighting markup)\n\t\n\t  */\n\t  function highlight(name, value, ignore_illegals, continuation) {\n\t\n\t    function subMode(lexeme, mode) {\n\t      for (var i = 0; i < mode.contains.length; i++) {\n\t        if (testRe(mode.contains[i].beginRe, lexeme)) {\n\t          return mode.contains[i];\n\t        }\n\t      }\n\t    }\n\t\n\t    function endOfMode(mode, lexeme) {\n\t      if (testRe(mode.endRe, lexeme)) {\n\t        while (mode.endsParent && mode.parent) {\n\t          mode = mode.parent;\n\t        }\n\t        return mode;\n\t      }\n\t      if (mode.endsWithParent) {\n\t        return endOfMode(mode.parent, lexeme);\n\t      }\n\t    }\n\t\n\t    function isIllegal(lexeme, mode) {\n\t      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n\t    }\n\t\n\t    function keywordMatch(mode, match) {\n\t      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n\t      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n\t    }\n\t\n\t    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n\t      var classPrefix = noPrefix ? '' : options.classPrefix,\n\t          openSpan    = '<span class=\"' + classPrefix,\n\t          closeSpan   = leaveOpen ? '' : '</span>';\n\t\n\t      openSpan += classname + '\">';\n\t\n\t      return openSpan + insideSpan + closeSpan;\n\t    }\n\t\n\t    function processKeywords() {\n\t      if (!top.keywords)\n\t        return escape(mode_buffer);\n\t      var result = '';\n\t      var last_index = 0;\n\t      top.lexemesRe.lastIndex = 0;\n\t      var match = top.lexemesRe.exec(mode_buffer);\n\t      while (match) {\n\t        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n\t        var keyword_match = keywordMatch(top, match);\n\t        if (keyword_match) {\n\t          relevance += keyword_match[1];\n\t          result += buildSpan(keyword_match[0], escape(match[0]));\n\t        } else {\n\t          result += escape(match[0]);\n\t        }\n\t        last_index = top.lexemesRe.lastIndex;\n\t        match = top.lexemesRe.exec(mode_buffer);\n\t      }\n\t      return result + escape(mode_buffer.substr(last_index));\n\t    }\n\t\n\t    function processSubLanguage() {\n\t      var explicit = typeof top.subLanguage == 'string';\n\t      if (explicit && !languages[top.subLanguage]) {\n\t        return escape(mode_buffer);\n\t      }\n\t\n\t      var result = explicit ?\n\t                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n\t                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\t\n\t      // Counting embedded language score towards the host language may be disabled\n\t      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n\t      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n\t      // score.\n\t      if (top.relevance > 0) {\n\t        relevance += result.relevance;\n\t      }\n\t      if (explicit) {\n\t        continuations[top.subLanguage] = result.top;\n\t      }\n\t      return buildSpan(result.language, result.value, false, true);\n\t    }\n\t\n\t    function processBuffer() {\n\t      return top.subLanguage !== undefined ? processSubLanguage() : processKeywords();\n\t    }\n\t\n\t    function startNewMode(mode, lexeme) {\n\t      var markup = mode.className? buildSpan(mode.className, '', true): '';\n\t      if (mode.returnBegin) {\n\t        result += markup;\n\t        mode_buffer = '';\n\t      } else if (mode.excludeBegin) {\n\t        result += escape(lexeme) + markup;\n\t        mode_buffer = '';\n\t      } else {\n\t        result += markup;\n\t        mode_buffer = lexeme;\n\t      }\n\t      top = Object.create(mode, {parent: {value: top}});\n\t    }\n\t\n\t    function processLexeme(buffer, lexeme) {\n\t\n\t      mode_buffer += buffer;\n\t      if (lexeme === undefined) {\n\t        result += processBuffer();\n\t        return 0;\n\t      }\n\t\n\t      var new_mode = subMode(lexeme, top);\n\t      if (new_mode) {\n\t        result += processBuffer();\n\t        startNewMode(new_mode, lexeme);\n\t        return new_mode.returnBegin ? 0 : lexeme.length;\n\t      }\n\t\n\t      var end_mode = endOfMode(top, lexeme);\n\t      if (end_mode) {\n\t        var origin = top;\n\t        if (!(origin.returnEnd || origin.excludeEnd)) {\n\t          mode_buffer += lexeme;\n\t        }\n\t        result += processBuffer();\n\t        do {\n\t          if (top.className) {\n\t            result += '</span>';\n\t          }\n\t          relevance += top.relevance;\n\t          top = top.parent;\n\t        } while (top != end_mode.parent);\n\t        if (origin.excludeEnd) {\n\t          result += escape(lexeme);\n\t        }\n\t        mode_buffer = '';\n\t        if (end_mode.starts) {\n\t          startNewMode(end_mode.starts, '');\n\t        }\n\t        return origin.returnEnd ? 0 : lexeme.length;\n\t      }\n\t\n\t      if (isIllegal(lexeme, top))\n\t        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\t\n\t      /*\n\t      Parser should not reach this point as all types of lexemes should be caught\n\t      earlier, but if it does due to some bug make sure it advances at least one\n\t      character forward to prevent infinite looping.\n\t      */\n\t      mode_buffer += lexeme;\n\t      return lexeme.length || 1;\n\t    }\n\t\n\t    var language = getLanguage(name);\n\t    if (!language) {\n\t      throw new Error('Unknown language: \"' + name + '\"');\n\t    }\n\t\n\t    compileLanguage(language);\n\t    var top = continuation || language;\n\t    var continuations = {}; // keep continuations for sub-languages\n\t    var result = '', current;\n\t    for(current = top; current != language; current = current.parent) {\n\t      if (current.className) {\n\t        result = buildSpan(current.className, '', true) + result;\n\t      }\n\t    }\n\t    var mode_buffer = '';\n\t    var relevance = 0;\n\t    try {\n\t      var match, count, index = 0;\n\t      while (true) {\n\t        top.terminators.lastIndex = index;\n\t        match = top.terminators.exec(value);\n\t        if (!match)\n\t          break;\n\t        count = processLexeme(value.substr(index, match.index - index), match[0]);\n\t        index = match.index + count;\n\t      }\n\t      processLexeme(value.substr(index));\n\t      for(current = top; current.parent; current = current.parent) { // close dangling modes\n\t        if (current.className) {\n\t          result += '</span>';\n\t        }\n\t      }\n\t      return {\n\t        relevance: relevance,\n\t        value: result,\n\t        language: name,\n\t        top: top\n\t      };\n\t    } catch (e) {\n\t      if (e.message.indexOf('Illegal') != -1) {\n\t        return {\n\t          relevance: 0,\n\t          value: escape(value)\n\t        };\n\t      } else {\n\t        throw e;\n\t      }\n\t    }\n\t  }\n\t\n\t  /*\n\t  Highlighting with language detection. Accepts a string with the code to\n\t  highlight. Returns an object with the following properties:\n\t\n\t  - language (detected language)\n\t  - relevance (int)\n\t  - value (an HTML string with highlighting markup)\n\t  - second_best (object with the same structure for second-best heuristically\n\t    detected language, may be absent)\n\t\n\t  */\n\t  function highlightAuto(text, languageSubset) {\n\t    languageSubset = languageSubset || options.languages || Object.keys(languages);\n\t    var result = {\n\t      relevance: 0,\n\t      value: escape(text)\n\t    };\n\t    var second_best = result;\n\t    languageSubset.forEach(function(name) {\n\t      if (!getLanguage(name)) {\n\t        return;\n\t      }\n\t      var current = highlight(name, text, false);\n\t      current.language = name;\n\t      if (current.relevance > second_best.relevance) {\n\t        second_best = current;\n\t      }\n\t      if (current.relevance > result.relevance) {\n\t        second_best = result;\n\t        result = current;\n\t      }\n\t    });\n\t    if (second_best.language) {\n\t      result.second_best = second_best;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /*\n\t  Post-processing of the highlighted markup:\n\t\n\t  - replace TABs with something more useful\n\t  - replace real line-breaks with '<br>' for non-pre containers\n\t\n\t  */\n\t  function fixMarkup(value) {\n\t    if (options.tabReplace) {\n\t      value = value.replace(/^((<[^>]+>|\\t)+)/gm, function(match, p1 /*..., offset, s*/) {\n\t        return p1.replace(/\\t/g, options.tabReplace);\n\t      });\n\t    }\n\t    if (options.useBR) {\n\t      value = value.replace(/\\n/g, '<br>');\n\t    }\n\t    return value;\n\t  }\n\t\n\t  function buildClassName(prevClassName, currentLang, resultLang) {\n\t    var language = currentLang ? aliases[currentLang] : resultLang,\n\t        result   = [prevClassName.trim()];\n\t\n\t    if (!prevClassName.match(/\\bhljs\\b/)) {\n\t      result.push('hljs');\n\t    }\n\t\n\t    if (prevClassName.indexOf(language) === -1) {\n\t      result.push(language);\n\t    }\n\t\n\t    return result.join(' ').trim();\n\t  }\n\t\n\t  /*\n\t  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n\t  two optional parameters for fixMarkup.\n\t  */\n\t  function highlightBlock(block) {\n\t    var language = blockLanguage(block);\n\t    if (isNotHighlighted(language))\n\t        return;\n\t\n\t    var node;\n\t    if (options.useBR) {\n\t      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n\t    } else {\n\t      node = block;\n\t    }\n\t    var text = node.textContent;\n\t    var result = language ? highlight(language, text, true) : highlightAuto(text);\n\t\n\t    var originalStream = nodeStream(node);\n\t    if (originalStream.length) {\n\t      var resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t      resultNode.innerHTML = result.value;\n\t      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n\t    }\n\t    result.value = fixMarkup(result.value);\n\t\n\t    block.innerHTML = result.value;\n\t    block.className = buildClassName(block.className, language, result.language);\n\t    block.result = {\n\t      language: result.language,\n\t      re: result.relevance\n\t    };\n\t    if (result.second_best) {\n\t      block.second_best = {\n\t        language: result.second_best.language,\n\t        re: result.second_best.relevance\n\t      };\n\t    }\n\t  }\n\t\n\t  var options = {\n\t    classPrefix: 'hljs-',\n\t    tabReplace: null,\n\t    useBR: false,\n\t    languages: undefined\n\t  };\n\t\n\t  /*\n\t  Updates highlight.js global options with values passed in the form of an object\n\t  */\n\t  function configure(user_options) {\n\t    options = inherit(options, user_options);\n\t  }\n\t\n\t  /*\n\t  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n\t  */\n\t  function initHighlighting() {\n\t    if (initHighlighting.called)\n\t      return;\n\t    initHighlighting.called = true;\n\t\n\t    var blocks = document.querySelectorAll('pre code');\n\t    Array.prototype.forEach.call(blocks, highlightBlock);\n\t  }\n\t\n\t  /*\n\t  Attaches highlighting to the page load event.\n\t  */\n\t  function initHighlightingOnLoad() {\n\t    addEventListener('DOMContentLoaded', initHighlighting, false);\n\t    addEventListener('load', initHighlighting, false);\n\t  }\n\t\n\t  var languages = {};\n\t  var aliases = {};\n\t\n\t  function registerLanguage(name, language) {\n\t    var lang = languages[name] = language(hljs);\n\t    if (lang.aliases) {\n\t      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n\t    }\n\t  }\n\t\n\t  function listLanguages() {\n\t    return Object.keys(languages);\n\t  }\n\t\n\t  function getLanguage(name) {\n\t    return languages[name] || languages[aliases[name]];\n\t  }\n\t\n\t  /* Interface definition */\n\t\n\t  hljs.highlight = highlight;\n\t  hljs.highlightAuto = highlightAuto;\n\t  hljs.fixMarkup = fixMarkup;\n\t  hljs.highlightBlock = highlightBlock;\n\t  hljs.configure = configure;\n\t  hljs.initHighlighting = initHighlighting;\n\t  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n\t  hljs.registerLanguage = registerLanguage;\n\t  hljs.listLanguages = listLanguages;\n\t  hljs.getLanguage = getLanguage;\n\t  hljs.inherit = inherit;\n\t\n\t  // Common regexps\n\t  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n\t  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n\t  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n\t  hljs.C_NUMBER_RE = '(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n\t  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n\t  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\t\n\t  // Common modes\n\t  hljs.BACKSLASH_ESCAPE = {\n\t    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n\t  };\n\t  hljs.APOS_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\\'', end: '\\'',\n\t    illegal: '\\\\n',\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t  hljs.QUOTE_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\"', end: '\"',\n\t    illegal: '\\\\n',\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t  hljs.PHRASAL_WORDS_MODE = {\n\t    begin: /\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\\b/\n\t  };\n\t  hljs.COMMENT = function (begin, end, inherits) {\n\t    var mode = hljs.inherit(\n\t      {\n\t        className: 'comment',\n\t        begin: begin, end: end,\n\t        contains: []\n\t      },\n\t      inherits || {}\n\t    );\n\t    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n\t    mode.contains.push({\n\t      className: 'doctag',\n\t      begin: \"(?:TODO|FIXME|NOTE|BUG|XXX):\",\n\t      relevance: 0\n\t    });\n\t    return mode;\n\t  };\n\t  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n\t  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n\t  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n\t  hljs.NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.C_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.C_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.BINARY_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.BINARY_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.CSS_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.NUMBER_RE + '(' +\n\t      '%|em|ex|ch|rem'  +\n\t      '|vw|vh|vmin|vmax' +\n\t      '|cm|mm|in|pt|pc|px' +\n\t      '|deg|grad|rad|turn' +\n\t      '|s|ms' +\n\t      '|Hz|kHz' +\n\t      '|dpi|dpcm|dppx' +\n\t      ')?',\n\t    relevance: 0\n\t  };\n\t  hljs.REGEXP_MODE = {\n\t    className: 'regexp',\n\t    begin: /\\//, end: /\\/[gimuy]*/,\n\t    illegal: /\\n/,\n\t    contains: [\n\t      hljs.BACKSLASH_ESCAPE,\n\t      {\n\t        begin: /\\[/, end: /\\]/,\n\t        relevance: 0,\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      }\n\t    ]\n\t  };\n\t  hljs.TITLE_MODE = {\n\t    className: 'title',\n\t    begin: hljs.IDENT_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.UNDERSCORE_TITLE_MODE = {\n\t    className: 'title',\n\t    begin: hljs.UNDERSCORE_IDENT_RE,\n\t    relevance: 0\n\t  };\n\t\n\thljs.registerLanguage('1c', function(hljs){\n\t  var IDENT_RE_RU = '[a-zA-Zа-яА-Я][a-zA-Z0-9_а-яА-Я]*';\n\t  var OneS_KEYWORDS = 'возврат дата для если и или иначе иначеесли исключение конецесли ' +\n\t    'конецпопытки конецпроцедуры конецфункции конеццикла константа не перейти перем ' +\n\t    'перечисление по пока попытка прервать продолжить процедура строка тогда фс функция цикл ' +\n\t    'число экспорт';\n\t  var OneS_BUILT_IN = 'ansitooem oemtoansi ввестивидсубконто ввестидату ввестизначение ' +\n\t    'ввестиперечисление ввестипериод ввестиплансчетов ввестистроку ввестичисло вопрос ' +\n\t    'восстановитьзначение врег выбранныйплансчетов вызватьисключение датагод датамесяц ' +\n\t    'датачисло добавитьмесяц завершитьработусистемы заголовоксистемы записьжурналарегистрации ' +\n\t    'запуститьприложение зафиксироватьтранзакцию значениевстроку значениевстрокувнутр ' +\n\t    'значениевфайл значениеизстроки значениеизстрокивнутр значениеизфайла имякомпьютера ' +\n\t    'имяпользователя каталогвременныхфайлов каталогиб каталогпользователя каталогпрограммы ' +\n\t    'кодсимв командасистемы конгода конецпериодаби конецрассчитанногопериодаби ' +\n\t    'конецстандартногоинтервала конквартала конмесяца коннедели лев лог лог10 макс ' +\n\t    'максимальноеколичествосубконто мин монопольныйрежим названиеинтерфейса названиенабораправ ' +\n\t    'назначитьвид назначитьсчет найти найтипомеченныенаудаление найтиссылки началопериодаби ' +\n\t    'началостандартногоинтервала начатьтранзакцию начгода начквартала начмесяца начнедели ' +\n\t    'номерднягода номерднянедели номернеделигода нрег обработкаожидания окр описаниеошибки ' +\n\t    'основнойжурналрасчетов основнойплансчетов основнойязык открытьформу открытьформумодально ' +\n\t    'отменитьтранзакцию очиститьокносообщений периодстр полноеимяпользователя получитьвремята ' +\n\t    'получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта ' +\n\t    'получитьпустоезначение получитьта прав праводоступа предупреждение префиксавтонумерации ' +\n\t    'пустаястрока пустоезначение рабочаядаттьпустоезначение рабочаядата разделительстраниц ' +\n\t    'разделительстрок разм разобратьпозициюдокумента рассчитатьрегистрына ' +\n\t    'рассчитатьрегистрыпо сигнал симв символтабуляции создатьобъект сокрл сокрлп сокрп ' +\n\t    'сообщить состояние сохранитьзначение сред статусвозврата стрдлина стрзаменить ' +\n\t    'стрколичествострок стрполучитьстроку  стрчисловхождений сформироватьпозициюдокумента ' +\n\t    'счетпокоду текущаядата текущеевремя типзначения типзначениястр удалитьобъекты ' +\n\t    'установитьтана установитьтапо фиксшаблон формат цел шаблон';\n\t  var DQUOTE =  {className: 'dquote',  begin: '\"\"'};\n\t  var STR_START = {\n\t      className: 'string',\n\t      begin: '\"', end: '\"|$',\n\t      contains: [DQUOTE]\n\t    };\n\t  var STR_CONT = {\n\t    className: 'string',\n\t    begin: '\\\\|', end: '\"|$',\n\t    contains: [DQUOTE]\n\t  };\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    lexemes: IDENT_RE_RU,\n\t    keywords: {keyword: OneS_KEYWORDS, built_in: OneS_BUILT_IN},\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.NUMBER_MODE,\n\t      STR_START, STR_CONT,\n\t      {\n\t        className: 'function',\n\t        begin: '(процедура|функция)', end: '$',\n\t        lexemes: IDENT_RE_RU,\n\t        keywords: 'процедура функция',\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE_RU}),\n\t          {\n\t            className: 'tail',\n\t            endsWithParent: true,\n\t            contains: [\n\t              {\n\t                className: 'params',\n\t                begin: '\\\\(', end: '\\\\)',\n\t                lexemes: IDENT_RE_RU,\n\t                keywords: 'знач',\n\t                contains: [STR_START, STR_CONT]\n\t              },\n\t              {\n\t                className: 'export',\n\t                begin: 'экспорт', endsWithParent: true,\n\t                lexemes: IDENT_RE_RU,\n\t                keywords: 'экспорт',\n\t                contains: [hljs.C_LINE_COMMENT_MODE]\n\t              }\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE\n\t        ]\n\t      },\n\t      {className: 'preprocessor', begin: '#', end: '$'},\n\t      {className: 'date', begin: '\\'\\\\d{2}\\\\.\\\\d{2}\\\\.(\\\\d{2}|\\\\d{4})\\''}\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('actionscript', function(hljs) {\n\t  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n\t  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\t\n\t  var AS3_REST_ARG_MODE = {\n\t    className: 'rest_arg',\n\t    begin: '[.]{3}', end: IDENT_RE,\n\t    relevance: 10\n\t  };\n\t\n\t  return {\n\t    aliases: ['as'],\n\t    keywords: {\n\t      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n\t        'else extends final finally for function get if implements import in include ' +\n\t        'instanceof interface internal is namespace native new override package private ' +\n\t        'protected public return set static super switch this throw try typeof use var void ' +\n\t        'while with',\n\t      literal: 'true false null undefined'\n\t    },\n\t    contains: [\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'package',\n\t        beginKeywords: 'package', end: '{',\n\t        contains: [hljs.TITLE_MODE]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends implements'\n\t          },\n\t          hljs.TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        beginKeywords: 'import include', end: ';'\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n\t        illegal: '\\\\S',\n\t        contains: [\n\t          hljs.TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)',\n\t            contains: [\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.QUOTE_STRING_MODE,\n\t              hljs.C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              AS3_REST_ARG_MODE\n\t            ]\n\t          },\n\t          {\n\t            className: 'type',\n\t            begin: ':',\n\t            end: IDENT_FUNC_RETURN_TYPE_RE,\n\t            relevance: 10\n\t          }\n\t        ]\n\t      }\n\t    ],\n\t    illegal: /#/\n\t  };\n\t});\n\t\n\thljs.registerLanguage('apache', function(hljs) {\n\t  var NUMBER = {className: 'number', begin: '[\\\\$%]\\\\d+'};\n\t  return {\n\t    aliases: ['apacheconf'],\n\t    case_insensitive: true,\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {className: 'tag', begin: '</?', end: '>'},\n\t      {\n\t        className: 'keyword',\n\t        begin: /\\w+/,\n\t        relevance: 0,\n\t        // keywords aren’t needed for highlighting per se, they only boost relevance\n\t        // for a very generally defined mode (starts with a word, ends with line-end\n\t        keywords: {\n\t          common:\n\t            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n\t            'sethandler errordocument loadmodule options header listen serverroot ' +\n\t            'servername'\n\t        },\n\t        starts: {\n\t          end: /$/,\n\t          relevance: 0,\n\t          keywords: {\n\t            literal: 'on off all'\n\t          },\n\t          contains: [\n\t            {\n\t              className: 'sqbracket',\n\t              begin: '\\\\s\\\\[', end: '\\\\]$'\n\t            },\n\t            {\n\t              className: 'cbracket',\n\t              begin: '[\\\\$%]\\\\{', end: '\\\\}',\n\t              contains: ['self', NUMBER]\n\t            },\n\t            NUMBER,\n\t            hljs.QUOTE_STRING_MODE\n\t          ]\n\t        }\n\t      }\n\t    ],\n\t    illegal: /\\S/\n\t  };\n\t});\n\t\n\thljs.registerLanguage('applescript', function(hljs) {\n\t  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: ''});\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)',\n\t    contains: ['self', hljs.C_NUMBER_MODE, STRING]\n\t  };\n\t  var COMMENT_MODE_1 = hljs.COMMENT('--', '$');\n\t  var COMMENT_MODE_2 = hljs.COMMENT(\n\t    '\\\\(\\\\*',\n\t    '\\\\*\\\\)',\n\t    {\n\t      contains: ['self', COMMENT_MODE_1] //allow nesting\n\t    }\n\t  );\n\t  var COMMENTS = [\n\t    COMMENT_MODE_1,\n\t    COMMENT_MODE_2,\n\t    hljs.HASH_COMMENT_MODE\n\t  ];\n\t\n\t  return {\n\t    aliases: ['osascript'],\n\t    keywords: {\n\t      keyword:\n\t        'about above after against and around as at back before beginning ' +\n\t        'behind below beneath beside between but by considering ' +\n\t        'contain contains continue copy div does eighth else end equal ' +\n\t        'equals error every exit fifth first for fourth from front ' +\n\t        'get given global if ignoring in into is it its last local me ' +\n\t        'middle mod my ninth not of on onto or over prop property put ref ' +\n\t        'reference repeat returning script second set seventh since ' +\n\t        'sixth some tell tenth that the|0 then third through thru ' +\n\t        'timeout times to transaction try until where while whose with ' +\n\t        'without',\n\t      constant:\n\t        'AppleScript false linefeed return pi quote result space tab true',\n\t      type:\n\t        'alias application boolean class constant date file integer list ' +\n\t        'number real record string text',\n\t      command:\n\t        'activate beep count delay launch log offset read round ' +\n\t        'run say summarize write',\n\t      property:\n\t        'character characters contents day frontmost id item length ' +\n\t        'month name paragraph paragraphs rest reverse running time version ' +\n\t        'weekday word words year'\n\t    },\n\t    contains: [\n\t      STRING,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'type',\n\t        begin: '\\\\bPOSIX file\\\\b'\n\t      },\n\t      {\n\t        className: 'command',\n\t        begin:\n\t          '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +\n\t          'mount volume|path to|(close|open for) access|(get|set) eof|' +\n\t          'current date|do shell script|get volume settings|random number|' +\n\t          'set volume|system attribute|system info|time to GMT|' +\n\t          '(load|run|store) script|scripting components|' +\n\t          'ASCII (character|number)|localized string|' +\n\t          'choose (application|color|file|file name|' +\n\t          'folder|from list|remote application|URL)|' +\n\t          'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n\t      },\n\t      {\n\t        className: 'constant',\n\t        begin:\n\t          '\\\\b(text item delimiters|current application|missing value)\\\\b'\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin:\n\t          '\\\\b(apart from|aside from|instead of|out of|greater than|' +\n\t          \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" +\n\t          '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +\n\t          'contained by|comes (before|after)|a (ref|reference))\\\\b'\n\t      },\n\t      {\n\t        className: 'property',\n\t        begin:\n\t          '\\\\b(POSIX path|(date|time) string|quoted form)\\\\b'\n\t      },\n\t      {\n\t        className: 'function_start',\n\t        beginKeywords: 'on',\n\t        illegal: '[${=;\\\\n]',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n\t      }\n\t    ].concat(COMMENTS),\n\t    illegal: '//|->|=>|\\\\[\\\\['\n\t  };\n\t});\n\t\n\thljs.registerLanguage('armasm', function(hljs) {\n\t    //local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n\t  return {\n\t    case_insensitive: true,\n\t    aliases: ['arm'],\n\t    lexemes: '\\\\.?' + hljs.IDENT_RE,\n\t    keywords: {\n\t      literal:\n\t        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 '+ //standard registers\n\t        'pc lr sp ip sl sb fp '+ //typical regs plus backward compatibility\n\t        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 '+ //more regs and fp\n\t        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 '+ //coprocessor regs\n\t        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 '+ //more coproc\n\t        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 '+ //advanced SIMD NEON regs\n\t\n\t        //program status registers\n\t        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf '+\n\t        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf '+\n\t\n\t        //NEON and VFP registers\n\t        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 '+\n\t        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 '+\n\t        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 '+\n\t        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ',\n\t    preprocessor:\n\t        //GNU preprocs\n\t        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg '+\n\t        //ARM directives\n\t        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\n\t    built_in:\n\t        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @ '\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\b('+     //mnemonics\n\t            'adc|'+\n\t            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|'+\n\t            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|'+\n\t            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|'+\n\t            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|'+\n\t            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|'+\n\t            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|'+\n\t            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|'+\n\t            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|'+\n\t            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|'+\n\t            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|'+\n\t            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|'+\n\t            'wfe|wfi|yield'+\n\t        ')'+\n\t        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?'+ //condition codes\n\t        '[sptrx]?' ,                                             //legal postfixes\n\t        end: '\\\\s'\n\t      },\n\t      hljs.COMMENT('[;@]', '$', {relevance: 0}),\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\\'',\n\t        end: '[^\\\\\\\\]\\'',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'title',\n\t        begin: '\\\\|', end: '\\\\|',\n\t        illegal: '\\\\n',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t            {begin: '[#$=]?0x[0-9a-f]+'}, //hex\n\t            {begin: '[#$=]?0b[01]+'},     //bin\n\t            {begin: '[#$=]\\\\d+'},        //literal\n\t            {begin: '\\\\b\\\\d+'}           //bare number\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'label',\n\t        variants: [\n\t            {begin: '^[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+'}, //ARM syntax\n\t            {begin: '^\\\\s*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'}, //GNU ARM syntax\n\t            {begin: '[=#]\\\\w+' }  //label reference\n\t        ],\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('xml', function(hljs) {\n\t  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n\t  var PHP = {\n\t    begin: /<\\?(php)?(?!\\w)/, end: /\\?>/,\n\t    subLanguage: 'php'\n\t  };\n\t  var TAG_INTERNALS = {\n\t    endsWithParent: true,\n\t    illegal: /</,\n\t    relevance: 0,\n\t    contains: [\n\t      PHP,\n\t      {\n\t        className: 'attribute',\n\t        begin: XML_IDENT_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: '=',\n\t        relevance: 0,\n\t        contains: [\n\t          {\n\t            className: 'value',\n\t            contains: [PHP],\n\t            variants: [\n\t              {begin: /\"/, end: /\"/},\n\t              {begin: /'/, end: /'/},\n\t              {begin: /[^\\s\\/>]+/}\n\t            ]\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t  return {\n\t    aliases: ['html', 'xhtml', 'rss', 'atom', 'xsl', 'plist'],\n\t    case_insensitive: true,\n\t    contains: [\n\t      {\n\t        className: 'doctype',\n\t        begin: '<!DOCTYPE', end: '>',\n\t        relevance: 10,\n\t        contains: [{begin: '\\\\[', end: '\\\\]'}]\n\t      },\n\t      hljs.COMMENT(\n\t        '<!--',\n\t        '-->',\n\t        {\n\t          relevance: 10\n\t        }\n\t      ),\n\t      {\n\t        className: 'cdata',\n\t        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'tag',\n\t        /*\n\t        The lookahead pattern (?=...) ensures that 'begin' only matches\n\t        '<style' as a single word, followed by a whitespace or an\n\t        ending braket. The '$' is needed for the lexeme to be recognized\n\t        by hljs.subMode() that tests lexemes outside the stream.\n\t        */\n\t        begin: '<style(?=\\\\s|>|$)', end: '>',\n\t        keywords: {title: 'style'},\n\t        contains: [TAG_INTERNALS],\n\t        starts: {\n\t          end: '</style>', returnEnd: true,\n\t          subLanguage: 'css'\n\t        }\n\t      },\n\t      {\n\t        className: 'tag',\n\t        // See the comment in the <style tag about the lookahead pattern\n\t        begin: '<script(?=\\\\s|>|$)', end: '>',\n\t        keywords: {title: 'script'},\n\t        contains: [TAG_INTERNALS],\n\t        starts: {\n\t          end: '\\<\\/script\\>', returnEnd: true,\n\t          subLanguage: ['actionscript', 'javascript', 'handlebars']\n\t        }\n\t      },\n\t      PHP,\n\t      {\n\t        className: 'pi',\n\t        begin: /<\\?\\w+/, end: /\\?>/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'tag',\n\t        begin: '</?', end: '/?>',\n\t        contains: [\n\t          {\n\t            className: 'title', begin: /[^ \\/><\\n\\t]+/, relevance: 0\n\t          },\n\t          TAG_INTERNALS\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('asciidoc', function(hljs) {\n\t  return {\n\t    aliases: ['adoc'],\n\t    contains: [\n\t      // block comment\n\t      hljs.COMMENT(\n\t        '^/{4,}\\\\n',\n\t        '\\\\n/{4,}$',\n\t        // can also be done as...\n\t        //'^/{4,}$',\n\t        //'^/{4,}$',\n\t        {\n\t          relevance: 10\n\t        }\n\t      ),\n\t      // line comment\n\t      hljs.COMMENT(\n\t        '^//',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      // title\n\t      {\n\t        className: 'title',\n\t        begin: '^\\\\.\\\\w.*$'\n\t      },\n\t      // example, admonition & sidebar blocks\n\t      {\n\t        begin: '^[=\\\\*]{4,}\\\\n',\n\t        end: '\\\\n^[=\\\\*]{4,}$',\n\t        relevance: 10\n\t      },\n\t      // headings\n\t      {\n\t        className: 'header',\n\t        begin: '^(={1,5}) .+?( \\\\1)?$',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'header',\n\t        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$',\n\t        relevance: 10\n\t      },\n\t      // document attributes\n\t      {\n\t        className: 'attribute',\n\t        begin: '^:.+?:',\n\t        end: '\\\\s',\n\t        excludeEnd: true,\n\t        relevance: 10\n\t      },\n\t      // block attributes\n\t      {\n\t        className: 'attribute',\n\t        begin: '^\\\\[.+?\\\\]$',\n\t        relevance: 0\n\t      },\n\t      // quoteblocks\n\t      {\n\t        className: 'blockquote',\n\t        begin: '^_{4,}\\\\n',\n\t        end: '\\\\n_{4,}$',\n\t        relevance: 10\n\t      },\n\t      // listing and literal blocks\n\t      {\n\t        className: 'code',\n\t        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n\t        end: '\\\\n[\\\\-\\\\.]{4,}$',\n\t        relevance: 10\n\t      },\n\t      // passthrough blocks\n\t      {\n\t        begin: '^\\\\+{4,}\\\\n',\n\t        end: '\\\\n\\\\+{4,}$',\n\t        contains: [\n\t          {\n\t            begin: '<', end: '>',\n\t            subLanguage: 'xml',\n\t            relevance: 0\n\t          }\n\t        ],\n\t        relevance: 10\n\t      },\n\t      // lists (can only capture indicators)\n\t      {\n\t        className: 'bullet',\n\t        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n\t      },\n\t      // admonition\n\t      {\n\t        className: 'label',\n\t        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n\t        relevance: 10\n\t      },\n\t      // inline strong\n\t      {\n\t        className: 'strong',\n\t        // must not follow a word character or be followed by an asterisk or space\n\t        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n\t        end: '(\\\\n{2}|\\\\*)',\n\t        // allow escaped asterisk followed by word char\n\t        contains: [\n\t          {\n\t            begin: '\\\\\\\\*\\\\w',\n\t            relevance: 0\n\t          }\n\t        ]\n\t      },\n\t      // inline emphasis\n\t      {\n\t        className: 'emphasis',\n\t        // must not follow a word character or be followed by a single quote or space\n\t        begin: '\\\\B\\'(?![\\'\\\\s])',\n\t        end: '(\\\\n{2}|\\')',\n\t        // allow escaped single quote followed by word char\n\t        contains: [\n\t          {\n\t            begin: '\\\\\\\\\\'\\\\w',\n\t            relevance: 0\n\t          }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      // inline emphasis (alt)\n\t      {\n\t        className: 'emphasis',\n\t        // must not follow a word character or be followed by an underline or space\n\t        begin: '_(?![_\\\\s])',\n\t        end: '(\\\\n{2}|_)',\n\t        relevance: 0\n\t      },\n\t      // inline smart quotes\n\t      {\n\t        className: 'smartquote',\n\t        variants: [\n\t          {begin: \"``.+?''\"},\n\t          {begin: \"`.+?'\"}\n\t        ]\n\t      },\n\t      // inline code snippets (TODO should get same treatment as strong and emphasis)\n\t      {\n\t        className: 'code',\n\t        begin: '(`.+?`|\\\\+.+?\\\\+)',\n\t        relevance: 0\n\t      },\n\t      // indented literal block\n\t      {\n\t        className: 'code',\n\t        begin: '^[ \\\\t]',\n\t        end: '$',\n\t        relevance: 0\n\t      },\n\t      // horizontal rules\n\t      {\n\t        className: 'horizontal_rule',\n\t        begin: '^\\'{3,}[ \\\\t]*$',\n\t        relevance: 10\n\t      },\n\t      // images and links\n\t      {\n\t        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n\t        returnBegin: true,\n\t        contains: [\n\t          {\n\t            //className: 'macro',\n\t            begin: '(link|image:?):',\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'link_url',\n\t            begin: '\\\\w',\n\t            end: '[^\\\\[]+',\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'link_label',\n\t            begin: '\\\\[',\n\t            end: '\\\\]',\n\t            excludeBegin: true,\n\t            excludeEnd: true,\n\t            relevance: 0\n\t          }\n\t        ],\n\t        relevance: 10\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('aspectj', function (hljs) {\n\t  var KEYWORDS =\n\t    'false synchronized int abstract float private char boolean static null if const ' +\n\t    'for true while long throw strictfp finally protected import native final return void ' +\n\t    'enum else extends implements break transient new catch instanceof byte super volatile case ' +\n\t    'assert short package default double public try this switch continue throws privileged ' +\n\t    'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +\n\t    'staticinitialization withincode target within execution getWithinTypeName handler ' +\n\t    'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents '+\n\t    'warning error soft precedence thisAspectInstance';\n\t  var SHORTKEYS = 'get set args call';\n\t  return {\n\t    keywords : KEYWORDS,\n\t    illegal : /<\\/|#/,\n\t    contains : [\n\t      hljs.COMMENT(\n\t        '/\\\\*\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          relevance : 0,\n\t          contains : [{\n\t            className : 'doctag',\n\t            begin : '@[A-Za-z]+'\n\t          }]\n\t        }\n\t      ),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className : 'aspect',\n\t        beginKeywords : 'aspect',\n\t        end : /[{;=]/,\n\t        excludeEnd : true,\n\t        illegal : /[:;\"\\[\\]]/,\n\t        contains : [\n\t          {\n\t            beginKeywords : 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\n\t          },\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t            begin : /\\([^\\)]*/,\n\t            end : /[)]+/,\n\t            keywords : KEYWORDS + ' ' + SHORTKEYS,\n\t            excludeEnd : false\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className : 'class',\n\t        beginKeywords : 'class interface',\n\t        end : /[{;=]/,\n\t        excludeEnd : true,\n\t        relevance: 0,\n\t        keywords : 'class interface',\n\t        illegal : /[:\"\\[\\]]/,\n\t        contains : [\n\t          {beginKeywords : 'extends implements'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        // AspectJ Constructs\n\t        beginKeywords : 'pointcut after before around throwing returning',\n\t        end : /[)]/,\n\t        excludeEnd : false,\n\t        illegal : /[\"\\[\\]]/,\n\t        contains : [\n\t          {\n\t            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n\t            returnBegin : true,\n\t            contains : [hljs.UNDERSCORE_TITLE_MODE]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        begin : /[:]/,\n\t        returnBegin : true,\n\t        end : /[{;]/,\n\t        relevance: 0,\n\t        excludeEnd : false,\n\t        keywords : KEYWORDS,\n\t        illegal : /[\"\\[\\]]/,\n\t        contains : [\n\t          {\n\t            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n\t            keywords : KEYWORDS + ' ' + SHORTKEYS\n\t          },\n\t          hljs.QUOTE_STRING_MODE\n\t        ]\n\t      },\n\t      {\n\t        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\n\t        beginKeywords : 'new throw',\n\t        relevance : 0\n\t      },\n\t      {\n\t        // the function class is a bit different for AspectJ compared to the Java language\n\t        className : 'function',\n\t        begin : /\\w+ +\\w+(\\.)?\\w+\\s*\\([^\\)]*\\)\\s*((throws)[\\w\\s,]+)?[\\{;]/,\n\t        returnBegin : true,\n\t        end : /[{;=]/,\n\t        keywords : KEYWORDS,\n\t        excludeEnd : true,\n\t        contains : [\n\t          {\n\t            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n\t            returnBegin : true,\n\t            relevance: 0,\n\t            contains : [hljs.UNDERSCORE_TITLE_MODE]\n\t          },\n\t          {\n\t            className : 'params',\n\t            begin : /\\(/, end : /\\)/,\n\t            relevance: 0,\n\t            keywords : KEYWORDS,\n\t            contains : [\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.QUOTE_STRING_MODE,\n\t              hljs.C_NUMBER_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      },\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        // annotation is also used in this language\n\t        className : 'annotation',\n\t        begin : '@[A-Za-z]+'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('autohotkey', function(hljs) {\n\t  var BACKTICK_ESCAPE = {\n\t    className: 'escape',\n\t    begin: '`[\\\\s\\\\S]'\n\t  };\n\t  var COMMENTS = hljs.COMMENT(\n\t    ';',\n\t    '$',\n\t    {\n\t      relevance: 0\n\t    }\n\t  );\n\t  var BUILT_IN = [\n\t    {\n\t      className: 'built_in',\n\t      begin: 'A_[a-zA-Z0-9]+'\n\t    },\n\t    {\n\t      className: 'built_in',\n\t      beginKeywords: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n\t    }\n\t  ];\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword: 'Break Continue Else Gosub If Loop Return While',\n\t      literal: 'A true false NOT AND OR'\n\t    },\n\t    contains: BUILT_IN.concat([\n\t      BACKTICK_ESCAPE,\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [BACKTICK_ESCAPE]}),\n\t      COMMENTS,\n\t      {\n\t        className: 'number',\n\t        begin: hljs.NUMBER_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'var_expand', // FIXME\n\t        begin: '%', end: '%',\n\t        illegal: '\\\\n',\n\t        contains: [BACKTICK_ESCAPE]\n\t      },\n\t      {\n\t        className: 'label',\n\t        contains: [BACKTICK_ESCAPE],\n\t        variants: [\n\t          {begin: '^[^\\\\n\";]+::(?!=)'},\n\t          {begin: '^[^\\\\n\";]+:(?!=)', relevance: 0} // zero relevance as it catches a lot of things\n\t                                                    // followed by a single ':' in many languages\n\t        ]\n\t      },\n\t      {\n\t        // consecutive commas, not for highlighting but just for relevance\n\t        begin: ',\\\\s*,',\n\t        relevance: 10\n\t      }\n\t    ])\n\t  }\n\t});\n\t\n\thljs.registerLanguage('autoit', function(hljs) {\n\t    var KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +\n\t        'Default Dim Do Else ElseIf EndFunc EndIf EndSelect ' +\n\t        'EndSwitch EndWith Enum Exit ExitLoop For Func ' +\n\t        'Global If In Local Next ReDim Return Select Static ' +\n\t        'Step Switch Then To Until Volatile WEnd While With',\n\t\n\t        LITERAL = 'True False And Null Not Or',\n\t\n\t        BUILT_IN = 'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin ' +\n\t        'Assign ATan AutoItSetOption AutoItWinGetTitle ' +\n\t        'AutoItWinSetTitle Beep Binary BinaryLen BinaryMid ' +\n\t        'BinaryToString BitAND BitNOT BitOR BitRotate BitShift ' +\n\t        'BitXOR BlockInput Break Call CDTray Ceiling Chr ' +\n\t        'ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ' +\n\t        'ConsoleWriteError ControlClick ControlCommand ' +\n\t        'ControlDisable ControlEnable ControlFocus ControlGetFocus ' +\n\t        'ControlGetHandle ControlGetPos ControlGetText ControlHide ' +\n\t        'ControlListView ControlMove ControlSend ControlSetText ' +\n\t        'ControlShow ControlTreeView Cos Dec DirCopy DirCreate ' +\n\t        'DirGetSize DirMove DirRemove DllCall DllCallAddress ' +\n\t        'DllCallbackFree DllCallbackGetPtr DllCallbackRegister ' +\n\t        'DllClose DllOpen DllStructCreate DllStructGetData ' +\n\t        'DllStructGetPtr DllStructGetSize DllStructSetData ' +\n\t        'DriveGetDrive DriveGetFileSystem DriveGetLabel ' +\n\t        'DriveGetSerial DriveGetType DriveMapAdd DriveMapDel ' +\n\t        'DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal ' +\n\t        'DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp ' +\n\t        'FileChangeDir FileClose FileCopy FileCreateNTFSLink ' +\n\t        'FileCreateShortcut FileDelete FileExists FileFindFirstFile ' +\n\t        'FileFindNextFile FileFlush FileGetAttrib FileGetEncoding ' +\n\t        'FileGetLongName FileGetPos FileGetShortcut FileGetShortName ' +\n\t        'FileGetSize FileGetTime FileGetVersion FileInstall ' +\n\t        'FileMove FileOpen FileOpenDialog FileRead FileReadLine ' +\n\t        'FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog ' +\n\t        'FileSelectFolder FileSetAttrib FileSetEnd FileSetPos ' +\n\t        'FileSetTime FileWrite FileWriteLine Floor FtpSetProxy ' +\n\t        'FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton ' +\n\t        'GUICtrlCreateCheckbox GUICtrlCreateCombo ' +\n\t        'GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy ' +\n\t        'GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup ' +\n\t        'GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel ' +\n\t        'GUICtrlCreateList GUICtrlCreateListView ' +\n\t        'GUICtrlCreateListViewItem GUICtrlCreateMenu ' +\n\t        'GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj ' +\n\t        'GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio ' +\n\t        'GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem ' +\n\t        'GUICtrlCreateTreeView GUICtrlCreateTreeViewItem ' +\n\t        'GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle ' +\n\t        'GUICtrlGetState GUICtrlRead GUICtrlRecvMsg ' +\n\t        'GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy ' +\n\t        'GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor ' +\n\t        'GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor ' +\n\t        'GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage ' +\n\t        'GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos ' +\n\t        'GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle ' +\n\t        'GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg ' +\n\t        'GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor ' +\n\t        'GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon ' +\n\t        'GUISetOnEvent GUISetState GUISetStyle GUIStartGroup ' +\n\t        'GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent ' +\n\t        'HWnd InetClose InetGet InetGetInfo InetGetSize InetRead ' +\n\t        'IniDelete IniRead IniReadSection IniReadSectionNames ' +\n\t        'IniRenameSection IniWrite IniWriteSection InputBox Int ' +\n\t        'IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct ' +\n\t        'IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj ' +\n\t        'IsPtr IsString Log MemGetStats Mod MouseClick ' +\n\t        'MouseClickDrag MouseDown MouseGetCursor MouseGetPos ' +\n\t        'MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ' +\n\t        'ObjCreateInterface ObjEvent ObjGet ObjName ' +\n\t        'OnAutoItExitRegister OnAutoItExitUnRegister Opt Ping ' +\n\t        'PixelChecksum PixelGetColor PixelSearch ProcessClose ' +\n\t        'ProcessExists ProcessGetStats ProcessList ' +\n\t        'ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ' +\n\t        'ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey ' +\n\t        'RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait ' +\n\t        'RunWait Send SendKeepActive SetError SetExtended ' +\n\t        'ShellExecute ShellExecuteWait Shutdown Sin Sleep ' +\n\t        'SoundPlay SoundSetWaveVolume SplashImageOn SplashOff ' +\n\t        'SplashTextOn Sqrt SRandom StatusbarGetText StderrRead ' +\n\t        'StdinWrite StdioClose StdoutRead String StringAddCR ' +\n\t        'StringCompare StringFormat StringFromASCIIArray StringInStr ' +\n\t        'StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit ' +\n\t        'StringIsFloat StringIsInt StringIsLower StringIsSpace ' +\n\t        'StringIsUpper StringIsXDigit StringLeft StringLen ' +\n\t        'StringLower StringMid StringRegExp StringRegExpReplace ' +\n\t        'StringReplace StringReverse StringRight StringSplit ' +\n\t        'StringStripCR StringStripWS StringToASCIIArray ' +\n\t        'StringToBinary StringTrimLeft StringTrimRight StringUpper ' +\n\t        'Tan TCPAccept TCPCloseSocket TCPConnect TCPListen ' +\n\t        'TCPNameToIP TCPRecv TCPSend TCPShutdown TCPStartup ' +\n\t        'TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu ' +\n\t        'TrayGetMsg TrayItemDelete TrayItemGetHandle ' +\n\t        'TrayItemGetState TrayItemGetText TrayItemSetOnEvent ' +\n\t        'TrayItemSetState TrayItemSetText TraySetClick TraySetIcon ' +\n\t        'TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip ' +\n\t        'TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv ' +\n\t        'UDPSend UDPShutdown UDPStartup VarGetType WinActivate ' +\n\t        'WinActive WinClose WinExists WinFlash WinGetCaretPos ' +\n\t        'WinGetClassList WinGetClientSize WinGetHandle WinGetPos ' +\n\t        'WinGetProcess WinGetState WinGetText WinGetTitle WinKill ' +\n\t        'WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo ' +\n\t        'WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans ' +\n\t        'WinWait WinWaitActive WinWaitClose WinWaitNotActive ' +\n\t        'Array1DToHistogram ArrayAdd ArrayBinarySearch ' +\n\t        'ArrayColDelete ArrayColInsert ArrayCombinations ' +\n\t        'ArrayConcatenate ArrayDelete ArrayDisplay ArrayExtract ' +\n\t        'ArrayFindAll ArrayInsert ArrayMax ArrayMaxIndex ArrayMin ' +\n\t        'ArrayMinIndex ArrayPermute ArrayPop ArrayPush ' +\n\t        'ArrayReverse ArraySearch ArrayShuffle ArraySort ArraySwap ' +\n\t        'ArrayToClip ArrayToString ArrayTranspose ArrayTrim ' +\n\t        'ArrayUnique Assert ChooseColor ChooseFont ' +\n\t        'ClipBoard_ChangeChain ClipBoard_Close ClipBoard_CountFormats ' +\n\t        'ClipBoard_Empty ClipBoard_EnumFormats ClipBoard_FormatStr ' +\n\t        'ClipBoard_GetData ClipBoard_GetDataEx ClipBoard_GetFormatName ' +\n\t        'ClipBoard_GetOpenWindow ClipBoard_GetOwner ' +\n\t        'ClipBoard_GetPriorityFormat ClipBoard_GetSequenceNumber ' +\n\t        'ClipBoard_GetViewer ClipBoard_IsFormatAvailable ' +\n\t        'ClipBoard_Open ClipBoard_RegisterFormat ClipBoard_SetData ' +\n\t        'ClipBoard_SetDataEx ClipBoard_SetViewer ClipPutFile ' +\n\t        'ColorConvertHSLtoRGB ColorConvertRGBtoHSL ColorGetBlue ' +\n\t        'ColorGetCOLORREF ColorGetGreen ColorGetRed ColorGetRGB ' +\n\t        'ColorSetCOLORREF ColorSetRGB Crypt_DecryptData ' +\n\t        'Crypt_DecryptFile Crypt_DeriveKey Crypt_DestroyKey ' +\n\t        'Crypt_EncryptData Crypt_EncryptFile Crypt_GenRandom ' +\n\t        'Crypt_HashData Crypt_HashFile Crypt_Shutdown Crypt_Startup ' +\n\t        'DateAdd DateDayOfWeek DateDaysInMonth DateDiff ' +\n\t        'DateIsLeapYear DateIsValid DateTimeFormat DateTimeSplit ' +\n\t        'DateToDayOfWeek DateToDayOfWeekISO DateToDayValue ' +\n\t        'DateToMonth Date_Time_CompareFileTime ' +\n\t        'Date_Time_DOSDateTimeToArray Date_Time_DOSDateTimeToFileTime ' +\n\t        'Date_Time_DOSDateTimeToStr Date_Time_DOSDateToArray ' +\n\t        'Date_Time_DOSDateToStr Date_Time_DOSTimeToArray ' +\n\t        'Date_Time_DOSTimeToStr Date_Time_EncodeFileTime ' +\n\t        'Date_Time_EncodeSystemTime Date_Time_FileTimeToArray ' +\n\t        'Date_Time_FileTimeToDOSDateTime ' +\n\t        'Date_Time_FileTimeToLocalFileTime Date_Time_FileTimeToStr ' +\n\t        'Date_Time_FileTimeToSystemTime Date_Time_GetFileTime ' +\n\t        'Date_Time_GetLocalTime Date_Time_GetSystemTime ' +\n\t        'Date_Time_GetSystemTimeAdjustment ' +\n\t        'Date_Time_GetSystemTimeAsFileTime Date_Time_GetSystemTimes ' +\n\t        'Date_Time_GetTickCount Date_Time_GetTimeZoneInformation ' +\n\t        'Date_Time_LocalFileTimeToFileTime Date_Time_SetFileTime ' +\n\t        'Date_Time_SetLocalTime Date_Time_SetSystemTime ' +\n\t        'Date_Time_SetSystemTimeAdjustment ' +\n\t        'Date_Time_SetTimeZoneInformation Date_Time_SystemTimeToArray ' +\n\t        'Date_Time_SystemTimeToDateStr Date_Time_SystemTimeToDateTimeStr ' +\n\t        'Date_Time_SystemTimeToFileTime Date_Time_SystemTimeToTimeStr ' +\n\t        'Date_Time_SystemTimeToTzSpecificLocalTime ' +\n\t        'Date_Time_TzSpecificLocalTimeToSystemTime DayValueToDate ' +\n\t        'DebugBugReportEnv DebugCOMError DebugOut DebugReport ' +\n\t        'DebugReportEx DebugReportVar DebugSetup Degree ' +\n\t        'EventLog__Backup EventLog__Clear EventLog__Close ' +\n\t        'EventLog__Count EventLog__DeregisterSource EventLog__Full ' +\n\t        'EventLog__Notify EventLog__Oldest EventLog__Open ' +\n\t        'EventLog__OpenBackup EventLog__Read EventLog__RegisterSource ' +\n\t        'EventLog__Report Excel_BookAttach Excel_BookClose ' +\n\t        'Excel_BookList Excel_BookNew Excel_BookOpen ' +\n\t        'Excel_BookOpenText Excel_BookSave Excel_BookSaveAs ' +\n\t        'Excel_Close Excel_ColumnToLetter Excel_ColumnToNumber ' +\n\t        'Excel_ConvertFormula Excel_Export Excel_FilterGet ' +\n\t        'Excel_FilterSet Excel_Open Excel_PictureAdd Excel_Print ' +\n\t        'Excel_RangeCopyPaste Excel_RangeDelete Excel_RangeFind ' +\n\t        'Excel_RangeInsert Excel_RangeLinkAddRemove Excel_RangeRead ' +\n\t        'Excel_RangeReplace Excel_RangeSort Excel_RangeValidate ' +\n\t        'Excel_RangeWrite Excel_SheetAdd Excel_SheetCopyMove ' +\n\t        'Excel_SheetDelete Excel_SheetList FileCountLines FileCreate ' +\n\t        'FileListToArray FileListToArrayRec FilePrint ' +\n\t        'FileReadToArray FileWriteFromArray FileWriteLog ' +\n\t        'FileWriteToLine FTP_Close FTP_Command FTP_Connect ' +\n\t        'FTP_DecodeInternetStatus FTP_DirCreate FTP_DirDelete ' +\n\t        'FTP_DirGetCurrent FTP_DirPutContents FTP_DirSetCurrent ' +\n\t        'FTP_FileClose FTP_FileDelete FTP_FileGet FTP_FileGetSize ' +\n\t        'FTP_FileOpen FTP_FilePut FTP_FileRead FTP_FileRename ' +\n\t        'FTP_FileTimeLoHiToStr FTP_FindFileClose FTP_FindFileFirst ' +\n\t        'FTP_FindFileNext FTP_GetLastResponseInfo FTP_ListToArray ' +\n\t        'FTP_ListToArray2D FTP_ListToArrayEx FTP_Open ' +\n\t        'FTP_ProgressDownload FTP_ProgressUpload FTP_SetStatusCallback ' +\n\t        'GDIPlus_ArrowCapCreate GDIPlus_ArrowCapDispose ' +\n\t        'GDIPlus_ArrowCapGetFillState GDIPlus_ArrowCapGetHeight ' +\n\t        'GDIPlus_ArrowCapGetMiddleInset GDIPlus_ArrowCapGetWidth ' +\n\t        'GDIPlus_ArrowCapSetFillState GDIPlus_ArrowCapSetHeight ' +\n\t        'GDIPlus_ArrowCapSetMiddleInset GDIPlus_ArrowCapSetWidth ' +\n\t        'GDIPlus_BitmapApplyEffect GDIPlus_BitmapApplyEffectEx ' +\n\t        'GDIPlus_BitmapCloneArea GDIPlus_BitmapConvertFormat ' +\n\t        'GDIPlus_BitmapCreateApplyEffect ' +\n\t        'GDIPlus_BitmapCreateApplyEffectEx ' +\n\t        'GDIPlus_BitmapCreateDIBFromBitmap GDIPlus_BitmapCreateFromFile ' +\n\t        'GDIPlus_BitmapCreateFromGraphics ' +\n\t        'GDIPlus_BitmapCreateFromHBITMAP GDIPlus_BitmapCreateFromHICON ' +\n\t        'GDIPlus_BitmapCreateFromHICON32 GDIPlus_BitmapCreateFromMemory ' +\n\t        'GDIPlus_BitmapCreateFromResource GDIPlus_BitmapCreateFromScan0 ' +\n\t        'GDIPlus_BitmapCreateFromStream ' +\n\t        'GDIPlus_BitmapCreateHBITMAPFromBitmap GDIPlus_BitmapDispose ' +\n\t        'GDIPlus_BitmapGetHistogram GDIPlus_BitmapGetHistogramEx ' +\n\t        'GDIPlus_BitmapGetHistogramSize GDIPlus_BitmapGetPixel ' +\n\t        'GDIPlus_BitmapLockBits GDIPlus_BitmapSetPixel ' +\n\t        'GDIPlus_BitmapUnlockBits GDIPlus_BrushClone ' +\n\t        'GDIPlus_BrushCreateSolid GDIPlus_BrushDispose ' +\n\t        'GDIPlus_BrushGetSolidColor GDIPlus_BrushGetType ' +\n\t        'GDIPlus_BrushSetSolidColor GDIPlus_ColorMatrixCreate ' +\n\t        'GDIPlus_ColorMatrixCreateGrayScale ' +\n\t        'GDIPlus_ColorMatrixCreateNegative ' +\n\t        'GDIPlus_ColorMatrixCreateSaturation ' +\n\t        'GDIPlus_ColorMatrixCreateScale ' +\n\t        'GDIPlus_ColorMatrixCreateTranslate GDIPlus_CustomLineCapClone ' +\n\t        'GDIPlus_CustomLineCapCreate GDIPlus_CustomLineCapDispose ' +\n\t        'GDIPlus_CustomLineCapGetStrokeCaps ' +\n\t        'GDIPlus_CustomLineCapSetStrokeCaps GDIPlus_Decoders ' +\n\t        'GDIPlus_DecodersGetCount GDIPlus_DecodersGetSize ' +\n\t        'GDIPlus_DrawImageFX GDIPlus_DrawImageFXEx ' +\n\t        'GDIPlus_DrawImagePoints GDIPlus_EffectCreate ' +\n\t        'GDIPlus_EffectCreateBlur GDIPlus_EffectCreateBrightnessContrast ' +\n\t        'GDIPlus_EffectCreateColorBalance GDIPlus_EffectCreateColorCurve ' +\n\t        'GDIPlus_EffectCreateColorLUT GDIPlus_EffectCreateColorMatrix ' +\n\t        'GDIPlus_EffectCreateHueSaturationLightness ' +\n\t        'GDIPlus_EffectCreateLevels GDIPlus_EffectCreateRedEyeCorrection ' +\n\t        'GDIPlus_EffectCreateSharpen GDIPlus_EffectCreateTint ' +\n\t        'GDIPlus_EffectDispose GDIPlus_EffectGetParameters ' +\n\t        'GDIPlus_EffectSetParameters GDIPlus_Encoders ' +\n\t        'GDIPlus_EncodersGetCLSID GDIPlus_EncodersGetCount ' +\n\t        'GDIPlus_EncodersGetParamList GDIPlus_EncodersGetParamListSize ' +\n\t        'GDIPlus_EncodersGetSize GDIPlus_FontCreate ' +\n\t        'GDIPlus_FontDispose GDIPlus_FontFamilyCreate ' +\n\t        'GDIPlus_FontFamilyCreateFromCollection ' +\n\t        'GDIPlus_FontFamilyDispose GDIPlus_FontFamilyGetCellAscent ' +\n\t        'GDIPlus_FontFamilyGetCellDescent GDIPlus_FontFamilyGetEmHeight ' +\n\t        'GDIPlus_FontFamilyGetLineSpacing GDIPlus_FontGetHeight ' +\n\t        'GDIPlus_FontPrivateAddFont GDIPlus_FontPrivateAddMemoryFont ' +\n\t        'GDIPlus_FontPrivateCollectionDispose ' +\n\t        'GDIPlus_FontPrivateCreateCollection GDIPlus_GraphicsClear ' +\n\t        'GDIPlus_GraphicsCreateFromHDC GDIPlus_GraphicsCreateFromHWND ' +\n\t        'GDIPlus_GraphicsDispose GDIPlus_GraphicsDrawArc ' +\n\t        'GDIPlus_GraphicsDrawBezier GDIPlus_GraphicsDrawClosedCurve ' +\n\t        'GDIPlus_GraphicsDrawClosedCurve2 GDIPlus_GraphicsDrawCurve ' +\n\t        'GDIPlus_GraphicsDrawCurve2 GDIPlus_GraphicsDrawEllipse ' +\n\t        'GDIPlus_GraphicsDrawImage GDIPlus_GraphicsDrawImagePointsRect ' +\n\t        'GDIPlus_GraphicsDrawImageRect GDIPlus_GraphicsDrawImageRectRect ' +\n\t        'GDIPlus_GraphicsDrawLine GDIPlus_GraphicsDrawPath ' +\n\t        'GDIPlus_GraphicsDrawPie GDIPlus_GraphicsDrawPolygon ' +\n\t        'GDIPlus_GraphicsDrawRect GDIPlus_GraphicsDrawString ' +\n\t        'GDIPlus_GraphicsDrawStringEx GDIPlus_GraphicsFillClosedCurve ' +\n\t        'GDIPlus_GraphicsFillClosedCurve2 GDIPlus_GraphicsFillEllipse ' +\n\t        'GDIPlus_GraphicsFillPath GDIPlus_GraphicsFillPie ' +\n\t        'GDIPlus_GraphicsFillPolygon GDIPlus_GraphicsFillRect ' +\n\t        'GDIPlus_GraphicsFillRegion GDIPlus_GraphicsGetCompositingMode ' +\n\t        'GDIPlus_GraphicsGetCompositingQuality GDIPlus_GraphicsGetDC ' +\n\t        'GDIPlus_GraphicsGetInterpolationMode ' +\n\t        'GDIPlus_GraphicsGetSmoothingMode GDIPlus_GraphicsGetTransform ' +\n\t        'GDIPlus_GraphicsMeasureCharacterRanges ' +\n\t        'GDIPlus_GraphicsMeasureString GDIPlus_GraphicsReleaseDC ' +\n\t        'GDIPlus_GraphicsResetClip GDIPlus_GraphicsResetTransform ' +\n\t        'GDIPlus_GraphicsRestore GDIPlus_GraphicsRotateTransform ' +\n\t        'GDIPlus_GraphicsSave GDIPlus_GraphicsScaleTransform ' +\n\t        'GDIPlus_GraphicsSetClipPath GDIPlus_GraphicsSetClipRect ' +\n\t        'GDIPlus_GraphicsSetClipRegion ' +\n\t        'GDIPlus_GraphicsSetCompositingMode ' +\n\t        'GDIPlus_GraphicsSetCompositingQuality ' +\n\t        'GDIPlus_GraphicsSetInterpolationMode ' +\n\t        'GDIPlus_GraphicsSetPixelOffsetMode ' +\n\t        'GDIPlus_GraphicsSetSmoothingMode ' +\n\t        'GDIPlus_GraphicsSetTextRenderingHint ' +\n\t        'GDIPlus_GraphicsSetTransform GDIPlus_GraphicsTransformPoints ' +\n\t        'GDIPlus_GraphicsTranslateTransform GDIPlus_HatchBrushCreate ' +\n\t        'GDIPlus_HICONCreateFromBitmap GDIPlus_ImageAttributesCreate ' +\n\t        'GDIPlus_ImageAttributesDispose ' +\n\t        'GDIPlus_ImageAttributesSetColorKeys ' +\n\t        'GDIPlus_ImageAttributesSetColorMatrix GDIPlus_ImageDispose ' +\n\t        'GDIPlus_ImageGetDimension GDIPlus_ImageGetFlags ' +\n\t        'GDIPlus_ImageGetGraphicsContext GDIPlus_ImageGetHeight ' +\n\t        'GDIPlus_ImageGetHorizontalResolution ' +\n\t        'GDIPlus_ImageGetPixelFormat GDIPlus_ImageGetRawFormat ' +\n\t        'GDIPlus_ImageGetThumbnail GDIPlus_ImageGetType ' +\n\t        'GDIPlus_ImageGetVerticalResolution GDIPlus_ImageGetWidth ' +\n\t        'GDIPlus_ImageLoadFromFile GDIPlus_ImageLoadFromStream ' +\n\t        'GDIPlus_ImageResize GDIPlus_ImageRotateFlip ' +\n\t        'GDIPlus_ImageSaveToFile GDIPlus_ImageSaveToFileEx ' +\n\t        'GDIPlus_ImageSaveToStream GDIPlus_ImageScale ' +\n\t        'GDIPlus_LineBrushCreate GDIPlus_LineBrushCreateFromRect ' +\n\t        'GDIPlus_LineBrushCreateFromRectWithAngle ' +\n\t        'GDIPlus_LineBrushGetColors GDIPlus_LineBrushGetRect ' +\n\t        'GDIPlus_LineBrushMultiplyTransform ' +\n\t        'GDIPlus_LineBrushResetTransform GDIPlus_LineBrushSetBlend ' +\n\t        'GDIPlus_LineBrushSetColors GDIPlus_LineBrushSetGammaCorrection ' +\n\t        'GDIPlus_LineBrushSetLinearBlend GDIPlus_LineBrushSetPresetBlend ' +\n\t        'GDIPlus_LineBrushSetSigmaBlend GDIPlus_LineBrushSetTransform ' +\n\t        'GDIPlus_MatrixClone GDIPlus_MatrixCreate ' +\n\t        'GDIPlus_MatrixDispose GDIPlus_MatrixGetElements ' +\n\t        'GDIPlus_MatrixInvert GDIPlus_MatrixMultiply ' +\n\t        'GDIPlus_MatrixRotate GDIPlus_MatrixScale ' +\n\t        'GDIPlus_MatrixSetElements GDIPlus_MatrixShear ' +\n\t        'GDIPlus_MatrixTransformPoints GDIPlus_MatrixTranslate ' +\n\t        'GDIPlus_PaletteInitialize GDIPlus_ParamAdd GDIPlus_ParamInit ' +\n\t        'GDIPlus_ParamSize GDIPlus_PathAddArc GDIPlus_PathAddBezier ' +\n\t        'GDIPlus_PathAddClosedCurve GDIPlus_PathAddClosedCurve2 ' +\n\t        'GDIPlus_PathAddCurve GDIPlus_PathAddCurve2 ' +\n\t        'GDIPlus_PathAddCurve3 GDIPlus_PathAddEllipse ' +\n\t        'GDIPlus_PathAddLine GDIPlus_PathAddLine2 GDIPlus_PathAddPath ' +\n\t        'GDIPlus_PathAddPie GDIPlus_PathAddPolygon ' +\n\t        'GDIPlus_PathAddRectangle GDIPlus_PathAddString ' +\n\t        'GDIPlus_PathBrushCreate GDIPlus_PathBrushCreateFromPath ' +\n\t        'GDIPlus_PathBrushGetCenterPoint GDIPlus_PathBrushGetFocusScales ' +\n\t        'GDIPlus_PathBrushGetPointCount GDIPlus_PathBrushGetRect ' +\n\t        'GDIPlus_PathBrushGetWrapMode GDIPlus_PathBrushMultiplyTransform ' +\n\t        'GDIPlus_PathBrushResetTransform GDIPlus_PathBrushSetBlend ' +\n\t        'GDIPlus_PathBrushSetCenterColor GDIPlus_PathBrushSetCenterPoint ' +\n\t        'GDIPlus_PathBrushSetFocusScales ' +\n\t        'GDIPlus_PathBrushSetGammaCorrection ' +\n\t        'GDIPlus_PathBrushSetLinearBlend GDIPlus_PathBrushSetPresetBlend ' +\n\t        'GDIPlus_PathBrushSetSigmaBlend ' +\n\t        'GDIPlus_PathBrushSetSurroundColor ' +\n\t        'GDIPlus_PathBrushSetSurroundColorsWithCount ' +\n\t        'GDIPlus_PathBrushSetTransform GDIPlus_PathBrushSetWrapMode ' +\n\t        'GDIPlus_PathClone GDIPlus_PathCloseFigure GDIPlus_PathCreate ' +\n\t        'GDIPlus_PathCreate2 GDIPlus_PathDispose GDIPlus_PathFlatten ' +\n\t        'GDIPlus_PathGetData GDIPlus_PathGetFillMode ' +\n\t        'GDIPlus_PathGetLastPoint GDIPlus_PathGetPointCount ' +\n\t        'GDIPlus_PathGetPoints GDIPlus_PathGetWorldBounds ' +\n\t        'GDIPlus_PathIsOutlineVisiblePoint GDIPlus_PathIsVisiblePoint ' +\n\t        'GDIPlus_PathIterCreate GDIPlus_PathIterDispose ' +\n\t        'GDIPlus_PathIterGetSubpathCount GDIPlus_PathIterNextMarkerPath ' +\n\t        'GDIPlus_PathIterNextSubpathPath GDIPlus_PathIterRewind ' +\n\t        'GDIPlus_PathReset GDIPlus_PathReverse GDIPlus_PathSetFillMode ' +\n\t        'GDIPlus_PathSetMarker GDIPlus_PathStartFigure ' +\n\t        'GDIPlus_PathTransform GDIPlus_PathWarp GDIPlus_PathWiden ' +\n\t        'GDIPlus_PathWindingModeOutline GDIPlus_PenCreate ' +\n\t        'GDIPlus_PenCreate2 GDIPlus_PenDispose GDIPlus_PenGetAlignment ' +\n\t        'GDIPlus_PenGetColor GDIPlus_PenGetCustomEndCap ' +\n\t        'GDIPlus_PenGetDashCap GDIPlus_PenGetDashStyle ' +\n\t        'GDIPlus_PenGetEndCap GDIPlus_PenGetMiterLimit ' +\n\t        'GDIPlus_PenGetWidth GDIPlus_PenSetAlignment ' +\n\t        'GDIPlus_PenSetColor GDIPlus_PenSetCustomEndCap ' +\n\t        'GDIPlus_PenSetDashCap GDIPlus_PenSetDashStyle ' +\n\t        'GDIPlus_PenSetEndCap GDIPlus_PenSetLineCap ' +\n\t        'GDIPlus_PenSetLineJoin GDIPlus_PenSetMiterLimit ' +\n\t        'GDIPlus_PenSetStartCap GDIPlus_PenSetWidth ' +\n\t        'GDIPlus_RectFCreate GDIPlus_RegionClone ' +\n\t        'GDIPlus_RegionCombinePath GDIPlus_RegionCombineRect ' +\n\t        'GDIPlus_RegionCombineRegion GDIPlus_RegionCreate ' +\n\t        'GDIPlus_RegionCreateFromPath GDIPlus_RegionCreateFromRect ' +\n\t        'GDIPlus_RegionDispose GDIPlus_RegionGetBounds ' +\n\t        'GDIPlus_RegionGetHRgn GDIPlus_RegionTransform ' +\n\t        'GDIPlus_RegionTranslate GDIPlus_Shutdown GDIPlus_Startup ' +\n\t        'GDIPlus_StringFormatCreate GDIPlus_StringFormatDispose ' +\n\t        'GDIPlus_StringFormatGetMeasurableCharacterRangeCount ' +\n\t        'GDIPlus_StringFormatSetAlign GDIPlus_StringFormatSetLineAlign ' +\n\t        'GDIPlus_StringFormatSetMeasurableCharacterRanges ' +\n\t        'GDIPlus_TextureCreate GDIPlus_TextureCreate2 ' +\n\t        'GDIPlus_TextureCreateIA GetIP GUICtrlAVI_Close ' +\n\t        'GUICtrlAVI_Create GUICtrlAVI_Destroy GUICtrlAVI_IsPlaying ' +\n\t        'GUICtrlAVI_Open GUICtrlAVI_OpenEx GUICtrlAVI_Play ' +\n\t        'GUICtrlAVI_Seek GUICtrlAVI_Show GUICtrlAVI_Stop ' +\n\t        'GUICtrlButton_Click GUICtrlButton_Create ' +\n\t        'GUICtrlButton_Destroy GUICtrlButton_Enable ' +\n\t        'GUICtrlButton_GetCheck GUICtrlButton_GetFocus ' +\n\t        'GUICtrlButton_GetIdealSize GUICtrlButton_GetImage ' +\n\t        'GUICtrlButton_GetImageList GUICtrlButton_GetNote ' +\n\t        'GUICtrlButton_GetNoteLength GUICtrlButton_GetSplitInfo ' +\n\t        'GUICtrlButton_GetState GUICtrlButton_GetText ' +\n\t        'GUICtrlButton_GetTextMargin GUICtrlButton_SetCheck ' +\n\t        'GUICtrlButton_SetDontClick GUICtrlButton_SetFocus ' +\n\t        'GUICtrlButton_SetImage GUICtrlButton_SetImageList ' +\n\t        'GUICtrlButton_SetNote GUICtrlButton_SetShield ' +\n\t        'GUICtrlButton_SetSize GUICtrlButton_SetSplitInfo ' +\n\t        'GUICtrlButton_SetState GUICtrlButton_SetStyle ' +\n\t        'GUICtrlButton_SetText GUICtrlButton_SetTextMargin ' +\n\t        'GUICtrlButton_Show GUICtrlComboBoxEx_AddDir ' +\n\t        'GUICtrlComboBoxEx_AddString GUICtrlComboBoxEx_BeginUpdate ' +\n\t        'GUICtrlComboBoxEx_Create GUICtrlComboBoxEx_CreateSolidBitMap ' +\n\t        'GUICtrlComboBoxEx_DeleteString GUICtrlComboBoxEx_Destroy ' +\n\t        'GUICtrlComboBoxEx_EndUpdate GUICtrlComboBoxEx_FindStringExact ' +\n\t        'GUICtrlComboBoxEx_GetComboBoxInfo ' +\n\t        'GUICtrlComboBoxEx_GetComboControl GUICtrlComboBoxEx_GetCount ' +\n\t        'GUICtrlComboBoxEx_GetCurSel ' +\n\t        'GUICtrlComboBoxEx_GetDroppedControlRect ' +\n\t        'GUICtrlComboBoxEx_GetDroppedControlRectEx ' +\n\t        'GUICtrlComboBoxEx_GetDroppedState ' +\n\t        'GUICtrlComboBoxEx_GetDroppedWidth ' +\n\t        'GUICtrlComboBoxEx_GetEditControl GUICtrlComboBoxEx_GetEditSel ' +\n\t        'GUICtrlComboBoxEx_GetEditText ' +\n\t        'GUICtrlComboBoxEx_GetExtendedStyle ' +\n\t        'GUICtrlComboBoxEx_GetExtendedUI GUICtrlComboBoxEx_GetImageList ' +\n\t        'GUICtrlComboBoxEx_GetItem GUICtrlComboBoxEx_GetItemEx ' +\n\t        'GUICtrlComboBoxEx_GetItemHeight GUICtrlComboBoxEx_GetItemImage ' +\n\t        'GUICtrlComboBoxEx_GetItemIndent ' +\n\t        'GUICtrlComboBoxEx_GetItemOverlayImage ' +\n\t        'GUICtrlComboBoxEx_GetItemParam ' +\n\t        'GUICtrlComboBoxEx_GetItemSelectedImage ' +\n\t        'GUICtrlComboBoxEx_GetItemText GUICtrlComboBoxEx_GetItemTextLen ' +\n\t        'GUICtrlComboBoxEx_GetList GUICtrlComboBoxEx_GetListArray ' +\n\t        'GUICtrlComboBoxEx_GetLocale GUICtrlComboBoxEx_GetLocaleCountry ' +\n\t        'GUICtrlComboBoxEx_GetLocaleLang ' +\n\t        'GUICtrlComboBoxEx_GetLocalePrimLang ' +\n\t        'GUICtrlComboBoxEx_GetLocaleSubLang ' +\n\t        'GUICtrlComboBoxEx_GetMinVisible GUICtrlComboBoxEx_GetTopIndex ' +\n\t        'GUICtrlComboBoxEx_GetUnicode GUICtrlComboBoxEx_InitStorage ' +\n\t        'GUICtrlComboBoxEx_InsertString GUICtrlComboBoxEx_LimitText ' +\n\t        'GUICtrlComboBoxEx_ReplaceEditSel GUICtrlComboBoxEx_ResetContent ' +\n\t        'GUICtrlComboBoxEx_SetCurSel GUICtrlComboBoxEx_SetDroppedWidth ' +\n\t        'GUICtrlComboBoxEx_SetEditSel GUICtrlComboBoxEx_SetEditText ' +\n\t        'GUICtrlComboBoxEx_SetExtendedStyle ' +\n\t        'GUICtrlComboBoxEx_SetExtendedUI GUICtrlComboBoxEx_SetImageList ' +\n\t        'GUICtrlComboBoxEx_SetItem GUICtrlComboBoxEx_SetItemEx ' +\n\t        'GUICtrlComboBoxEx_SetItemHeight GUICtrlComboBoxEx_SetItemImage ' +\n\t        'GUICtrlComboBoxEx_SetItemIndent ' +\n\t        'GUICtrlComboBoxEx_SetItemOverlayImage ' +\n\t        'GUICtrlComboBoxEx_SetItemParam ' +\n\t        'GUICtrlComboBoxEx_SetItemSelectedImage ' +\n\t        'GUICtrlComboBoxEx_SetMinVisible GUICtrlComboBoxEx_SetTopIndex ' +\n\t        'GUICtrlComboBoxEx_SetUnicode GUICtrlComboBoxEx_ShowDropDown ' +\n\t        'GUICtrlComboBox_AddDir GUICtrlComboBox_AddString ' +\n\t        'GUICtrlComboBox_AutoComplete GUICtrlComboBox_BeginUpdate ' +\n\t        'GUICtrlComboBox_Create GUICtrlComboBox_DeleteString ' +\n\t        'GUICtrlComboBox_Destroy GUICtrlComboBox_EndUpdate ' +\n\t        'GUICtrlComboBox_FindString GUICtrlComboBox_FindStringExact ' +\n\t        'GUICtrlComboBox_GetComboBoxInfo GUICtrlComboBox_GetCount ' +\n\t        'GUICtrlComboBox_GetCueBanner GUICtrlComboBox_GetCurSel ' +\n\t        'GUICtrlComboBox_GetDroppedControlRect ' +\n\t        'GUICtrlComboBox_GetDroppedControlRectEx ' +\n\t        'GUICtrlComboBox_GetDroppedState GUICtrlComboBox_GetDroppedWidth ' +\n\t        'GUICtrlComboBox_GetEditSel GUICtrlComboBox_GetEditText ' +\n\t        'GUICtrlComboBox_GetExtendedUI ' +\n\t        'GUICtrlComboBox_GetHorizontalExtent ' +\n\t        'GUICtrlComboBox_GetItemHeight GUICtrlComboBox_GetLBText ' +\n\t        'GUICtrlComboBox_GetLBTextLen GUICtrlComboBox_GetList ' +\n\t        'GUICtrlComboBox_GetListArray GUICtrlComboBox_GetLocale ' +\n\t        'GUICtrlComboBox_GetLocaleCountry GUICtrlComboBox_GetLocaleLang ' +\n\t        'GUICtrlComboBox_GetLocalePrimLang ' +\n\t        'GUICtrlComboBox_GetLocaleSubLang GUICtrlComboBox_GetMinVisible ' +\n\t        'GUICtrlComboBox_GetTopIndex GUICtrlComboBox_InitStorage ' +\n\t        'GUICtrlComboBox_InsertString GUICtrlComboBox_LimitText ' +\n\t        'GUICtrlComboBox_ReplaceEditSel GUICtrlComboBox_ResetContent ' +\n\t        'GUICtrlComboBox_SelectString GUICtrlComboBox_SetCueBanner ' +\n\t        'GUICtrlComboBox_SetCurSel GUICtrlComboBox_SetDroppedWidth ' +\n\t        'GUICtrlComboBox_SetEditSel GUICtrlComboBox_SetEditText ' +\n\t        'GUICtrlComboBox_SetExtendedUI ' +\n\t        'GUICtrlComboBox_SetHorizontalExtent ' +\n\t        'GUICtrlComboBox_SetItemHeight GUICtrlComboBox_SetMinVisible ' +\n\t        'GUICtrlComboBox_SetTopIndex GUICtrlComboBox_ShowDropDown ' +\n\t        'GUICtrlDTP_Create GUICtrlDTP_Destroy GUICtrlDTP_GetMCColor ' +\n\t        'GUICtrlDTP_GetMCFont GUICtrlDTP_GetMonthCal ' +\n\t        'GUICtrlDTP_GetRange GUICtrlDTP_GetRangeEx ' +\n\t        'GUICtrlDTP_GetSystemTime GUICtrlDTP_GetSystemTimeEx ' +\n\t        'GUICtrlDTP_SetFormat GUICtrlDTP_SetMCColor ' +\n\t        'GUICtrlDTP_SetMCFont GUICtrlDTP_SetRange ' +\n\t        'GUICtrlDTP_SetRangeEx GUICtrlDTP_SetSystemTime ' +\n\t        'GUICtrlDTP_SetSystemTimeEx GUICtrlEdit_AppendText ' +\n\t        'GUICtrlEdit_BeginUpdate GUICtrlEdit_CanUndo ' +\n\t        'GUICtrlEdit_CharFromPos GUICtrlEdit_Create ' +\n\t        'GUICtrlEdit_Destroy GUICtrlEdit_EmptyUndoBuffer ' +\n\t        'GUICtrlEdit_EndUpdate GUICtrlEdit_Find GUICtrlEdit_FmtLines ' +\n\t        'GUICtrlEdit_GetCueBanner GUICtrlEdit_GetFirstVisibleLine ' +\n\t        'GUICtrlEdit_GetLimitText GUICtrlEdit_GetLine ' +\n\t        'GUICtrlEdit_GetLineCount GUICtrlEdit_GetMargins ' +\n\t        'GUICtrlEdit_GetModify GUICtrlEdit_GetPasswordChar ' +\n\t        'GUICtrlEdit_GetRECT GUICtrlEdit_GetRECTEx GUICtrlEdit_GetSel ' +\n\t        'GUICtrlEdit_GetText GUICtrlEdit_GetTextLen ' +\n\t        'GUICtrlEdit_HideBalloonTip GUICtrlEdit_InsertText ' +\n\t        'GUICtrlEdit_LineFromChar GUICtrlEdit_LineIndex ' +\n\t        'GUICtrlEdit_LineLength GUICtrlEdit_LineScroll ' +\n\t        'GUICtrlEdit_PosFromChar GUICtrlEdit_ReplaceSel ' +\n\t        'GUICtrlEdit_Scroll GUICtrlEdit_SetCueBanner ' +\n\t        'GUICtrlEdit_SetLimitText GUICtrlEdit_SetMargins ' +\n\t        'GUICtrlEdit_SetModify GUICtrlEdit_SetPasswordChar ' +\n\t        'GUICtrlEdit_SetReadOnly GUICtrlEdit_SetRECT ' +\n\t        'GUICtrlEdit_SetRECTEx GUICtrlEdit_SetRECTNP ' +\n\t        'GUICtrlEdit_SetRectNPEx GUICtrlEdit_SetSel ' +\n\t        'GUICtrlEdit_SetTabStops GUICtrlEdit_SetText ' +\n\t        'GUICtrlEdit_ShowBalloonTip GUICtrlEdit_Undo ' +\n\t        'GUICtrlHeader_AddItem GUICtrlHeader_ClearFilter ' +\n\t        'GUICtrlHeader_ClearFilterAll GUICtrlHeader_Create ' +\n\t        'GUICtrlHeader_CreateDragImage GUICtrlHeader_DeleteItem ' +\n\t        'GUICtrlHeader_Destroy GUICtrlHeader_EditFilter ' +\n\t        'GUICtrlHeader_GetBitmapMargin GUICtrlHeader_GetImageList ' +\n\t        'GUICtrlHeader_GetItem GUICtrlHeader_GetItemAlign ' +\n\t        'GUICtrlHeader_GetItemBitmap GUICtrlHeader_GetItemCount ' +\n\t        'GUICtrlHeader_GetItemDisplay GUICtrlHeader_GetItemFlags ' +\n\t        'GUICtrlHeader_GetItemFormat GUICtrlHeader_GetItemImage ' +\n\t        'GUICtrlHeader_GetItemOrder GUICtrlHeader_GetItemParam ' +\n\t        'GUICtrlHeader_GetItemRect GUICtrlHeader_GetItemRectEx ' +\n\t        'GUICtrlHeader_GetItemText GUICtrlHeader_GetItemWidth ' +\n\t        'GUICtrlHeader_GetOrderArray GUICtrlHeader_GetUnicodeFormat ' +\n\t        'GUICtrlHeader_HitTest GUICtrlHeader_InsertItem ' +\n\t        'GUICtrlHeader_Layout GUICtrlHeader_OrderToIndex ' +\n\t        'GUICtrlHeader_SetBitmapMargin ' +\n\t        'GUICtrlHeader_SetFilterChangeTimeout ' +\n\t        'GUICtrlHeader_SetHotDivider GUICtrlHeader_SetImageList ' +\n\t        'GUICtrlHeader_SetItem GUICtrlHeader_SetItemAlign ' +\n\t        'GUICtrlHeader_SetItemBitmap GUICtrlHeader_SetItemDisplay ' +\n\t        'GUICtrlHeader_SetItemFlags GUICtrlHeader_SetItemFormat ' +\n\t        'GUICtrlHeader_SetItemImage GUICtrlHeader_SetItemOrder ' +\n\t        'GUICtrlHeader_SetItemParam GUICtrlHeader_SetItemText ' +\n\t        'GUICtrlHeader_SetItemWidth GUICtrlHeader_SetOrderArray ' +\n\t        'GUICtrlHeader_SetUnicodeFormat GUICtrlIpAddress_ClearAddress ' +\n\t        'GUICtrlIpAddress_Create GUICtrlIpAddress_Destroy ' +\n\t        'GUICtrlIpAddress_Get GUICtrlIpAddress_GetArray ' +\n\t        'GUICtrlIpAddress_GetEx GUICtrlIpAddress_IsBlank ' +\n\t        'GUICtrlIpAddress_Set GUICtrlIpAddress_SetArray ' +\n\t        'GUICtrlIpAddress_SetEx GUICtrlIpAddress_SetFocus ' +\n\t        'GUICtrlIpAddress_SetFont GUICtrlIpAddress_SetRange ' +\n\t        'GUICtrlIpAddress_ShowHide GUICtrlListBox_AddFile ' +\n\t        'GUICtrlListBox_AddString GUICtrlListBox_BeginUpdate ' +\n\t        'GUICtrlListBox_ClickItem GUICtrlListBox_Create ' +\n\t        'GUICtrlListBox_DeleteString GUICtrlListBox_Destroy ' +\n\t        'GUICtrlListBox_Dir GUICtrlListBox_EndUpdate ' +\n\t        'GUICtrlListBox_FindInText GUICtrlListBox_FindString ' +\n\t        'GUICtrlListBox_GetAnchorIndex GUICtrlListBox_GetCaretIndex ' +\n\t        'GUICtrlListBox_GetCount GUICtrlListBox_GetCurSel ' +\n\t        'GUICtrlListBox_GetHorizontalExtent GUICtrlListBox_GetItemData ' +\n\t        'GUICtrlListBox_GetItemHeight GUICtrlListBox_GetItemRect ' +\n\t        'GUICtrlListBox_GetItemRectEx GUICtrlListBox_GetListBoxInfo ' +\n\t        'GUICtrlListBox_GetLocale GUICtrlListBox_GetLocaleCountry ' +\n\t        'GUICtrlListBox_GetLocaleLang GUICtrlListBox_GetLocalePrimLang ' +\n\t        'GUICtrlListBox_GetLocaleSubLang GUICtrlListBox_GetSel ' +\n\t        'GUICtrlListBox_GetSelCount GUICtrlListBox_GetSelItems ' +\n\t        'GUICtrlListBox_GetSelItemsText GUICtrlListBox_GetText ' +\n\t        'GUICtrlListBox_GetTextLen GUICtrlListBox_GetTopIndex ' +\n\t        'GUICtrlListBox_InitStorage GUICtrlListBox_InsertString ' +\n\t        'GUICtrlListBox_ItemFromPoint GUICtrlListBox_ReplaceString ' +\n\t        'GUICtrlListBox_ResetContent GUICtrlListBox_SelectString ' +\n\t        'GUICtrlListBox_SelItemRange GUICtrlListBox_SelItemRangeEx ' +\n\t        'GUICtrlListBox_SetAnchorIndex GUICtrlListBox_SetCaretIndex ' +\n\t        'GUICtrlListBox_SetColumnWidth GUICtrlListBox_SetCurSel ' +\n\t        'GUICtrlListBox_SetHorizontalExtent GUICtrlListBox_SetItemData ' +\n\t        'GUICtrlListBox_SetItemHeight GUICtrlListBox_SetLocale ' +\n\t        'GUICtrlListBox_SetSel GUICtrlListBox_SetTabStops ' +\n\t        'GUICtrlListBox_SetTopIndex GUICtrlListBox_Sort ' +\n\t        'GUICtrlListBox_SwapString GUICtrlListBox_UpdateHScroll ' +\n\t        'GUICtrlListView_AddArray GUICtrlListView_AddColumn ' +\n\t        'GUICtrlListView_AddItem GUICtrlListView_AddSubItem ' +\n\t        'GUICtrlListView_ApproximateViewHeight ' +\n\t        'GUICtrlListView_ApproximateViewRect ' +\n\t        'GUICtrlListView_ApproximateViewWidth GUICtrlListView_Arrange ' +\n\t        'GUICtrlListView_BeginUpdate GUICtrlListView_CancelEditLabel ' +\n\t        'GUICtrlListView_ClickItem GUICtrlListView_CopyItems ' +\n\t        'GUICtrlListView_Create GUICtrlListView_CreateDragImage ' +\n\t        'GUICtrlListView_CreateSolidBitMap ' +\n\t        'GUICtrlListView_DeleteAllItems GUICtrlListView_DeleteColumn ' +\n\t        'GUICtrlListView_DeleteItem GUICtrlListView_DeleteItemsSelected ' +\n\t        'GUICtrlListView_Destroy GUICtrlListView_DrawDragImage ' +\n\t        'GUICtrlListView_EditLabel GUICtrlListView_EnableGroupView ' +\n\t        'GUICtrlListView_EndUpdate GUICtrlListView_EnsureVisible ' +\n\t        'GUICtrlListView_FindInText GUICtrlListView_FindItem ' +\n\t        'GUICtrlListView_FindNearest GUICtrlListView_FindParam ' +\n\t        'GUICtrlListView_FindText GUICtrlListView_GetBkColor ' +\n\t        'GUICtrlListView_GetBkImage GUICtrlListView_GetCallbackMask ' +\n\t        'GUICtrlListView_GetColumn GUICtrlListView_GetColumnCount ' +\n\t        'GUICtrlListView_GetColumnOrder ' +\n\t        'GUICtrlListView_GetColumnOrderArray ' +\n\t        'GUICtrlListView_GetColumnWidth GUICtrlListView_GetCounterPage ' +\n\t        'GUICtrlListView_GetEditControl ' +\n\t        'GUICtrlListView_GetExtendedListViewStyle ' +\n\t        'GUICtrlListView_GetFocusedGroup GUICtrlListView_GetGroupCount ' +\n\t        'GUICtrlListView_GetGroupInfo ' +\n\t        'GUICtrlListView_GetGroupInfoByIndex ' +\n\t        'GUICtrlListView_GetGroupRect ' +\n\t        'GUICtrlListView_GetGroupViewEnabled GUICtrlListView_GetHeader ' +\n\t        'GUICtrlListView_GetHotCursor GUICtrlListView_GetHotItem ' +\n\t        'GUICtrlListView_GetHoverTime GUICtrlListView_GetImageList ' +\n\t        'GUICtrlListView_GetISearchString GUICtrlListView_GetItem ' +\n\t        'GUICtrlListView_GetItemChecked GUICtrlListView_GetItemCount ' +\n\t        'GUICtrlListView_GetItemCut GUICtrlListView_GetItemDropHilited ' +\n\t        'GUICtrlListView_GetItemEx GUICtrlListView_GetItemFocused ' +\n\t        'GUICtrlListView_GetItemGroupID GUICtrlListView_GetItemImage ' +\n\t        'GUICtrlListView_GetItemIndent GUICtrlListView_GetItemParam ' +\n\t        'GUICtrlListView_GetItemPosition ' +\n\t        'GUICtrlListView_GetItemPositionX ' +\n\t        'GUICtrlListView_GetItemPositionY GUICtrlListView_GetItemRect ' +\n\t        'GUICtrlListView_GetItemRectEx GUICtrlListView_GetItemSelected ' +\n\t        'GUICtrlListView_GetItemSpacing GUICtrlListView_GetItemSpacingX ' +\n\t        'GUICtrlListView_GetItemSpacingY GUICtrlListView_GetItemState ' +\n\t        'GUICtrlListView_GetItemStateImage GUICtrlListView_GetItemText ' +\n\t        'GUICtrlListView_GetItemTextArray ' +\n\t        'GUICtrlListView_GetItemTextString GUICtrlListView_GetNextItem ' +\n\t        'GUICtrlListView_GetNumberOfWorkAreas GUICtrlListView_GetOrigin ' +\n\t        'GUICtrlListView_GetOriginX GUICtrlListView_GetOriginY ' +\n\t        'GUICtrlListView_GetOutlineColor ' +\n\t        'GUICtrlListView_GetSelectedColumn ' +\n\t        'GUICtrlListView_GetSelectedCount ' +\n\t        'GUICtrlListView_GetSelectedIndices ' +\n\t        'GUICtrlListView_GetSelectionMark GUICtrlListView_GetStringWidth ' +\n\t        'GUICtrlListView_GetSubItemRect GUICtrlListView_GetTextBkColor ' +\n\t        'GUICtrlListView_GetTextColor GUICtrlListView_GetToolTips ' +\n\t        'GUICtrlListView_GetTopIndex GUICtrlListView_GetUnicodeFormat ' +\n\t        'GUICtrlListView_GetView GUICtrlListView_GetViewDetails ' +\n\t        'GUICtrlListView_GetViewLarge GUICtrlListView_GetViewList ' +\n\t        'GUICtrlListView_GetViewRect GUICtrlListView_GetViewSmall ' +\n\t        'GUICtrlListView_GetViewTile GUICtrlListView_HideColumn ' +\n\t        'GUICtrlListView_HitTest GUICtrlListView_InsertColumn ' +\n\t        'GUICtrlListView_InsertGroup GUICtrlListView_InsertItem ' +\n\t        'GUICtrlListView_JustifyColumn GUICtrlListView_MapIDToIndex ' +\n\t        'GUICtrlListView_MapIndexToID GUICtrlListView_RedrawItems ' +\n\t        'GUICtrlListView_RegisterSortCallBack ' +\n\t        'GUICtrlListView_RemoveAllGroups GUICtrlListView_RemoveGroup ' +\n\t        'GUICtrlListView_Scroll GUICtrlListView_SetBkColor ' +\n\t        'GUICtrlListView_SetBkImage GUICtrlListView_SetCallBackMask ' +\n\t        'GUICtrlListView_SetColumn GUICtrlListView_SetColumnOrder ' +\n\t        'GUICtrlListView_SetColumnOrderArray ' +\n\t        'GUICtrlListView_SetColumnWidth ' +\n\t        'GUICtrlListView_SetExtendedListViewStyle ' +\n\t        'GUICtrlListView_SetGroupInfo GUICtrlListView_SetHotItem ' +\n\t        'GUICtrlListView_SetHoverTime GUICtrlListView_SetIconSpacing ' +\n\t        'GUICtrlListView_SetImageList GUICtrlListView_SetItem ' +\n\t        'GUICtrlListView_SetItemChecked GUICtrlListView_SetItemCount ' +\n\t        'GUICtrlListView_SetItemCut GUICtrlListView_SetItemDropHilited ' +\n\t        'GUICtrlListView_SetItemEx GUICtrlListView_SetItemFocused ' +\n\t        'GUICtrlListView_SetItemGroupID GUICtrlListView_SetItemImage ' +\n\t        'GUICtrlListView_SetItemIndent GUICtrlListView_SetItemParam ' +\n\t        'GUICtrlListView_SetItemPosition ' +\n\t        'GUICtrlListView_SetItemPosition32 ' +\n\t        'GUICtrlListView_SetItemSelected GUICtrlListView_SetItemState ' +\n\t        'GUICtrlListView_SetItemStateImage GUICtrlListView_SetItemText ' +\n\t        'GUICtrlListView_SetOutlineColor ' +\n\t        'GUICtrlListView_SetSelectedColumn ' +\n\t        'GUICtrlListView_SetSelectionMark GUICtrlListView_SetTextBkColor ' +\n\t        'GUICtrlListView_SetTextColor GUICtrlListView_SetToolTips ' +\n\t        'GUICtrlListView_SetUnicodeFormat GUICtrlListView_SetView ' +\n\t        'GUICtrlListView_SetWorkAreas GUICtrlListView_SimpleSort ' +\n\t        'GUICtrlListView_SortItems GUICtrlListView_SubItemHitTest ' +\n\t        'GUICtrlListView_UnRegisterSortCallBack GUICtrlMenu_AddMenuItem ' +\n\t        'GUICtrlMenu_AppendMenu GUICtrlMenu_CalculatePopupWindowPosition ' +\n\t        'GUICtrlMenu_CheckMenuItem GUICtrlMenu_CheckRadioItem ' +\n\t        'GUICtrlMenu_CreateMenu GUICtrlMenu_CreatePopup ' +\n\t        'GUICtrlMenu_DeleteMenu GUICtrlMenu_DestroyMenu ' +\n\t        'GUICtrlMenu_DrawMenuBar GUICtrlMenu_EnableMenuItem ' +\n\t        'GUICtrlMenu_FindItem GUICtrlMenu_FindParent ' +\n\t        'GUICtrlMenu_GetItemBmp GUICtrlMenu_GetItemBmpChecked ' +\n\t        'GUICtrlMenu_GetItemBmpUnchecked GUICtrlMenu_GetItemChecked ' +\n\t        'GUICtrlMenu_GetItemCount GUICtrlMenu_GetItemData ' +\n\t        'GUICtrlMenu_GetItemDefault GUICtrlMenu_GetItemDisabled ' +\n\t        'GUICtrlMenu_GetItemEnabled GUICtrlMenu_GetItemGrayed ' +\n\t        'GUICtrlMenu_GetItemHighlighted GUICtrlMenu_GetItemID ' +\n\t        'GUICtrlMenu_GetItemInfo GUICtrlMenu_GetItemRect ' +\n\t        'GUICtrlMenu_GetItemRectEx GUICtrlMenu_GetItemState ' +\n\t        'GUICtrlMenu_GetItemStateEx GUICtrlMenu_GetItemSubMenu ' +\n\t        'GUICtrlMenu_GetItemText GUICtrlMenu_GetItemType ' +\n\t        'GUICtrlMenu_GetMenu GUICtrlMenu_GetMenuBackground ' +\n\t        'GUICtrlMenu_GetMenuBarInfo GUICtrlMenu_GetMenuContextHelpID ' +\n\t        'GUICtrlMenu_GetMenuData GUICtrlMenu_GetMenuDefaultItem ' +\n\t        'GUICtrlMenu_GetMenuHeight GUICtrlMenu_GetMenuInfo ' +\n\t        'GUICtrlMenu_GetMenuStyle GUICtrlMenu_GetSystemMenu ' +\n\t        'GUICtrlMenu_InsertMenuItem GUICtrlMenu_InsertMenuItemEx ' +\n\t        'GUICtrlMenu_IsMenu GUICtrlMenu_LoadMenu ' +\n\t        'GUICtrlMenu_MapAccelerator GUICtrlMenu_MenuItemFromPoint ' +\n\t        'GUICtrlMenu_RemoveMenu GUICtrlMenu_SetItemBitmaps ' +\n\t        'GUICtrlMenu_SetItemBmp GUICtrlMenu_SetItemBmpChecked ' +\n\t        'GUICtrlMenu_SetItemBmpUnchecked GUICtrlMenu_SetItemChecked ' +\n\t        'GUICtrlMenu_SetItemData GUICtrlMenu_SetItemDefault ' +\n\t        'GUICtrlMenu_SetItemDisabled GUICtrlMenu_SetItemEnabled ' +\n\t        'GUICtrlMenu_SetItemGrayed GUICtrlMenu_SetItemHighlighted ' +\n\t        'GUICtrlMenu_SetItemID GUICtrlMenu_SetItemInfo ' +\n\t        'GUICtrlMenu_SetItemState GUICtrlMenu_SetItemSubMenu ' +\n\t        'GUICtrlMenu_SetItemText GUICtrlMenu_SetItemType ' +\n\t        'GUICtrlMenu_SetMenu GUICtrlMenu_SetMenuBackground ' +\n\t        'GUICtrlMenu_SetMenuContextHelpID GUICtrlMenu_SetMenuData ' +\n\t        'GUICtrlMenu_SetMenuDefaultItem GUICtrlMenu_SetMenuHeight ' +\n\t        'GUICtrlMenu_SetMenuInfo GUICtrlMenu_SetMenuStyle ' +\n\t        'GUICtrlMenu_TrackPopupMenu GUICtrlMonthCal_Create ' +\n\t        'GUICtrlMonthCal_Destroy GUICtrlMonthCal_GetCalendarBorder ' +\n\t        'GUICtrlMonthCal_GetCalendarCount GUICtrlMonthCal_GetColor ' +\n\t        'GUICtrlMonthCal_GetColorArray GUICtrlMonthCal_GetCurSel ' +\n\t        'GUICtrlMonthCal_GetCurSelStr GUICtrlMonthCal_GetFirstDOW ' +\n\t        'GUICtrlMonthCal_GetFirstDOWStr GUICtrlMonthCal_GetMaxSelCount ' +\n\t        'GUICtrlMonthCal_GetMaxTodayWidth ' +\n\t        'GUICtrlMonthCal_GetMinReqHeight GUICtrlMonthCal_GetMinReqRect ' +\n\t        'GUICtrlMonthCal_GetMinReqRectArray ' +\n\t        'GUICtrlMonthCal_GetMinReqWidth GUICtrlMonthCal_GetMonthDelta ' +\n\t        'GUICtrlMonthCal_GetMonthRange GUICtrlMonthCal_GetMonthRangeMax ' +\n\t        'GUICtrlMonthCal_GetMonthRangeMaxStr ' +\n\t        'GUICtrlMonthCal_GetMonthRangeMin ' +\n\t        'GUICtrlMonthCal_GetMonthRangeMinStr ' +\n\t        'GUICtrlMonthCal_GetMonthRangeSpan GUICtrlMonthCal_GetRange ' +\n\t        'GUICtrlMonthCal_GetRangeMax GUICtrlMonthCal_GetRangeMaxStr ' +\n\t        'GUICtrlMonthCal_GetRangeMin GUICtrlMonthCal_GetRangeMinStr ' +\n\t        'GUICtrlMonthCal_GetSelRange GUICtrlMonthCal_GetSelRangeMax ' +\n\t        'GUICtrlMonthCal_GetSelRangeMaxStr ' +\n\t        'GUICtrlMonthCal_GetSelRangeMin ' +\n\t        'GUICtrlMonthCal_GetSelRangeMinStr GUICtrlMonthCal_GetToday ' +\n\t        'GUICtrlMonthCal_GetTodayStr GUICtrlMonthCal_GetUnicodeFormat ' +\n\t        'GUICtrlMonthCal_HitTest GUICtrlMonthCal_SetCalendarBorder ' +\n\t        'GUICtrlMonthCal_SetColor GUICtrlMonthCal_SetCurSel ' +\n\t        'GUICtrlMonthCal_SetDayState GUICtrlMonthCal_SetFirstDOW ' +\n\t        'GUICtrlMonthCal_SetMaxSelCount GUICtrlMonthCal_SetMonthDelta ' +\n\t        'GUICtrlMonthCal_SetRange GUICtrlMonthCal_SetSelRange ' +\n\t        'GUICtrlMonthCal_SetToday GUICtrlMonthCal_SetUnicodeFormat ' +\n\t        'GUICtrlRebar_AddBand GUICtrlRebar_AddToolBarBand ' +\n\t        'GUICtrlRebar_BeginDrag GUICtrlRebar_Create ' +\n\t        'GUICtrlRebar_DeleteBand GUICtrlRebar_Destroy ' +\n\t        'GUICtrlRebar_DragMove GUICtrlRebar_EndDrag ' +\n\t        'GUICtrlRebar_GetBandBackColor GUICtrlRebar_GetBandBorders ' +\n\t        'GUICtrlRebar_GetBandBordersEx GUICtrlRebar_GetBandChildHandle ' +\n\t        'GUICtrlRebar_GetBandChildSize GUICtrlRebar_GetBandCount ' +\n\t        'GUICtrlRebar_GetBandForeColor GUICtrlRebar_GetBandHeaderSize ' +\n\t        'GUICtrlRebar_GetBandID GUICtrlRebar_GetBandIdealSize ' +\n\t        'GUICtrlRebar_GetBandLength GUICtrlRebar_GetBandLParam ' +\n\t        'GUICtrlRebar_GetBandMargins GUICtrlRebar_GetBandMarginsEx ' +\n\t        'GUICtrlRebar_GetBandRect GUICtrlRebar_GetBandRectEx ' +\n\t        'GUICtrlRebar_GetBandStyle GUICtrlRebar_GetBandStyleBreak ' +\n\t        'GUICtrlRebar_GetBandStyleChildEdge ' +\n\t        'GUICtrlRebar_GetBandStyleFixedBMP ' +\n\t        'GUICtrlRebar_GetBandStyleFixedSize ' +\n\t        'GUICtrlRebar_GetBandStyleGripperAlways ' +\n\t        'GUICtrlRebar_GetBandStyleHidden ' +\n\t        'GUICtrlRebar_GetBandStyleHideTitle ' +\n\t        'GUICtrlRebar_GetBandStyleNoGripper ' +\n\t        'GUICtrlRebar_GetBandStyleTopAlign ' +\n\t        'GUICtrlRebar_GetBandStyleUseChevron ' +\n\t        'GUICtrlRebar_GetBandStyleVariableHeight ' +\n\t        'GUICtrlRebar_GetBandText GUICtrlRebar_GetBarHeight ' +\n\t        'GUICtrlRebar_GetBarInfo GUICtrlRebar_GetBKColor ' +\n\t        'GUICtrlRebar_GetColorScheme GUICtrlRebar_GetRowCount ' +\n\t        'GUICtrlRebar_GetRowHeight GUICtrlRebar_GetTextColor ' +\n\t        'GUICtrlRebar_GetToolTips GUICtrlRebar_GetUnicodeFormat ' +\n\t        'GUICtrlRebar_HitTest GUICtrlRebar_IDToIndex ' +\n\t        'GUICtrlRebar_MaximizeBand GUICtrlRebar_MinimizeBand ' +\n\t        'GUICtrlRebar_MoveBand GUICtrlRebar_SetBandBackColor ' +\n\t        'GUICtrlRebar_SetBandForeColor GUICtrlRebar_SetBandHeaderSize ' +\n\t        'GUICtrlRebar_SetBandID GUICtrlRebar_SetBandIdealSize ' +\n\t        'GUICtrlRebar_SetBandLength GUICtrlRebar_SetBandLParam ' +\n\t        'GUICtrlRebar_SetBandStyle GUICtrlRebar_SetBandStyleBreak ' +\n\t        'GUICtrlRebar_SetBandStyleChildEdge ' +\n\t        'GUICtrlRebar_SetBandStyleFixedBMP ' +\n\t        'GUICtrlRebar_SetBandStyleFixedSize ' +\n\t        'GUICtrlRebar_SetBandStyleGripperAlways ' +\n\t        'GUICtrlRebar_SetBandStyleHidden ' +\n\t        'GUICtrlRebar_SetBandStyleHideTitle ' +\n\t        'GUICtrlRebar_SetBandStyleNoGripper ' +\n\t        'GUICtrlRebar_SetBandStyleTopAlign ' +\n\t        'GUICtrlRebar_SetBandStyleUseChevron ' +\n\t        'GUICtrlRebar_SetBandStyleVariableHeight ' +\n\t        'GUICtrlRebar_SetBandText GUICtrlRebar_SetBarInfo ' +\n\t        'GUICtrlRebar_SetBKColor GUICtrlRebar_SetColorScheme ' +\n\t        'GUICtrlRebar_SetTextColor GUICtrlRebar_SetToolTips ' +\n\t        'GUICtrlRebar_SetUnicodeFormat GUICtrlRebar_ShowBand ' +\n\t        'GUICtrlRichEdit_AppendText GUICtrlRichEdit_AutoDetectURL ' +\n\t        'GUICtrlRichEdit_CanPaste GUICtrlRichEdit_CanPasteSpecial ' +\n\t        'GUICtrlRichEdit_CanRedo GUICtrlRichEdit_CanUndo ' +\n\t        'GUICtrlRichEdit_ChangeFontSize GUICtrlRichEdit_Copy ' +\n\t        'GUICtrlRichEdit_Create GUICtrlRichEdit_Cut ' +\n\t        'GUICtrlRichEdit_Deselect GUICtrlRichEdit_Destroy ' +\n\t        'GUICtrlRichEdit_EmptyUndoBuffer GUICtrlRichEdit_FindText ' +\n\t        'GUICtrlRichEdit_FindTextInRange GUICtrlRichEdit_GetBkColor ' +\n\t        'GUICtrlRichEdit_GetCharAttributes ' +\n\t        'GUICtrlRichEdit_GetCharBkColor GUICtrlRichEdit_GetCharColor ' +\n\t        'GUICtrlRichEdit_GetCharPosFromXY ' +\n\t        'GUICtrlRichEdit_GetCharPosOfNextWord ' +\n\t        'GUICtrlRichEdit_GetCharPosOfPreviousWord ' +\n\t        'GUICtrlRichEdit_GetCharWordBreakInfo ' +\n\t        'GUICtrlRichEdit_GetFirstCharPosOnLine GUICtrlRichEdit_GetFont ' +\n\t        'GUICtrlRichEdit_GetLineCount GUICtrlRichEdit_GetLineLength ' +\n\t        'GUICtrlRichEdit_GetLineNumberFromCharPos ' +\n\t        'GUICtrlRichEdit_GetNextRedo GUICtrlRichEdit_GetNextUndo ' +\n\t        'GUICtrlRichEdit_GetNumberOfFirstVisibleLine ' +\n\t        'GUICtrlRichEdit_GetParaAlignment ' +\n\t        'GUICtrlRichEdit_GetParaAttributes GUICtrlRichEdit_GetParaBorder ' +\n\t        'GUICtrlRichEdit_GetParaIndents GUICtrlRichEdit_GetParaNumbering ' +\n\t        'GUICtrlRichEdit_GetParaShading GUICtrlRichEdit_GetParaSpacing ' +\n\t        'GUICtrlRichEdit_GetParaTabStops GUICtrlRichEdit_GetPasswordChar ' +\n\t        'GUICtrlRichEdit_GetRECT GUICtrlRichEdit_GetScrollPos ' +\n\t        'GUICtrlRichEdit_GetSel GUICtrlRichEdit_GetSelAA ' +\n\t        'GUICtrlRichEdit_GetSelText GUICtrlRichEdit_GetSpaceUnit ' +\n\t        'GUICtrlRichEdit_GetText GUICtrlRichEdit_GetTextInLine ' +\n\t        'GUICtrlRichEdit_GetTextInRange GUICtrlRichEdit_GetTextLength ' +\n\t        'GUICtrlRichEdit_GetVersion GUICtrlRichEdit_GetXYFromCharPos ' +\n\t        'GUICtrlRichEdit_GetZoom GUICtrlRichEdit_GotoCharPos ' +\n\t        'GUICtrlRichEdit_HideSelection GUICtrlRichEdit_InsertText ' +\n\t        'GUICtrlRichEdit_IsModified GUICtrlRichEdit_IsTextSelected ' +\n\t        'GUICtrlRichEdit_Paste GUICtrlRichEdit_PasteSpecial ' +\n\t        'GUICtrlRichEdit_PauseRedraw GUICtrlRichEdit_Redo ' +\n\t        'GUICtrlRichEdit_ReplaceText GUICtrlRichEdit_ResumeRedraw ' +\n\t        'GUICtrlRichEdit_ScrollLineOrPage GUICtrlRichEdit_ScrollLines ' +\n\t        'GUICtrlRichEdit_ScrollToCaret GUICtrlRichEdit_SetBkColor ' +\n\t        'GUICtrlRichEdit_SetCharAttributes ' +\n\t        'GUICtrlRichEdit_SetCharBkColor GUICtrlRichEdit_SetCharColor ' +\n\t        'GUICtrlRichEdit_SetEventMask GUICtrlRichEdit_SetFont ' +\n\t        'GUICtrlRichEdit_SetLimitOnText GUICtrlRichEdit_SetModified ' +\n\t        'GUICtrlRichEdit_SetParaAlignment ' +\n\t        'GUICtrlRichEdit_SetParaAttributes GUICtrlRichEdit_SetParaBorder ' +\n\t        'GUICtrlRichEdit_SetParaIndents GUICtrlRichEdit_SetParaNumbering ' +\n\t        'GUICtrlRichEdit_SetParaShading GUICtrlRichEdit_SetParaSpacing ' +\n\t        'GUICtrlRichEdit_SetParaTabStops GUICtrlRichEdit_SetPasswordChar ' +\n\t        'GUICtrlRichEdit_SetReadOnly GUICtrlRichEdit_SetRECT ' +\n\t        'GUICtrlRichEdit_SetScrollPos GUICtrlRichEdit_SetSel ' +\n\t        'GUICtrlRichEdit_SetSpaceUnit GUICtrlRichEdit_SetTabStops ' +\n\t        'GUICtrlRichEdit_SetText GUICtrlRichEdit_SetUndoLimit ' +\n\t        'GUICtrlRichEdit_SetZoom GUICtrlRichEdit_StreamFromFile ' +\n\t        'GUICtrlRichEdit_StreamFromVar GUICtrlRichEdit_StreamToFile ' +\n\t        'GUICtrlRichEdit_StreamToVar GUICtrlRichEdit_Undo ' +\n\t        'GUICtrlSlider_ClearSel GUICtrlSlider_ClearTics ' +\n\t        'GUICtrlSlider_Create GUICtrlSlider_Destroy ' +\n\t        'GUICtrlSlider_GetBuddy GUICtrlSlider_GetChannelRect ' +\n\t        'GUICtrlSlider_GetChannelRectEx GUICtrlSlider_GetLineSize ' +\n\t        'GUICtrlSlider_GetLogicalTics GUICtrlSlider_GetNumTics ' +\n\t        'GUICtrlSlider_GetPageSize GUICtrlSlider_GetPos ' +\n\t        'GUICtrlSlider_GetRange GUICtrlSlider_GetRangeMax ' +\n\t        'GUICtrlSlider_GetRangeMin GUICtrlSlider_GetSel ' +\n\t        'GUICtrlSlider_GetSelEnd GUICtrlSlider_GetSelStart ' +\n\t        'GUICtrlSlider_GetThumbLength GUICtrlSlider_GetThumbRect ' +\n\t        'GUICtrlSlider_GetThumbRectEx GUICtrlSlider_GetTic ' +\n\t        'GUICtrlSlider_GetTicPos GUICtrlSlider_GetToolTips ' +\n\t        'GUICtrlSlider_GetUnicodeFormat GUICtrlSlider_SetBuddy ' +\n\t        'GUICtrlSlider_SetLineSize GUICtrlSlider_SetPageSize ' +\n\t        'GUICtrlSlider_SetPos GUICtrlSlider_SetRange ' +\n\t        'GUICtrlSlider_SetRangeMax GUICtrlSlider_SetRangeMin ' +\n\t        'GUICtrlSlider_SetSel GUICtrlSlider_SetSelEnd ' +\n\t        'GUICtrlSlider_SetSelStart GUICtrlSlider_SetThumbLength ' +\n\t        'GUICtrlSlider_SetTic GUICtrlSlider_SetTicFreq ' +\n\t        'GUICtrlSlider_SetTipSide GUICtrlSlider_SetToolTips ' +\n\t        'GUICtrlSlider_SetUnicodeFormat GUICtrlStatusBar_Create ' +\n\t        'GUICtrlStatusBar_Destroy GUICtrlStatusBar_EmbedControl ' +\n\t        'GUICtrlStatusBar_GetBorders GUICtrlStatusBar_GetBordersHorz ' +\n\t        'GUICtrlStatusBar_GetBordersRect GUICtrlStatusBar_GetBordersVert ' +\n\t        'GUICtrlStatusBar_GetCount GUICtrlStatusBar_GetHeight ' +\n\t        'GUICtrlStatusBar_GetIcon GUICtrlStatusBar_GetParts ' +\n\t        'GUICtrlStatusBar_GetRect GUICtrlStatusBar_GetRectEx ' +\n\t        'GUICtrlStatusBar_GetText GUICtrlStatusBar_GetTextFlags ' +\n\t        'GUICtrlStatusBar_GetTextLength GUICtrlStatusBar_GetTextLengthEx ' +\n\t        'GUICtrlStatusBar_GetTipText GUICtrlStatusBar_GetUnicodeFormat ' +\n\t        'GUICtrlStatusBar_GetWidth GUICtrlStatusBar_IsSimple ' +\n\t        'GUICtrlStatusBar_Resize GUICtrlStatusBar_SetBkColor ' +\n\t        'GUICtrlStatusBar_SetIcon GUICtrlStatusBar_SetMinHeight ' +\n\t        'GUICtrlStatusBar_SetParts GUICtrlStatusBar_SetSimple ' +\n\t        'GUICtrlStatusBar_SetText GUICtrlStatusBar_SetTipText ' +\n\t        'GUICtrlStatusBar_SetUnicodeFormat GUICtrlStatusBar_ShowHide ' +\n\t        'GUICtrlTab_ActivateTab GUICtrlTab_ClickTab GUICtrlTab_Create ' +\n\t        'GUICtrlTab_DeleteAllItems GUICtrlTab_DeleteItem ' +\n\t        'GUICtrlTab_DeselectAll GUICtrlTab_Destroy GUICtrlTab_FindTab ' +\n\t        'GUICtrlTab_GetCurFocus GUICtrlTab_GetCurSel ' +\n\t        'GUICtrlTab_GetDisplayRect GUICtrlTab_GetDisplayRectEx ' +\n\t        'GUICtrlTab_GetExtendedStyle GUICtrlTab_GetImageList ' +\n\t        'GUICtrlTab_GetItem GUICtrlTab_GetItemCount ' +\n\t        'GUICtrlTab_GetItemImage GUICtrlTab_GetItemParam ' +\n\t        'GUICtrlTab_GetItemRect GUICtrlTab_GetItemRectEx ' +\n\t        'GUICtrlTab_GetItemState GUICtrlTab_GetItemText ' +\n\t        'GUICtrlTab_GetRowCount GUICtrlTab_GetToolTips ' +\n\t        'GUICtrlTab_GetUnicodeFormat GUICtrlTab_HighlightItem ' +\n\t        'GUICtrlTab_HitTest GUICtrlTab_InsertItem ' +\n\t        'GUICtrlTab_RemoveImage GUICtrlTab_SetCurFocus ' +\n\t        'GUICtrlTab_SetCurSel GUICtrlTab_SetExtendedStyle ' +\n\t        'GUICtrlTab_SetImageList GUICtrlTab_SetItem ' +\n\t        'GUICtrlTab_SetItemImage GUICtrlTab_SetItemParam ' +\n\t        'GUICtrlTab_SetItemSize GUICtrlTab_SetItemState ' +\n\t        'GUICtrlTab_SetItemText GUICtrlTab_SetMinTabWidth ' +\n\t        'GUICtrlTab_SetPadding GUICtrlTab_SetToolTips ' +\n\t        'GUICtrlTab_SetUnicodeFormat GUICtrlToolbar_AddBitmap ' +\n\t        'GUICtrlToolbar_AddButton GUICtrlToolbar_AddButtonSep ' +\n\t        'GUICtrlToolbar_AddString GUICtrlToolbar_ButtonCount ' +\n\t        'GUICtrlToolbar_CheckButton GUICtrlToolbar_ClickAccel ' +\n\t        'GUICtrlToolbar_ClickButton GUICtrlToolbar_ClickIndex ' +\n\t        'GUICtrlToolbar_CommandToIndex GUICtrlToolbar_Create ' +\n\t        'GUICtrlToolbar_Customize GUICtrlToolbar_DeleteButton ' +\n\t        'GUICtrlToolbar_Destroy GUICtrlToolbar_EnableButton ' +\n\t        'GUICtrlToolbar_FindToolbar GUICtrlToolbar_GetAnchorHighlight ' +\n\t        'GUICtrlToolbar_GetBitmapFlags GUICtrlToolbar_GetButtonBitmap ' +\n\t        'GUICtrlToolbar_GetButtonInfo GUICtrlToolbar_GetButtonInfoEx ' +\n\t        'GUICtrlToolbar_GetButtonParam GUICtrlToolbar_GetButtonRect ' +\n\t        'GUICtrlToolbar_GetButtonRectEx GUICtrlToolbar_GetButtonSize ' +\n\t        'GUICtrlToolbar_GetButtonState GUICtrlToolbar_GetButtonStyle ' +\n\t        'GUICtrlToolbar_GetButtonText GUICtrlToolbar_GetColorScheme ' +\n\t        'GUICtrlToolbar_GetDisabledImageList ' +\n\t        'GUICtrlToolbar_GetExtendedStyle GUICtrlToolbar_GetHotImageList ' +\n\t        'GUICtrlToolbar_GetHotItem GUICtrlToolbar_GetImageList ' +\n\t        'GUICtrlToolbar_GetInsertMark GUICtrlToolbar_GetInsertMarkColor ' +\n\t        'GUICtrlToolbar_GetMaxSize GUICtrlToolbar_GetMetrics ' +\n\t        'GUICtrlToolbar_GetPadding GUICtrlToolbar_GetRows ' +\n\t        'GUICtrlToolbar_GetString GUICtrlToolbar_GetStyle ' +\n\t        'GUICtrlToolbar_GetStyleAltDrag ' +\n\t        'GUICtrlToolbar_GetStyleCustomErase GUICtrlToolbar_GetStyleFlat ' +\n\t        'GUICtrlToolbar_GetStyleList GUICtrlToolbar_GetStyleRegisterDrop ' +\n\t        'GUICtrlToolbar_GetStyleToolTips ' +\n\t        'GUICtrlToolbar_GetStyleTransparent ' +\n\t        'GUICtrlToolbar_GetStyleWrapable GUICtrlToolbar_GetTextRows ' +\n\t        'GUICtrlToolbar_GetToolTips GUICtrlToolbar_GetUnicodeFormat ' +\n\t        'GUICtrlToolbar_HideButton GUICtrlToolbar_HighlightButton ' +\n\t        'GUICtrlToolbar_HitTest GUICtrlToolbar_IndexToCommand ' +\n\t        'GUICtrlToolbar_InsertButton GUICtrlToolbar_InsertMarkHitTest ' +\n\t        'GUICtrlToolbar_IsButtonChecked GUICtrlToolbar_IsButtonEnabled ' +\n\t        'GUICtrlToolbar_IsButtonHidden ' +\n\t        'GUICtrlToolbar_IsButtonHighlighted ' +\n\t        'GUICtrlToolbar_IsButtonIndeterminate ' +\n\t        'GUICtrlToolbar_IsButtonPressed GUICtrlToolbar_LoadBitmap ' +\n\t        'GUICtrlToolbar_LoadImages GUICtrlToolbar_MapAccelerator ' +\n\t        'GUICtrlToolbar_MoveButton GUICtrlToolbar_PressButton ' +\n\t        'GUICtrlToolbar_SetAnchorHighlight GUICtrlToolbar_SetBitmapSize ' +\n\t        'GUICtrlToolbar_SetButtonBitMap GUICtrlToolbar_SetButtonInfo ' +\n\t        'GUICtrlToolbar_SetButtonInfoEx GUICtrlToolbar_SetButtonParam ' +\n\t        'GUICtrlToolbar_SetButtonSize GUICtrlToolbar_SetButtonState ' +\n\t        'GUICtrlToolbar_SetButtonStyle GUICtrlToolbar_SetButtonText ' +\n\t        'GUICtrlToolbar_SetButtonWidth GUICtrlToolbar_SetCmdID ' +\n\t        'GUICtrlToolbar_SetColorScheme ' +\n\t        'GUICtrlToolbar_SetDisabledImageList ' +\n\t        'GUICtrlToolbar_SetDrawTextFlags GUICtrlToolbar_SetExtendedStyle ' +\n\t        'GUICtrlToolbar_SetHotImageList GUICtrlToolbar_SetHotItem ' +\n\t        'GUICtrlToolbar_SetImageList GUICtrlToolbar_SetIndent ' +\n\t        'GUICtrlToolbar_SetIndeterminate GUICtrlToolbar_SetInsertMark ' +\n\t        'GUICtrlToolbar_SetInsertMarkColor GUICtrlToolbar_SetMaxTextRows ' +\n\t        'GUICtrlToolbar_SetMetrics GUICtrlToolbar_SetPadding ' +\n\t        'GUICtrlToolbar_SetParent GUICtrlToolbar_SetRows ' +\n\t        'GUICtrlToolbar_SetStyle GUICtrlToolbar_SetStyleAltDrag ' +\n\t        'GUICtrlToolbar_SetStyleCustomErase GUICtrlToolbar_SetStyleFlat ' +\n\t        'GUICtrlToolbar_SetStyleList GUICtrlToolbar_SetStyleRegisterDrop ' +\n\t        'GUICtrlToolbar_SetStyleToolTips ' +\n\t        'GUICtrlToolbar_SetStyleTransparent ' +\n\t        'GUICtrlToolbar_SetStyleWrapable GUICtrlToolbar_SetToolTips ' +\n\t        'GUICtrlToolbar_SetUnicodeFormat GUICtrlToolbar_SetWindowTheme ' +\n\t        'GUICtrlTreeView_Add GUICtrlTreeView_AddChild ' +\n\t        'GUICtrlTreeView_AddChildFirst GUICtrlTreeView_AddFirst ' +\n\t        'GUICtrlTreeView_BeginUpdate GUICtrlTreeView_ClickItem ' +\n\t        'GUICtrlTreeView_Create GUICtrlTreeView_CreateDragImage ' +\n\t        'GUICtrlTreeView_CreateSolidBitMap GUICtrlTreeView_Delete ' +\n\t        'GUICtrlTreeView_DeleteAll GUICtrlTreeView_DeleteChildren ' +\n\t        'GUICtrlTreeView_Destroy GUICtrlTreeView_DisplayRect ' +\n\t        'GUICtrlTreeView_DisplayRectEx GUICtrlTreeView_EditText ' +\n\t        'GUICtrlTreeView_EndEdit GUICtrlTreeView_EndUpdate ' +\n\t        'GUICtrlTreeView_EnsureVisible GUICtrlTreeView_Expand ' +\n\t        'GUICtrlTreeView_ExpandedOnce GUICtrlTreeView_FindItem ' +\n\t        'GUICtrlTreeView_FindItemEx GUICtrlTreeView_GetBkColor ' +\n\t        'GUICtrlTreeView_GetBold GUICtrlTreeView_GetChecked ' +\n\t        'GUICtrlTreeView_GetChildCount GUICtrlTreeView_GetChildren ' +\n\t        'GUICtrlTreeView_GetCount GUICtrlTreeView_GetCut ' +\n\t        'GUICtrlTreeView_GetDropTarget GUICtrlTreeView_GetEditControl ' +\n\t        'GUICtrlTreeView_GetExpanded GUICtrlTreeView_GetFirstChild ' +\n\t        'GUICtrlTreeView_GetFirstItem GUICtrlTreeView_GetFirstVisible ' +\n\t        'GUICtrlTreeView_GetFocused GUICtrlTreeView_GetHeight ' +\n\t        'GUICtrlTreeView_GetImageIndex ' +\n\t        'GUICtrlTreeView_GetImageListIconHandle ' +\n\t        'GUICtrlTreeView_GetIndent GUICtrlTreeView_GetInsertMarkColor ' +\n\t        'GUICtrlTreeView_GetISearchString GUICtrlTreeView_GetItemByIndex ' +\n\t        'GUICtrlTreeView_GetItemHandle GUICtrlTreeView_GetItemParam ' +\n\t        'GUICtrlTreeView_GetLastChild GUICtrlTreeView_GetLineColor ' +\n\t        'GUICtrlTreeView_GetNext GUICtrlTreeView_GetNextChild ' +\n\t        'GUICtrlTreeView_GetNextSibling GUICtrlTreeView_GetNextVisible ' +\n\t        'GUICtrlTreeView_GetNormalImageList ' +\n\t        'GUICtrlTreeView_GetParentHandle GUICtrlTreeView_GetParentParam ' +\n\t        'GUICtrlTreeView_GetPrev GUICtrlTreeView_GetPrevChild ' +\n\t        'GUICtrlTreeView_GetPrevSibling GUICtrlTreeView_GetPrevVisible ' +\n\t        'GUICtrlTreeView_GetScrollTime GUICtrlTreeView_GetSelected ' +\n\t        'GUICtrlTreeView_GetSelectedImageIndex ' +\n\t        'GUICtrlTreeView_GetSelection GUICtrlTreeView_GetSiblingCount ' +\n\t        'GUICtrlTreeView_GetState GUICtrlTreeView_GetStateImageIndex ' +\n\t        'GUICtrlTreeView_GetStateImageList GUICtrlTreeView_GetText ' +\n\t        'GUICtrlTreeView_GetTextColor GUICtrlTreeView_GetToolTips ' +\n\t        'GUICtrlTreeView_GetTree GUICtrlTreeView_GetUnicodeFormat ' +\n\t        'GUICtrlTreeView_GetVisible GUICtrlTreeView_GetVisibleCount ' +\n\t        'GUICtrlTreeView_HitTest GUICtrlTreeView_HitTestEx ' +\n\t        'GUICtrlTreeView_HitTestItem GUICtrlTreeView_Index ' +\n\t        'GUICtrlTreeView_InsertItem GUICtrlTreeView_IsFirstItem ' +\n\t        'GUICtrlTreeView_IsParent GUICtrlTreeView_Level ' +\n\t        'GUICtrlTreeView_SelectItem GUICtrlTreeView_SelectItemByIndex ' +\n\t        'GUICtrlTreeView_SetBkColor GUICtrlTreeView_SetBold ' +\n\t        'GUICtrlTreeView_SetChecked GUICtrlTreeView_SetCheckedByIndex ' +\n\t        'GUICtrlTreeView_SetChildren GUICtrlTreeView_SetCut ' +\n\t        'GUICtrlTreeView_SetDropTarget GUICtrlTreeView_SetFocused ' +\n\t        'GUICtrlTreeView_SetHeight GUICtrlTreeView_SetIcon ' +\n\t        'GUICtrlTreeView_SetImageIndex GUICtrlTreeView_SetIndent ' +\n\t        'GUICtrlTreeView_SetInsertMark ' +\n\t        'GUICtrlTreeView_SetInsertMarkColor ' +\n\t        'GUICtrlTreeView_SetItemHeight GUICtrlTreeView_SetItemParam ' +\n\t        'GUICtrlTreeView_SetLineColor GUICtrlTreeView_SetNormalImageList ' +\n\t        'GUICtrlTreeView_SetScrollTime GUICtrlTreeView_SetSelected ' +\n\t        'GUICtrlTreeView_SetSelectedImageIndex GUICtrlTreeView_SetState ' +\n\t        'GUICtrlTreeView_SetStateImageIndex ' +\n\t        'GUICtrlTreeView_SetStateImageList GUICtrlTreeView_SetText ' +\n\t        'GUICtrlTreeView_SetTextColor GUICtrlTreeView_SetToolTips ' +\n\t        'GUICtrlTreeView_SetUnicodeFormat GUICtrlTreeView_Sort ' +\n\t        'GUIImageList_Add GUIImageList_AddBitmap GUIImageList_AddIcon ' +\n\t        'GUIImageList_AddMasked GUIImageList_BeginDrag ' +\n\t        'GUIImageList_Copy GUIImageList_Create GUIImageList_Destroy ' +\n\t        'GUIImageList_DestroyIcon GUIImageList_DragEnter ' +\n\t        'GUIImageList_DragLeave GUIImageList_DragMove ' +\n\t        'GUIImageList_Draw GUIImageList_DrawEx GUIImageList_Duplicate ' +\n\t        'GUIImageList_EndDrag GUIImageList_GetBkColor ' +\n\t        'GUIImageList_GetIcon GUIImageList_GetIconHeight ' +\n\t        'GUIImageList_GetIconSize GUIImageList_GetIconSizeEx ' +\n\t        'GUIImageList_GetIconWidth GUIImageList_GetImageCount ' +\n\t        'GUIImageList_GetImageInfoEx GUIImageList_Remove ' +\n\t        'GUIImageList_ReplaceIcon GUIImageList_SetBkColor ' +\n\t        'GUIImageList_SetIconSize GUIImageList_SetImageCount ' +\n\t        'GUIImageList_Swap GUIScrollBars_EnableScrollBar ' +\n\t        'GUIScrollBars_GetScrollBarInfoEx GUIScrollBars_GetScrollBarRect ' +\n\t        'GUIScrollBars_GetScrollBarRGState ' +\n\t        'GUIScrollBars_GetScrollBarXYLineButton ' +\n\t        'GUIScrollBars_GetScrollBarXYThumbBottom ' +\n\t        'GUIScrollBars_GetScrollBarXYThumbTop ' +\n\t        'GUIScrollBars_GetScrollInfo GUIScrollBars_GetScrollInfoEx ' +\n\t        'GUIScrollBars_GetScrollInfoMax GUIScrollBars_GetScrollInfoMin ' +\n\t        'GUIScrollBars_GetScrollInfoPage GUIScrollBars_GetScrollInfoPos ' +\n\t        'GUIScrollBars_GetScrollInfoTrackPos GUIScrollBars_GetScrollPos ' +\n\t        'GUIScrollBars_GetScrollRange GUIScrollBars_Init ' +\n\t        'GUIScrollBars_ScrollWindow GUIScrollBars_SetScrollInfo ' +\n\t        'GUIScrollBars_SetScrollInfoMax GUIScrollBars_SetScrollInfoMin ' +\n\t        'GUIScrollBars_SetScrollInfoPage GUIScrollBars_SetScrollInfoPos ' +\n\t        'GUIScrollBars_SetScrollRange GUIScrollBars_ShowScrollBar ' +\n\t        'GUIToolTip_Activate GUIToolTip_AddTool GUIToolTip_AdjustRect ' +\n\t        'GUIToolTip_BitsToTTF GUIToolTip_Create GUIToolTip_Deactivate ' +\n\t        'GUIToolTip_DelTool GUIToolTip_Destroy GUIToolTip_EnumTools ' +\n\t        'GUIToolTip_GetBubbleHeight GUIToolTip_GetBubbleSize ' +\n\t        'GUIToolTip_GetBubbleWidth GUIToolTip_GetCurrentTool ' +\n\t        'GUIToolTip_GetDelayTime GUIToolTip_GetMargin ' +\n\t        'GUIToolTip_GetMarginEx GUIToolTip_GetMaxTipWidth ' +\n\t        'GUIToolTip_GetText GUIToolTip_GetTipBkColor ' +\n\t        'GUIToolTip_GetTipTextColor GUIToolTip_GetTitleBitMap ' +\n\t        'GUIToolTip_GetTitleText GUIToolTip_GetToolCount ' +\n\t        'GUIToolTip_GetToolInfo GUIToolTip_HitTest ' +\n\t        'GUIToolTip_NewToolRect GUIToolTip_Pop GUIToolTip_PopUp ' +\n\t        'GUIToolTip_SetDelayTime GUIToolTip_SetMargin ' +\n\t        'GUIToolTip_SetMaxTipWidth GUIToolTip_SetTipBkColor ' +\n\t        'GUIToolTip_SetTipTextColor GUIToolTip_SetTitle ' +\n\t        'GUIToolTip_SetToolInfo GUIToolTip_SetWindowTheme ' +\n\t        'GUIToolTip_ToolExists GUIToolTip_ToolToArray ' +\n\t        'GUIToolTip_TrackActivate GUIToolTip_TrackPosition ' +\n\t        'GUIToolTip_Update GUIToolTip_UpdateTipText HexToString ' +\n\t        'IEAction IEAttach IEBodyReadHTML IEBodyReadText ' +\n\t        'IEBodyWriteHTML IECreate IECreateEmbedded IEDocGetObj ' +\n\t        'IEDocInsertHTML IEDocInsertText IEDocReadHTML ' +\n\t        'IEDocWriteHTML IEErrorNotify IEFormElementCheckBoxSelect ' +\n\t        'IEFormElementGetCollection IEFormElementGetObjByName ' +\n\t        'IEFormElementGetValue IEFormElementOptionSelect ' +\n\t        'IEFormElementRadioSelect IEFormElementSetValue ' +\n\t        'IEFormGetCollection IEFormGetObjByName IEFormImageClick ' +\n\t        'IEFormReset IEFormSubmit IEFrameGetCollection ' +\n\t        'IEFrameGetObjByName IEGetObjById IEGetObjByName ' +\n\t        'IEHeadInsertEventScript IEImgClick IEImgGetCollection ' +\n\t        'IEIsFrameSet IELinkClickByIndex IELinkClickByText ' +\n\t        'IELinkGetCollection IELoadWait IELoadWaitTimeout IENavigate ' +\n\t        'IEPropertyGet IEPropertySet IEQuit IETableGetCollection ' +\n\t        'IETableWriteToArray IETagNameAllGetCollection ' +\n\t        'IETagNameGetCollection IE_Example IE_Introduction ' +\n\t        'IE_VersionInfo INetExplorerCapable INetGetSource INetMail ' +\n\t        'INetSmtpMail IsPressed MathCheckDiv Max MemGlobalAlloc ' +\n\t        'MemGlobalFree MemGlobalLock MemGlobalSize MemGlobalUnlock ' +\n\t        'MemMoveMemory MemVirtualAlloc MemVirtualAllocEx ' +\n\t        'MemVirtualFree MemVirtualFreeEx Min MouseTrap ' +\n\t        'NamedPipes_CallNamedPipe NamedPipes_ConnectNamedPipe ' +\n\t        'NamedPipes_CreateNamedPipe NamedPipes_CreatePipe ' +\n\t        'NamedPipes_DisconnectNamedPipe ' +\n\t        'NamedPipes_GetNamedPipeHandleState NamedPipes_GetNamedPipeInfo ' +\n\t        'NamedPipes_PeekNamedPipe NamedPipes_SetNamedPipeHandleState ' +\n\t        'NamedPipes_TransactNamedPipe NamedPipes_WaitNamedPipe ' +\n\t        'Net_Share_ConnectionEnum Net_Share_FileClose ' +\n\t        'Net_Share_FileEnum Net_Share_FileGetInfo Net_Share_PermStr ' +\n\t        'Net_Share_ResourceStr Net_Share_SessionDel ' +\n\t        'Net_Share_SessionEnum Net_Share_SessionGetInfo ' +\n\t        'Net_Share_ShareAdd Net_Share_ShareCheck Net_Share_ShareDel ' +\n\t        'Net_Share_ShareEnum Net_Share_ShareGetInfo ' +\n\t        'Net_Share_ShareSetInfo Net_Share_StatisticsGetSvr ' +\n\t        'Net_Share_StatisticsGetWrk Now NowCalc NowCalcDate ' +\n\t        'NowDate NowTime PathFull PathGetRelative PathMake ' +\n\t        'PathSplit ProcessGetName ProcessGetPriority Radian ' +\n\t        'ReplaceStringInFile RunDos ScreenCapture_Capture ' +\n\t        'ScreenCapture_CaptureWnd ScreenCapture_SaveImage ' +\n\t        'ScreenCapture_SetBMPFormat ScreenCapture_SetJPGQuality ' +\n\t        'ScreenCapture_SetTIFColorDepth ScreenCapture_SetTIFCompression ' +\n\t        'Security__AdjustTokenPrivileges ' +\n\t        'Security__CreateProcessWithToken Security__DuplicateTokenEx ' +\n\t        'Security__GetAccountSid Security__GetLengthSid ' +\n\t        'Security__GetTokenInformation Security__ImpersonateSelf ' +\n\t        'Security__IsValidSid Security__LookupAccountName ' +\n\t        'Security__LookupAccountSid Security__LookupPrivilegeValue ' +\n\t        'Security__OpenProcessToken Security__OpenThreadToken ' +\n\t        'Security__OpenThreadTokenEx Security__SetPrivilege ' +\n\t        'Security__SetTokenInformation Security__SidToStringSid ' +\n\t        'Security__SidTypeStr Security__StringSidToSid SendMessage ' +\n\t        'SendMessageA SetDate SetTime Singleton SoundClose ' +\n\t        'SoundLength SoundOpen SoundPause SoundPlay SoundPos ' +\n\t        'SoundResume SoundSeek SoundStatus SoundStop ' +\n\t        'SQLite_Changes SQLite_Close SQLite_Display2DResult ' +\n\t        'SQLite_Encode SQLite_ErrCode SQLite_ErrMsg SQLite_Escape ' +\n\t        'SQLite_Exec SQLite_FastEncode SQLite_FastEscape ' +\n\t        'SQLite_FetchData SQLite_FetchNames SQLite_GetTable ' +\n\t        'SQLite_GetTable2d SQLite_LastInsertRowID SQLite_LibVersion ' +\n\t        'SQLite_Open SQLite_Query SQLite_QueryFinalize ' +\n\t        'SQLite_QueryReset SQLite_QuerySingleRow SQLite_SafeMode ' +\n\t        'SQLite_SetTimeout SQLite_Shutdown SQLite_SQLiteExe ' +\n\t        'SQLite_Startup SQLite_TotalChanges StringBetween ' +\n\t        'StringExplode StringInsert StringProper StringRepeat ' +\n\t        'StringTitleCase StringToHex TCPIpToName TempFile ' +\n\t        'TicksToTime Timer_Diff Timer_GetIdleTime Timer_GetTimerID ' +\n\t        'Timer_Init Timer_KillAllTimers Timer_KillTimer ' +\n\t        'Timer_SetTimer TimeToTicks VersionCompare viClose ' +\n\t        'viExecCommand viFindGpib viGpibBusReset viGTL ' +\n\t        'viInteractiveControl viOpen viSetAttribute viSetTimeout ' +\n\t        'WeekNumberISO WinAPI_AbortPath WinAPI_ActivateKeyboardLayout ' +\n\t        'WinAPI_AddClipboardFormatListener WinAPI_AddFontMemResourceEx ' +\n\t        'WinAPI_AddFontResourceEx WinAPI_AddIconOverlay ' +\n\t        'WinAPI_AddIconTransparency WinAPI_AddMRUString ' +\n\t        'WinAPI_AdjustBitmap WinAPI_AdjustTokenPrivileges ' +\n\t        'WinAPI_AdjustWindowRectEx WinAPI_AlphaBlend WinAPI_AngleArc ' +\n\t        'WinAPI_AnimateWindow WinAPI_Arc WinAPI_ArcTo ' +\n\t        'WinAPI_ArrayToStruct WinAPI_AssignProcessToJobObject ' +\n\t        'WinAPI_AssocGetPerceivedType WinAPI_AssocQueryString ' +\n\t        'WinAPI_AttachConsole WinAPI_AttachThreadInput ' +\n\t        'WinAPI_BackupRead WinAPI_BackupReadAbort WinAPI_BackupSeek ' +\n\t        'WinAPI_BackupWrite WinAPI_BackupWriteAbort WinAPI_Beep ' +\n\t        'WinAPI_BeginBufferedPaint WinAPI_BeginDeferWindowPos ' +\n\t        'WinAPI_BeginPaint WinAPI_BeginPath WinAPI_BeginUpdateResource ' +\n\t        'WinAPI_BitBlt WinAPI_BringWindowToTop ' +\n\t        'WinAPI_BroadcastSystemMessage WinAPI_BrowseForFolderDlg ' +\n\t        'WinAPI_BufferedPaintClear WinAPI_BufferedPaintInit ' +\n\t        'WinAPI_BufferedPaintSetAlpha WinAPI_BufferedPaintUnInit ' +\n\t        'WinAPI_CallNextHookEx WinAPI_CallWindowProc ' +\n\t        'WinAPI_CallWindowProcW WinAPI_CascadeWindows ' +\n\t        'WinAPI_ChangeWindowMessageFilterEx WinAPI_CharToOem ' +\n\t        'WinAPI_ChildWindowFromPointEx WinAPI_ClientToScreen ' +\n\t        'WinAPI_ClipCursor WinAPI_CloseDesktop WinAPI_CloseEnhMetaFile ' +\n\t        'WinAPI_CloseFigure WinAPI_CloseHandle WinAPI_CloseThemeData ' +\n\t        'WinAPI_CloseWindow WinAPI_CloseWindowStation ' +\n\t        'WinAPI_CLSIDFromProgID WinAPI_CoInitialize ' +\n\t        'WinAPI_ColorAdjustLuma WinAPI_ColorHLSToRGB ' +\n\t        'WinAPI_ColorRGBToHLS WinAPI_CombineRgn ' +\n\t        'WinAPI_CombineTransform WinAPI_CommandLineToArgv ' +\n\t        'WinAPI_CommDlgExtendedError WinAPI_CommDlgExtendedErrorEx ' +\n\t        'WinAPI_CompareString WinAPI_CompressBitmapBits ' +\n\t        'WinAPI_CompressBuffer WinAPI_ComputeCrc32 ' +\n\t        'WinAPI_ConfirmCredentials WinAPI_CopyBitmap WinAPI_CopyCursor ' +\n\t        'WinAPI_CopyEnhMetaFile WinAPI_CopyFileEx WinAPI_CopyIcon ' +\n\t        'WinAPI_CopyImage WinAPI_CopyRect WinAPI_CopyStruct ' +\n\t        'WinAPI_CoTaskMemAlloc WinAPI_CoTaskMemFree ' +\n\t        'WinAPI_CoTaskMemRealloc WinAPI_CoUninitialize ' +\n\t        'WinAPI_Create32BitHBITMAP WinAPI_Create32BitHICON ' +\n\t        'WinAPI_CreateANDBitmap WinAPI_CreateBitmap ' +\n\t        'WinAPI_CreateBitmapIndirect WinAPI_CreateBrushIndirect ' +\n\t        'WinAPI_CreateBuffer WinAPI_CreateBufferFromStruct ' +\n\t        'WinAPI_CreateCaret WinAPI_CreateColorAdjustment ' +\n\t        'WinAPI_CreateCompatibleBitmap WinAPI_CreateCompatibleBitmapEx ' +\n\t        'WinAPI_CreateCompatibleDC WinAPI_CreateDesktop ' +\n\t        'WinAPI_CreateDIB WinAPI_CreateDIBColorTable ' +\n\t        'WinAPI_CreateDIBitmap WinAPI_CreateDIBSection ' +\n\t        'WinAPI_CreateDirectory WinAPI_CreateDirectoryEx ' +\n\t        'WinAPI_CreateEllipticRgn WinAPI_CreateEmptyIcon ' +\n\t        'WinAPI_CreateEnhMetaFile WinAPI_CreateEvent WinAPI_CreateFile ' +\n\t        'WinAPI_CreateFileEx WinAPI_CreateFileMapping ' +\n\t        'WinAPI_CreateFont WinAPI_CreateFontEx ' +\n\t        'WinAPI_CreateFontIndirect WinAPI_CreateGUID ' +\n\t        'WinAPI_CreateHardLink WinAPI_CreateIcon ' +\n\t        'WinAPI_CreateIconFromResourceEx WinAPI_CreateIconIndirect ' +\n\t        'WinAPI_CreateJobObject WinAPI_CreateMargins ' +\n\t        'WinAPI_CreateMRUList WinAPI_CreateMutex WinAPI_CreateNullRgn ' +\n\t        'WinAPI_CreateNumberFormatInfo WinAPI_CreateObjectID ' +\n\t        'WinAPI_CreatePen WinAPI_CreatePoint WinAPI_CreatePolygonRgn ' +\n\t        'WinAPI_CreateProcess WinAPI_CreateProcessWithToken ' +\n\t        'WinAPI_CreateRect WinAPI_CreateRectEx WinAPI_CreateRectRgn ' +\n\t        'WinAPI_CreateRectRgnIndirect WinAPI_CreateRoundRectRgn ' +\n\t        'WinAPI_CreateSemaphore WinAPI_CreateSize ' +\n\t        'WinAPI_CreateSolidBitmap WinAPI_CreateSolidBrush ' +\n\t        'WinAPI_CreateStreamOnHGlobal WinAPI_CreateString ' +\n\t        'WinAPI_CreateSymbolicLink WinAPI_CreateTransform ' +\n\t        'WinAPI_CreateWindowEx WinAPI_CreateWindowStation ' +\n\t        'WinAPI_DecompressBuffer WinAPI_DecryptFile ' +\n\t        'WinAPI_DeferWindowPos WinAPI_DefineDosDevice ' +\n\t        'WinAPI_DefRawInputProc WinAPI_DefSubclassProc ' +\n\t        'WinAPI_DefWindowProc WinAPI_DefWindowProcW WinAPI_DeleteDC ' +\n\t        'WinAPI_DeleteEnhMetaFile WinAPI_DeleteFile ' +\n\t        'WinAPI_DeleteObject WinAPI_DeleteObjectID ' +\n\t        'WinAPI_DeleteVolumeMountPoint WinAPI_DeregisterShellHookWindow ' +\n\t        'WinAPI_DestroyCaret WinAPI_DestroyCursor WinAPI_DestroyIcon ' +\n\t        'WinAPI_DestroyWindow WinAPI_DeviceIoControl ' +\n\t        'WinAPI_DisplayStruct WinAPI_DllGetVersion WinAPI_DllInstall ' +\n\t        'WinAPI_DllUninstall WinAPI_DPtoLP WinAPI_DragAcceptFiles ' +\n\t        'WinAPI_DragFinish WinAPI_DragQueryFileEx ' +\n\t        'WinAPI_DragQueryPoint WinAPI_DrawAnimatedRects ' +\n\t        'WinAPI_DrawBitmap WinAPI_DrawEdge WinAPI_DrawFocusRect ' +\n\t        'WinAPI_DrawFrameControl WinAPI_DrawIcon WinAPI_DrawIconEx ' +\n\t        'WinAPI_DrawLine WinAPI_DrawShadowText WinAPI_DrawText ' +\n\t        'WinAPI_DrawThemeBackground WinAPI_DrawThemeEdge ' +\n\t        'WinAPI_DrawThemeIcon WinAPI_DrawThemeParentBackground ' +\n\t        'WinAPI_DrawThemeText WinAPI_DrawThemeTextEx ' +\n\t        'WinAPI_DuplicateEncryptionInfoFile WinAPI_DuplicateHandle ' +\n\t        'WinAPI_DuplicateTokenEx WinAPI_DwmDefWindowProc ' +\n\t        'WinAPI_DwmEnableBlurBehindWindow WinAPI_DwmEnableComposition ' +\n\t        'WinAPI_DwmExtendFrameIntoClientArea ' +\n\t        'WinAPI_DwmGetColorizationColor ' +\n\t        'WinAPI_DwmGetColorizationParameters ' +\n\t        'WinAPI_DwmGetWindowAttribute WinAPI_DwmInvalidateIconicBitmaps ' +\n\t        'WinAPI_DwmIsCompositionEnabled ' +\n\t        'WinAPI_DwmQueryThumbnailSourceSize WinAPI_DwmRegisterThumbnail ' +\n\t        'WinAPI_DwmSetColorizationParameters ' +\n\t        'WinAPI_DwmSetIconicLivePreviewBitmap ' +\n\t        'WinAPI_DwmSetIconicThumbnail WinAPI_DwmSetWindowAttribute ' +\n\t        'WinAPI_DwmUnregisterThumbnail ' +\n\t        'WinAPI_DwmUpdateThumbnailProperties WinAPI_DWordToFloat ' +\n\t        'WinAPI_DWordToInt WinAPI_EjectMedia WinAPI_Ellipse ' +\n\t        'WinAPI_EmptyWorkingSet WinAPI_EnableWindow WinAPI_EncryptFile ' +\n\t        'WinAPI_EncryptionDisable WinAPI_EndBufferedPaint ' +\n\t        'WinAPI_EndDeferWindowPos WinAPI_EndPaint WinAPI_EndPath ' +\n\t        'WinAPI_EndUpdateResource WinAPI_EnumChildProcess ' +\n\t        'WinAPI_EnumChildWindows WinAPI_EnumDesktops ' +\n\t        'WinAPI_EnumDesktopWindows WinAPI_EnumDeviceDrivers ' +\n\t        'WinAPI_EnumDisplayDevices WinAPI_EnumDisplayMonitors ' +\n\t        'WinAPI_EnumDisplaySettings WinAPI_EnumDllProc ' +\n\t        'WinAPI_EnumFiles WinAPI_EnumFileStreams ' +\n\t        'WinAPI_EnumFontFamilies WinAPI_EnumHardLinks ' +\n\t        'WinAPI_EnumMRUList WinAPI_EnumPageFiles ' +\n\t        'WinAPI_EnumProcessHandles WinAPI_EnumProcessModules ' +\n\t        'WinAPI_EnumProcessThreads WinAPI_EnumProcessWindows ' +\n\t        'WinAPI_EnumRawInputDevices WinAPI_EnumResourceLanguages ' +\n\t        'WinAPI_EnumResourceNames WinAPI_EnumResourceTypes ' +\n\t        'WinAPI_EnumSystemGeoID WinAPI_EnumSystemLocales ' +\n\t        'WinAPI_EnumUILanguages WinAPI_EnumWindows ' +\n\t        'WinAPI_EnumWindowsPopup WinAPI_EnumWindowStations ' +\n\t        'WinAPI_EnumWindowsTop WinAPI_EqualMemory WinAPI_EqualRect ' +\n\t        'WinAPI_EqualRgn WinAPI_ExcludeClipRect ' +\n\t        'WinAPI_ExpandEnvironmentStrings WinAPI_ExtCreatePen ' +\n\t        'WinAPI_ExtCreateRegion WinAPI_ExtFloodFill WinAPI_ExtractIcon ' +\n\t        'WinAPI_ExtractIconEx WinAPI_ExtSelectClipRgn ' +\n\t        'WinAPI_FatalAppExit WinAPI_FatalExit ' +\n\t        'WinAPI_FileEncryptionStatus WinAPI_FileExists ' +\n\t        'WinAPI_FileIconInit WinAPI_FileInUse WinAPI_FillMemory ' +\n\t        'WinAPI_FillPath WinAPI_FillRect WinAPI_FillRgn ' +\n\t        'WinAPI_FindClose WinAPI_FindCloseChangeNotification ' +\n\t        'WinAPI_FindExecutable WinAPI_FindFirstChangeNotification ' +\n\t        'WinAPI_FindFirstFile WinAPI_FindFirstFileName ' +\n\t        'WinAPI_FindFirstStream WinAPI_FindNextChangeNotification ' +\n\t        'WinAPI_FindNextFile WinAPI_FindNextFileName ' +\n\t        'WinAPI_FindNextStream WinAPI_FindResource ' +\n\t        'WinAPI_FindResourceEx WinAPI_FindTextDlg WinAPI_FindWindow ' +\n\t        'WinAPI_FlashWindow WinAPI_FlashWindowEx WinAPI_FlattenPath ' +\n\t        'WinAPI_FloatToDWord WinAPI_FloatToInt WinAPI_FlushFileBuffers ' +\n\t        'WinAPI_FlushFRBuffer WinAPI_FlushViewOfFile ' +\n\t        'WinAPI_FormatDriveDlg WinAPI_FormatMessage WinAPI_FrameRect ' +\n\t        'WinAPI_FrameRgn WinAPI_FreeLibrary WinAPI_FreeMemory ' +\n\t        'WinAPI_FreeMRUList WinAPI_FreeResource WinAPI_GdiComment ' +\n\t        'WinAPI_GetActiveWindow WinAPI_GetAllUsersProfileDirectory ' +\n\t        'WinAPI_GetAncestor WinAPI_GetApplicationRestartSettings ' +\n\t        'WinAPI_GetArcDirection WinAPI_GetAsyncKeyState ' +\n\t        'WinAPI_GetBinaryType WinAPI_GetBitmapBits ' +\n\t        'WinAPI_GetBitmapDimension WinAPI_GetBitmapDimensionEx ' +\n\t        'WinAPI_GetBkColor WinAPI_GetBkMode WinAPI_GetBoundsRect ' +\n\t        'WinAPI_GetBrushOrg WinAPI_GetBufferedPaintBits ' +\n\t        'WinAPI_GetBufferedPaintDC WinAPI_GetBufferedPaintTargetDC ' +\n\t        'WinAPI_GetBufferedPaintTargetRect WinAPI_GetBValue ' +\n\t        'WinAPI_GetCaretBlinkTime WinAPI_GetCaretPos WinAPI_GetCDType ' +\n\t        'WinAPI_GetClassInfoEx WinAPI_GetClassLongEx ' +\n\t        'WinAPI_GetClassName WinAPI_GetClientHeight ' +\n\t        'WinAPI_GetClientRect WinAPI_GetClientWidth ' +\n\t        'WinAPI_GetClipboardSequenceNumber WinAPI_GetClipBox ' +\n\t        'WinAPI_GetClipCursor WinAPI_GetClipRgn ' +\n\t        'WinAPI_GetColorAdjustment WinAPI_GetCompressedFileSize ' +\n\t        'WinAPI_GetCompression WinAPI_GetConnectedDlg ' +\n\t        'WinAPI_GetCurrentDirectory WinAPI_GetCurrentHwProfile ' +\n\t        'WinAPI_GetCurrentObject WinAPI_GetCurrentPosition ' +\n\t        'WinAPI_GetCurrentProcess ' +\n\t        'WinAPI_GetCurrentProcessExplicitAppUserModelID ' +\n\t        'WinAPI_GetCurrentProcessID WinAPI_GetCurrentThemeName ' +\n\t        'WinAPI_GetCurrentThread WinAPI_GetCurrentThreadId ' +\n\t        'WinAPI_GetCursor WinAPI_GetCursorInfo WinAPI_GetDateFormat ' +\n\t        'WinAPI_GetDC WinAPI_GetDCEx WinAPI_GetDefaultPrinter ' +\n\t        'WinAPI_GetDefaultUserProfileDirectory WinAPI_GetDesktopWindow ' +\n\t        'WinAPI_GetDeviceCaps WinAPI_GetDeviceDriverBaseName ' +\n\t        'WinAPI_GetDeviceDriverFileName WinAPI_GetDeviceGammaRamp ' +\n\t        'WinAPI_GetDIBColorTable WinAPI_GetDIBits ' +\n\t        'WinAPI_GetDiskFreeSpaceEx WinAPI_GetDlgCtrlID ' +\n\t        'WinAPI_GetDlgItem WinAPI_GetDllDirectory ' +\n\t        'WinAPI_GetDriveBusType WinAPI_GetDriveGeometryEx ' +\n\t        'WinAPI_GetDriveNumber WinAPI_GetDriveType ' +\n\t        'WinAPI_GetDurationFormat WinAPI_GetEffectiveClientRect ' +\n\t        'WinAPI_GetEnhMetaFile WinAPI_GetEnhMetaFileBits ' +\n\t        'WinAPI_GetEnhMetaFileDescription WinAPI_GetEnhMetaFileDimension ' +\n\t        'WinAPI_GetEnhMetaFileHeader WinAPI_GetErrorMessage ' +\n\t        'WinAPI_GetErrorMode WinAPI_GetExitCodeProcess ' +\n\t        'WinAPI_GetExtended WinAPI_GetFileAttributes WinAPI_GetFileID ' +\n\t        'WinAPI_GetFileInformationByHandle ' +\n\t        'WinAPI_GetFileInformationByHandleEx WinAPI_GetFilePointerEx ' +\n\t        'WinAPI_GetFileSizeEx WinAPI_GetFileSizeOnDisk ' +\n\t        'WinAPI_GetFileTitle WinAPI_GetFileType ' +\n\t        'WinAPI_GetFileVersionInfo WinAPI_GetFinalPathNameByHandle ' +\n\t        'WinAPI_GetFinalPathNameByHandleEx WinAPI_GetFocus ' +\n\t        'WinAPI_GetFontMemoryResourceInfo WinAPI_GetFontName ' +\n\t        'WinAPI_GetFontResourceInfo WinAPI_GetForegroundWindow ' +\n\t        'WinAPI_GetFRBuffer WinAPI_GetFullPathName WinAPI_GetGeoInfo ' +\n\t        'WinAPI_GetGlyphOutline WinAPI_GetGraphicsMode ' +\n\t        'WinAPI_GetGuiResources WinAPI_GetGUIThreadInfo ' +\n\t        'WinAPI_GetGValue WinAPI_GetHandleInformation ' +\n\t        'WinAPI_GetHGlobalFromStream WinAPI_GetIconDimension ' +\n\t        'WinAPI_GetIconInfo WinAPI_GetIconInfoEx WinAPI_GetIdleTime ' +\n\t        'WinAPI_GetKeyboardLayout WinAPI_GetKeyboardLayoutList ' +\n\t        'WinAPI_GetKeyboardState WinAPI_GetKeyboardType ' +\n\t        'WinAPI_GetKeyNameText WinAPI_GetKeyState ' +\n\t        'WinAPI_GetLastActivePopup WinAPI_GetLastError ' +\n\t        'WinAPI_GetLastErrorMessage WinAPI_GetLayeredWindowAttributes ' +\n\t        'WinAPI_GetLocaleInfo WinAPI_GetLogicalDrives ' +\n\t        'WinAPI_GetMapMode WinAPI_GetMemorySize ' +\n\t        'WinAPI_GetMessageExtraInfo WinAPI_GetModuleFileNameEx ' +\n\t        'WinAPI_GetModuleHandle WinAPI_GetModuleHandleEx ' +\n\t        'WinAPI_GetModuleInformation WinAPI_GetMonitorInfo ' +\n\t        'WinAPI_GetMousePos WinAPI_GetMousePosX WinAPI_GetMousePosY ' +\n\t        'WinAPI_GetMUILanguage WinAPI_GetNumberFormat WinAPI_GetObject ' +\n\t        'WinAPI_GetObjectID WinAPI_GetObjectInfoByHandle ' +\n\t        'WinAPI_GetObjectNameByHandle WinAPI_GetObjectType ' +\n\t        'WinAPI_GetOpenFileName WinAPI_GetOutlineTextMetrics ' +\n\t        'WinAPI_GetOverlappedResult WinAPI_GetParent ' +\n\t        'WinAPI_GetParentProcess WinAPI_GetPerformanceInfo ' +\n\t        'WinAPI_GetPEType WinAPI_GetPhysicallyInstalledSystemMemory ' +\n\t        'WinAPI_GetPixel WinAPI_GetPolyFillMode WinAPI_GetPosFromRect ' +\n\t        'WinAPI_GetPriorityClass WinAPI_GetProcAddress ' +\n\t        'WinAPI_GetProcessAffinityMask WinAPI_GetProcessCommandLine ' +\n\t        'WinAPI_GetProcessFileName WinAPI_GetProcessHandleCount ' +\n\t        'WinAPI_GetProcessID WinAPI_GetProcessIoCounters ' +\n\t        'WinAPI_GetProcessMemoryInfo WinAPI_GetProcessName ' +\n\t        'WinAPI_GetProcessShutdownParameters WinAPI_GetProcessTimes ' +\n\t        'WinAPI_GetProcessUser WinAPI_GetProcessWindowStation ' +\n\t        'WinAPI_GetProcessWorkingDirectory WinAPI_GetProfilesDirectory ' +\n\t        'WinAPI_GetPwrCapabilities WinAPI_GetRawInputBuffer ' +\n\t        'WinAPI_GetRawInputBufferLength WinAPI_GetRawInputData ' +\n\t        'WinAPI_GetRawInputDeviceInfo WinAPI_GetRegionData ' +\n\t        'WinAPI_GetRegisteredRawInputDevices ' +\n\t        'WinAPI_GetRegKeyNameByHandle WinAPI_GetRgnBox WinAPI_GetROP2 ' +\n\t        'WinAPI_GetRValue WinAPI_GetSaveFileName WinAPI_GetShellWindow ' +\n\t        'WinAPI_GetStartupInfo WinAPI_GetStdHandle ' +\n\t        'WinAPI_GetStockObject WinAPI_GetStretchBltMode ' +\n\t        'WinAPI_GetString WinAPI_GetSysColor WinAPI_GetSysColorBrush ' +\n\t        'WinAPI_GetSystemDefaultLangID WinAPI_GetSystemDefaultLCID ' +\n\t        'WinAPI_GetSystemDefaultUILanguage WinAPI_GetSystemDEPPolicy ' +\n\t        'WinAPI_GetSystemInfo WinAPI_GetSystemMetrics ' +\n\t        'WinAPI_GetSystemPowerStatus WinAPI_GetSystemTimes ' +\n\t        'WinAPI_GetSystemWow64Directory WinAPI_GetTabbedTextExtent ' +\n\t        'WinAPI_GetTempFileName WinAPI_GetTextAlign ' +\n\t        'WinAPI_GetTextCharacterExtra WinAPI_GetTextColor ' +\n\t        'WinAPI_GetTextExtentPoint32 WinAPI_GetTextFace ' +\n\t        'WinAPI_GetTextMetrics WinAPI_GetThemeAppProperties ' +\n\t        'WinAPI_GetThemeBackgroundContentRect ' +\n\t        'WinAPI_GetThemeBackgroundExtent WinAPI_GetThemeBackgroundRegion ' +\n\t        'WinAPI_GetThemeBitmap WinAPI_GetThemeBool ' +\n\t        'WinAPI_GetThemeColor WinAPI_GetThemeDocumentationProperty ' +\n\t        'WinAPI_GetThemeEnumValue WinAPI_GetThemeFilename ' +\n\t        'WinAPI_GetThemeFont WinAPI_GetThemeInt WinAPI_GetThemeMargins ' +\n\t        'WinAPI_GetThemeMetric WinAPI_GetThemePartSize ' +\n\t        'WinAPI_GetThemePosition WinAPI_GetThemePropertyOrigin ' +\n\t        'WinAPI_GetThemeRect WinAPI_GetThemeString ' +\n\t        'WinAPI_GetThemeSysBool WinAPI_GetThemeSysColor ' +\n\t        'WinAPI_GetThemeSysColorBrush WinAPI_GetThemeSysFont ' +\n\t        'WinAPI_GetThemeSysInt WinAPI_GetThemeSysSize ' +\n\t        'WinAPI_GetThemeSysString WinAPI_GetThemeTextExtent ' +\n\t        'WinAPI_GetThemeTextMetrics WinAPI_GetThemeTransitionDuration ' +\n\t        'WinAPI_GetThreadDesktop WinAPI_GetThreadErrorMode ' +\n\t        'WinAPI_GetThreadLocale WinAPI_GetThreadUILanguage ' +\n\t        'WinAPI_GetTickCount WinAPI_GetTickCount64 ' +\n\t        'WinAPI_GetTimeFormat WinAPI_GetTopWindow ' +\n\t        'WinAPI_GetUDFColorMode WinAPI_GetUpdateRect ' +\n\t        'WinAPI_GetUpdateRgn WinAPI_GetUserDefaultLangID ' +\n\t        'WinAPI_GetUserDefaultLCID WinAPI_GetUserDefaultUILanguage ' +\n\t        'WinAPI_GetUserGeoID WinAPI_GetUserObjectInformation ' +\n\t        'WinAPI_GetVersion WinAPI_GetVersionEx ' +\n\t        'WinAPI_GetVolumeInformation WinAPI_GetVolumeInformationByHandle ' +\n\t        'WinAPI_GetVolumeNameForVolumeMountPoint WinAPI_GetWindow ' +\n\t        'WinAPI_GetWindowDC WinAPI_GetWindowDisplayAffinity ' +\n\t        'WinAPI_GetWindowExt WinAPI_GetWindowFileName ' +\n\t        'WinAPI_GetWindowHeight WinAPI_GetWindowInfo ' +\n\t        'WinAPI_GetWindowLong WinAPI_GetWindowOrg ' +\n\t        'WinAPI_GetWindowPlacement WinAPI_GetWindowRect ' +\n\t        'WinAPI_GetWindowRgn WinAPI_GetWindowRgnBox ' +\n\t        'WinAPI_GetWindowSubclass WinAPI_GetWindowText ' +\n\t        'WinAPI_GetWindowTheme WinAPI_GetWindowThreadProcessId ' +\n\t        'WinAPI_GetWindowWidth WinAPI_GetWorkArea ' +\n\t        'WinAPI_GetWorldTransform WinAPI_GetXYFromPoint ' +\n\t        'WinAPI_GlobalMemoryStatus WinAPI_GradientFill ' +\n\t        'WinAPI_GUIDFromString WinAPI_GUIDFromStringEx WinAPI_HashData ' +\n\t        'WinAPI_HashString WinAPI_HiByte WinAPI_HideCaret ' +\n\t        'WinAPI_HiDWord WinAPI_HiWord WinAPI_InflateRect ' +\n\t        'WinAPI_InitMUILanguage WinAPI_InProcess ' +\n\t        'WinAPI_IntersectClipRect WinAPI_IntersectRect ' +\n\t        'WinAPI_IntToDWord WinAPI_IntToFloat WinAPI_InvalidateRect ' +\n\t        'WinAPI_InvalidateRgn WinAPI_InvertANDBitmap ' +\n\t        'WinAPI_InvertColor WinAPI_InvertRect WinAPI_InvertRgn ' +\n\t        'WinAPI_IOCTL WinAPI_IsAlphaBitmap WinAPI_IsBadCodePtr ' +\n\t        'WinAPI_IsBadReadPtr WinAPI_IsBadStringPtr ' +\n\t        'WinAPI_IsBadWritePtr WinAPI_IsChild WinAPI_IsClassName ' +\n\t        'WinAPI_IsDoorOpen WinAPI_IsElevated WinAPI_IsHungAppWindow ' +\n\t        'WinAPI_IsIconic WinAPI_IsInternetConnected ' +\n\t        'WinAPI_IsLoadKBLayout WinAPI_IsMemory ' +\n\t        'WinAPI_IsNameInExpression WinAPI_IsNetworkAlive ' +\n\t        'WinAPI_IsPathShared WinAPI_IsProcessInJob ' +\n\t        'WinAPI_IsProcessorFeaturePresent WinAPI_IsRectEmpty ' +\n\t        'WinAPI_IsThemeActive ' +\n\t        'WinAPI_IsThemeBackgroundPartiallyTransparent ' +\n\t        'WinAPI_IsThemePartDefined WinAPI_IsValidLocale ' +\n\t        'WinAPI_IsWindow WinAPI_IsWindowEnabled WinAPI_IsWindowUnicode ' +\n\t        'WinAPI_IsWindowVisible WinAPI_IsWow64Process ' +\n\t        'WinAPI_IsWritable WinAPI_IsZoomed WinAPI_Keybd_Event ' +\n\t        'WinAPI_KillTimer WinAPI_LineDDA WinAPI_LineTo ' +\n\t        'WinAPI_LoadBitmap WinAPI_LoadCursor WinAPI_LoadCursorFromFile ' +\n\t        'WinAPI_LoadIcon WinAPI_LoadIconMetric ' +\n\t        'WinAPI_LoadIconWithScaleDown WinAPI_LoadImage ' +\n\t        'WinAPI_LoadIndirectString WinAPI_LoadKeyboardLayout ' +\n\t        'WinAPI_LoadLibrary WinAPI_LoadLibraryEx WinAPI_LoadMedia ' +\n\t        'WinAPI_LoadResource WinAPI_LoadShell32Icon WinAPI_LoadString ' +\n\t        'WinAPI_LoadStringEx WinAPI_LoByte WinAPI_LocalFree ' +\n\t        'WinAPI_LockDevice WinAPI_LockFile WinAPI_LockResource ' +\n\t        'WinAPI_LockWindowUpdate WinAPI_LockWorkStation WinAPI_LoDWord ' +\n\t        'WinAPI_LongMid WinAPI_LookupIconIdFromDirectoryEx ' +\n\t        'WinAPI_LoWord WinAPI_LPtoDP WinAPI_MAKELANGID ' +\n\t        'WinAPI_MAKELCID WinAPI_MakeLong WinAPI_MakeQWord ' +\n\t        'WinAPI_MakeWord WinAPI_MapViewOfFile WinAPI_MapVirtualKey ' +\n\t        'WinAPI_MaskBlt WinAPI_MessageBeep WinAPI_MessageBoxCheck ' +\n\t        'WinAPI_MessageBoxIndirect WinAPI_MirrorIcon ' +\n\t        'WinAPI_ModifyWorldTransform WinAPI_MonitorFromPoint ' +\n\t        'WinAPI_MonitorFromRect WinAPI_MonitorFromWindow ' +\n\t        'WinAPI_Mouse_Event WinAPI_MoveFileEx WinAPI_MoveMemory ' +\n\t        'WinAPI_MoveTo WinAPI_MoveToEx WinAPI_MoveWindow ' +\n\t        'WinAPI_MsgBox WinAPI_MulDiv WinAPI_MultiByteToWideChar ' +\n\t        'WinAPI_MultiByteToWideCharEx WinAPI_NtStatusToDosError ' +\n\t        'WinAPI_OemToChar WinAPI_OffsetClipRgn WinAPI_OffsetPoints ' +\n\t        'WinAPI_OffsetRect WinAPI_OffsetRgn WinAPI_OffsetWindowOrg ' +\n\t        'WinAPI_OpenDesktop WinAPI_OpenFileById WinAPI_OpenFileDlg ' +\n\t        'WinAPI_OpenFileMapping WinAPI_OpenIcon ' +\n\t        'WinAPI_OpenInputDesktop WinAPI_OpenJobObject WinAPI_OpenMutex ' +\n\t        'WinAPI_OpenProcess WinAPI_OpenProcessToken ' +\n\t        'WinAPI_OpenSemaphore WinAPI_OpenThemeData ' +\n\t        'WinAPI_OpenWindowStation WinAPI_PageSetupDlg ' +\n\t        'WinAPI_PaintDesktop WinAPI_PaintRgn WinAPI_ParseURL ' +\n\t        'WinAPI_ParseUserName WinAPI_PatBlt WinAPI_PathAddBackslash ' +\n\t        'WinAPI_PathAddExtension WinAPI_PathAppend ' +\n\t        'WinAPI_PathBuildRoot WinAPI_PathCanonicalize ' +\n\t        'WinAPI_PathCommonPrefix WinAPI_PathCompactPath ' +\n\t        'WinAPI_PathCompactPathEx WinAPI_PathCreateFromUrl ' +\n\t        'WinAPI_PathFindExtension WinAPI_PathFindFileName ' +\n\t        'WinAPI_PathFindNextComponent WinAPI_PathFindOnPath ' +\n\t        'WinAPI_PathGetArgs WinAPI_PathGetCharType ' +\n\t        'WinAPI_PathGetDriveNumber WinAPI_PathIsContentType ' +\n\t        'WinAPI_PathIsDirectory WinAPI_PathIsDirectoryEmpty ' +\n\t        'WinAPI_PathIsExe WinAPI_PathIsFileSpec ' +\n\t        'WinAPI_PathIsLFNFileSpec WinAPI_PathIsRelative ' +\n\t        'WinAPI_PathIsRoot WinAPI_PathIsSameRoot ' +\n\t        'WinAPI_PathIsSystemFolder WinAPI_PathIsUNC ' +\n\t        'WinAPI_PathIsUNCServer WinAPI_PathIsUNCServerShare ' +\n\t        'WinAPI_PathMakeSystemFolder WinAPI_PathMatchSpec ' +\n\t        'WinAPI_PathParseIconLocation WinAPI_PathRelativePathTo ' +\n\t        'WinAPI_PathRemoveArgs WinAPI_PathRemoveBackslash ' +\n\t        'WinAPI_PathRemoveExtension WinAPI_PathRemoveFileSpec ' +\n\t        'WinAPI_PathRenameExtension WinAPI_PathSearchAndQualify ' +\n\t        'WinAPI_PathSkipRoot WinAPI_PathStripPath ' +\n\t        'WinAPI_PathStripToRoot WinAPI_PathToRegion ' +\n\t        'WinAPI_PathUndecorate WinAPI_PathUnExpandEnvStrings ' +\n\t        'WinAPI_PathUnmakeSystemFolder WinAPI_PathUnquoteSpaces ' +\n\t        'WinAPI_PathYetAnotherMakeUniqueName WinAPI_PickIconDlg ' +\n\t        'WinAPI_PlayEnhMetaFile WinAPI_PlaySound WinAPI_PlgBlt ' +\n\t        'WinAPI_PointFromRect WinAPI_PolyBezier WinAPI_PolyBezierTo ' +\n\t        'WinAPI_PolyDraw WinAPI_Polygon WinAPI_PostMessage ' +\n\t        'WinAPI_PrimaryLangId WinAPI_PrintDlg WinAPI_PrintDlgEx ' +\n\t        'WinAPI_PrintWindow WinAPI_ProgIDFromCLSID WinAPI_PtInRect ' +\n\t        'WinAPI_PtInRectEx WinAPI_PtInRegion WinAPI_PtVisible ' +\n\t        'WinAPI_QueryDosDevice WinAPI_QueryInformationJobObject ' +\n\t        'WinAPI_QueryPerformanceCounter WinAPI_QueryPerformanceFrequency ' +\n\t        'WinAPI_RadialGradientFill WinAPI_ReadDirectoryChanges ' +\n\t        'WinAPI_ReadFile WinAPI_ReadProcessMemory WinAPI_Rectangle ' +\n\t        'WinAPI_RectInRegion WinAPI_RectIsEmpty WinAPI_RectVisible ' +\n\t        'WinAPI_RedrawWindow WinAPI_RegCloseKey ' +\n\t        'WinAPI_RegConnectRegistry WinAPI_RegCopyTree ' +\n\t        'WinAPI_RegCopyTreeEx WinAPI_RegCreateKey ' +\n\t        'WinAPI_RegDeleteEmptyKey WinAPI_RegDeleteKey ' +\n\t        'WinAPI_RegDeleteKeyValue WinAPI_RegDeleteTree ' +\n\t        'WinAPI_RegDeleteTreeEx WinAPI_RegDeleteValue ' +\n\t        'WinAPI_RegDisableReflectionKey WinAPI_RegDuplicateHKey ' +\n\t        'WinAPI_RegEnableReflectionKey WinAPI_RegEnumKey ' +\n\t        'WinAPI_RegEnumValue WinAPI_RegFlushKey ' +\n\t        'WinAPI_RegisterApplicationRestart WinAPI_RegisterClass ' +\n\t        'WinAPI_RegisterClassEx WinAPI_RegisterHotKey ' +\n\t        'WinAPI_RegisterPowerSettingNotification ' +\n\t        'WinAPI_RegisterRawInputDevices WinAPI_RegisterShellHookWindow ' +\n\t        'WinAPI_RegisterWindowMessage WinAPI_RegLoadMUIString ' +\n\t        'WinAPI_RegNotifyChangeKeyValue WinAPI_RegOpenKey ' +\n\t        'WinAPI_RegQueryInfoKey WinAPI_RegQueryLastWriteTime ' +\n\t        'WinAPI_RegQueryMultipleValues WinAPI_RegQueryReflectionKey ' +\n\t        'WinAPI_RegQueryValue WinAPI_RegRestoreKey WinAPI_RegSaveKey ' +\n\t        'WinAPI_RegSetValue WinAPI_ReleaseCapture WinAPI_ReleaseDC ' +\n\t        'WinAPI_ReleaseMutex WinAPI_ReleaseSemaphore ' +\n\t        'WinAPI_ReleaseStream WinAPI_RemoveClipboardFormatListener ' +\n\t        'WinAPI_RemoveDirectory WinAPI_RemoveFontMemResourceEx ' +\n\t        'WinAPI_RemoveFontResourceEx WinAPI_RemoveWindowSubclass ' +\n\t        'WinAPI_ReOpenFile WinAPI_ReplaceFile WinAPI_ReplaceTextDlg ' +\n\t        'WinAPI_ResetEvent WinAPI_RestartDlg WinAPI_RestoreDC ' +\n\t        'WinAPI_RGB WinAPI_RotatePoints WinAPI_RoundRect ' +\n\t        'WinAPI_SaveDC WinAPI_SaveFileDlg WinAPI_SaveHBITMAPToFile ' +\n\t        'WinAPI_SaveHICONToFile WinAPI_ScaleWindowExt ' +\n\t        'WinAPI_ScreenToClient WinAPI_SearchPath WinAPI_SelectClipPath ' +\n\t        'WinAPI_SelectClipRgn WinAPI_SelectObject ' +\n\t        'WinAPI_SendMessageTimeout WinAPI_SetActiveWindow ' +\n\t        'WinAPI_SetArcDirection WinAPI_SetBitmapBits ' +\n\t        'WinAPI_SetBitmapDimensionEx WinAPI_SetBkColor ' +\n\t        'WinAPI_SetBkMode WinAPI_SetBoundsRect WinAPI_SetBrushOrg ' +\n\t        'WinAPI_SetCapture WinAPI_SetCaretBlinkTime WinAPI_SetCaretPos ' +\n\t        'WinAPI_SetClassLongEx WinAPI_SetColorAdjustment ' +\n\t        'WinAPI_SetCompression WinAPI_SetCurrentDirectory ' +\n\t        'WinAPI_SetCurrentProcessExplicitAppUserModelID WinAPI_SetCursor ' +\n\t        'WinAPI_SetDCBrushColor WinAPI_SetDCPenColor ' +\n\t        'WinAPI_SetDefaultPrinter WinAPI_SetDeviceGammaRamp ' +\n\t        'WinAPI_SetDIBColorTable WinAPI_SetDIBits ' +\n\t        'WinAPI_SetDIBitsToDevice WinAPI_SetDllDirectory ' +\n\t        'WinAPI_SetEndOfFile WinAPI_SetEnhMetaFileBits ' +\n\t        'WinAPI_SetErrorMode WinAPI_SetEvent WinAPI_SetFileAttributes ' +\n\t        'WinAPI_SetFileInformationByHandleEx WinAPI_SetFilePointer ' +\n\t        'WinAPI_SetFilePointerEx WinAPI_SetFileShortName ' +\n\t        'WinAPI_SetFileValidData WinAPI_SetFocus WinAPI_SetFont ' +\n\t        'WinAPI_SetForegroundWindow WinAPI_SetFRBuffer ' +\n\t        'WinAPI_SetGraphicsMode WinAPI_SetHandleInformation ' +\n\t        'WinAPI_SetInformationJobObject WinAPI_SetKeyboardLayout ' +\n\t        'WinAPI_SetKeyboardState WinAPI_SetLastError ' +\n\t        'WinAPI_SetLayeredWindowAttributes WinAPI_SetLocaleInfo ' +\n\t        'WinAPI_SetMapMode WinAPI_SetMessageExtraInfo WinAPI_SetParent ' +\n\t        'WinAPI_SetPixel WinAPI_SetPolyFillMode ' +\n\t        'WinAPI_SetPriorityClass WinAPI_SetProcessAffinityMask ' +\n\t        'WinAPI_SetProcessShutdownParameters ' +\n\t        'WinAPI_SetProcessWindowStation WinAPI_SetRectRgn ' +\n\t        'WinAPI_SetROP2 WinAPI_SetSearchPathMode ' +\n\t        'WinAPI_SetStretchBltMode WinAPI_SetSysColors ' +\n\t        'WinAPI_SetSystemCursor WinAPI_SetTextAlign ' +\n\t        'WinAPI_SetTextCharacterExtra WinAPI_SetTextColor ' +\n\t        'WinAPI_SetTextJustification WinAPI_SetThemeAppProperties ' +\n\t        'WinAPI_SetThreadDesktop WinAPI_SetThreadErrorMode ' +\n\t        'WinAPI_SetThreadExecutionState WinAPI_SetThreadLocale ' +\n\t        'WinAPI_SetThreadUILanguage WinAPI_SetTimer ' +\n\t        'WinAPI_SetUDFColorMode WinAPI_SetUserGeoID ' +\n\t        'WinAPI_SetUserObjectInformation WinAPI_SetVolumeMountPoint ' +\n\t        'WinAPI_SetWindowDisplayAffinity WinAPI_SetWindowExt ' +\n\t        'WinAPI_SetWindowLong WinAPI_SetWindowOrg ' +\n\t        'WinAPI_SetWindowPlacement WinAPI_SetWindowPos ' +\n\t        'WinAPI_SetWindowRgn WinAPI_SetWindowsHookEx ' +\n\t        'WinAPI_SetWindowSubclass WinAPI_SetWindowText ' +\n\t        'WinAPI_SetWindowTheme WinAPI_SetWinEventHook ' +\n\t        'WinAPI_SetWorldTransform WinAPI_SfcIsFileProtected ' +\n\t        'WinAPI_SfcIsKeyProtected WinAPI_ShellAboutDlg ' +\n\t        'WinAPI_ShellAddToRecentDocs WinAPI_ShellChangeNotify ' +\n\t        'WinAPI_ShellChangeNotifyDeregister ' +\n\t        'WinAPI_ShellChangeNotifyRegister WinAPI_ShellCreateDirectory ' +\n\t        'WinAPI_ShellEmptyRecycleBin WinAPI_ShellExecute ' +\n\t        'WinAPI_ShellExecuteEx WinAPI_ShellExtractAssociatedIcon ' +\n\t        'WinAPI_ShellExtractIcon WinAPI_ShellFileOperation ' +\n\t        'WinAPI_ShellFlushSFCache WinAPI_ShellGetFileInfo ' +\n\t        'WinAPI_ShellGetIconOverlayIndex WinAPI_ShellGetImageList ' +\n\t        'WinAPI_ShellGetKnownFolderIDList WinAPI_ShellGetKnownFolderPath ' +\n\t        'WinAPI_ShellGetLocalizedName WinAPI_ShellGetPathFromIDList ' +\n\t        'WinAPI_ShellGetSetFolderCustomSettings WinAPI_ShellGetSettings ' +\n\t        'WinAPI_ShellGetSpecialFolderLocation ' +\n\t        'WinAPI_ShellGetSpecialFolderPath WinAPI_ShellGetStockIconInfo ' +\n\t        'WinAPI_ShellILCreateFromPath WinAPI_ShellNotifyIcon ' +\n\t        'WinAPI_ShellNotifyIconGetRect WinAPI_ShellObjectProperties ' +\n\t        'WinAPI_ShellOpenFolderAndSelectItems WinAPI_ShellOpenWithDlg ' +\n\t        'WinAPI_ShellQueryRecycleBin ' +\n\t        'WinAPI_ShellQueryUserNotificationState ' +\n\t        'WinAPI_ShellRemoveLocalizedName WinAPI_ShellRestricted ' +\n\t        'WinAPI_ShellSetKnownFolderPath WinAPI_ShellSetLocalizedName ' +\n\t        'WinAPI_ShellSetSettings WinAPI_ShellStartNetConnectionDlg ' +\n\t        'WinAPI_ShellUpdateImage WinAPI_ShellUserAuthenticationDlg ' +\n\t        'WinAPI_ShellUserAuthenticationDlgEx WinAPI_ShortToWord ' +\n\t        'WinAPI_ShowCaret WinAPI_ShowCursor WinAPI_ShowError ' +\n\t        'WinAPI_ShowLastError WinAPI_ShowMsg WinAPI_ShowOwnedPopups ' +\n\t        'WinAPI_ShowWindow WinAPI_ShutdownBlockReasonCreate ' +\n\t        'WinAPI_ShutdownBlockReasonDestroy ' +\n\t        'WinAPI_ShutdownBlockReasonQuery WinAPI_SizeOfResource ' +\n\t        'WinAPI_StretchBlt WinAPI_StretchDIBits ' +\n\t        'WinAPI_StrFormatByteSize WinAPI_StrFormatByteSizeEx ' +\n\t        'WinAPI_StrFormatKBSize WinAPI_StrFromTimeInterval ' +\n\t        'WinAPI_StringFromGUID WinAPI_StringLenA WinAPI_StringLenW ' +\n\t        'WinAPI_StrLen WinAPI_StrokeAndFillPath WinAPI_StrokePath ' +\n\t        'WinAPI_StructToArray WinAPI_SubLangId WinAPI_SubtractRect ' +\n\t        'WinAPI_SwapDWord WinAPI_SwapQWord WinAPI_SwapWord ' +\n\t        'WinAPI_SwitchColor WinAPI_SwitchDesktop ' +\n\t        'WinAPI_SwitchToThisWindow WinAPI_SystemParametersInfo ' +\n\t        'WinAPI_TabbedTextOut WinAPI_TerminateJobObject ' +\n\t        'WinAPI_TerminateProcess WinAPI_TextOut WinAPI_TileWindows ' +\n\t        'WinAPI_TrackMouseEvent WinAPI_TransparentBlt ' +\n\t        'WinAPI_TwipsPerPixelX WinAPI_TwipsPerPixelY ' +\n\t        'WinAPI_UnhookWindowsHookEx WinAPI_UnhookWinEvent ' +\n\t        'WinAPI_UnionRect WinAPI_UnionStruct WinAPI_UniqueHardwareID ' +\n\t        'WinAPI_UnloadKeyboardLayout WinAPI_UnlockFile ' +\n\t        'WinAPI_UnmapViewOfFile WinAPI_UnregisterApplicationRestart ' +\n\t        'WinAPI_UnregisterClass WinAPI_UnregisterHotKey ' +\n\t        'WinAPI_UnregisterPowerSettingNotification ' +\n\t        'WinAPI_UpdateLayeredWindow WinAPI_UpdateLayeredWindowEx ' +\n\t        'WinAPI_UpdateLayeredWindowIndirect WinAPI_UpdateResource ' +\n\t        'WinAPI_UpdateWindow WinAPI_UrlApplyScheme ' +\n\t        'WinAPI_UrlCanonicalize WinAPI_UrlCombine WinAPI_UrlCompare ' +\n\t        'WinAPI_UrlCreateFromPath WinAPI_UrlFixup WinAPI_UrlGetPart ' +\n\t        'WinAPI_UrlHash WinAPI_UrlIs WinAPI_UserHandleGrantAccess ' +\n\t        'WinAPI_ValidateRect WinAPI_ValidateRgn WinAPI_VerQueryRoot ' +\n\t        'WinAPI_VerQueryValue WinAPI_VerQueryValueEx ' +\n\t        'WinAPI_WaitForInputIdle WinAPI_WaitForMultipleObjects ' +\n\t        'WinAPI_WaitForSingleObject WinAPI_WideCharToMultiByte ' +\n\t        'WinAPI_WidenPath WinAPI_WindowFromDC WinAPI_WindowFromPoint ' +\n\t        'WinAPI_WordToShort WinAPI_Wow64EnableWow64FsRedirection ' +\n\t        'WinAPI_WriteConsole WinAPI_WriteFile ' +\n\t        'WinAPI_WriteProcessMemory WinAPI_ZeroMemory ' +\n\t        'WinNet_AddConnection WinNet_AddConnection2 ' +\n\t        'WinNet_AddConnection3 WinNet_CancelConnection ' +\n\t        'WinNet_CancelConnection2 WinNet_CloseEnum ' +\n\t        'WinNet_ConnectionDialog WinNet_ConnectionDialog1 ' +\n\t        'WinNet_DisconnectDialog WinNet_DisconnectDialog1 ' +\n\t        'WinNet_EnumResource WinNet_GetConnection ' +\n\t        'WinNet_GetConnectionPerformance WinNet_GetLastError ' +\n\t        'WinNet_GetNetworkInformation WinNet_GetProviderName ' +\n\t        'WinNet_GetResourceInformation WinNet_GetResourceParent ' +\n\t        'WinNet_GetUniversalName WinNet_GetUser WinNet_OpenEnum ' +\n\t        'WinNet_RestoreConnection WinNet_UseConnection Word_Create ' +\n\t        'Word_DocAdd Word_DocAttach Word_DocClose Word_DocExport ' +\n\t        'Word_DocFind Word_DocFindReplace Word_DocGet ' +\n\t        'Word_DocLinkAdd Word_DocLinkGet Word_DocOpen ' +\n\t        'Word_DocPictureAdd Word_DocPrint Word_DocRangeSet ' +\n\t        'Word_DocSave Word_DocSaveAs Word_DocTableRead ' +\n\t        'Word_DocTableWrite Word_Quit',\n\t\n\t        COMMENT = {\n\t            variants: [\n\t              hljs.COMMENT(';', '$', {relevance: 0}),\n\t              hljs.COMMENT('#cs', '#ce'),\n\t              hljs.COMMENT('#comments-start', '#comments-end')\n\t            ]\n\t        },\n\t\n\t        VARIABLE = {\n\t            className: 'variable',\n\t            begin: '\\\\$[A-z0-9_]+'\n\t        },\n\t\n\t        STRING = {\n\t            className: 'string',\n\t            variants: [{\n\t                begin: /\"/,\n\t                end: /\"/,\n\t                contains: [{\n\t                    begin: /\"\"/,\n\t                    relevance: 0\n\t                }]\n\t            }, {\n\t                begin: /'/,\n\t                end: /'/,\n\t                contains: [{\n\t                    begin: /''/,\n\t                    relevance: 0\n\t                }]\n\t            }]\n\t        },\n\t\n\t        NUMBER = {\n\t            variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n\t        },\n\t\n\t        PREPROCESSOR = {\n\t            className: 'preprocessor',\n\t            begin: '#',\n\t            end: '$',\n\t            keywords: 'include include-once NoTrayIcon OnAutoItStartRegister RequireAdmin pragma ' +\n\t                'Au3Stripper_Ignore_Funcs Au3Stripper_Ignore_Variables ' +\n\t                'Au3Stripper_Off Au3Stripper_On Au3Stripper_Parameters ' +\n\t                'AutoIt3Wrapper_Add_Constants AutoIt3Wrapper_Au3Check_Parameters ' +\n\t                'AutoIt3Wrapper_Au3Check_Stop_OnWarning AutoIt3Wrapper_Aut2Exe ' +\n\t                'AutoIt3Wrapper_AutoIt3 AutoIt3Wrapper_AutoIt3Dir ' +\n\t                'AutoIt3Wrapper_Change2CUI AutoIt3Wrapper_Compile_Both ' +\n\t                'AutoIt3Wrapper_Compression AutoIt3Wrapper_EndIf ' +\n\t                'AutoIt3Wrapper_Icon AutoIt3Wrapper_If_Compile ' +\n\t                'AutoIt3Wrapper_If_Run AutoIt3Wrapper_Jump_To_First_Error ' +\n\t                'AutoIt3Wrapper_OutFile AutoIt3Wrapper_OutFile_Type ' +\n\t                'AutoIt3Wrapper_OutFile_X64 AutoIt3Wrapper_PlugIn_Funcs ' +\n\t                'AutoIt3Wrapper_Res_Comment Autoit3Wrapper_Res_Compatibility ' +\n\t                'AutoIt3Wrapper_Res_Description AutoIt3Wrapper_Res_Field ' +\n\t                'AutoIt3Wrapper_Res_File_Add AutoIt3Wrapper_Res_FileVersion ' +\n\t                'AutoIt3Wrapper_Res_FileVersion_AutoIncrement ' +\n\t                'AutoIt3Wrapper_Res_Icon_Add AutoIt3Wrapper_Res_Language ' +\n\t                'AutoIt3Wrapper_Res_LegalCopyright ' +\n\t                'AutoIt3Wrapper_Res_ProductVersion ' +\n\t                'AutoIt3Wrapper_Res_requestedExecutionLevel ' +\n\t                'AutoIt3Wrapper_Res_SaveSource AutoIt3Wrapper_Run_After ' +\n\t                'AutoIt3Wrapper_Run_Au3Check AutoIt3Wrapper_Run_Au3Stripper ' +\n\t                'AutoIt3Wrapper_Run_Before AutoIt3Wrapper_Run_Debug_Mode ' +\n\t                'AutoIt3Wrapper_Run_SciTE_Minimized ' +\n\t                'AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized ' +\n\t                'AutoIt3Wrapper_Run_Tidy AutoIt3Wrapper_ShowProgress ' +\n\t                'AutoIt3Wrapper_Testing AutoIt3Wrapper_Tidy_Stop_OnError ' +\n\t                'AutoIt3Wrapper_UPX_Parameters AutoIt3Wrapper_UseUPX ' +\n\t                'AutoIt3Wrapper_UseX64 AutoIt3Wrapper_Version ' +\n\t                'AutoIt3Wrapper_Versioning AutoIt3Wrapper_Versioning_Parameters ' +\n\t                'Tidy_Off Tidy_On Tidy_Parameters EndRegion Region',\n\t            contains: [{\n\t                    begin: /\\\\\\n/,\n\t                    relevance: 0\n\t                }, {\n\t                    beginKeywords: 'include',\n\t                    end: '$',\n\t                    contains: [\n\t                        STRING, {\n\t                            className: 'string',\n\t                            variants: [{\n\t                                begin: '<',\n\t                                end: '>'\n\t                            }, {\n\t                                begin: /\"/,\n\t                                end: /\"/,\n\t                                contains: [{\n\t                                    begin: /\"\"/,\n\t                                    relevance: 0\n\t                                }]\n\t                            }, {\n\t                                begin: /'/,\n\t                                end: /'/,\n\t                                contains: [{\n\t                                    begin: /''/,\n\t                                    relevance: 0\n\t                                }]\n\t                            }]\n\t                        }\n\t                    ]\n\t                },\n\t                STRING,\n\t                COMMENT\n\t            ]\n\t        },\n\t\n\t        CONSTANT = {\n\t            className: 'constant',\n\t            // begin: '@',\n\t            // end: '$',\n\t            // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',\n\t            // relevance: 5\n\t            begin: '@[A-z0-9_]+'\n\t        },\n\t\n\t        FUNCTION = {\n\t            className: 'function',\n\t            beginKeywords: 'Func',\n\t            end: '$',\n\t            excludeEnd: true,\n\t            illegal: '\\\\$|\\\\[|%',\n\t            contains: [\n\t                hljs.UNDERSCORE_TITLE_MODE, {\n\t                    className: 'params',\n\t                    begin: '\\\\(',\n\t                    end: '\\\\)',\n\t                    contains: [\n\t                        VARIABLE,\n\t                        STRING,\n\t                        NUMBER\n\t                    ]\n\t                }\n\t            ]\n\t        };\n\t\n\t    return {\n\t        case_insensitive: true,\n\t        keywords: {\n\t            keyword: KEYWORDS,\n\t            built_in: BUILT_IN,\n\t            literal: LITERAL\n\t        },\n\t        contains: [\n\t            COMMENT,\n\t            VARIABLE,\n\t            STRING,\n\t            NUMBER,\n\t            PREPROCESSOR,\n\t            CONSTANT,\n\t            FUNCTION\n\t        ]\n\t    }\n\t});\n\t\n\thljs.registerLanguage('avrasm', function(hljs) {\n\t  return {\n\t    case_insensitive: true,\n\t    lexemes: '\\\\.?' + hljs.IDENT_RE,\n\t    keywords: {\n\t      keyword:\n\t        /* mnemonic */\n\t        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +\n\t        'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +\n\t        'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +\n\t        'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +\n\t        'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +\n\t        'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +\n\t        'subi swap tst wdr',\n\t      built_in:\n\t        /* general purpose registers */\n\t        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +\n\t        'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +\n\t        /* IO Registers (ATMega128) */\n\t        'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +\n\t        'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +\n\t        'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +\n\t        'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +\n\t        'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +\n\t        'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +\n\t        'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +\n\t        'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n\t      preprocessor:\n\t        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +\n\t        '.listmac .macro .nolist .org .set'\n\t    },\n\t    contains: [\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.COMMENT(\n\t        ';',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n\t      hljs.BINARY_NUMBER_MODE, // 0b...\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\\'', end: '[^\\\\\\\\]\\'',\n\t        illegal: '[^\\\\\\\\][^\\']'\n\t      },\n\t      {className: 'label',  begin: '^[A-Za-z0-9_.$]+:'},\n\t      {className: 'preprocessor', begin: '#', end: '$'},\n\t      {  // подстановка в «.macro»\n\t        className: 'localvars',\n\t        begin: '@[0-9]+'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('axapta', function(hljs) {\n\t  return {\n\t    keywords: 'false int abstract private char boolean static null if for true ' +\n\t      'while long throw finally protected final return void enum else ' +\n\t      'break new catch byte super case short default double public try this switch ' +\n\t      'continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count ' +\n\t      'order group by asc desc index hint like dispaly edit client server ttsbegin ' +\n\t      'ttscommit str real date container anytype common div mod',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$'\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        illegal: ':',\n\t        contains: [\n\t          {beginKeywords: 'extends implements'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('bash', function(hljs) {\n\t  var VAR = {\n\t    className: 'variable',\n\t    variants: [\n\t      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n\t      {begin: /\\$\\{(.*?)}/}\n\t    ]\n\t  };\n\t  var QUOTE_STRING = {\n\t    className: 'string',\n\t    begin: /\"/, end: /\"/,\n\t    contains: [\n\t      hljs.BACKSLASH_ESCAPE,\n\t      VAR,\n\t      {\n\t        className: 'variable',\n\t        begin: /\\$\\(/, end: /\\)/,\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      }\n\t    ]\n\t  };\n\t  var APOS_STRING = {\n\t    className: 'string',\n\t    begin: /'/, end: /'/\n\t  };\n\t\n\t  return {\n\t    aliases: ['sh', 'zsh'],\n\t    lexemes: /-?[a-z\\.]+/,\n\t    keywords: {\n\t      keyword:\n\t        'if then else elif fi for while in do done case esac function',\n\t      literal:\n\t        'true false',\n\t      built_in:\n\t        // Shell built-ins\n\t        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n\t        'trap umask unset ' +\n\t        // Bash built-ins\n\t        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n\t        'read readarray source type typeset ulimit unalias ' +\n\t        // Shell modifiers\n\t        'set shopt ' +\n\t        // Zsh built-ins\n\t        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n\t        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n\t        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n\t        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n\t        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n\t        'zpty zregexparse zsocket zstyle ztcp',\n\t      operator:\n\t        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'shebang',\n\t        begin: /^#![^\\n]+sh\\s*$/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n\t        returnBegin: true,\n\t        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n\t        relevance: 0\n\t      },\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.NUMBER_MODE,\n\t      QUOTE_STRING,\n\t      APOS_STRING,\n\t      VAR\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('brainfuck', function(hljs){\n\t  var LITERAL = {\n\t    className: 'literal',\n\t    begin: '[\\\\+\\\\-]',\n\t    relevance: 0\n\t  };\n\t  return {\n\t    aliases: ['bf'],\n\t    contains: [\n\t      hljs.COMMENT(\n\t        '[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n\t        '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n\t        {\n\t          returnEnd: true,\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        className: 'title',\n\t        begin: '[\\\\[\\\\]]',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: '[\\\\.,]',\n\t        relevance: 0\n\t      },\n\t      {\n\t        // this mode works as the only relevance counter\n\t        begin: /\\+\\+|\\-\\-/, returnBegin: true,\n\t        contains: [LITERAL]\n\t      },\n\t      LITERAL\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('cal', function(hljs) {\n\t  var KEYWORDS =\n\t    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n\t    'until while with var';\n\t  var LITERALS = 'false true';\n\t  var COMMENT_MODES = [\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.COMMENT(\n\t      /\\{/,\n\t      /\\}/,\n\t      {\n\t        relevance: 0\n\t      }\n\t    ),\n\t    hljs.COMMENT(\n\t      /\\(\\*/,\n\t      /\\*\\)/,\n\t      {\n\t        relevance: 10\n\t      }\n\t    )\n\t  ];\n\t  var STRING = {\n\t    className: 'string',\n\t    begin: /'/, end: /'/,\n\t    contains: [{begin: /''/}]\n\t  };\n\t  var CHAR_STRING = {\n\t    className: 'string', begin: /(#\\d+)+/\n\t  };\n\t  var DATE = {\n\t      className: 'date',\n\t      begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n\t      relevance: 0\n\t  };\n\t  var DBL_QUOTED_VARIABLE = {\n\t      className: 'variable',\n\t      begin: '\"',\n\t      end: '\"'\n\t  };\n\t\n\t  var PROCEDURE = {\n\t    className: 'function',\n\t    beginKeywords: 'procedure', end: /[:;]/,\n\t    keywords: 'procedure|10',\n\t    contains: [\n\t      hljs.TITLE_MODE,\n\t      {\n\t        className: 'params',\n\t        begin: /\\(/, end: /\\)/,\n\t        keywords: KEYWORDS,\n\t        contains: [STRING, CHAR_STRING]\n\t      }\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t\n\t  var OBJECT = {\n\t    className: 'class',\n\t    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n\t    returnBegin: true,\n\t    contains: [\n\t      hljs.TITLE_MODE,\n\t        PROCEDURE\n\t    ]\n\t  };\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: { keyword: KEYWORDS, literal: LITERALS },\n\t    contains: [\n\t      STRING, CHAR_STRING,\n\t      DATE, DBL_QUOTED_VARIABLE,\n\t      hljs.NUMBER_MODE,\n\t      OBJECT,\n\t      PROCEDURE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('capnproto', function(hljs) {\n\t  return {\n\t    aliases: ['capnp'],\n\t    keywords: {\n\t      keyword:\n\t        'struct enum interface union group import using const annotation extends in of on as with from fixed',\n\t      built_in:\n\t        'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +\n\t        'Text Data AnyPointer AnyStruct Capability List',\n\t      literal:\n\t        'true false'\n\t    },\n\t    contains: [\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'shebang',\n\t        begin: /@0x[\\w\\d]{16};/,\n\t        illegal: /\\n/\n\t      },\n\t      {\n\t        className: 'number',\n\t        begin: /@\\d+\\b/\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'struct enum', end: /\\{/,\n\t        illegal: /\\n/,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {\n\t            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n\t          })\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'interface', end: /\\{/,\n\t        illegal: /\\n/,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {\n\t            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n\t          })\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('ceylon', function(hljs) {\n\t  // 2.3. Identifiers and keywords\n\t  var KEYWORDS =\n\t    'assembly module package import alias class interface object given value ' +\n\t    'assign void function new of extends satisfies abstracts in out return ' +\n\t    'break continue throw assert dynamic if else switch case for while try ' +\n\t    'catch finally then let this outer super is exists nonempty';\n\t  // 7.4.1 Declaration Modifiers\n\t  var DECLARATION_MODIFIERS =\n\t    'shared abstract formal default actual variable late native deprecated' +\n\t    'final sealed annotation suppressWarnings small';\n\t  // 7.4.2 Documentation\n\t  var DOCUMENTATION =\n\t    'doc by license see throws tagged';\n\t  var LANGUAGE_ANNOTATIONS = DECLARATION_MODIFIERS + ' ' + DOCUMENTATION;\n\t  var SUBST = {\n\t    className: 'subst', excludeBegin: true, excludeEnd: true,\n\t    begin: /``/, end: /``/,\n\t    keywords: KEYWORDS,\n\t    relevance: 10\n\t  };\n\t  var EXPRESSIONS = [\n\t    {\n\t      // verbatim string\n\t      className: 'string',\n\t      begin: '\"\"\"',\n\t      end: '\"\"\"',\n\t      relevance: 10\n\t    },\n\t    {\n\t      // string literal or template\n\t      className: 'string',\n\t      begin: '\"', end: '\"',\n\t      contains: [SUBST]\n\t    },\n\t    {\n\t      // character literal\n\t      className: 'string',\n\t      begin: \"'\",\n\t      end: \"'\",\n\t    },\n\t    {\n\t      // numeric literal\n\t      className: 'number',\n\t      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n\t      relevance: 0\n\t    }\n\t  ];\n\t  SUBST.contains = EXPRESSIONS;\n\t\n\t  return {\n\t    keywords: {\n\t      keyword: KEYWORDS,\n\t      annotation: LANGUAGE_ANNOTATIONS\n\t    },\n\t    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n\t      {\n\t        // compiler annotation\n\t        className: 'annotation',\n\t        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n\t      }\n\t    ].concat(EXPRESSIONS)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('clojure', function(hljs) {\n\t  var keywords = {\n\t    built_in:\n\t      // Clojure keywords\n\t      'def cond apply if-not if-let if not not= = < > <= >= == + / * - rem '+\n\t      'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? '+\n\t      'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? '+\n\t      'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? '+\n\t      'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . '+\n\t      'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last '+\n\t      'drop-while while intern condp case reduced cycle split-at split-with repeat replicate '+\n\t      'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext '+\n\t      'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends '+\n\t      'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler '+\n\t      'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter '+\n\t      'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or '+\n\t      'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert '+\n\t      'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast '+\n\t      'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import '+\n\t      'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! '+\n\t      'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger '+\n\t      'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline '+\n\t      'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking '+\n\t      'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! '+\n\t      'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! '+\n\t      'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty '+\n\t      'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list '+\n\t      'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer '+\n\t      'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate '+\n\t      'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta '+\n\t      'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n\t   };\n\t\n\t  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n\t  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n\t  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\t\n\t  var SYMBOL = {\n\t    begin: SYMBOL_RE,\n\t    relevance: 0\n\t  };\n\t  var NUMBER = {\n\t    className: 'number', begin: SIMPLE_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n\t  var COMMENT = hljs.COMMENT(\n\t    ';',\n\t    '$',\n\t    {\n\t      relevance: 0\n\t    }\n\t  );\n\t  var LITERAL = {\n\t    className: 'literal',\n\t    begin: /\\b(true|false|nil)\\b/\n\t  };\n\t  var COLLECTION = {\n\t    className: 'collection',\n\t    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n\t  };\n\t  var HINT = {\n\t    className: 'comment',\n\t    begin: '\\\\^' + SYMBOL_RE\n\t  };\n\t  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n\t  var KEY = {\n\t    className: 'attribute',\n\t    begin: '[:]' + SYMBOL_RE\n\t  };\n\t  var LIST = {\n\t    className: 'list',\n\t    begin: '\\\\(', end: '\\\\)'\n\t  };\n\t  var BODY = {\n\t    endsWithParent: true,\n\t    relevance: 0\n\t  };\n\t  var NAME = {\n\t    keywords: keywords,\n\t    lexemes: SYMBOL_RE,\n\t    className: 'keyword', begin: SYMBOL_RE,\n\t    starts: BODY\n\t  };\n\t  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\t\n\t  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n\t  BODY.contains = DEFAULT_CONTAINS;\n\t  COLLECTION.contains = DEFAULT_CONTAINS;\n\t\n\t  return {\n\t    aliases: ['clj'],\n\t    illegal: /\\S/,\n\t    contains: [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('clojure-repl', function(hljs) {\n\t  return {\n\t    contains: [\n\t      {\n\t        className: 'prompt',\n\t        begin: /^([\\w.-]+|\\s*#_)=>/,\n\t        starts: {\n\t          end: /$/,\n\t          subLanguage: 'clojure'\n\t        }\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('cmake', function(hljs) {\n\t  return {\n\t    aliases: ['cmake.in'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'add_custom_command add_custom_target add_definitions add_dependencies ' +\n\t        'add_executable add_library add_subdirectory add_test aux_source_directory ' +\n\t        'break build_command cmake_minimum_required cmake_policy configure_file ' +\n\t        'create_test_sourcelist define_property else elseif enable_language enable_testing ' +\n\t        'endforeach endfunction endif endmacro endwhile execute_process export find_file ' +\n\t        'find_library find_package find_path find_program fltk_wrap_ui foreach function ' +\n\t        'get_cmake_property get_directory_property get_filename_component get_property ' +\n\t        'get_source_file_property get_target_property get_test_property if include ' +\n\t        'include_directories include_external_msproject include_regular_expression install ' +\n\t        'link_directories load_cache load_command macro mark_as_advanced message option ' +\n\t        'output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return ' +\n\t        'separate_arguments set set_directory_properties set_property ' +\n\t        'set_source_files_properties set_target_properties set_tests_properties site_name ' +\n\t        'source_group string target_link_libraries try_compile try_run unset variable_watch ' +\n\t        'while build_name exec_program export_library_dependencies install_files ' +\n\t        'install_programs install_targets link_libraries make_directory remove subdir_depends ' +\n\t        'subdirs use_mangled_mesa utility_source variable_requires write_file ' +\n\t        'qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or',\n\t      operator:\n\t        'equal less greater strless strgreater strequal matches'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'envvar',\n\t        begin: '\\\\${', end: '}'\n\t      },\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('coffeescript', function(hljs) {\n\t  var KEYWORDS = {\n\t    keyword:\n\t      // JS keywords\n\t      'in if for while finally new do return else break catch instanceof throw try this ' +\n\t      'switch continue typeof delete debugger super ' +\n\t      // Coffee keywords\n\t      'then unless until loop of by when and or is isnt not',\n\t    literal:\n\t      // JS literals\n\t      'true false null undefined ' +\n\t      // Coffee literals\n\t      'yes no on off',\n\t    built_in:\n\t      'npm require console print module global window document'\n\t  };\n\t  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: /#\\{/, end: /}/,\n\t    keywords: KEYWORDS\n\t  };\n\t  var EXPRESSIONS = [\n\t    hljs.BINARY_NUMBER_MODE,\n\t    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n\t    {\n\t      className: 'string',\n\t      variants: [\n\t        {\n\t          begin: /'''/, end: /'''/,\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: /'/, end: /'/,\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: /\"\"\"/, end: /\"\"\"/,\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t        },\n\t        {\n\t          begin: /\"/, end: /\"/,\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'regexp',\n\t      variants: [\n\t        {\n\t          begin: '///', end: '///',\n\t          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n\t        },\n\t        {\n\t          begin: '//[gim]*',\n\t          relevance: 0\n\t        },\n\t        {\n\t          // regex can't start with space to parse x / 2 / 3 as two divisions\n\t          // regex can't start with *, and it supports an \"illegal\" in the main mode\n\t          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'property',\n\t      begin: '@' + JS_IDENT_RE\n\t    },\n\t    {\n\t      begin: '`', end: '`',\n\t      excludeBegin: true, excludeEnd: true,\n\t      subLanguage: 'javascript'\n\t    }\n\t  ];\n\t  SUBST.contains = EXPRESSIONS;\n\t\n\t  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n\t  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\([^\\\\(]', returnBegin: true,\n\t    /* We need another contained nameless mode to not have every nested\n\t    pair of parens to be called \"params\" */\n\t    contains: [{\n\t      begin: /\\(/, end: /\\)/,\n\t      keywords: KEYWORDS,\n\t      contains: ['self'].concat(EXPRESSIONS)\n\t    }]\n\t  };\n\t\n\t  return {\n\t    aliases: ['coffee', 'cson', 'iced'],\n\t    keywords: KEYWORDS,\n\t    illegal: /\\/\\*/,\n\t    contains: EXPRESSIONS.concat([\n\t      hljs.COMMENT('###', '###'),\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'function',\n\t        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n\t        returnBegin: true,\n\t        contains: [TITLE, PARAMS]\n\t      },\n\t      {\n\t        // anonymous function start\n\t        begin: /[:\\(,=]\\s*/,\n\t        relevance: 0,\n\t        contains: [\n\t          {\n\t            className: 'function',\n\t            begin: PARAMS_RE, end: '[-=]>',\n\t            returnBegin: true,\n\t            contains: [PARAMS]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class',\n\t        end: '$',\n\t        illegal: /[:=\"\\[\\]]/,\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends',\n\t            endsWithParent: true,\n\t            illegal: /[:=\"\\[\\]]/,\n\t            contains: [TITLE]\n\t          },\n\t          TITLE\n\t        ]\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: JS_IDENT_RE + ':', end: ':',\n\t        returnBegin: true, returnEnd: true,\n\t        relevance: 0\n\t      }\n\t    ])\n\t  };\n\t});\n\t\n\thljs.registerLanguage('cpp', function(hljs) {\n\t  var CPP_PRIMATIVE_TYPES = {\n\t    className: 'keyword',\n\t    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n\t  };\n\t\n\t  var STRINGS = {\n\t    className: 'string',\n\t    variants: [\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?\"' }),\n\t      {\n\t        begin: '(u8?|U)?R\"', end: '\"',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      {\n\t        begin: '\\'\\\\\\\\?.', end: '\\'',\n\t        illegal: '.'\n\t      }\n\t    ]\n\t  };\n\t\n\t  var NUMBERS = {\n\t    className: 'number',\n\t    variants: [\n\t      { begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)' },\n\t      { begin: hljs.C_NUMBER_RE }\n\t    ]\n\t  };\n\t\n\t  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n\t\n\t  var CPP_KEYWORDS = {\n\t    keyword: 'int float while private char catch export virtual operator sizeof ' +\n\t      'dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace ' +\n\t      'unsigned long volatile static protected bool template mutable if public friend ' +\n\t      'do goto auto void enum else break extern using class asm case typeid ' +\n\t      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n\t      'switch continue inline delete alignof constexpr decltype ' +\n\t      'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +\n\t      'atomic_bool atomic_char atomic_schar ' +\n\t      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n\t      'atomic_ullong',\n\t    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n\t      'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +\n\t      'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +\n\t      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n\t      'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n\t      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n\t      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n\t      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n\t      'vfprintf vprintf vsprintf',\n\t    literal: 'true false nullptr NULL'\n\t  };\n\t  return {\n\t    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],\n\t    keywords: CPP_KEYWORDS,\n\t    illegal: '</',\n\t    contains: [\n\t      CPP_PRIMATIVE_TYPES,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      NUMBERS,\n\t      STRINGS,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$',\n\t        keywords: 'if else elif endif define undef warning error line ' +\n\t                  'pragma ifdef ifndef',\n\t        contains: [\n\t          {\n\t            begin: /\\\\\\n/, relevance: 0\n\t          },\n\t          {\n\t            beginKeywords: 'include', end: '$',\n\t            contains: [\n\t              STRINGS,\n\t              {\n\t                className: 'string',\n\t                begin: '<', end: '>',\n\t                illegal: '\\\\n',\n\t              }\n\t            ]\n\t          },\n\t          STRINGS,\n\t          NUMBERS,\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t        ]\n\t      },\n\t      {\n\t        begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<', end: '>',\n\t        keywords: CPP_KEYWORDS,\n\t        contains: ['self', CPP_PRIMATIVE_TYPES]\n\t      },\n\t      {\n\t        begin: hljs.IDENT_RE + '::',\n\t        keywords: CPP_KEYWORDS\n\t      },\n\t      {\n\t        // Expression keywords prevent 'keyword Name(...) or else if(...)' from\n\t        // being recognized as a function definition\n\t        beginKeywords: 'new throw return else',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n\t        returnBegin: true, end: /[{;=]/,\n\t        excludeEnd: true,\n\t        keywords: CPP_KEYWORDS,\n\t        contains: [\n\t          {\n\t            begin: FUNCTION_TITLE, returnBegin: true,\n\t            contains: [hljs.TITLE_MODE],\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            keywords: CPP_KEYWORDS,\n\t            relevance: 0,\n\t            contains: [\n\t              hljs.C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              STRINGS,\n\t              NUMBERS\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('cs', function(hljs) {\n\t  var KEYWORDS =\n\t    // Normal keywords.\n\t    'abstract as base bool break byte case catch char checked const continue decimal dynamic ' +\n\t    'default delegate do double else enum event explicit extern false finally fixed float ' +\n\t    'for foreach goto if implicit in int interface internal is lock long null when ' +\n\t    'object operator out override params private protected public readonly ref sbyte ' +\n\t    'sealed short sizeof stackalloc static string struct switch this true try typeof ' +\n\t    'uint ulong unchecked unsafe ushort using virtual volatile void while async ' +\n\t    'protected public private internal ' +\n\t    // Contextual keywords.\n\t    'ascending descending from get group into join let orderby partial select set value var ' +\n\t    'where yield';\n\t  var GENERIC_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '>)?';\n\t  return {\n\t    aliases: ['csharp'],\n\t    keywords: KEYWORDS,\n\t    illegal: /::/,\n\t    contains: [\n\t      hljs.COMMENT(\n\t        '///',\n\t        '$',\n\t        {\n\t          returnBegin: true,\n\t          contains: [\n\t            {\n\t              className: 'xmlDocTag',\n\t              variants: [\n\t                {\n\t                  begin: '///', relevance: 0\n\t                },\n\t                {\n\t                  begin: '<!--|-->'\n\t                },\n\t                {\n\t                  begin: '</?', end: '>'\n\t                }\n\t              ]\n\t            }\n\t          ]\n\t        }\n\t      ),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$',\n\t        keywords: 'if else elif endif define undef warning error line region endregion pragma checksum'\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: '@\"', end: '\"',\n\t        contains: [{begin: '\"\"'}]\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        beginKeywords: 'class interface', end: /[{;=]/,\n\t        illegal: /[^\\s:]/,\n\t        contains: [\n\t          hljs.TITLE_MODE,\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      },\n\t      {\n\t        beginKeywords: 'namespace', end: /[{;=]/,\n\t        illegal: /[^\\s:]/,\n\t        contains: [\n\t          {\n\t            // Customization of hljs.TITLE_MODE that allows '.'\n\t            className: 'title',\n\t            begin: '[a-zA-Z](\\\\.?\\\\w)*',\n\t            relevance: 0\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      },\n\t      {\n\t        // Expression keywords prevent 'keyword Name(...)' from being\n\t        // recognized as a function definition\n\t        beginKeywords: 'new return throw await',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true, end: /[{;=]/,\n\t        excludeEnd: true,\n\t        keywords: KEYWORDS,\n\t        contains: [\n\t          {\n\t            begin: hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n\t            contains: [hljs.TITLE_MODE],\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            excludeBegin: true,\n\t            excludeEnd: true,\n\t            keywords: KEYWORDS,\n\t            relevance: 0,\n\t            contains: [\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.QUOTE_STRING_MODE,\n\t              hljs.C_NUMBER_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('css', function(hljs) {\n\t  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n\t  var FUNCTION = {\n\t    className: 'function',\n\t    begin: IDENT_RE + '\\\\(',\n\t    returnBegin: true,\n\t    excludeEnd: true,\n\t    end: '\\\\('\n\t  };\n\t  var RULE = {\n\t    className: 'rule',\n\t    begin: /[A-Z\\_\\.\\-]+\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n\t    contains: [\n\t      {\n\t        className: 'attribute',\n\t        begin: /\\S/, end: ':', excludeEnd: true,\n\t        starts: {\n\t          className: 'value',\n\t          endsWithParent: true, excludeEnd: true,\n\t          contains: [\n\t            FUNCTION,\n\t            hljs.CSS_NUMBER_MODE,\n\t            hljs.QUOTE_STRING_MODE,\n\t            hljs.APOS_STRING_MODE,\n\t            hljs.C_BLOCK_COMMENT_MODE,\n\t            {\n\t              className: 'hexcolor', begin: '#[0-9A-Fa-f]+'\n\t            },\n\t            {\n\t              className: 'important', begin: '!important'\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  };\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    illegal: /[=\\/|'\\$]/,\n\t    contains: [\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      RULE,\n\t      {\n\t        className: 'id', begin: /\\#[A-Za-z0-9_-]+/\n\t      },\n\t      {\n\t        className: 'class', begin: /\\.[A-Za-z0-9_-]+/\n\t      },\n\t      {\n\t        className: 'attr_selector',\n\t        begin: /\\[/, end: /\\]/,\n\t        illegal: '$'\n\t      },\n\t      {\n\t        className: 'pseudo',\n\t        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"']+/\n\t      },\n\t      {\n\t        className: 'at_rule',\n\t        begin: '@(font-face|page)',\n\t        lexemes: '[a-z-]+',\n\t        keywords: 'font-face page'\n\t      },\n\t      {\n\t        className: 'at_rule',\n\t        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n\t                                 // because it doesn’t let it to be parsed as\n\t                                 // a rule set but instead drops parser into\n\t                                 // the default mode which is how it should be.\n\t        contains: [\n\t          {\n\t            className: 'keyword',\n\t            begin: /\\S+/\n\t          },\n\t          {\n\t            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n\t            relevance: 0,\n\t            contains: [\n\t              FUNCTION,\n\t              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n\t              hljs.CSS_NUMBER_MODE\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'tag', begin: IDENT_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'rules',\n\t        begin: '{', end: '}',\n\t        illegal: /\\S/,\n\t        contains: [\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t          RULE,\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('d', /**\n\t * Known issues:\n\t *\n\t * - invalid hex string literals will be recognized as a double quoted strings\n\t *   but 'x' at the beginning of string will not be matched\n\t *\n\t * - delimited string literals are not checked for matching end delimiter\n\t *   (not possible to do with js regexp)\n\t *\n\t * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n\t *   also, content of token string is not validated to contain only valid D tokens\n\t *\n\t * - special token sequence rule is not strictly following D grammar (anything following #line\n\t *   up to the end of line is matched as special token sequence)\n\t */\n\t\n\tfunction(hljs) {\n\t  /**\n\t   * Language keywords\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_KEYWORDS = {\n\t    keyword:\n\t      'abstract alias align asm assert auto body break byte case cast catch class ' +\n\t      'const continue debug default delete deprecated do else enum export extern final ' +\n\t      'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +\n\t      'interface invariant is lazy macro mixin module new nothrow out override package ' +\n\t      'pragma private protected public pure ref return scope shared static struct ' +\n\t      'super switch synchronized template this throw try typedef typeid typeof union ' +\n\t      'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +\n\t      '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n\t    built_in:\n\t      'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +\n\t      'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +\n\t      'wstring',\n\t    literal:\n\t      'false null true'\n\t  };\n\t\n\t  /**\n\t   * Number literal regexps\n\t   *\n\t   * @type {String}\n\t   */\n\t  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n\t    decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n\t    binary_integer_re = '0[bB][01_]+',\n\t    hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n\t    hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n\t\n\t    decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n\t    decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' +\n\t                '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' +\n\t                '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' +\n\t              ')',\n\t    hexadecimal_float_re = '(0[xX](' +\n\t                  hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|'+\n\t                  '\\\\.?' + hexadecimal_digits_re +\n\t                 ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n\t\n\t    integer_re = '(' +\n\t      decimal_integer_re + '|' +\n\t      binary_integer_re  + '|' +\n\t       hexadecimal_integer_re   +\n\t    ')',\n\t\n\t    float_re = '(' +\n\t      hexadecimal_float_re + '|' +\n\t      decimal_float_re  +\n\t    ')';\n\t\n\t  /**\n\t   * Escape sequence supported in D string and character literals\n\t   *\n\t   * @type {String}\n\t   */\n\t  var escape_sequence_re = '\\\\\\\\(' +\n\t              '[\\'\"\\\\?\\\\\\\\abfnrtv]|' +  // common escapes\n\t              'u[\\\\dA-Fa-f]{4}|' +     // four hex digit unicode codepoint\n\t              '[0-7]{1,3}|' +       // one to three octal digit ascii char code\n\t              'x[\\\\dA-Fa-f]{2}|' +    // two hex digit ascii char code\n\t              'U[\\\\dA-Fa-f]{8}' +      // eight hex digit unicode codepoint\n\t              ')|' +\n\t              '&[a-zA-Z\\\\d]{2,};';      // named character entity\n\t\n\t  /**\n\t   * D integer number literals\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_INTEGER_MODE = {\n\t    className: 'number',\n\t      begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n\t      relevance: 0\n\t  };\n\t\n\t  /**\n\t   * [D_FLOAT_MODE description]\n\t   * @type {Object}\n\t   */\n\t  var D_FLOAT_MODE = {\n\t    className: 'number',\n\t    begin: '\\\\b(' +\n\t        float_re + '([fF]|L|i|[fF]i|Li)?|' +\n\t        integer_re + '(i|[fF]i|Li)' +\n\t      ')',\n\t    relevance: 0\n\t  };\n\t\n\t  /**\n\t   * D character literal\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_CHARACTER_MODE = {\n\t    className: 'string',\n\t    begin: '\\'(' + escape_sequence_re + '|.)', end: '\\'',\n\t    illegal: '.'\n\t  };\n\t\n\t  /**\n\t   * D string escape sequence\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_ESCAPE_SEQUENCE = {\n\t    begin: escape_sequence_re,\n\t    relevance: 0\n\t  };\n\t\n\t  /**\n\t   * D double quoted string literal\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\"',\n\t    contains: [D_ESCAPE_SEQUENCE],\n\t    end: '\"[cwd]?'\n\t  };\n\t\n\t  /**\n\t   * D wysiwyg and delimited string literals\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '[rq]\"',\n\t    end: '\"[cwd]?',\n\t    relevance: 5\n\t  };\n\t\n\t  /**\n\t   * D alternate wysiwyg string literal\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '`',\n\t    end: '`[cwd]?'\n\t  };\n\t\n\t  /**\n\t   * D hexadecimal string literal\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_HEX_STRING_MODE = {\n\t    className: 'string',\n\t    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n\t    relevance: 10\n\t  };\n\t\n\t  /**\n\t   * D delimited string literal\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_TOKEN_STRING_MODE = {\n\t    className: 'string',\n\t    begin: 'q\"\\\\{',\n\t    end: '\\\\}\"'\n\t  };\n\t\n\t  /**\n\t   * Hashbang support\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_HASHBANG_MODE = {\n\t    className: 'shebang',\n\t    begin: '^#!',\n\t    end: '$',\n\t    relevance: 5\n\t  };\n\t\n\t  /**\n\t   * D special token sequence\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n\t    className: 'preprocessor',\n\t    begin: '#(line)',\n\t    end: '$',\n\t    relevance: 5\n\t  };\n\t\n\t  /**\n\t   * D attributes\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_ATTRIBUTE_MODE = {\n\t    className: 'keyword',\n\t    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n\t  };\n\t\n\t  /**\n\t   * D nesting comment\n\t   *\n\t   * @type {Object}\n\t   */\n\t  var D_NESTING_COMMENT_MODE = hljs.COMMENT(\n\t    '\\\\/\\\\+',\n\t    '\\\\+\\\\/',\n\t    {\n\t      contains: ['self'],\n\t      relevance: 10\n\t    }\n\t  );\n\t\n\t  return {\n\t    lexemes: hljs.UNDERSCORE_IDENT_RE,\n\t    keywords: D_KEYWORDS,\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t        hljs.C_BLOCK_COMMENT_MODE,\n\t        D_NESTING_COMMENT_MODE,\n\t        D_HEX_STRING_MODE,\n\t        D_STRING_MODE,\n\t        D_WYSIWYG_DELIMITED_STRING_MODE,\n\t        D_ALTERNATE_WYSIWYG_STRING_MODE,\n\t        D_TOKEN_STRING_MODE,\n\t        D_FLOAT_MODE,\n\t        D_INTEGER_MODE,\n\t        D_CHARACTER_MODE,\n\t        D_HASHBANG_MODE,\n\t        D_SPECIAL_TOKEN_SEQUENCE_MODE,\n\t        D_ATTRIBUTE_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('markdown', function(hljs) {\n\t  return {\n\t    aliases: ['md', 'mkdown', 'mkd'],\n\t    contains: [\n\t      // highlight headers\n\t      {\n\t        className: 'header',\n\t        variants: [\n\t          { begin: '^#{1,6}', end: '$' },\n\t          { begin: '^.+?\\\\n[=-]{2,}$' }\n\t        ]\n\t      },\n\t      // inline html\n\t      {\n\t        begin: '<', end: '>',\n\t        subLanguage: 'xml',\n\t        relevance: 0\n\t      },\n\t      // lists (indicators only)\n\t      {\n\t        className: 'bullet',\n\t        begin: '^([*+-]|(\\\\d+\\\\.))\\\\s+'\n\t      },\n\t      // strong segments\n\t      {\n\t        className: 'strong',\n\t        begin: '[*_]{2}.+?[*_]{2}'\n\t      },\n\t      // emphasis segments\n\t      {\n\t        className: 'emphasis',\n\t        variants: [\n\t          { begin: '\\\\*.+?\\\\*' },\n\t          { begin: '_.+?_'\n\t          , relevance: 0\n\t          }\n\t        ]\n\t      },\n\t      // blockquotes\n\t      {\n\t        className: 'blockquote',\n\t        begin: '^>\\\\s+', end: '$'\n\t      },\n\t      // code snippets\n\t      {\n\t        className: 'code',\n\t        variants: [\n\t          { begin: '`.+?`' },\n\t          { begin: '^( {4}|\\t)', end: '$'\n\t          , relevance: 0\n\t          }\n\t        ]\n\t      },\n\t      // horizontal rules\n\t      {\n\t        className: 'horizontal_rule',\n\t        begin: '^[-\\\\*]{3,}', end: '$'\n\t      },\n\t      // using links - title and link\n\t      {\n\t        begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n\t        returnBegin: true,\n\t        contains: [\n\t          {\n\t            className: 'link_label',\n\t            begin: '\\\\[', end: '\\\\]',\n\t            excludeBegin: true,\n\t            returnEnd: true,\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'link_url',\n\t            begin: '\\\\]\\\\(', end: '\\\\)',\n\t            excludeBegin: true, excludeEnd: true\n\t          },\n\t          {\n\t            className: 'link_reference',\n\t            begin: '\\\\]\\\\[', end: '\\\\]',\n\t            excludeBegin: true, excludeEnd: true\n\t          }\n\t        ],\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: '^\\\\[\\.+\\\\]:',\n\t        returnBegin: true,\n\t        contains: [\n\t          {\n\t            className: 'link_reference',\n\t            begin: '\\\\[', end: '\\\\]:',\n\t            excludeBegin: true, excludeEnd: true,\n\t            starts: {\n\t              className: 'link_url',\n\t              end: '$'\n\t            }\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('dart', function (hljs) {\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: '\\\\$\\\\{', end: '}',\n\t    keywords: 'true false null this is new super'\n\t  };\n\t\n\t  var STRING = {\n\t    className: 'string',\n\t    variants: [\n\t      {\n\t        begin: 'r\\'\\'\\'', end: '\\'\\'\\''\n\t      },\n\t      {\n\t        begin: 'r\"\"\"', end: '\"\"\"'\n\t      },\n\t      {\n\t        begin: 'r\\'', end: '\\'',\n\t        illegal: '\\\\n'\n\t      },\n\t      {\n\t        begin: 'r\"', end: '\"',\n\t        illegal: '\\\\n'\n\t      },\n\t      {\n\t        begin: '\\'\\'\\'', end: '\\'\\'\\'',\n\t        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t      },\n\t      {\n\t        begin: '\"\"\"', end: '\"\"\"',\n\t        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t      },\n\t      {\n\t        begin: '\\'', end: '\\'',\n\t        illegal: '\\\\n',\n\t        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t      },\n\t      {\n\t        begin: '\"', end: '\"',\n\t        illegal: '\\\\n',\n\t        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n\t      }\n\t    ]\n\t  };\n\t  SUBST.contains = [\n\t    hljs.C_NUMBER_MODE, STRING\n\t  ];\n\t\n\t  var KEYWORDS = {\n\t    keyword: 'assert break case catch class const continue default do else enum extends false final finally for if ' +\n\t      'in is new null rethrow return super switch this throw true try var void while with',\n\t    literal: 'abstract as dynamic export external factory get implements import library operator part set static typedef',\n\t    built_in:\n\t      // dart:core\n\t      'print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set ' +\n\t      'Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num ' +\n\t      // dart:html\n\t      'document window querySelector querySelectorAll Element ElementList'\n\t  };\n\t\n\t  return {\n\t    keywords: KEYWORDS,\n\t    contains: [\n\t      STRING,\n\t      hljs.COMMENT(\n\t        '/\\\\*\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          subLanguage: 'markdown'\n\t        }\n\t      ),\n\t      hljs.COMMENT(\n\t        '///',\n\t        '$',\n\t        {\n\t          subLanguage: 'markdown'\n\t        }\n\t      ),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends implements'\n\t          },\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'annotation', begin: '@[A-Za-z]+'\n\t      },\n\t      {\n\t        begin: '=>' // No markup, just a relevance booster\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('delphi', function(hljs) {\n\t  var KEYWORDS =\n\t    'exports register file shl array record property for mod while set ally label uses raise not ' +\n\t    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n\t    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n\t    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n\t    'destructor write message program with read initialization except default nil if case cdecl in ' +\n\t    'downto threadvar of try pascal const external constructor type public then implementation ' +\n\t    'finally published procedure';\n\t  var COMMENT_MODES = [\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.COMMENT(\n\t      /\\{/,\n\t      /\\}/,\n\t      {\n\t        relevance: 0\n\t      }\n\t    ),\n\t    hljs.COMMENT(\n\t      /\\(\\*/,\n\t      /\\*\\)/,\n\t      {\n\t        relevance: 10\n\t      }\n\t    )\n\t  ];\n\t  var STRING = {\n\t    className: 'string',\n\t    begin: /'/, end: /'/,\n\t    contains: [{begin: /''/}]\n\t  };\n\t  var CHAR_STRING = {\n\t    className: 'string', begin: /(#\\d+)+/\n\t  };\n\t  var CLASS = {\n\t    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n\t    contains: [\n\t      hljs.TITLE_MODE\n\t    ]\n\t  };\n\t  var FUNCTION = {\n\t    className: 'function',\n\t    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n\t    keywords: 'function constructor|10 destructor|10 procedure|10',\n\t    contains: [\n\t      hljs.TITLE_MODE,\n\t      {\n\t        className: 'params',\n\t        begin: /\\(/, end: /\\)/,\n\t        keywords: KEYWORDS,\n\t        contains: [STRING, CHAR_STRING]\n\t      }\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: KEYWORDS,\n\t    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n\t    contains: [\n\t      STRING, CHAR_STRING,\n\t      hljs.NUMBER_MODE,\n\t      CLASS,\n\t      FUNCTION\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('diff', function(hljs) {\n\t  return {\n\t    aliases: ['patch'],\n\t    contains: [\n\t      {\n\t        className: 'chunk',\n\t        relevance: 10,\n\t        variants: [\n\t          {begin: /^@@ +\\-\\d+,\\d+ +\\+\\d+,\\d+ +@@$/},\n\t          {begin: /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/},\n\t          {begin: /^\\-\\-\\- +\\d+,\\d+ +\\-\\-\\-\\-$/}\n\t        ]\n\t      },\n\t      {\n\t        className: 'header',\n\t        variants: [\n\t          {begin: /Index: /, end: /$/},\n\t          {begin: /=====/, end: /=====$/},\n\t          {begin: /^\\-\\-\\-/, end: /$/},\n\t          {begin: /^\\*{3} /, end: /$/},\n\t          {begin: /^\\+\\+\\+/, end: /$/},\n\t          {begin: /\\*{5}/, end: /\\*{5}$/}\n\t        ]\n\t      },\n\t      {\n\t        className: 'addition',\n\t        begin: '^\\\\+', end: '$'\n\t      },\n\t      {\n\t        className: 'deletion',\n\t        begin: '^\\\\-', end: '$'\n\t      },\n\t      {\n\t        className: 'change',\n\t        begin: '^\\\\!', end: '$'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('django', function(hljs) {\n\t  var FILTER = {\n\t    className: 'filter',\n\t    begin: /\\|[A-Za-z]+:?/,\n\t    keywords:\n\t      'truncatewords removetags linebreaksbr yesno get_digit timesince random striptags ' +\n\t      'filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands ' +\n\t      'title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode ' +\n\t      'timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort ' +\n\t      'dictsortreversed default_if_none pluralize lower join center default ' +\n\t      'truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first ' +\n\t      'escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize ' +\n\t      'localtime utc timezone',\n\t    contains: [\n\t      {className: 'argument', begin: /\"/, end: /\"/},\n\t      {className: 'argument', begin: /'/, end: /'/}\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['jinja'],\n\t    case_insensitive: true,\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      hljs.COMMENT(/\\{%\\s*comment\\s*%}/, /\\{%\\s*endcomment\\s*%}/),\n\t      hljs.COMMENT(/\\{#/, /#}/),\n\t      {\n\t        className: 'template_tag',\n\t        begin: /\\{%/, end: /%}/,\n\t        keywords:\n\t          'comment endcomment load templatetag ifchanged endifchanged if endif firstof for ' +\n\t          'endfor in ifnotequal endifnotequal widthratio extends include spaceless ' +\n\t          'endspaceless regroup by as ifequal endifequal ssi now with cycle url filter ' +\n\t          'endfilter debug block endblock else autoescape endautoescape csrf_token empty elif ' +\n\t          'endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix ' +\n\t          'plural get_current_language language get_available_languages ' +\n\t          'get_current_language_bidi get_language_info get_language_info_list localize ' +\n\t          'endlocalize localtime endlocaltime timezone endtimezone get_current_timezone ' +\n\t          'verbatim',\n\t        contains: [FILTER]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: /\\{\\{/, end: /}}/,\n\t        contains: [FILTER]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('dns', function(hljs) {\n\t  return {\n\t    aliases: ['bind', 'zone'],\n\t    keywords: {\n\t      keyword:\n\t        'IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX ' +\n\t        'LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT'\n\t    },\n\t    contains: [\n\t      hljs.COMMENT(';', '$'),\n\t      {\n\t        className: 'operator',\n\t        beginKeywords: '$TTL $GENERATE $INCLUDE $ORIGIN'\n\t      },\n\t      // IPv6\n\t      {\n\t        className: 'number',\n\t        begin: '((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))'\n\t      },\n\t      // IPv4\n\t      {\n\t        className: 'number',\n\t        begin: '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('dockerfile', function(hljs) {\n\t  return {\n\t    aliases: ['docker'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      built_ins: 'from maintainer cmd expose add copy entrypoint volume user workdir onbuild run env'\n\t    },\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        keywords : {\n\t          built_in: 'run cmd entrypoint volume add copy workdir onbuild'\n\t        },\n\t        begin: /^ *(onbuild +)?(run|cmd|entrypoint|volume|add|copy|workdir) +/,\n\t        starts: {\n\t          end: /[^\\\\]\\n/,\n\t          subLanguage: 'bash'\n\t        }\n\t      },\n\t      {\n\t        keywords: {\n\t          built_in: 'from maintainer expose env user onbuild'\n\t        },\n\t        begin: /^ *(onbuild +)?(from|maintainer|expose|env|user|onbuild) +/, end: /[^\\\\]\\n/,\n\t        contains: [\n\t          hljs.APOS_STRING_MODE,\n\t          hljs.QUOTE_STRING_MODE,\n\t          hljs.NUMBER_MODE,\n\t          hljs.HASH_COMMENT_MODE\n\t        ]\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('dos', function(hljs) {\n\t  var COMMENT = hljs.COMMENT(\n\t    /@?rem\\b/, /$/,\n\t    {\n\t      relevance: 10\n\t    }\n\t  );\n\t  var LABEL = {\n\t    className: 'label',\n\t    begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)',\n\t    relevance: 0\n\t  };\n\t  return {\n\t    aliases: ['bat', 'cmd'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      flow: 'if else goto for in do call exit not exist errorlevel defined',\n\t      operator: 'equ neq lss leq gtr geq',\n\t      keyword: 'shift cd dir echo setlocal endlocal set pause copy',\n\t      stream: 'prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux',\n\t      winutils: 'ping net ipconfig taskkill xcopy ren del',\n\t      built_in: 'append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color ' +\n\t        'comp compact convert date dir diskcomp diskcopy doskey erase fs ' +\n\t        'find findstr format ftype graftabl help keyb label md mkdir mode more move path ' +\n\t        'pause print popd pushd promt rd recover rem rename replace restore rmdir shift' +\n\t        'sort start subst time title tree type ver verify vol'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'envvar', begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: LABEL.begin, end: 'goto:eof',\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n\t          COMMENT\n\t        ]\n\t      },\n\t      {\n\t        className: 'number', begin: '\\\\b\\\\d+',\n\t        relevance: 0\n\t      },\n\t      COMMENT\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('dust', function(hljs) {\n\t  var EXPRESSION_KEYWORDS = 'if eq ne lt lte gt gte select default math sep';\n\t  return {\n\t    aliases: ['dst'],\n\t    case_insensitive: true,\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      {\n\t        className: 'expression',\n\t        begin: '{', end: '}',\n\t        relevance: 0,\n\t        contains: [\n\t          {\n\t            className: 'begin-block', begin: '\\#[a-zA-Z\\-\\ \\.]+',\n\t            keywords: EXPRESSION_KEYWORDS\n\t          },\n\t          {\n\t            className: 'string',\n\t            begin: '\"', end: '\"'\n\t          },\n\t          {\n\t            className: 'end-block', begin: '\\\\\\/[a-zA-Z\\-\\ \\.]+',\n\t            keywords: EXPRESSION_KEYWORDS\n\t          },\n\t          {\n\t            className: 'variable', begin: '[a-zA-Z\\-\\.]+',\n\t            keywords: EXPRESSION_KEYWORDS,\n\t            relevance: 0\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('elixir', function(hljs) {\n\t  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?';\n\t  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n\t  var ELIXIR_KEYWORDS =\n\t    'and false then defined module in return redo retry end for true self when ' +\n\t    'next until do begin unless nil break not case cond alias while ensure or ' +\n\t    'include use alias fn quote';\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: '#\\\\{', end: '}',\n\t    lexemes: ELIXIR_IDENT_RE,\n\t    keywords: ELIXIR_KEYWORDS\n\t  };\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n\t    variants: [\n\t      {\n\t        begin: /'/, end: /'/\n\t      },\n\t      {\n\t        begin: /\"/, end: /\"/\n\t      }\n\t    ]\n\t  };\n\t  var FUNCTION = {\n\t    className: 'function',\n\t    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n\t    contains: [\n\t      hljs.inherit(hljs.TITLE_MODE, {\n\t        begin: ELIXIR_IDENT_RE,\n\t        endsParent: true\n\t      })\n\t    ]\n\t  };\n\t  var CLASS = hljs.inherit(FUNCTION, {\n\t    className: 'class',\n\t    beginKeywords: 'defmodule defrecord', end: /\\bdo\\b|$|;/\n\t  });\n\t  var ELIXIR_DEFAULT_CONTAINS = [\n\t    STRING,\n\t    hljs.HASH_COMMENT_MODE,\n\t    CLASS,\n\t    FUNCTION,\n\t    {\n\t      className: 'constant',\n\t      begin: '(\\\\b[A-Z_]\\\\w*(.)?)+',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'symbol',\n\t      begin: ':',\n\t      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'symbol',\n\t      begin: ELIXIR_IDENT_RE + ':',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'number',\n\t      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'variable',\n\t      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n\t    },\n\t    {\n\t      begin: '->'\n\t    },\n\t    { // regexp container\n\t      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n\t      contains: [\n\t        hljs.HASH_COMMENT_MODE,\n\t        {\n\t          className: 'regexp',\n\t          illegal: '\\\\n',\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n\t          variants: [\n\t            {\n\t              begin: '/', end: '/[a-z]*'\n\t            },\n\t            {\n\t              begin: '%r\\\\[', end: '\\\\][a-z]*'\n\t            }\n\t          ]\n\t        }\n\t      ],\n\t      relevance: 0\n\t    }\n\t  ];\n\t  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\t\n\t  return {\n\t    lexemes: ELIXIR_IDENT_RE,\n\t    keywords: ELIXIR_KEYWORDS,\n\t    contains: ELIXIR_DEFAULT_CONTAINS\n\t  };\n\t});\n\t\n\thljs.registerLanguage('elm', function(hljs) {\n\t  var COMMENT_MODES = [\n\t    hljs.COMMENT('--', '$'),\n\t    hljs.COMMENT(\n\t      '{-',\n\t      '-}',\n\t      {\n\t        contains: ['self']\n\t      }\n\t    )\n\t  ];\n\t\n\t  var CONSTRUCTOR = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n\t    relevance: 0\n\t  };\n\t\n\t  var LIST = {\n\t    className: 'container',\n\t    begin: '\\\\(', end: '\\\\)',\n\t    illegal: '\"',\n\t    contains: [\n\t      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'})\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t\n\t  var RECORD = {\n\t    className: 'container',\n\t    begin: '{', end: '}',\n\t    contains: LIST.contains\n\t  };\n\t\n\t  return {\n\t    keywords:\n\t      'let in if then else case of where module import exposing ' +\n\t      'type alias as infix infixl infixr port',\n\t    contains: [\n\t\n\t      // Top-level constructions.\n\t\n\t      {\n\t        className: 'module',\n\t        begin: '\\\\bmodule\\\\b', end: 'where',\n\t        keywords: 'module where',\n\t        contains: [LIST].concat(COMMENT_MODES),\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        className: 'import',\n\t        begin: '\\\\bimport\\\\b', end: '$',\n\t        keywords: 'import|0 as exposing',\n\t        contains: [LIST].concat(COMMENT_MODES),\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        className: 'typedef',\n\t        begin: '\\\\btype\\\\b', end: '$',\n\t        keywords: 'type alias',\n\t        contains: [CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'infix',\n\t        beginKeywords: 'infix infixl infixr', end: '$',\n\t        contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'foreign',\n\t        begin: '\\\\bport\\\\b', end: '$',\n\t        keywords: 'port',\n\t        contains: COMMENT_MODES\n\t      },\n\t\n\t      // Literals and names.\n\t\n\t      // TODO: characters.\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      CONSTRUCTOR,\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\t\n\t      {begin: '->|<-'} // No markup, relevance booster\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('ruby', function(hljs) {\n\t  var RUBY_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n\t  var RUBY_KEYWORDS =\n\t    'and false then defined module in return redo if BEGIN retry end for true self when ' +\n\t    'next until do begin unless END rescue nil else break undef not super class case ' +\n\t    'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor';\n\t  var YARDOCTAG = {\n\t    className: 'doctag',\n\t    begin: '@[A-Za-z]+'\n\t  };\n\t  var IRB_OBJECT = {\n\t    className: 'value',\n\t    begin: '#<', end: '>'\n\t  };\n\t  var COMMENT_MODES = [\n\t    hljs.COMMENT(\n\t      '#',\n\t      '$',\n\t      {\n\t        contains: [YARDOCTAG]\n\t      }\n\t    ),\n\t    hljs.COMMENT(\n\t      '^\\\\=begin',\n\t      '^\\\\=end',\n\t      {\n\t        contains: [YARDOCTAG],\n\t        relevance: 10\n\t      }\n\t    ),\n\t    hljs.COMMENT('^__END__', '\\\\n$')\n\t  ];\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: '#\\\\{', end: '}',\n\t    keywords: RUBY_KEYWORDS\n\t  };\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n\t    variants: [\n\t      {begin: /'/, end: /'/},\n\t      {begin: /\"/, end: /\"/},\n\t      {begin: /`/, end: /`/},\n\t      {begin: '%[qQwWx]?\\\\(', end: '\\\\)'},\n\t      {begin: '%[qQwWx]?\\\\[', end: '\\\\]'},\n\t      {begin: '%[qQwWx]?{', end: '}'},\n\t      {begin: '%[qQwWx]?<', end: '>'},\n\t      {begin: '%[qQwWx]?/', end: '/'},\n\t      {begin: '%[qQwWx]?%', end: '%'},\n\t      {begin: '%[qQwWx]?-', end: '-'},\n\t      {begin: '%[qQwWx]?\\\\|', end: '\\\\|'},\n\t      {\n\t        // \\B in the beginning suppresses recognition of ?-sequences where ?\n\t        // is the last character of a preceding identifier, as in: `func?4`\n\t        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n\t      }\n\t    ]\n\t  };\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)',\n\t    keywords: RUBY_KEYWORDS\n\t  };\n\t\n\t  var RUBY_DEFAULT_CONTAINS = [\n\t    STRING,\n\t    IRB_OBJECT,\n\t    {\n\t      className: 'class',\n\t      beginKeywords: 'class module', end: '$|;',\n\t      illegal: /=/,\n\t      contains: [\n\t        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n\t        {\n\t          className: 'inheritance',\n\t          begin: '<\\\\s*',\n\t          contains: [{\n\t            className: 'parent',\n\t            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n\t          }]\n\t        }\n\t      ].concat(COMMENT_MODES)\n\t    },\n\t    {\n\t      className: 'function',\n\t      beginKeywords: 'def', end: '$|;',\n\t      relevance: 0,\n\t      contains: [\n\t        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n\t        PARAMS\n\t      ].concat(COMMENT_MODES)\n\t    },\n\t    {\n\t      className: 'constant',\n\t      begin: '(::)?(\\\\b[A-Z]\\\\w*(::)?)+',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'symbol',\n\t      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'symbol',\n\t      begin: ':',\n\t      contains: [STRING, {begin: RUBY_METHOD_RE}],\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'number',\n\t      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n\t      relevance: 0\n\t    },\n\t    {\n\t      className: 'variable',\n\t      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n\t    },\n\t    { // regexp container\n\t      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n\t      contains: [\n\t        IRB_OBJECT,\n\t        {\n\t          className: 'regexp',\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n\t          illegal: /\\n/,\n\t          variants: [\n\t            {begin: '/', end: '/[a-z]*'},\n\t            {begin: '%r{', end: '}[a-z]*'},\n\t            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n\t            {begin: '%r!', end: '![a-z]*'},\n\t            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n\t          ]\n\t        }\n\t      ].concat(COMMENT_MODES),\n\t      relevance: 0\n\t    }\n\t  ].concat(COMMENT_MODES);\n\t\n\t  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n\t  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\t\n\t  var SIMPLE_PROMPT = \"[>?]>\";\n\t  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n\t  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d(p\\\\d+)?[^>]+>\";\n\t\n\t  var IRB_DEFAULT = [\n\t    {\n\t      begin: /^\\s*=>/,\n\t      className: 'status',\n\t      starts: {\n\t        end: '$', contains: RUBY_DEFAULT_CONTAINS\n\t      }\n\t    },\n\t    {\n\t      className: 'prompt',\n\t      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')',\n\t      starts: {\n\t        end: '$', contains: RUBY_DEFAULT_CONTAINS\n\t      }\n\t    }\n\t  ];\n\t\n\t  return {\n\t    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n\t    keywords: RUBY_KEYWORDS,\n\t    contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(RUBY_DEFAULT_CONTAINS)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('erb', function(hljs) {\n\t  return {\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      hljs.COMMENT('<%#', '%>'),\n\t      {\n\t        begin: '<%[%=-]?', end: '[%-]?%>',\n\t        subLanguage: 'ruby',\n\t        excludeBegin: true,\n\t        excludeEnd: true\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('erlang-repl', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      special_functions:\n\t        'spawn spawn_link self',\n\t      reserved:\n\t        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n\t        'let not of or orelse|10 query receive rem try when xor'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'prompt', begin: '^[0-9]+> ',\n\t        relevance: 10\n\t      },\n\t      hljs.COMMENT('%', '$'),\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n\t        relevance: 0\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'constant', begin: '\\\\?(::)?([A-Z]\\\\w*(::)?)+'\n\t      },\n\t      {\n\t        className: 'arrow', begin: '->'\n\t      },\n\t      {\n\t        className: 'ok', begin: 'ok'\n\t      },\n\t      {\n\t        className: 'exclamation_mark', begin: '!'\n\t      },\n\t      {\n\t        className: 'function_or_atom',\n\t        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '[A-Z][a-zA-Z0-9_\\']*',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('erlang', function(hljs) {\n\t  var BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n\t  var FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n\t  var ERLANG_RESERVED = {\n\t    keyword:\n\t      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +\n\t      'let not of orelse|10 query receive rem try when xor',\n\t    literal:\n\t      'false true'\n\t  };\n\t\n\t  var COMMENT = hljs.COMMENT('%', '$');\n\t  var NUMBER = {\n\t    className: 'number',\n\t    begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n\t    relevance: 0\n\t  };\n\t  var NAMED_FUN = {\n\t    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n\t  };\n\t  var FUNCTION_CALL = {\n\t    begin: FUNCTION_NAME_RE + '\\\\(', end: '\\\\)',\n\t    returnBegin: true,\n\t    relevance: 0,\n\t    contains: [\n\t      {\n\t        className: 'function_name', begin: FUNCTION_NAME_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: '\\\\(', end: '\\\\)', endsWithParent: true,\n\t        returnEnd: true,\n\t        relevance: 0\n\t        // \"contains\" defined later\n\t      }\n\t    ]\n\t  };\n\t  var TUPLE = {\n\t    className: 'tuple',\n\t    begin: '{', end: '}',\n\t    relevance: 0\n\t    // \"contains\" defined later\n\t  };\n\t  var VAR1 = {\n\t    className: 'variable',\n\t    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n\t    relevance: 0\n\t  };\n\t  var VAR2 = {\n\t    className: 'variable',\n\t    begin: '[A-Z][a-zA-Z0-9_]*',\n\t    relevance: 0\n\t  };\n\t  var RECORD_ACCESS = {\n\t    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n\t    relevance: 0,\n\t    returnBegin: true,\n\t    contains: [\n\t      {\n\t        className: 'record_name',\n\t        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: '{', end: '}',\n\t        relevance: 0\n\t        // \"contains\" defined later\n\t      }\n\t    ]\n\t  };\n\t\n\t  var BLOCK_STATEMENTS = {\n\t    beginKeywords: 'fun receive if try case', end: 'end',\n\t    keywords: ERLANG_RESERVED\n\t  };\n\t  BLOCK_STATEMENTS.contains = [\n\t    COMMENT,\n\t    NAMED_FUN,\n\t    hljs.inherit(hljs.APOS_STRING_MODE, {className: ''}),\n\t    BLOCK_STATEMENTS,\n\t    FUNCTION_CALL,\n\t    hljs.QUOTE_STRING_MODE,\n\t    NUMBER,\n\t    TUPLE,\n\t    VAR1, VAR2,\n\t    RECORD_ACCESS\n\t  ];\n\t\n\t  var BASIC_MODES = [\n\t    COMMENT,\n\t    NAMED_FUN,\n\t    BLOCK_STATEMENTS,\n\t    FUNCTION_CALL,\n\t    hljs.QUOTE_STRING_MODE,\n\t    NUMBER,\n\t    TUPLE,\n\t    VAR1, VAR2,\n\t    RECORD_ACCESS\n\t  ];\n\t  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n\t  TUPLE.contains = BASIC_MODES;\n\t  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\t\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)',\n\t    contains: BASIC_MODES\n\t  };\n\t  return {\n\t    aliases: ['erl'],\n\t    keywords: ERLANG_RESERVED,\n\t    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n\t    contains: [\n\t      {\n\t        className: 'function',\n\t        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(', end: '->',\n\t        returnBegin: true,\n\t        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n\t        contains: [\n\t          PARAMS,\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: BASIC_ATOM_RE})\n\t        ],\n\t        starts: {\n\t          end: ';|\\\\.',\n\t          keywords: ERLANG_RESERVED,\n\t          contains: BASIC_MODES\n\t        }\n\t      },\n\t      COMMENT,\n\t      {\n\t        className: 'pp',\n\t        begin: '^-', end: '\\\\.',\n\t        relevance: 0,\n\t        excludeEnd: true,\n\t        returnBegin: true,\n\t        lexemes: '-' + hljs.IDENT_RE,\n\t        keywords:\n\t          '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' +\n\t          '-import -include -include_lib -compile -define -else -endif -file -behaviour ' +\n\t          '-behavior -spec',\n\t        contains: [PARAMS]\n\t      },\n\t      NUMBER,\n\t      hljs.QUOTE_STRING_MODE,\n\t      RECORD_ACCESS,\n\t      VAR1, VAR2,\n\t      TUPLE,\n\t      {begin: /\\.$/} // relevance booster\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('fix', function(hljs) {\n\t  return {\n\t    contains: [\n\t    {\n\t      begin: /[^\\u2401\\u0001]+/,\n\t      end: /[\\u2401\\u0001]/,\n\t      excludeEnd: true,\n\t      returnBegin: true,\n\t      returnEnd: false,\n\t      contains: [\n\t      {\n\t        begin: /([^\\u2401\\u0001=]+)/,\n\t        end: /=([^\\u2401\\u0001=]+)/,\n\t        returnEnd: true,\n\t        returnBegin: false,\n\t        className: 'attribute'\n\t      },\n\t      {\n\t        begin: /=/,\n\t        end: /([\\u2401\\u0001])/,\n\t        excludeEnd: true,\n\t        excludeBegin: true,\n\t        className: 'string'\n\t      }]\n\t    }],\n\t    case_insensitive: true\n\t  };\n\t});\n\t\n\thljs.registerLanguage('fortran', function(hljs) {\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)'\n\t  };\n\t\n\t  var F_KEYWORDS = {\n\t    constant: '.False. .True.',\n\t    type: 'integer real character complex logical dimension allocatable|10 parameter ' +\n\t      'external implicit|10 none double precision assign intent optional pointer ' +\n\t      'target in out common equivalence data',\n\t    keyword: 'kind do while private call intrinsic where elsewhere ' +\n\t      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +\n\t      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\n\t      'goto save else use module select case ' +\n\t      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\n\t      'continue format pause cycle exit ' +\n\t      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\n\t      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\n\t      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\n\t      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\n\t      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\n\t      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\n\t      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\n\t      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\n\t      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\n\t      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous ' +\n\t      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure',\n\t    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\n\t      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\n\t      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\n\t      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\n\t      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\n\t      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\n\t      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\n\t      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\n\t      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\n\t      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\n\t      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\n\t      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\n\t      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\n\t      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of'  +\n\t      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\n\t      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\n\t      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\n\t      'num_images parity popcnt poppar shifta shiftl shiftr this_image'\n\t  };\n\t  return {\n\t    case_insensitive: true,\n\t    aliases: ['f90', 'f95'],\n\t    keywords: F_KEYWORDS,\n\t    contains: [\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE,{className: 'string', relevance: 0}),\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'subroutine function program',\n\t        illegal: '[${=\\\\n]',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n\t      },\n\t      hljs.COMMENT('!', '$', {relevance: 0}),\n\t      {\n\t        className: 'number',\n\t        begin: '(?=\\\\b|\\\\+|\\\\-|\\\\.)(?=\\\\.\\\\d|\\\\d)(?:\\\\d+)?(?:\\\\.?\\\\d*)(?:[de][+-]?\\\\d+)?\\\\b\\\\.?',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('fsharp', function(hljs) {\n\t  var TYPEPARAM = {\n\t    begin: '<', end: '>',\n\t    contains: [\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['fs'],\n\t    keywords:\n\t      // monad builder keywords (at top, matches before non-bang kws)\n\t      'yield! return! let! do!' +\n\t      // regular keywords\n\t      'abstract and as assert base begin class default delegate do done ' +\n\t      'downcast downto elif else end exception extern false finally for ' +\n\t      'fun function global if in inherit inline interface internal lazy let ' +\n\t      'match member module mutable namespace new null of open or ' +\n\t      'override private public rec return sig static struct then to ' +\n\t      'true try type upcast use val void when while with yield',\n\t    contains: [\n\t      {\n\t        className: 'string',\n\t        begin: '@\"', end: '\"',\n\t        contains: [{begin: '\"\"'}]\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: '\"\"\"', end: '\"\"\"'\n\t      },\n\t      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          TYPEPARAM\n\t        ]\n\t      },\n\t      {\n\t        className: 'annotation',\n\t        begin: '\\\\[<', end: '>\\\\]',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('gcode', function(hljs) {\n\t    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n\t    var GCODE_CLOSE_RE = '\\\\%';\n\t    var GCODE_KEYWORDS = {\n\t        literal:\n\t            '',\n\t        built_in:\n\t            '',\n\t        keyword:\n\t            'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n\t            'EQ LT GT NE GE LE OR XOR'\n\t    };\n\t    var GCODE_START = {\n\t        className: 'preprocessor',\n\t        begin: '([O])([0-9]+)'\n\t    };\n\t    var GCODE_CODE = [\n\t        hljs.C_LINE_COMMENT_MODE,\n\t        hljs.C_BLOCK_COMMENT_MODE,\n\t        hljs.COMMENT(/\\(/, /\\)/),\n\t        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n\t        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t        {\n\t            className: 'keyword',\n\t            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n\t        },\n\t        {\n\t            className: 'title',\n\t            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n\t        },\n\t        {\n\t            className: 'title',\n\t            begin: '(VC|VS|#)',\n\t            end: '(\\\\d+)'\n\t        },\n\t        {\n\t            className: 'title',\n\t            begin: '(VZOFX|VZOFY|VZOFZ)'\n\t        },\n\t        {\n\t            className: 'built_in',\n\t            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n\t            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n\t        },\n\t        {\n\t            className: 'label',\n\t            variants: [\n\t                {\n\t                    begin: 'N', end: '\\\\d+',\n\t                    illegal: '\\\\W'\n\t                }\n\t            ]\n\t        }\n\t    ];\n\t\n\t    return {\n\t        aliases: ['nc'],\n\t        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n\t        // However, most prefer all uppercase and uppercase is customary.\n\t        case_insensitive: true,\n\t        lexemes: GCODE_IDENT_RE,\n\t        keywords: GCODE_KEYWORDS,\n\t        contains: [\n\t            {\n\t                className: 'preprocessor',\n\t                begin: GCODE_CLOSE_RE\n\t            },\n\t            GCODE_START\n\t        ].concat(GCODE_CODE)\n\t    };\n\t});\n\t\n\thljs.registerLanguage('gherkin', function (hljs) {\n\t  return {\n\t    aliases: ['feature'],\n\t    keywords: 'Feature Background Ability Business\\ Need Scenario Scenarios Scenario\\ Outline Scenario\\ Template Examples Given And Then But When',\n\t    contains: [\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\*'\n\t      },\n\t      hljs.COMMENT('@[^@\\r\\n\\t ]+', '$'),\n\t      {\n\t        begin: '\\\\|', end: '\\\\|\\\\w*$',\n\t        contains: [\n\t          {\n\t            className: 'string',\n\t            begin: '[^|]+'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '<', end: '>'\n\t      },\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\"\"\"', end: '\"\"\"'\n\t      },\n\t      hljs.QUOTE_STRING_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('glsl', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        'atomic_uint attribute bool break bvec2 bvec3 bvec4 case centroid coherent const continue default ' +\n\t        'discard dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 ' +\n\t        'dmat4x4 do double dvec2 dvec3 dvec4 else flat float for highp if iimage1D iimage1DArray ' +\n\t        'iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube ' +\n\t        'iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect ' +\n\t        'image3D imageBuffer imageCube imageCubeArray in inout int invariant isampler1D isampler1DArray ' +\n\t        'isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer ' +\n\t        'isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 layout lowp mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 ' +\n\t        'mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 mediump noperspective out patch precision readonly restrict ' +\n\t        'return sample sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray ' +\n\t        'sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow ' +\n\t        'sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow smooth ' +\n\t        'struct subroutine switch uimage1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray ' +\n\t        'uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint uniform usampler1D usampler1DArray ' +\n\t        'usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D usamplerBuffer ' +\n\t        'usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 varying vec2 vec3 vec4 void volatile while writeonly',\n\t      built_in:\n\t        'gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial ' +\n\t        'gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color ' +\n\t        'gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord ' +\n\t        'gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor ' +\n\t        'gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial ' +\n\t        'gl_FrontSecondaryColor gl_InstanceID gl_InvocationID gl_Layer gl_LightModel ' +\n\t        'gl_LightSource gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize ' +\n\t        'gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers ' +\n\t        'gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs ' +\n\t        'gl_MaxCombinedTextureImageUnits gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers ' +\n\t        'gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents ' +\n\t        'gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers ' +\n\t        'gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents ' +\n\t        'gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits ' +\n\t        'gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents ' +\n\t        'gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset ' +\n\t        'gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms ' +\n\t        'gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits ' +\n\t        'gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents ' +\n\t        'gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters ' +\n\t        'gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents ' +\n\t        'gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents ' +\n\t        'gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits ' +\n\t        'gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors ' +\n\t        'gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs ' +\n\t        'gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexTextureImageUnits ' +\n\t        'gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset'+\n\t        'gl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose ' +\n\t        'gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse ' +\n\t        'gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose ' +\n\t        'gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 ' +\n\t        'gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix ' +\n\t        'gl_NormalScale gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn ' +\n\t        'gl_PerVertex gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn ' +\n\t        'gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose ' +\n\t        'gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition ' +\n\t        'gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor ' +\n\t        'gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID ' +\n\t        'gl_ViewportIndex gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive ' +\n\t        'abs acos acosh all any asin asinh atan atanh atomicCounter atomicCounterDecrement ' +\n\t        'atomicCounterIncrement barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ' +\n\t        'ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward ' +\n\t        'findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan ' +\n\t        'greaterThanEqual imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange ' +\n\t        'imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageStore imulExtended ' +\n\t        'intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt ' +\n\t        'isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier ' +\n\t        'min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 ' +\n\t        'packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract ' +\n\t        'round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj ' +\n\t        'shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture ' +\n\t        'texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj ' +\n\t        'texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod ' +\n\t        'textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod ' +\n\t        'textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod ' +\n\t        'textureProjLodOffset textureProjOffset textureQueryLod textureSize transpose trunc uaddCarry ' +\n\t        'uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 ' +\n\t        'unpackUnorm2x16 unpackUnorm4x8 usubBorrow gl_TextureMatrix gl_TextureMatrixInverse',\n\t      literal: 'true false'\n\t    },\n\t    illegal: '\"',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('go', function(hljs) {\n\t  var GO_KEYWORDS = {\n\t    keyword:\n\t      'break default func interface select case map struct chan else goto package switch ' +\n\t      'const fallthrough if range type continue for import return var go defer',\n\t    constant:\n\t       'true false iota nil',\n\t    typename:\n\t      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n\t      'uint16 uint32 uint64 int uint uintptr rune',\n\t    built_in:\n\t      'append cap close complex copy imag len make new panic print println real recover delete'\n\t  };\n\t  return {\n\t    aliases: [\"golang\"],\n\t    keywords: GO_KEYWORDS,\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\\'', end: '[^\\\\\\\\]\\''\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: '`', end: '`'\n\t      },\n\t      {\n\t        className: 'number',\n\t        begin: hljs.C_NUMBER_RE + '[dflsi]?',\n\t        relevance: 0\n\t      },\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('gradle', function(hljs) {\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'task project allprojects subprojects artifacts buildscript configurations ' +\n\t        'dependencies repositories sourceSets description delete from into include ' +\n\t        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n\t        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n\t        'def abstract break case catch continue default do else extends final finally ' +\n\t        'for if implements instanceof native new private protected public return static ' +\n\t        'switch synchronized throw throws transient try volatile while strictfp package ' +\n\t        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n\t        'byte char class double float int interface long short void compile runTime ' +\n\t        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n\t        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n\t        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n\t        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n\t        'newReader newWriter next plus pop power previous print println push putAt read ' +\n\t        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n\t        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n\t        'withStream withWriter withWriterAppend write writeLine'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.REGEXP_MODE\n\t\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('groovy', function(hljs) {\n\t    return {\n\t        keywords: {\n\t            typename: 'byte short char int long boolean float double void',\n\t            literal : 'true false null',\n\t            keyword:\n\t            // groovy specific keywords\n\t            'def as in assert trait ' +\n\t            // common keywords with Java\n\t            'super this abstract static volatile transient public private protected synchronized final ' +\n\t            'class interface enum if else for while switch case break default continue ' +\n\t            'throw throws try catch finally implements extends new import package return instanceof'\n\t        },\n\t\n\t        contains: [\n\t            hljs.COMMENT(\n\t                '/\\\\*\\\\*',\n\t                '\\\\*/',\n\t                {\n\t                    relevance : 0,\n\t                    contains : [{\n\t                        className : 'doctag',\n\t                        begin : '@[A-Za-z]+'\n\t                    }]\n\t                }\n\t            ),\n\t            hljs.C_LINE_COMMENT_MODE,\n\t            hljs.C_BLOCK_COMMENT_MODE,\n\t            {\n\t                className: 'string',\n\t                begin: '\"\"\"', end: '\"\"\"'\n\t            },\n\t            {\n\t                className: 'string',\n\t                begin: \"'''\", end: \"'''\"\n\t            },\n\t            {\n\t                className: 'string',\n\t                begin: \"\\\\$/\", end: \"/\\\\$\",\n\t                relevance: 10\n\t            },\n\t            hljs.APOS_STRING_MODE,\n\t            {\n\t                className: 'regexp',\n\t                begin: /~?\\/[^\\/\\n]+\\//,\n\t                contains: [\n\t                    hljs.BACKSLASH_ESCAPE\n\t                ]\n\t            },\n\t            hljs.QUOTE_STRING_MODE,\n\t            {\n\t                className: 'shebang',\n\t                begin: \"^#!/usr/bin/env\", end: '$',\n\t                illegal: '\\n'\n\t            },\n\t            hljs.BINARY_NUMBER_MODE,\n\t            {\n\t                className: 'class',\n\t                beginKeywords: 'class interface trait enum', end: '{',\n\t                illegal: ':',\n\t                contains: [\n\t                    {beginKeywords: 'extends implements'},\n\t                    hljs.UNDERSCORE_TITLE_MODE,\n\t                ]\n\t            },\n\t            hljs.C_NUMBER_MODE,\n\t            {\n\t                className: 'annotation', begin: '@[A-Za-z]+'\n\t            },\n\t            {\n\t                // highlight map keys and named parameters as strings\n\t                className: 'string', begin: /[^\\?]{0}[A-Za-z0-9_$]+ *:/\n\t            },\n\t            {\n\t                // catch middle element of the ternary operator\n\t                // to avoid highlight it as a label, named parameter, or map key\n\t                begin: /\\?/, end: /\\:/\n\t            },\n\t            {\n\t                // highlight labeled statements\n\t                className: 'label', begin: '^\\\\s*[A-Za-z0-9_$]+:',\n\t                relevance: 0\n\t            },\n\t        ],\n\t        illegal: /#/\n\t    }\n\t});\n\t\n\thljs.registerLanguage('haml', // TODO support filter tags like :javascript, support inline HTML\n\tfunction(hljs) {\n\t  return {\n\t    case_insensitive: true,\n\t    contains: [\n\t      {\n\t        className: 'doctype',\n\t        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n\t        relevance: 10\n\t      },\n\t      // FIXME these comments should be allowed to span indented lines\n\t      hljs.COMMENT(\n\t        '^\\\\s*(!=#|=#|-#|/).*$',\n\t        false,\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        begin: '^\\\\s*(-|=|!=)(?!#)',\n\t        starts: {\n\t          end: '\\\\n',\n\t          subLanguage: 'ruby'\n\t        }\n\t      },\n\t      {\n\t        className: 'tag',\n\t        begin: '^\\\\s*%',\n\t        contains: [\n\t          {\n\t            className: 'title',\n\t            begin: '\\\\w+'\n\t          },\n\t          {\n\t            className: 'value',\n\t            begin: '[#\\\\.][\\\\w-]+'\n\t          },\n\t          {\n\t            begin: '{\\\\s*',\n\t            end: '\\\\s*}',\n\t            excludeEnd: true,\n\t            contains: [\n\t              {\n\t                //className: 'attribute',\n\t                begin: ':\\\\w+\\\\s*=>',\n\t                end: ',\\\\s+',\n\t                returnBegin: true,\n\t                endsWithParent: true,\n\t                contains: [\n\t                  {\n\t                    className: 'symbol',\n\t                    begin: ':\\\\w+'\n\t                  },\n\t                  hljs.APOS_STRING_MODE,\n\t                  hljs.QUOTE_STRING_MODE,\n\t                  {\n\t                    begin: '\\\\w+',\n\t                    relevance: 0\n\t                  }\n\t                ]\n\t              }\n\t            ]\n\t          },\n\t          {\n\t            begin: '\\\\(\\\\s*',\n\t            end: '\\\\s*\\\\)',\n\t            excludeEnd: true,\n\t            contains: [\n\t              {\n\t                //className: 'attribute',\n\t                begin: '\\\\w+\\\\s*=',\n\t                end: '\\\\s+',\n\t                returnBegin: true,\n\t                endsWithParent: true,\n\t                contains: [\n\t                  {\n\t                    className: 'attribute',\n\t                    begin: '\\\\w+',\n\t                    relevance: 0\n\t                  },\n\t                  hljs.APOS_STRING_MODE,\n\t                  hljs.QUOTE_STRING_MODE,\n\t                  {\n\t                    begin: '\\\\w+',\n\t                    relevance: 0\n\t                  }\n\t                ]\n\t              }\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'bullet',\n\t        begin: '^\\\\s*[=~]\\\\s*',\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: '#{',\n\t        starts: {\n\t          end: '}',\n\t          subLanguage: 'ruby'\n\t        }\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('handlebars', function(hljs) {\n\t  var EXPRESSION_KEYWORDS = 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield';\n\t  return {\n\t    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n\t    case_insensitive: true,\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      {\n\t        className: 'expression',\n\t        begin: '{{', end: '}}',\n\t        contains: [\n\t          {\n\t            className: 'begin-block', begin: '\\#[a-zA-Z\\-\\ \\.]+',\n\t            keywords: EXPRESSION_KEYWORDS\n\t          },\n\t          {\n\t            className: 'string',\n\t            begin: '\"', end: '\"'\n\t          },\n\t          {\n\t            className: 'end-block', begin: '\\\\\\/[a-zA-Z\\-\\ \\.]+',\n\t            keywords: EXPRESSION_KEYWORDS\n\t          },\n\t          {\n\t            className: 'variable', begin: '[a-zA-Z\\-\\.]+',\n\t            keywords: EXPRESSION_KEYWORDS\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('haskell', function(hljs) {\n\t  var COMMENT_MODES = [\n\t    hljs.COMMENT('--', '$'),\n\t    hljs.COMMENT(\n\t      '{-',\n\t      '-}',\n\t      {\n\t        contains: ['self']\n\t      }\n\t    )\n\t  ];\n\t\n\t  var PRAGMA = {\n\t    className: 'pragma',\n\t    begin: '{-#', end: '#-}'\n\t  };\n\t\n\t  var PREPROCESSOR = {\n\t    className: 'preprocessor',\n\t    begin: '^#', end: '$'\n\t  };\n\t\n\t  var CONSTRUCTOR = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n\t    relevance: 0\n\t  };\n\t\n\t  var LIST = {\n\t    className: 'container',\n\t    begin: '\\\\(', end: '\\\\)',\n\t    illegal: '\"',\n\t    contains: [\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\t      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'})\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t\n\t  var RECORD = {\n\t    className: 'container',\n\t    begin: '{', end: '}',\n\t    contains: LIST.contains\n\t  };\n\t\n\t  return {\n\t    aliases: ['hs'],\n\t    keywords:\n\t      'let in if then else case of where do module import hiding ' +\n\t      'qualified type data newtype deriving class instance as default ' +\n\t      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n\t      'jvm dotnet safe unsafe family forall mdo proc rec',\n\t    contains: [\n\t\n\t      // Top-level constructions.\n\t\n\t      {\n\t        className: 'module',\n\t        begin: '\\\\bmodule\\\\b', end: 'where',\n\t        keywords: 'module where',\n\t        contains: [LIST].concat(COMMENT_MODES),\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        className: 'import',\n\t        begin: '\\\\bimport\\\\b', end: '$',\n\t        keywords: 'import|0 qualified as hiding',\n\t        contains: [LIST].concat(COMMENT_MODES),\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t\n\t      {\n\t        className: 'class',\n\t        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n\t        keywords: 'class family instance where',\n\t        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'typedef',\n\t        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n\t        keywords: 'data family type newtype deriving',\n\t        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'default',\n\t        beginKeywords: 'default', end: '$',\n\t        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'infix',\n\t        beginKeywords: 'infix infixl infixr', end: '$',\n\t        contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'foreign',\n\t        begin: '\\\\bforeign\\\\b', end: '$',\n\t        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n\t                  'dotnet safe unsafe',\n\t        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE].concat(COMMENT_MODES)\n\t      },\n\t      {\n\t        className: 'shebang',\n\t        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n\t      },\n\t\n\t      // \"Whitespaces\".\n\t\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\t\n\t      // Literals and names.\n\t\n\t      // TODO: characters.\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      CONSTRUCTOR,\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\t\n\t      {begin: '->|<-'} // No markup, relevance booster\n\t    ].concat(COMMENT_MODES)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('haxe', function(hljs) {\n\t  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n\t  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\t\n\t  return {\n\t    aliases: ['hx'],\n\t    keywords: {\n\t      keyword: 'break callback case cast catch class continue default do dynamic else enum extends extern ' +\n\t    'for function here if implements import in inline interface never new override package private ' +\n\t    'public return static super switch this throw trace try typedef untyped using var while',\n\t      literal: 'true false null'\n\t    },\n\t    contains: [\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends implements'\n\t          },\n\t          hljs.TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$',\n\t        keywords: 'if else elseif end error'\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n\t        illegal: '\\\\S',\n\t        contains: [\n\t          hljs.TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)',\n\t            contains: [\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.QUOTE_STRING_MODE,\n\t              hljs.C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ]\n\t          },\n\t          {\n\t            className: 'type',\n\t            begin: ':',\n\t            end: IDENT_FUNC_RETURN_TYPE_RE,\n\t            relevance: 10\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('http', function(hljs) {\n\t  return {\n\t    aliases: ['https'],\n\t    illegal: '\\\\S',\n\t    contains: [\n\t      {\n\t        className: 'status',\n\t        begin: '^HTTP/[0-9\\\\.]+', end: '$',\n\t        contains: [{className: 'number', begin: '\\\\b\\\\d{3}\\\\b'}]\n\t      },\n\t      {\n\t        className: 'request',\n\t        begin: '^[A-Z]+ (.*?) HTTP/[0-9\\\\.]+$', returnBegin: true, end: '$',\n\t        contains: [\n\t          {\n\t            className: 'string',\n\t            begin: ' ', end: ' ',\n\t            excludeBegin: true, excludeEnd: true\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: '^\\\\w', end: ': ', excludeEnd: true,\n\t        illegal: '\\\\n|\\\\s|=',\n\t        starts: {className: 'string', end: '$'}\n\t      },\n\t      {\n\t        begin: '\\\\n\\\\n',\n\t        starts: {subLanguage: [], endsWithParent: true}\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('inform7', function(hljs) {\n\t  var START_BRACKET = '\\\\[';\n\t  var END_BRACKET = '\\\\]';\n\t  return {\n\t    aliases: ['i7'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      // Some keywords more or less unique to I7, for relevance.\n\t      keyword:\n\t        // kind:\n\t        'thing|10 room|10 person|10 man|10 woman|10 animal|10 container ' +\n\t        'supporter|10 backdrop|10 door|10 ' +\n\t        // characteristic:\n\t        'scenery|10 open closed|10 locked|10 inside|10 gender|10 ' +\n\t        // verb:\n\t        'is are say|10 understand|10 ' +\n\t        // misc keyword:\n\t        'kind|10 of rule|10'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'string',\n\t        begin: '\"', end: '\"',\n\t        relevance: 0,\n\t        contains: [\n\t          {\n\t            className: 'subst',\n\t            begin: START_BRACKET, end: END_BRACKET\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'title',\n\t        beginKeywords: '^Volume ^Book ^Part ^Chapter ^Section',\n\t        end: '$',\n\t        relevance: 10\n\t      },\n\t      {\n\t        // Table\n\t        className: 'title',\n\t        beginKeywords: '^Table',\n\t        end: '$',\n\t        relevance: 10\n\t      },\n\t      {\n\t        // Rule definition\n\t        // This is here for relevance.\n\t        begin: '^\\\\b(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)',\n\t        end: ':',\n\t        contains: [\n\t          {\n\t            //Rule name\n\t            begin: '\\\\b\\\\(This',\n\t            end: '\\\\)',\n\t            relevance: 10\n\t          }\n\t        ],\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'comment',\n\t        begin: START_BRACKET, end: END_BRACKET,\n\t        contains: ['self']\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('ini', function(hljs) {\n\t  var STRING = {\n\t    className: \"string\",\n\t    contains: [hljs.BACKSLASH_ESCAPE],\n\t    variants: [\n\t      {\n\t        begin: \"'''\", end: \"'''\",\n\t        relevance: 10\n\t      }, {\n\t        begin: '\"\"\"', end: '\"\"\"',\n\t        relevance: 10\n\t      }, {\n\t        begin: '\"', end: '\"'\n\t      }, {\n\t        begin: \"'\", end: \"'\"\n\t      }\n\t    ]\n\t  };\n\t  return {\n\t    aliases: ['toml'],\n\t    case_insensitive: true,\n\t    illegal: /\\S/,\n\t    contains: [\n\t      hljs.COMMENT(';', '$'),\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'title',\n\t        begin: /^\\s*\\[+/, end: /\\]+/\n\t      },\n\t      {\n\t        className: 'setting',\n\t        begin: /^[a-z0-9\\[\\]_-]+\\s*=\\s*/, end: '$',\n\t        contains: [\n\t          {\n\t            className: 'value',\n\t            endsWithParent: true,\n\t            keywords: 'on off true false yes no',\n\t            contains: [\n\t              {\n\t                className: 'variable',\n\t                variants: [\n\t                  {begin: /\\$[\\w\\d\"][\\w\\d_]*/},\n\t                  {begin: /\\$\\{(.*?)}/}\n\t                ]\n\t              },\n\t              STRING,\n\t              {\n\t                className: 'number',\n\t                begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/\n\t              },\n\t              hljs.NUMBER_MODE\n\t            ],\n\t            relevance: 0\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('java', function(hljs) {\n\t  var GENERIC_IDENT_RE = hljs.UNDERSCORE_IDENT_RE + '(<' + hljs.UNDERSCORE_IDENT_RE + '>)?';\n\t  var KEYWORDS =\n\t    'false synchronized int abstract float private char boolean static null if const ' +\n\t    'for true while long strictfp finally protected import native final void ' +\n\t    'enum else break transient catch instanceof byte super volatile case assert short ' +\n\t    'package default double public try this switch continue throws protected public private';\n\t\n\t  // https://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html\n\t  var JAVA_NUMBER_RE = '\\\\b' +\n\t    '(' +\n\t      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n\t      '|' +\n\t      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n\t      '|' +\n\t      '(' +\n\t        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n\t        '|' +\n\t        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n\t      ')' +\n\t      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n\t    ')' +\n\t    '[lLfF]?';\n\t  var JAVA_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: JAVA_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t\n\t  return {\n\t    aliases: ['jsp'],\n\t    keywords: KEYWORDS,\n\t    illegal: /<\\/|#/,\n\t    contains: [\n\t      hljs.COMMENT(\n\t        '/\\\\*\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          relevance : 0,\n\t          contains : [{\n\t            className : 'doctag',\n\t            begin : '@[A-Za-z]+'\n\t          }]\n\t        }\n\t      ),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: /[{;=]/, excludeEnd: true,\n\t        keywords: 'class interface',\n\t        illegal: /[:\"\\[\\]]/,\n\t        contains: [\n\t          {beginKeywords: 'extends implements'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        // Expression keywords prevent 'keyword Name(...)' from being\n\t        // recognized as a function definition\n\t        beginKeywords: 'new throw return else',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true, end: /[{;=]/,\n\t        excludeEnd: true,\n\t        keywords: KEYWORDS,\n\t        contains: [\n\t          {\n\t            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n\t            relevance: 0,\n\t            contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t          },\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            keywords: KEYWORDS,\n\t            relevance: 0,\n\t            contains: [\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.QUOTE_STRING_MODE,\n\t              hljs.C_NUMBER_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      },\n\t      JAVA_NUMBER_MODE,\n\t      {\n\t        className: 'annotation', begin: '@[A-Za-z]+'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('javascript', function(hljs) {\n\t  return {\n\t    aliases: ['js'],\n\t    keywords: {\n\t      keyword:\n\t        'in of if for while finally var new function do return void else break catch ' +\n\t        'instanceof with throw case default try this switch continue typeof delete ' +\n\t        'let yield const export super debugger as async await',\n\t      literal:\n\t        'true false null undefined NaN Infinity',\n\t      built_in:\n\t        'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n\t        'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n\t        'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n\t        'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n\t        'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n\t        'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n\t        'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n\t        'Promise'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'pi',\n\t        relevance: 10,\n\t        begin: /^\\s*['\"]use (strict|asm)['\"]/\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      { // template string\n\t        className: 'string',\n\t        begin: '`', end: '`',\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          {\n\t            className: 'subst',\n\t            begin: '\\\\$\\\\{', end: '\\\\}'\n\t          }\n\t        ]\n\t      },\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t          { begin: '\\\\b(0[bB][01]+)' },\n\t          { begin: '\\\\b(0[oO][0-7]+)' },\n\t          { begin: hljs.C_NUMBER_RE }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      { // \"value\" container\n\t        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n\t        keywords: 'return throw case',\n\t        contains: [\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t          hljs.REGEXP_MODE,\n\t          { // E4X / JSX\n\t            begin: /</, end: />\\s*[);\\]]/,\n\t            relevance: 0,\n\t            subLanguage: 'xml'\n\t          }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            excludeBegin: true,\n\t            excludeEnd: true,\n\t            contains: [\n\t              hljs.C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ],\n\t            illegal: /[\"'\\(]/\n\t          }\n\t        ],\n\t        illegal: /\\[|%/\n\t      },\n\t      {\n\t        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n\t      },\n\t      {\n\t        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n\t      },\n\t      // ECMAScript 6 modules import\n\t      {\n\t        beginKeywords: 'import', end: '[;$]',\n\t        keywords: 'import from as',\n\t        contains: [\n\t          hljs.APOS_STRING_MODE,\n\t          hljs.QUOTE_STRING_MODE\n\t        ]\n\t      },\n\t      { // ES6 class\n\t        className: 'class',\n\t        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n\t        illegal: /[:\"\\[\\]]/,\n\t        contains: [\n\t          {beginKeywords: 'extends'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      }\n\t    ],\n\t    illegal: /#/\n\t  };\n\t});\n\t\n\thljs.registerLanguage('json', function(hljs) {\n\t  var LITERALS = {literal: 'true false null'};\n\t  var TYPES = [\n\t    hljs.QUOTE_STRING_MODE,\n\t    hljs.C_NUMBER_MODE\n\t  ];\n\t  var VALUE_CONTAINER = {\n\t    className: 'value',\n\t    end: ',', endsWithParent: true, excludeEnd: true,\n\t    contains: TYPES,\n\t    keywords: LITERALS\n\t  };\n\t  var OBJECT = {\n\t    begin: '{', end: '}',\n\t    contains: [\n\t      {\n\t        className: 'attribute',\n\t        begin: '\\\\s*\"', end: '\"\\\\s*:\\\\s*', excludeBegin: true, excludeEnd: true,\n\t        contains: [hljs.BACKSLASH_ESCAPE],\n\t        illegal: '\\\\n',\n\t        starts: VALUE_CONTAINER\n\t      }\n\t    ],\n\t    illegal: '\\\\S'\n\t  };\n\t  var ARRAY = {\n\t    begin: '\\\\[', end: '\\\\]',\n\t    contains: [hljs.inherit(VALUE_CONTAINER, {className: null})], // inherit is also a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n\t    illegal: '\\\\S'\n\t  };\n\t  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n\t  return {\n\t    contains: TYPES,\n\t    keywords: LITERALS,\n\t    illegal: '\\\\S'\n\t  };\n\t});\n\t\n\thljs.registerLanguage('julia', function(hljs) {\n\t  // Since there are numerous special names in Julia, it is too much trouble\n\t  // to maintain them by hand. Hence these names (i.e. keywords, literals and\n\t  // built-ins) are automatically generated from Julia (v0.3.0) itself through\n\t  // following scripts for each.\n\t\n\t  var KEYWORDS = {\n\t    // # keyword generator\n\t    // println(\"\\\"in\\\",\")\n\t    // for kw in Base.REPLCompletions.complete_keyword(\"\")\n\t    //     println(\"\\\"$kw\\\",\")\n\t    // end\n\t    keyword:\n\t      'in abstract baremodule begin bitstype break catch ccall const continue do else elseif end export ' +\n\t      'finally for function global if immutable import importall let local macro module quote return try type ' +\n\t      'typealias using while',\n\t\n\t    // # literal generator\n\t    // println(\"\\\"true\\\",\\n\\\"false\\\"\")\n\t    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n\t    //     try\n\t    //         s = symbol(name)\n\t    //         v = eval(s)\n\t    //         if !isa(v, Function) &&\n\t    //            !isa(v, DataType) &&\n\t    //            !issubtype(typeof(v), Tuple) &&\n\t    //            !isa(v, UnionType) &&\n\t    //            !isa(v, Module) &&\n\t    //            !isa(v, TypeConstructor) &&\n\t    //            !isa(v, Colon)\n\t    //             println(\"\\\"$name\\\",\")\n\t    //         end\n\t    //     end\n\t    // end\n\t    literal:\n\t      'true false ANY ARGS CPU_CORES C_NULL DL_LOAD_PATH DevNull ENDIAN_BOM ENV I|0 Inf Inf16 Inf32 ' +\n\t      'InsertionSort JULIA_HOME LOAD_PATH MS_ASYNC MS_INVALIDATE MS_SYNC MergeSort NaN NaN16 NaN32 OS_NAME QuickSort ' +\n\t      'RTLD_DEEPBIND RTLD_FIRST RTLD_GLOBAL RTLD_LAZY RTLD_LOCAL RTLD_NODELETE RTLD_NOLOAD RTLD_NOW RoundDown ' +\n\t      'RoundFromZero RoundNearest RoundToZero RoundUp STDERR STDIN STDOUT VERSION WORD_SIZE catalan cglobal e eu ' +\n\t      'eulergamma golden im nothing pi γ π φ',\n\t\n\t    // # built_in generator:\n\t    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n\t    //     try\n\t    //         v = eval(symbol(name))\n\t    //         if isa(v, DataType)\n\t    //             println(\"\\\"$name\\\",\")\n\t    //         end\n\t    //     end\n\t    // end\n\t    built_in:\n\t      'ASCIIString AbstractArray AbstractRNG AbstractSparseArray Any ArgumentError Array Associative Base64Pipe ' +\n\t      'Bidiagonal BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError Box CFILE Cchar Cdouble Cfloat Char ' +\n\t      'CharString Cint Clong Clonglong ClusterManager Cmd Coff_t Colon Complex Complex128 Complex32 Complex64 ' +\n\t      'Condition Cptrdiff_t Cshort Csize_t Cssize_t Cuchar Cuint Culong Culonglong Cushort Cwchar_t DArray DataType ' +\n\t      'DenseArray Diagonal Dict DimensionMismatch DirectIndexString Display DivideError DomainError EOFError ' +\n\t      'EachLine Enumerate ErrorException Exception Expr Factorization FileMonitor FileOffset Filter Float16 Float32 ' +\n\t      'Float64 FloatRange FloatingPoint Function GetfieldNode GotoNode Hermitian IO IOBuffer IOStream IPv4 IPv6 ' +\n\t      'InexactError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException IntrinsicFunction KeyError ' +\n\t      'LabelNode LambdaStaticData LineNumberNode LoadError LocalProcess MIME MathConst MemoryError MersenneTwister ' +\n\t      'Method MethodError MethodTable Module NTuple NewvarNode Nothing Number ObjectIdDict OrdinalRange ' +\n\t      'OverflowError ParseError PollingFileWatcher ProcessExitedException ProcessGroup Ptr QuoteNode Range Range1 ' +\n\t      'Ranges Rational RawFD Real Regex RegexMatch RemoteRef RepString RevString RopeString RoundingMode Set ' +\n\t      'SharedArray Signed SparseMatrixCSC StackOverflowError Stat StatStruct StepRange String SubArray SubString ' +\n\t      'SymTridiagonal Symbol SymbolNode Symmetric SystemError Task TextDisplay Timer TmStruct TopNode Triangular ' +\n\t      'Tridiagonal Type TypeConstructor TypeError TypeName TypeVar UTF16String UTF32String UTF8String UdpSocket ' +\n\t      'Uint Uint128 Uint16 Uint32 Uint64 Uint8 UndefRefError UndefVarError UniformScaling UnionType UnitRange ' +\n\t      'Unsigned Vararg VersionNumber WString WeakKeyDict WeakRef Woodbury Zip'\n\t  };\n\t\n\t  // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\n\t  var VARIABLE_NAME_RE = \"[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*\";\n\t\n\t  // placeholder for recursive self-reference\n\t  var DEFAULT = { lexemes: VARIABLE_NAME_RE, keywords: KEYWORDS };\n\t\n\t  var TYPE_ANNOTATION = {\n\t    className: \"type-annotation\",\n\t    begin: /::/\n\t  };\n\t\n\t  var SUBTYPE = {\n\t    className: \"subtype\",\n\t    begin: /<:/\n\t  };\n\t\n\t  // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\n\t  var NUMBER = {\n\t    className: \"number\",\n\t    // supported numeric literals:\n\t    //  * binary literal (e.g. 0x10)\n\t    //  * octal literal (e.g. 0o76543210)\n\t    //  * hexadecimal literal (e.g. 0xfedcba876543210)\n\t    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n\t    //  * decimal literal (e.g. 9876543210, 100_000_000)\n\t    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n\t    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n\t    relevance: 0\n\t  };\n\t\n\t  var CHAR = {\n\t    className: \"char\",\n\t    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n\t  };\n\t\n\t  var INTERPOLATION = {\n\t    className: 'subst',\n\t    begin: /\\$\\(/, end: /\\)/,\n\t    keywords: KEYWORDS\n\t  };\n\t\n\t  var INTERPOLATED_VARIABLE = {\n\t    className: 'variable',\n\t    begin: \"\\\\$\" + VARIABLE_NAME_RE\n\t  };\n\t\n\t  // TODO: neatly escape normal code in string literal\n\t  var STRING = {\n\t    className: \"string\",\n\t    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n\t    variants: [\n\t      { begin: /\\w*\"/, end: /\"\\w*/ },\n\t      { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/ }\n\t    ]\n\t  };\n\t\n\t  var COMMAND = {\n\t    className: \"string\",\n\t    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n\t    begin: '`', end: '`'\n\t  };\n\t\n\t  var MACROCALL = {\n\t    className: \"macrocall\",\n\t    begin: \"@\" + VARIABLE_NAME_RE\n\t  };\n\t\n\t  var COMMENT = {\n\t    className: \"comment\",\n\t    variants: [\n\t      { begin: \"#=\", end: \"=#\", relevance: 10 },\n\t      { begin: '#', end: '$' }\n\t    ]\n\t  };\n\t\n\t  DEFAULT.contains = [\n\t    NUMBER,\n\t    CHAR,\n\t    TYPE_ANNOTATION,\n\t    SUBTYPE,\n\t    STRING,\n\t    COMMAND,\n\t    MACROCALL,\n\t    COMMENT,\n\t    hljs.HASH_COMMENT_MODE\n\t  ];\n\t  INTERPOLATION.contains = DEFAULT.contains;\n\t\n\t  return DEFAULT;\n\t});\n\t\n\thljs.registerLanguage('kotlin', function (hljs) {\n\t  var KEYWORDS = 'val var get set class trait object public open private protected ' +\n\t    'final enum if else do while for when break continue throw try catch finally ' +\n\t    'import package is as in return fun override default companion reified inline volatile transient native';\n\t\n\t  return {\n\t    keywords: {\n\t      typename: 'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n\t      literal: 'true false null',\n\t      keyword: KEYWORDS\n\t    },\n\t    contains : [\n\t      hljs.COMMENT(\n\t        '/\\\\*\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          relevance : 0,\n\t          contains : [{\n\t            className : 'doctag',\n\t            begin : '@[A-Za-z]+'\n\t          }]\n\t        }\n\t      ),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'type',\n\t        begin: /</, end: />/,\n\t        returnBegin: true,\n\t        excludeEnd: false,\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'fun', end: '[(]|$',\n\t        returnBegin: true,\n\t        excludeEnd: true,\n\t        keywords: KEYWORDS,\n\t        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n\t        relevance: 5,\n\t        contains: [\n\t          {\n\t            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n\t            relevance: 0,\n\t            contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t          },\n\t          {\n\t            className: 'type',\n\t            begin: /</, end: />/, keywords: 'reified',\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            keywords: KEYWORDS,\n\t            relevance: 0,\n\t            illegal: /\\([^\\(,\\s:]+,/,\n\t            contains: [\n\t              {\n\t                className: 'typename',\n\t                begin: /:\\s*/, end: /\\s*[=\\)]/, excludeBegin: true, returnEnd: true,\n\t                relevance: 0\n\t              }\n\t            ]\n\t          },\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class trait', end: /[:\\{(]|$/,\n\t        excludeEnd: true,\n\t        illegal: 'extends implements',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t            className: 'type',\n\t            begin: /</, end: />/, excludeBegin: true, excludeEnd: true,\n\t            relevance: 0\n\t          },\n\t          {\n\t            className: 'typename',\n\t            begin: /[,:]\\s*/, end: /[<\\(,]|$/, excludeBegin: true, returnEnd: true\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'variable', beginKeywords: 'var val', end: /\\s*[=:$]/, excludeEnd: true\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'shebang',\n\t        begin: \"^#!/usr/bin/env\", end: '$',\n\t        illegal: '\\n'\n\t      },\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('lasso', function(hljs) {\n\t  var LASSO_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*';\n\t  var LASSO_ANGLE_RE = '<\\\\?(lasso(script)?|=)';\n\t  var LASSO_CLOSE_RE = '\\\\]|\\\\?>';\n\t  var LASSO_KEYWORDS = {\n\t    literal:\n\t      'true false none minimal full all void ' +\n\t      'bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft',\n\t    built_in:\n\t      'array date decimal duration integer map pair string tag xml null ' +\n\t      'boolean bytes keyword list locale queue set stack staticarray ' +\n\t      'local var variable global data self inherited currentcapture givenblock',\n\t    keyword:\n\t      'error_code error_msg error_pop error_push error_reset cache ' +\n\t      'database_names database_schemanames database_tablenames define_tag ' +\n\t      'define_type email_batch encode_set html_comment handle handle_error ' +\n\t      'header if inline iterate ljax_target link link_currentaction ' +\n\t      'link_currentgroup link_currentrecord link_detail link_firstgroup ' +\n\t      'link_firstrecord link_lastgroup link_lastrecord link_nextgroup ' +\n\t      'link_nextrecord link_prevgroup link_prevrecord log loop ' +\n\t      'namespace_using output_none portal private protect records referer ' +\n\t      'referrer repeating resultset rows search_args search_arguments ' +\n\t      'select sort_args sort_arguments thread_atomic value_list while ' +\n\t      'abort case else if_empty if_false if_null if_true loop_abort ' +\n\t      'loop_continue loop_count params params_up return return_value ' +\n\t      'run_children soap_definetag soap_lastrequest soap_lastresponse ' +\n\t      'tag_name ascending average by define descending do equals ' +\n\t      'frozen group handle_failure import in into join let match max ' +\n\t      'min on order parent protected provide public require returnhome ' +\n\t      'skip split_thread sum take thread to trait type where with ' +\n\t      'yield yieldhome'\n\t  };\n\t  var HTML_COMMENT = hljs.COMMENT(\n\t    '<!--',\n\t    '-->',\n\t    {\n\t      relevance: 0\n\t    }\n\t  );\n\t  var LASSO_NOPROCESS = {\n\t    className: 'preprocessor',\n\t    begin: '\\\\[noprocess\\\\]',\n\t    starts: {\n\t      className: 'markup',\n\t      end: '\\\\[/noprocess\\\\]',\n\t      returnEnd: true,\n\t      contains: [HTML_COMMENT]\n\t    }\n\t  };\n\t  var LASSO_START = {\n\t    className: 'preprocessor',\n\t    begin: '\\\\[/noprocess|' + LASSO_ANGLE_RE\n\t  };\n\t  var LASSO_DATAMEMBER = {\n\t    className: 'variable',\n\t    begin: '\\'' + LASSO_IDENT_RE + '\\''\n\t  };\n\t  var LASSO_CODE = [\n\t    hljs.COMMENT(\n\t      '/\\\\*\\\\*!',\n\t      '\\\\*/'\n\t    ),\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    hljs.inherit(hljs.C_NUMBER_MODE, {begin: hljs.C_NUMBER_RE + '|(infinity|nan)\\\\b'}),\n\t    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t    {\n\t      className: 'string',\n\t      begin: '`', end: '`'\n\t    },\n\t    {\n\t      className: 'variable',\n\t      variants: [\n\t        {\n\t          begin: '[#$]' + LASSO_IDENT_RE\n\t        },\n\t        {\n\t          begin: '#', end: '\\\\d+',\n\t          illegal: '\\\\W'\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'tag',\n\t      begin: '::\\\\s*', end: LASSO_IDENT_RE,\n\t      illegal: '\\\\W'\n\t    },\n\t    {\n\t      className: 'attribute',\n\t      variants: [\n\t        {\n\t          begin: '-(?!infinity)' + hljs.UNDERSCORE_IDENT_RE,\n\t          relevance: 0\n\t        },\n\t        {\n\t          begin: '(\\\\.\\\\.\\\\.)'\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'subst',\n\t      variants: [\n\t        {\n\t          begin: '->\\\\s*',\n\t          contains: [LASSO_DATAMEMBER]\n\t        },\n\t        {\n\t          begin: '->|\\\\\\\\|&&?|\\\\|\\\\||!(?!=|>)|(and|or|not)\\\\b',\n\t          relevance: 0\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'built_in',\n\t      begin: '\\\\.\\\\.?\\\\s*',\n\t      relevance: 0,\n\t      contains: [LASSO_DATAMEMBER]\n\t    },\n\t    {\n\t      className: 'class',\n\t      beginKeywords: 'define',\n\t      returnEnd: true, end: '\\\\(|=>',\n\t      contains: [\n\t        hljs.inherit(hljs.TITLE_MODE, {begin: hljs.UNDERSCORE_IDENT_RE + '(=(?!>))?'})\n\t      ]\n\t    }\n\t  ];\n\t  return {\n\t    aliases: ['ls', 'lassoscript'],\n\t    case_insensitive: true,\n\t    lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n\t    keywords: LASSO_KEYWORDS,\n\t    contains: [\n\t      {\n\t        className: 'preprocessor',\n\t        begin: LASSO_CLOSE_RE,\n\t        relevance: 0,\n\t        starts: {\n\t          className: 'markup',\n\t          end: '\\\\[|' + LASSO_ANGLE_RE,\n\t          returnEnd: true,\n\t          relevance: 0,\n\t          contains: [HTML_COMMENT]\n\t        }\n\t      },\n\t      LASSO_NOPROCESS,\n\t      LASSO_START,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '\\\\[no_square_brackets',\n\t        starts: {\n\t          end: '\\\\[/no_square_brackets\\\\]', // not implemented in the language\n\t          lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n\t          keywords: LASSO_KEYWORDS,\n\t          contains: [\n\t            {\n\t              className: 'preprocessor',\n\t              begin: LASSO_CLOSE_RE,\n\t              relevance: 0,\n\t              starts: {\n\t                className: 'markup',\n\t                end: '\\\\[noprocess\\\\]|' + LASSO_ANGLE_RE,\n\t                returnEnd: true,\n\t                contains: [HTML_COMMENT]\n\t              }\n\t            },\n\t            LASSO_NOPROCESS,\n\t            LASSO_START\n\t          ].concat(LASSO_CODE)\n\t        }\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '\\\\[',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'shebang',\n\t        begin: '^#!.+lasso9\\\\b',\n\t        relevance: 10\n\t      }\n\t    ].concat(LASSO_CODE)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('less', function(hljs) {\n\t  var IDENT_RE        = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n\t  var INTERP_IDENT_RE = '(' + IDENT_RE + '|@{' + IDENT_RE + '})';\n\t\n\t  /* Generic Modes */\n\t\n\t  var RULES = [], VALUE = []; // forward def. for recursive modes\n\t\n\t  var STRING_MODE = function(c) { return {\n\t    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n\t    className: 'string', begin: '~?' + c + '.*?' + c\n\t  };};\n\t\n\t  var IDENT_MODE = function(name, begin, relevance) { return {\n\t    className: name, begin: begin, relevance: relevance\n\t  };};\n\t\n\t  var FUNCT_MODE = function(name, ident, obj) {\n\t    return hljs.inherit({\n\t        className: name, begin: ident + '\\\\(', end: '\\\\(',\n\t        returnBegin: true, excludeEnd: true, relevance: 0\n\t    }, obj);\n\t  };\n\t\n\t  var PARENS_MODE = {\n\t    // used only to properly balance nested parens inside mixin call, def. arg list\n\t    begin: '\\\\(', end: '\\\\)', contains: VALUE, relevance: 0\n\t  };\n\t\n\t  // generic Less highlighter (used almost everywhere except selectors):\n\t  VALUE.push(\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    STRING_MODE(\"'\"),\n\t    STRING_MODE('\"'),\n\t    hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n\t    IDENT_MODE('hexcolor', '#[0-9A-Fa-f]+\\\\b'),\n\t    FUNCT_MODE('function', '(url|data-uri)', {\n\t      starts: {className: 'string', end: '[\\\\)\\\\n]', excludeEnd: true}\n\t    }),\n\t    FUNCT_MODE('function', IDENT_RE),\n\t    PARENS_MODE,\n\t    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n\t    IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),\n\t    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n\t    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n\t      className: 'attribute', begin: IDENT_RE + '\\\\s*:', end: ':', returnBegin: true, excludeEnd: true\n\t    }\n\t  );\n\t\n\t  var VALUE_WITH_RULESETS = VALUE.concat({\n\t    begin: '{', end: '}', contains: RULES\n\t  });\n\t\n\t  var MIXIN_GUARD_MODE = {\n\t    beginKeywords: 'when', endsWithParent: true,\n\t    contains: [{beginKeywords: 'and not'}].concat(VALUE) // using this form to override VALUE’s 'function' match\n\t  };\n\t\n\t  /* Rule-Level Modes */\n\t\n\t  var RULE_MODE = {\n\t    className: 'attribute',\n\t    begin: INTERP_IDENT_RE, end: ':', excludeEnd: true,\n\t    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE],\n\t    illegal: /\\S/,\n\t    starts: {end: '[;}]', returnEnd: true, contains: VALUE, illegal: '[<=$]'}\n\t  };\n\t\n\t  var AT_RULE_MODE = {\n\t    className: 'at_rule', // highlight only at-rule keyword\n\t    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n\t    starts: {end: '[;{}]', returnEnd: true, contains: VALUE, relevance: 0}\n\t  };\n\t\n\t  // variable definitions and calls\n\t  var VAR_RULE_MODE = {\n\t    className: 'variable',\n\t    variants: [\n\t      // using more strict pattern for higher relevance to increase chances of Less detection.\n\t      // this is *the only* Less specific statement used in most of the sources, so...\n\t      // (we’ll still often loose to the css-parser unless there's '//' comment,\n\t      // simply because 1 variable just can't beat 99 properties :)\n\t      {begin: '@' + IDENT_RE + '\\\\s*:', relevance: 15},\n\t      {begin: '@' + IDENT_RE}\n\t    ],\n\t    starts: {end: '[;}]', returnEnd: true, contains: VALUE_WITH_RULESETS}\n\t  };\n\t\n\t  var SELECTOR_MODE = {\n\t    // first parse unambiguous selectors (i.e. those not starting with tag)\n\t    // then fall into the scary lookahead-discriminator variant.\n\t    // this mode also handles mixin definitions and calls\n\t    variants: [{\n\t      begin: '[\\\\.#:&\\\\[]', end: '[;{}]'  // mixin calls end with ';'\n\t      }, {\n\t      begin: INTERP_IDENT_RE + '[^;]*{',\n\t      end: '{'\n\t    }],\n\t    returnBegin: true,\n\t    returnEnd:   true,\n\t    illegal: '[<=\\'$\"]',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      MIXIN_GUARD_MODE,\n\t      IDENT_MODE('keyword',  'all\\\\b'),\n\t      IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),     // otherwise it’s identified as tag\n\t      IDENT_MODE('tag',       INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes \"tags\"\n\t      IDENT_MODE('id',       '#'   + INTERP_IDENT_RE),\n\t      IDENT_MODE('class',    '\\\\.' + INTERP_IDENT_RE, 0),\n\t      IDENT_MODE('keyword',  '&', 0),\n\t      FUNCT_MODE('pseudo',   ':not'),\n\t      FUNCT_MODE('keyword',  ':extend'),\n\t      IDENT_MODE('pseudo',   '::?' + INTERP_IDENT_RE),\n\t      {className: 'attr_selector', begin: '\\\\[', end: '\\\\]'},\n\t      {begin: '\\\\(', end: '\\\\)', contains: VALUE_WITH_RULESETS}, // argument list of parametric mixins\n\t      {begin: '!important'} // eat !important after mixin call or it will be colored as tag\n\t    ]\n\t  };\n\t\n\t  RULES.push(\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    AT_RULE_MODE,\n\t    VAR_RULE_MODE,\n\t    SELECTOR_MODE,\n\t    RULE_MODE\n\t  );\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    illegal: '[=>\\'/<($\"]',\n\t    contains: RULES\n\t  };\n\t});\n\t\n\thljs.registerLanguage('lisp', function(hljs) {\n\t  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n\t  var MEC_RE = '\\\\|[^]*?\\\\|';\n\t  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n\t  var SHEBANG = {\n\t    className: 'shebang',\n\t    begin: '^#!', end: '$'\n\t  };\n\t  var LITERAL = {\n\t    className: 'literal',\n\t    begin: '\\\\b(t{1}|nil)\\\\b'\n\t  };\n\t  var NUMBER = {\n\t    className: 'number',\n\t    variants: [\n\t      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n\t      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n\t      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n\t      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n\t      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n\t    ]\n\t  };\n\t  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n\t  var COMMENT = hljs.COMMENT(\n\t    ';', '$',\n\t    {\n\t      relevance: 0\n\t    }\n\t  );\n\t  var VARIABLE = {\n\t    className: 'variable',\n\t    begin: '\\\\*', end: '\\\\*'\n\t  };\n\t  var KEYWORD = {\n\t    className: 'keyword',\n\t    begin: '[:&]' + LISP_IDENT_RE\n\t  };\n\t  var IDENT = {\n\t    begin: LISP_IDENT_RE,\n\t    relevance: 0\n\t  };\n\t  var MEC = {\n\t    begin: MEC_RE\n\t  };\n\t  var QUOTED_LIST = {\n\t    begin: '\\\\(', end: '\\\\)',\n\t    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n\t  };\n\t  var QUOTED = {\n\t    className: 'quoted',\n\t    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n\t    variants: [\n\t      {\n\t        begin: '[\\'`]\\\\(', end: '\\\\)'\n\t      },\n\t      {\n\t        begin: '\\\\(quote ', end: '\\\\)',\n\t        keywords: 'quote'\n\t      },\n\t      {\n\t        begin: '\\'' + MEC_RE\n\t      }\n\t    ]\n\t  };\n\t  var QUOTED_ATOM = {\n\t    className: 'quoted',\n\t    variants: [\n\t      {begin: '\\'' + LISP_IDENT_RE},\n\t      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n\t    ]\n\t  };\n\t  var LIST = {\n\t    className: 'list',\n\t    begin: '\\\\(\\\\s*', end: '\\\\)'\n\t  };\n\t  var BODY = {\n\t    endsWithParent: true,\n\t    relevance: 0\n\t  };\n\t  LIST.contains = [\n\t    {\n\t      className: 'keyword',\n\t      variants: [\n\t        {begin: LISP_IDENT_RE},\n\t        {begin: MEC_RE}\n\t      ]\n\t    },\n\t    BODY\n\t  ];\n\t  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\t\n\t  return {\n\t    illegal: /\\S/,\n\t    contains: [\n\t      NUMBER,\n\t      SHEBANG,\n\t      LITERAL,\n\t      STRING,\n\t      COMMENT,\n\t      QUOTED,\n\t      QUOTED_ATOM,\n\t      LIST,\n\t      IDENT\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('livecodeserver', function(hljs) {\n\t  var VARIABLE = {\n\t    className: 'variable', begin: '\\\\b[gtps][A-Z]+[A-Za-z0-9_\\\\-]*\\\\b|\\\\$_[A-Z]+',\n\t    relevance: 0\n\t  };\n\t  var COMMENT_MODES = [\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    hljs.HASH_COMMENT_MODE,\n\t    hljs.COMMENT('--', '$'),\n\t    hljs.COMMENT('[^:]//', '$')\n\t  ];\n\t  var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {\n\t    variants: [\n\t      {begin: '\\\\b_*rig[A-Z]+[A-Za-z0-9_\\\\-]*'},\n\t      {begin: '\\\\b_[a-z0-9\\\\-]+'}\n\t    ]\n\t  });\n\t  var TITLE2 = hljs.inherit(hljs.TITLE_MODE, {begin: '\\\\b([A-Za-z0-9_\\\\-]+)\\\\b'});\n\t  return {\n\t    case_insensitive: false,\n\t    keywords: {\n\t      keyword:\n\t        '$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER ' +\n\t        'codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph ' +\n\t        'after byte bytes english the until http forever descending using line real8 with seventh ' +\n\t        'for stdout finally element word words fourth before black ninth sixth characters chars stderr ' +\n\t        'uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid ' +\n\t        'at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 ' +\n\t        'int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat ' +\n\t        'end repeat URL in try into switch to words https token binfile each tenth as ticks tick ' +\n\t        'system real4 by dateItems without char character ascending eighth whole dateTime numeric short ' +\n\t        'first ftp integer abbreviated abbr abbrev private case while if',\n\t      constant:\n\t        'SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE ' +\n\t        'QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO ' +\n\t        'six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five ' +\n\t        'quote empty one true return cr linefeed right backslash null seven tab three two ' +\n\t        'RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK ' +\n\t        'FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK',\n\t      operator:\n\t        'div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within ' +\n\t        'contains ends with begins the keys of keys',\n\t      built_in:\n\t        'put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode ' +\n\t        'base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum ' +\n\t        'cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress ' +\n\t        'constantNames cos date dateFormat decompress directories ' +\n\t        'diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global ' +\n\t        'globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset ' +\n\t        'keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders ' +\n\t        'libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 ' +\n\t        'longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec ' +\n\t        'millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar ' +\n\t        'numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets ' +\n\t        'paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation ' +\n\t        'populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile ' +\n\t        'revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull ' +\n\t        'revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered ' +\n\t        'revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames ' +\n\t        'revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull ' +\n\t        'revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections ' +\n\t        'revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype ' +\n\t        'revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext ' +\n\t        'revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames ' +\n\t        'revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase ' +\n\t        'revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute ' +\n\t        'revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces ' +\n\t        'revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode ' +\n\t        'revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling ' +\n\t        'revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error ' +\n\t        'revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute ' +\n\t        'revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort ' +\n\t        'revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree ' +\n\t        'revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance ' +\n\t        'sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound ' +\n\t        'stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper ' +\n\t        'transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames ' +\n\t        'variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet ' +\n\t        'xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process ' +\n\t        'combine constant convert create new alias folder directory decrypt delete variable word line folder ' +\n\t        'directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile ' +\n\t        'libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback ' +\n\t        'libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime ' +\n\t        'libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename ' +\n\t        'replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase ' +\n\t        'revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees ' +\n\t        'revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord ' +\n\t        'revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase ' +\n\t        'revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD ' +\n\t        'revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost ' +\n\t        'revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData ' +\n\t        'revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel ' +\n\t        'revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback ' +\n\t        'revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop ' +\n\t        'subtract union unload wait write'\n\t    },\n\t    contains: [\n\t      VARIABLE,\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\bend\\\\sif\\\\b'\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: '$',\n\t        contains: [\n\t          VARIABLE,\n\t          TITLE2,\n\t          hljs.APOS_STRING_MODE,\n\t          hljs.QUOTE_STRING_MODE,\n\t          hljs.BINARY_NUMBER_MODE,\n\t          hljs.C_NUMBER_MODE,\n\t          TITLE1\n\t        ]\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '\\\\bend\\\\s+', end: '$',\n\t        keywords: 'end',\n\t        contains: [\n\t          TITLE2,\n\t          TITLE1\n\t        ]\n\t      },\n\t      {\n\t        className: 'command',\n\t        beginKeywords: 'command on', end: '$',\n\t        contains: [\n\t          VARIABLE,\n\t          TITLE2,\n\t          hljs.APOS_STRING_MODE,\n\t          hljs.QUOTE_STRING_MODE,\n\t          hljs.BINARY_NUMBER_MODE,\n\t          hljs.C_NUMBER_MODE,\n\t          TITLE1\n\t        ]\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        variants: [\n\t          {\n\t            begin: '<\\\\?(rev|lc|livecode)',\n\t            relevance: 10\n\t          },\n\t          { begin: '<\\\\?' },\n\t          { begin: '\\\\?>' }\n\t        ]\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.BINARY_NUMBER_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      TITLE1\n\t    ].concat(COMMENT_MODES),\n\t    illegal: ';$|^\\\\[|^='\n\t  };\n\t});\n\t\n\thljs.registerLanguage('livescript', function(hljs) {\n\t  var KEYWORDS = {\n\t    keyword:\n\t      // JS keywords\n\t      'in if for while finally new do return else break catch instanceof throw try this ' +\n\t      'switch continue typeof delete debugger case default function var with ' +\n\t      // LiveScript keywords\n\t      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n\t      'case default function var void const let enum export import native ' +\n\t      '__hasProp __extends __slice __bind __indexOf',\n\t    literal:\n\t      // JS literals\n\t      'true false null undefined ' +\n\t      // LiveScript literals\n\t      'yes no on off it that void',\n\t    built_in:\n\t      'npm require console print module global window document'\n\t  };\n\t  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n\t  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: /#\\{/, end: /}/,\n\t    keywords: KEYWORDS\n\t  };\n\t  var SUBST_SIMPLE = {\n\t    className: 'subst',\n\t    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n\t    keywords: KEYWORDS\n\t  };\n\t  var EXPRESSIONS = [\n\t    hljs.BINARY_NUMBER_MODE,\n\t    {\n\t      className: 'number',\n\t      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n\t      relevance: 0,\n\t      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n\t    },\n\t    {\n\t      className: 'string',\n\t      variants: [\n\t        {\n\t          begin: /'''/, end: /'''/,\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: /'/, end: /'/,\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: /\"\"\"/, end: /\"\"\"/,\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n\t        },\n\t        {\n\t          begin: /\"/, end: /\"/,\n\t          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n\t        },\n\t        {\n\t          begin: /\\\\/, end: /(\\s|$)/,\n\t          excludeEnd: true\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'pi',\n\t      variants: [\n\t        {\n\t          begin: '//', end: '//[gim]*',\n\t          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n\t        },\n\t        {\n\t          // regex can't start with space to parse x / 2 / 3 as two divisions\n\t          // regex can't start with *, and it supports an \"illegal\" in the main mode\n\t          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'property',\n\t      begin: '@' + JS_IDENT_RE\n\t    },\n\t    {\n\t      begin: '``', end: '``',\n\t      excludeBegin: true, excludeEnd: true,\n\t      subLanguage: 'javascript'\n\t    }\n\t  ];\n\t  SUBST.contains = EXPRESSIONS;\n\t\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', returnBegin: true,\n\t    /* We need another contained nameless mode to not have every nested\n\t    pair of parens to be called \"params\" */\n\t    contains: [\n\t      {\n\t        begin: /\\(/, end: /\\)/,\n\t        keywords: KEYWORDS,\n\t        contains: ['self'].concat(EXPRESSIONS)\n\t      }\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['ls'],\n\t    keywords: KEYWORDS,\n\t    illegal: /\\/\\*/,\n\t    contains: EXPRESSIONS.concat([\n\t      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'function',\n\t        contains: [TITLE, PARAMS],\n\t        returnBegin: true,\n\t        variants: [\n\t          {\n\t            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n\t          },\n\t          {\n\t            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n\t          },\n\t          {\n\t            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class',\n\t        end: '$',\n\t        illegal: /[:=\"\\[\\]]/,\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends',\n\t            endsWithParent: true,\n\t            illegal: /[:=\"\\[\\]]/,\n\t            contains: [TITLE]\n\t          },\n\t          TITLE\n\t        ]\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: JS_IDENT_RE + ':', end: ':',\n\t        returnBegin: true, returnEnd: true,\n\t        relevance: 0\n\t      }\n\t    ])\n\t  };\n\t});\n\t\n\thljs.registerLanguage('lua', function(hljs) {\n\t  var OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n\t  var CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n\t  var LONG_BRACKETS = {\n\t    begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n\t    contains: ['self']\n\t  };\n\t  var COMMENTS = [\n\t    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n\t    hljs.COMMENT(\n\t      '--' + OPENING_LONG_BRACKET,\n\t      CLOSING_LONG_BRACKET,\n\t      {\n\t        contains: [LONG_BRACKETS],\n\t        relevance: 10\n\t      }\n\t    )\n\t  ];\n\t  return {\n\t    lexemes: hljs.UNDERSCORE_IDENT_RE,\n\t    keywords: {\n\t      keyword:\n\t        'and break do else elseif end false for if in local nil not or repeat return then ' +\n\t        'true until while',\n\t      built_in:\n\t        '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' +\n\t        'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' +\n\t        'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' +\n\t        'io math os package string table'\n\t    },\n\t    contains: COMMENTS.concat([\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: '\\\\)',\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', endsWithParent: true,\n\t            contains: COMMENTS\n\t          }\n\t        ].concat(COMMENTS)\n\t      },\n\t      hljs.C_NUMBER_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n\t        contains: [LONG_BRACKETS],\n\t        relevance: 5\n\t      }\n\t    ])\n\t  };\n\t});\n\t\n\thljs.registerLanguage('makefile', function(hljs) {\n\t  var VARIABLE = {\n\t    className: 'variable',\n\t    begin: /\\$\\(/, end: /\\)/,\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t  return {\n\t    aliases: ['mk', 'mak'],\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        begin: /^\\w+\\s*\\W*=/, returnBegin: true,\n\t        relevance: 0,\n\t        starts: {\n\t          className: 'constant',\n\t          end: /\\s*\\W*=/, excludeEnd: true,\n\t          starts: {\n\t            end: /$/,\n\t            relevance: 0,\n\t            contains: [\n\t              VARIABLE\n\t            ]\n\t          }\n\t        }\n\t      },\n\t      {\n\t        className: 'title',\n\t        begin: /^[\\w]+:\\s*$/\n\t      },\n\t      {\n\t        className: 'phony',\n\t        begin: /^\\.PHONY:/, end: /$/,\n\t        keywords: '.PHONY', lexemes: /[\\.\\w]+/\n\t      },\n\t      {\n\t        begin: /^\\t+/, end: /$/,\n\t        relevance: 0,\n\t        contains: [\n\t          hljs.QUOTE_STRING_MODE,\n\t          VARIABLE\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('mathematica', function(hljs) {\n\t  return {\n\t    aliases: ['mma'],\n\t    lexemes: '(\\\\$|\\\\b)' + hljs.IDENT_RE + '\\\\b',\n\t    keywords: 'AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis ' +\n\t      'BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering ' +\n\t      'C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements ' +\n\t      'ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition ' +\n\t      'D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform ' +\n\t      'DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions ' +\n\t      'E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution ' +\n\t      'FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve ' +\n\t      'FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance ' +\n\t      'GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion ' +\n\t      'GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution ' +\n\t      'HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData ' +\n\t      'I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction ' +\n\t      'InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess ' +\n\t      'JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition ' +\n\t      'K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter ' +\n\t      'Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions ' +\n\t      'LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy ' +\n\t      'MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution ' +\n\t      'N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator ' +\n\t      'NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot ' +\n\t      'O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues ' +\n\t      'PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList ' +\n\t      'PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions ' +\n\t      'QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder ' +\n\t      'RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity ' +\n\t      'SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity ' +\n\t      'SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders ' +\n\t      'SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub ' +\n\t      'Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine ' +\n\t      'Transparent ' +\n\t      'UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd ' +\n\t      'V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution ' +\n\t      'WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian ' +\n\t      'XMLElement XMLObject Xnor Xor ' +\n\t      'Yellow YuleDissimilarity ' +\n\t      'ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform ' +\n\t      '$Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber',\n\t    contains: [\n\t      {\n\t        className: \"comment\",\n\t        begin: /\\(\\*/, end: /\\*\\)/\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'list',\n\t        begin: /\\{/, end: /\\}/,\n\t        illegal: /:/\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('matlab', function(hljs) {\n\t  var COMMON_CONTAINS = [\n\t    hljs.C_NUMBER_MODE,\n\t    {\n\t      className: 'string',\n\t      begin: '\\'', end: '\\'',\n\t      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n\t    }\n\t  ];\n\t  var TRANSPOSE = {\n\t    relevance: 0,\n\t    contains: [\n\t      {\n\t        className: 'operator', begin: /'['\\.]*/\n\t      }\n\t    ]\n\t  };\n\t\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        'break case catch classdef continue else elseif end enumerated events for function ' +\n\t        'global if methods otherwise parfor persistent properties return spmd switch try while',\n\t      built_in:\n\t        'sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan ' +\n\t        'atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot ' +\n\t        'cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog ' +\n\t        'realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal ' +\n\t        'cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli ' +\n\t        'besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma ' +\n\t        'gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms ' +\n\t        'nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones ' +\n\t        'eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ' +\n\t        'ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril ' +\n\t        'triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute ' +\n\t        'shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan ' +\n\t        'isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal ' +\n\t        'rosser toeplitz vander wilkinson'\n\t    },\n\t    illegal: '(//|\"|#|/\\\\*|\\\\s+/\\\\w+)',\n\t    contains: [\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: '$',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t              className: 'params',\n\t              begin: '\\\\(', end: '\\\\)'\n\t          },\n\t          {\n\t              className: 'params',\n\t              begin: '\\\\[', end: '\\\\]'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        begin: /[a-zA-Z_][a-zA-Z_0-9]*'['\\.]*/,\n\t        returnBegin: true,\n\t        relevance: 0,\n\t        contains: [\n\t          {begin: /[a-zA-Z_][a-zA-Z_0-9]*/, relevance: 0},\n\t          TRANSPOSE.contains[0]\n\t        ]\n\t      },\n\t      {\n\t        className: 'matrix',\n\t        begin: '\\\\[', end: '\\\\]',\n\t        contains: COMMON_CONTAINS,\n\t        relevance: 0,\n\t        starts: TRANSPOSE\n\t      },\n\t      {\n\t        className: 'cell',\n\t        begin: '\\\\{', end: /}/,\n\t        contains: COMMON_CONTAINS,\n\t        relevance: 0,\n\t        starts: TRANSPOSE\n\t      },\n\t      {\n\t        // transpose operators at the end of a function call\n\t        begin: /\\)/,\n\t        relevance: 0,\n\t        starts: TRANSPOSE\n\t      },\n\t      hljs.COMMENT('^\\\\s*\\\\%\\\\{\\\\s*$', '^\\\\s*\\\\%\\\\}\\\\s*$'),\n\t      hljs.COMMENT('\\\\%', '$')\n\t    ].concat(COMMON_CONTAINS)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('mel', function(hljs) {\n\t  return {\n\t    keywords:\n\t      'int float string vector matrix if else switch case default while do for in break ' +\n\t      'continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic ' +\n\t      'addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey ' +\n\t      'affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve ' +\n\t      'alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor ' +\n\t      'animDisplay animView annotate appendStringArray applicationName applyAttrPreset ' +\n\t      'applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx ' +\n\t      'artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu ' +\n\t      'artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand ' +\n\t      'assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface ' +\n\t      'attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu ' +\n\t      'attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp ' +\n\t      'attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery ' +\n\t      'autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults ' +\n\t      'bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership ' +\n\t      'bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType ' +\n\t      'boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu ' +\n\t      'buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge ' +\n\t      'cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch ' +\n\t      'catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox ' +\n\t      'character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp ' +\n\t      'checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip ' +\n\t      'clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore ' +\n\t      'closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter ' +\n\t      'cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color ' +\n\t      'colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp ' +\n\t      'colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem ' +\n\t      'componentEditor compositingInterop computePolysetVolume condition cone confirmDialog ' +\n\t      'connectAttr connectControl connectDynamic connectJoint connectionInfo constrain ' +\n\t      'constrainValue constructionHistory container containsMultibyte contextInfo control ' +\n\t      'convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation ' +\n\t      'convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache ' +\n\t      'cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel ' +\n\t      'cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver ' +\n\t      'cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor ' +\n\t      'createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer ' +\n\t      'createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse ' +\n\t      'currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx ' +\n\t      'curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface ' +\n\t      'curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox ' +\n\t      'defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete ' +\n\t      'deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes ' +\n\t      'delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo ' +\n\t      'dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable ' +\n\t      'disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected ' +\n\t      'displayColor displayCull displayLevelOfDetail displayPref displayRGBColor ' +\n\t      'displaySmoothness displayStats displayString displaySurface distanceDimContext ' +\n\t      'distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct ' +\n\t      'doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator ' +\n\t      'duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression ' +\n\t      'dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor ' +\n\t      'dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers ' +\n\t      'editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor ' +\n\t      'editorTemplate effector emit emitter enableDevice encodeString endString endsWith env ' +\n\t      'equivalent equivalentTol erf error eval evalDeferred evalEcho event ' +\n\t      'exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp ' +\n\t      'expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof ' +\n\t      'fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo ' +\n\t      'filetest filletCurve filter filterCurve filterExpand filterStudioImport ' +\n\t      'findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster ' +\n\t      'finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar ' +\n\t      'floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo ' +\n\t      'fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint ' +\n\t      'frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss ' +\n\t      'geometryConstraint getApplicationVersionAsFloat getAttr getClassification ' +\n\t      'getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes ' +\n\t      'getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender ' +\n\t      'glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl ' +\n\t      'gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid ' +\n\t      'gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap ' +\n\t      'HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor ' +\n\t      'HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached ' +\n\t      'HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel ' +\n\t      'headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey ' +\n\t      'hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender ' +\n\t      'hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox ' +\n\t      'iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ' +\n\t      'ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ' +\n\t      'ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform ' +\n\t      'insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance ' +\n\t      'instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp ' +\n\t      'interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf ' +\n\t      'isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect ' +\n\t      'itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx ' +\n\t      'jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner ' +\n\t      'keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx ' +\n\t      'keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx ' +\n\t      'keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx ' +\n\t      'keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor ' +\n\t      'layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList ' +\n\t      'lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep ' +\n\t      'listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory ' +\n\t      'listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation ' +\n\t      'listNodeTypes listPanelCategories listRelatives listSets listTransforms ' +\n\t      'listUnselected listerEditor loadFluid loadNewShelf loadPlugin ' +\n\t      'loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log ' +\n\t      'longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive ' +\n\t      'makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext ' +\n\t      'manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx ' +\n\t      'manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout ' +\n\t      'menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp ' +\n\t      'mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move ' +\n\t      'moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute ' +\n\t      'nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast ' +\n\t      'nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint ' +\n\t      'normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect ' +\n\t      'nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref ' +\n\t      'nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType ' +\n\t      'objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface ' +\n\t      'offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit ' +\n\t      'orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier ' +\n\t      'paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration ' +\n\t      'panelHistory paramDimContext paramDimension paramLocator parent parentConstraint ' +\n\t      'particle particleExists particleInstancer particleRenderInfo partition pasteKey ' +\n\t      'pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture ' +\n\t      'pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo ' +\n\t      'pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult ' +\n\t      'pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend ' +\n\t      'polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal ' +\n\t      'polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge ' +\n\t      'polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge ' +\n\t      'polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet ' +\n\t      'polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet ' +\n\t      'polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection ' +\n\t      'polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge ' +\n\t      'polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet ' +\n\t      'polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix ' +\n\t      'polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut ' +\n\t      'polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet ' +\n\t      'polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge ' +\n\t      'polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex ' +\n\t      'polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection ' +\n\t      'polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection ' +\n\t      'polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint ' +\n\t      'polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate ' +\n\t      'polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge ' +\n\t      'polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing ' +\n\t      'polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet ' +\n\t      'polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace ' +\n\t      'popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer ' +\n\t      'projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx ' +\n\t      'propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd ' +\n\t      'python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection ' +\n\t      'radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl ' +\n\t      'readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference ' +\n\t      'referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE ' +\n\t      'registerPluginResource rehash reloadImage removeJoint removeMultiInstance ' +\n\t      'removePanelCategory rename renameAttr renameSelectionList renameUI render ' +\n\t      'renderGlobalsNode renderInfo renderLayerButton renderLayerParent ' +\n\t      'renderLayerPostProcess renderLayerUnparent renderManip renderPartition ' +\n\t      'renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor ' +\n\t      'renderWindowSelectContext renderer reorder reorderDeformers requires reroot ' +\n\t      'resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget ' +\n\t      'reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx ' +\n\t      'rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout ' +\n\t      'runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage ' +\n\t      'saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale ' +\n\t      'scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor ' +\n\t      'sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable ' +\n\t      'scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt ' +\n\t      'searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey ' +\n\t      'selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType ' +\n\t      'selectedNodes selectionConnection separator setAttr setAttrEnumResource ' +\n\t      'setAttrMapping setAttrNiceNameResource setConstraintRestPosition ' +\n\t      'setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr ' +\n\t      'setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe ' +\n\t      'setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag ' +\n\t      'setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject ' +\n\t      'setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets ' +\n\t      'shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare ' +\n\t      'shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField ' +\n\t      'shortNameOf showHelp showHidden showManipCtx showSelectionInTitle ' +\n\t      'showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface ' +\n\t      'size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep ' +\n\t      'snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound ' +\n\t      'soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort ' +\n\t      'spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString ' +\n\t      'startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp ' +\n\t      'stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex ' +\n\t      'stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex ' +\n\t      'stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString ' +\n\t      'stringToStringArray strip stripPrefixFromName stroke subdAutoProjection ' +\n\t      'subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV ' +\n\t      'subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror ' +\n\t      'subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease ' +\n\t      'subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring ' +\n\t      'surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton ' +\n\t      'symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext ' +\n\t      'texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext ' +\n\t      'texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text ' +\n\t      'textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList ' +\n\t      'textToShelf textureDisplacePlane textureHairColor texturePlacementContext ' +\n\t      'textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath ' +\n\t      'toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower ' +\n\t      'toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper ' +\n\t      'trace track trackCtx transferAttributes transformCompare transformLimits translator ' +\n\t      'trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence ' +\n\t      'twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit ' +\n\t      'unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink ' +\n\t      'uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane ' +\n\t      'viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex ' +\n\t      'waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire ' +\n\t      'wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform',\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.C_NUMBER_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '`', end: '`',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        variants: [\n\t          {begin: '\\\\$\\\\d'},\n\t          {begin: '[\\\\$\\\\%\\\\@](\\\\^\\\\w\\\\b|#\\\\w+|[^\\\\s\\\\w{]|{\\\\w+}|\\\\w+)'},\n\t          {begin: '\\\\*(\\\\^\\\\w\\\\b|#\\\\w+|[^\\\\s\\\\w{]|{\\\\w+}|\\\\w+)', relevance: 0}\n\t        ]\n\t      },\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('mercury', function(hljs) {\n\t  var KEYWORDS = {\n\t    keyword:\n\t      'module use_module import_module include_module end_module initialise ' +\n\t      'mutable initialize finalize finalise interface implementation pred ' +\n\t      'mode func type inst solver any_pred any_func is semidet det nondet ' +\n\t      'multi erroneous failure cc_nondet cc_multi typeclass instance where ' +\n\t      'pragma promise external trace atomic or_else require_complete_switch ' +\n\t      'require_det require_semidet require_multi require_nondet ' +\n\t      'require_cc_multi require_cc_nondet require_erroneous require_failure',\n\t    pragma:\n\t      'inline no_inline type_spec source_file fact_table obsolete memo ' +\n\t      'loop_check minimal_model terminates does_not_terminate ' +\n\t      'check_termination promise_equivalent_clauses',\n\t    preprocessor:\n\t      'foreign_proc foreign_decl foreign_code foreign_type ' +\n\t      'foreign_import_module foreign_export_enum foreign_export ' +\n\t      'foreign_enum may_call_mercury will_not_call_mercury thread_safe ' +\n\t      'not_thread_safe maybe_thread_safe promise_pure promise_semipure ' +\n\t      'tabled_for_io local untrailed trailed attach_to_io_state ' +\n\t      'can_pass_as_mercury_type stable will_not_throw_exception ' +\n\t      'may_modify_trail will_not_modify_trail may_duplicate ' +\n\t      'may_not_duplicate affects_liveness does_not_affect_liveness ' +\n\t      'doesnt_affect_liveness no_sharing unknown_sharing sharing',\n\t    built_in:\n\t      'some all not if then else true fail false try catch catch_any ' +\n\t      'semidet_true semidet_false semidet_fail impure_true impure semipure'\n\t  };\n\t\n\t  var TODO = {\n\t    className: 'label',\n\t    begin: 'XXX', end: '$', endsWithParent: true,\n\t    relevance: 0\n\t  };\n\t  var COMMENT = hljs.inherit(hljs.C_LINE_COMMENT_MODE, {begin: '%'});\n\t  var CCOMMENT = hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {relevance: 0});\n\t  COMMENT.contains.push(TODO);\n\t  CCOMMENT.contains.push(TODO);\n\t\n\t  var NUMCODE = {\n\t    className: 'number',\n\t    begin: \"0'.\\\\|0[box][0-9a-fA-F]*\"\n\t  };\n\t\n\t  var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, {relevance: 0});\n\t  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {relevance: 0});\n\t  var STRING_FMT = {\n\t    className: 'constant',\n\t    begin: '\\\\\\\\[abfnrtv]\\\\|\\\\\\\\x[0-9a-fA-F]*\\\\\\\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]',\n\t    relevance: 0\n\t  };\n\t  STRING.contains.push(STRING_FMT);\n\t\n\t  var IMPLICATION = {\n\t    className: 'built_in',\n\t    variants: [\n\t      {begin: '<=>'},\n\t      {begin: '<=', relevance: 0},\n\t      {begin: '=>', relevance: 0},\n\t      {begin: '/\\\\\\\\'},\n\t      {begin: '\\\\\\\\/'}\n\t    ]\n\t  };\n\t\n\t  var HEAD_BODY_CONJUNCTION = {\n\t    className: 'built_in',\n\t    variants: [\n\t      {begin: ':-\\\\|-->'},\n\t      {begin: '=', relevance: 0}\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['m', 'moo'],\n\t    keywords: KEYWORDS,\n\t    contains: [\n\t      IMPLICATION,\n\t      HEAD_BODY_CONJUNCTION,\n\t      COMMENT,\n\t      CCOMMENT,\n\t      NUMCODE,\n\t      hljs.NUMBER_MODE,\n\t      ATOM,\n\t      STRING,\n\t      {begin: /:-/} // relevance booster\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('mizar', function(hljs) {\n\t  return {\n\t    keywords:\n\t      'environ vocabularies notations constructors definitions ' +\n\t      'registrations theorems schemes requirements begin end definition ' +\n\t      'registration cluster existence pred func defpred deffunc theorem ' +\n\t      'proof let take assume then thus hence ex for st holds consider ' +\n\t      'reconsider such that and in provided of as from be being by means ' +\n\t      'equals implies iff redefine define now not or attr is mode ' +\n\t      'suppose per cases set thesis contradiction scheme reserve struct ' +\n\t      'correctness compatibility coherence symmetry assymetry ' +\n\t      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\n\t      'idempotence involutiveness projectivity',\n\t    contains: [\n\t      hljs.COMMENT('::', '$')\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('perl', function(hljs) {\n\t  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n\t    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n\t    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n\t    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n\t    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n\t    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n\t    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n\t    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n\t    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n\t    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n\t    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n\t    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n\t    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n\t    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n\t    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n\t    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n\t    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n\t    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n\t    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: '[$@]\\\\{', end: '\\\\}',\n\t    keywords: PERL_KEYWORDS\n\t  };\n\t  var METHOD = {\n\t    begin: '->{', end: '}'\n\t    // contains defined later\n\t  };\n\t  var VAR = {\n\t    className: 'variable',\n\t    variants: [\n\t      {begin: /\\$\\d/},\n\t      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n\t      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n\t    ]\n\t  };\n\t  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n\t  var PERL_DEFAULT_CONTAINS = [\n\t    VAR,\n\t    hljs.HASH_COMMENT_MODE,\n\t    hljs.COMMENT(\n\t      '^\\\\=\\\\w',\n\t      '\\\\=cut',\n\t      {\n\t        endsWithParent: true\n\t      }\n\t    ),\n\t    METHOD,\n\t    {\n\t      className: 'string',\n\t      contains: STRING_CONTAINS,\n\t      variants: [\n\t        {\n\t          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: 'qw\\\\s+q', end: 'q',\n\t          relevance: 5\n\t        },\n\t        {\n\t          begin: '\\'', end: '\\'',\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: '\"', end: '\"'\n\t        },\n\t        {\n\t          begin: '`', end: '`',\n\t          contains: [hljs.BACKSLASH_ESCAPE]\n\t        },\n\t        {\n\t          begin: '{\\\\w+}',\n\t          contains: [],\n\t          relevance: 0\n\t        },\n\t        {\n\t          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n\t          contains: [],\n\t          relevance: 0\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'number',\n\t      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n\t      relevance: 0\n\t    },\n\t    { // regexp container\n\t      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n\t      keywords: 'split return print reverse grep',\n\t      relevance: 0,\n\t      contains: [\n\t        hljs.HASH_COMMENT_MODE,\n\t        {\n\t          className: 'regexp',\n\t          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n\t          relevance: 10\n\t        },\n\t        {\n\t          className: 'regexp',\n\t          begin: '(m|qr)?/', end: '/[a-z]*',\n\t          contains: [hljs.BACKSLASH_ESCAPE],\n\t          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n\t        }\n\t      ]\n\t    },\n\t    {\n\t      className: 'sub',\n\t      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n\t      relevance: 5\n\t    },\n\t    {\n\t      className: 'operator',\n\t      begin: '-\\\\w\\\\b',\n\t      relevance: 0\n\t    },\n\t    {\n\t      begin: \"^__DATA__$\",\n\t      end: \"^__END__$\",\n\t      subLanguage: 'mojolicious',\n\t      contains: [\n\t        {\n\t            begin: \"^@@.*\",\n\t            end: \"$\",\n\t            className: \"comment\"\n\t        }\n\t      ]\n\t    }\n\t  ];\n\t  SUBST.contains = PERL_DEFAULT_CONTAINS;\n\t  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\t\n\t  return {\n\t    aliases: ['pl'],\n\t    keywords: PERL_KEYWORDS,\n\t    contains: PERL_DEFAULT_CONTAINS\n\t  };\n\t});\n\t\n\thljs.registerLanguage('mojolicious', function(hljs) {\n\t  return {\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '^__(END|DATA)__$'\n\t      },\n\t    // mojolicious line\n\t      {\n\t        begin: \"^\\\\s*%{1,2}={0,2}\", end: '$',\n\t        subLanguage: 'perl'\n\t      },\n\t    // mojolicious block\n\t      {\n\t        begin: \"<%{1,2}={0,2}\",\n\t        end: \"={0,1}%>\",\n\t        subLanguage: 'perl',\n\t        excludeBegin: true,\n\t        excludeEnd: true\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('monkey', function(hljs) {\n\t  var NUMBER = {\n\t    className: 'number', relevance: 0,\n\t    variants: [\n\t      {\n\t        begin: '[$][a-fA-F0-9]+'\n\t      },\n\t      hljs.NUMBER_MODE\n\t    ]\n\t  };\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword: 'public private property continue exit extern new try catch ' +\n\t        'eachin not abstract final select case default const local global field ' +\n\t        'end if then else elseif endif while wend repeat until forever for to step next return module inline throw',\n\t\n\t      built_in: 'DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil ' +\n\t        'Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI',\n\t\n\t      literal: 'true false null and or shl shr mod'\n\t    },\n\t    contains: [\n\t      hljs.COMMENT('#rem', '#end'),\n\t      hljs.COMMENT(\n\t        \"'\",\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function method', end: '[(=:]|$',\n\t        illegal: /\\n/,\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '$',\n\t        contains: [\n\t          {\n\t            beginKeywords: 'extends implements'\n\t          },\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '\\\\b(self|super)\\\\b'\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        beginKeywords: 'import',\n\t        end: '$'\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '\\\\s*#', end: '$',\n\t        keywords: 'if else elseif endif end then'\n\t      },\n\t      {\n\t        className: 'pi',\n\t        begin: '^\\\\s*strict\\\\b'\n\t      },\n\t      {\n\t        beginKeywords: 'alias', end: '=',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      NUMBER\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('nginx', function(hljs) {\n\t  var VAR = {\n\t    className: 'variable',\n\t    variants: [\n\t      {begin: /\\$\\d+/},\n\t      {begin: /\\$\\{/, end: /}/},\n\t      {begin: '[\\\\$\\\\@]' + hljs.UNDERSCORE_IDENT_RE}\n\t    ]\n\t  };\n\t  var DEFAULT = {\n\t    endsWithParent: true,\n\t    lexemes: '[a-z/_]+',\n\t    keywords: {\n\t      built_in:\n\t        'on off yes no true false none blocked debug info notice warn error crit ' +\n\t        'select break last permanent redirect kqueue rtsig epoll poll /dev/poll'\n\t    },\n\t    relevance: 0,\n\t    illegal: '=>',\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        className: 'string',\n\t        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n\t        variants: [\n\t          {begin: /\"/, end: /\"/},\n\t          {begin: /'/, end: /'/}\n\t        ]\n\t      },\n\t      {\n\t        className: 'url',\n\t        begin: '([a-z]+):/', end: '\\\\s', endsWithParent: true, excludeEnd: true,\n\t        contains: [VAR]\n\t      },\n\t      {\n\t        className: 'regexp',\n\t        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n\t        variants: [\n\t          {begin: \"\\\\s\\\\^\", end: \"\\\\s|{|;\", returnEnd: true},\n\t          // regexp locations (~, ~*)\n\t          {begin: \"~\\\\*?\\\\s+\", end: \"\\\\s|{|;\", returnEnd: true},\n\t          // *.example.com\n\t          {begin: \"\\\\*(\\\\.[a-z\\\\-]+)+\"},\n\t          // sub.example.*\n\t          {begin: \"([a-z\\\\-]+\\\\.)+\\\\*\"}\n\t        ]\n\t      },\n\t      // IP\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n\t      },\n\t      // units\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b\\\\d+[kKmMgGdshdwy]*\\\\b',\n\t        relevance: 0\n\t      },\n\t      VAR\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['nginxconf'],\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s', end: ';|{', returnBegin: true,\n\t        contains: [\n\t          {\n\t            className: 'title',\n\t            begin: hljs.UNDERSCORE_IDENT_RE,\n\t            starts: DEFAULT\n\t          }\n\t        ],\n\t        relevance: 0\n\t      }\n\t    ],\n\t    illegal: '[^\\\\s\\\\}]'\n\t  };\n\t});\n\t\n\thljs.registerLanguage('nimrod', function(hljs) {\n\t  return {\n\t    aliases: ['nim'],\n\t    keywords: {\n\t      keyword: 'addr and as asm bind block break|0 case|0 cast const|0 continue|0 converter discard distinct|10 div do elif else|0 end|0 enum|0 except export finally for from generic if|0 import|0 in include|0 interface is isnot|10 iterator|10 let|0 macro method|10 mixin mod nil not notin|10 object|0 of or out proc|10 ptr raise ref|10 return shl shr static template|10 try|0 tuple type|0 using|0 var|0 when while|0 with without xor yield',\n\t      literal: 'shared guarded stdin stdout stderr result|10 true false'\n\t    },\n\t    contains: [ {\n\t        className: 'decorator', // Actually pragma\n\t        begin: /{\\./,\n\t        end: /\\.}/,\n\t        relevance: 10\n\t      }, {\n\t        className: 'string',\n\t        begin: /[a-zA-Z]\\w*\"/,\n\t        end: /\"/,\n\t        contains: [{begin: /\"\"/}]\n\t      }, {\n\t        className: 'string',\n\t        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n\t        end: /\"\"\"/\n\t      },\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'type',\n\t        begin: /\\b[A-Z]\\w+\\b/,\n\t        relevance: 0\n\t      }, {\n\t        className: 'type',\n\t        begin: /\\b(int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|float32|float64|bool|char|string|cstring|pointer|expr|stmt|void|auto|any|range|array|openarray|varargs|seq|set|clong|culong|cchar|cschar|cshort|cint|csize|clonglong|cfloat|cdouble|clongdouble|cuchar|cushort|cuint|culonglong|cstringarray|semistatic)\\b/\n\t      }, {\n\t        className: 'number',\n\t        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/,\n\t        relevance: 0\n\t      }, {\n\t        className: 'number',\n\t        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/,\n\t        relevance: 0\n\t      }, {\n\t        className: 'number',\n\t        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/,\n\t        relevance: 0\n\t      }, {\n\t        className: 'number',\n\t        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/,\n\t        relevance: 0\n\t      },\n\t      hljs.HASH_COMMENT_MODE\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('nix', function(hljs) {\n\t  var NIX_KEYWORDS = {\n\t    keyword: 'rec with let in inherit assert if else then',\n\t    constant: 'true false or and null',\n\t    built_in:\n\t      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw toString derivation'\n\t  };\n\t  var ANTIQUOTE = {\n\t    className: 'subst',\n\t    begin: /\\$\\{/,\n\t    end: /}/,\n\t    keywords: NIX_KEYWORDS\n\t  };\n\t  var ATTRS = {\n\t    className: 'variable',\n\t    // TODO: we have to figure out a way how to exclude \\s*=\n\t    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n\t    relevance: 0\n\t  };\n\t  var SINGLE_QUOTE = {\n\t    className: 'string',\n\t    begin: \"''\",\n\t    end: \"''\",\n\t    contains: [\n\t      ANTIQUOTE\n\t    ]\n\t  };\n\t  var DOUBLE_QUOTE = {\n\t    className: 'string',\n\t    begin: '\"',\n\t    end: '\"',\n\t    contains: [\n\t      ANTIQUOTE\n\t    ]\n\t  };\n\t  var EXPRESSIONS = [\n\t    hljs.NUMBER_MODE,\n\t    hljs.HASH_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    SINGLE_QUOTE,\n\t    DOUBLE_QUOTE,\n\t    ATTRS\n\t  ];\n\t  ANTIQUOTE.contains = EXPRESSIONS;\n\t  return {\n\t    aliases: [\"nixos\"],\n\t    keywords: NIX_KEYWORDS,\n\t    contains: EXPRESSIONS\n\t  };\n\t});\n\t\n\thljs.registerLanguage('nsis', function(hljs) {\n\t  var CONSTANTS = {\n\t    className: 'symbol',\n\t    begin: '\\\\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)'\n\t  };\n\t\n\t  var DEFINES = {\n\t    // ${defines}\n\t    className: 'constant',\n\t    begin: '\\\\$+{[a-zA-Z0-9_]+}'\n\t  };\n\t\n\t  var VARIABLES = {\n\t    // $variables\n\t    className: 'variable',\n\t    begin: '\\\\$+[a-zA-Z0-9_]+',\n\t    illegal: '\\\\(\\\\){}'\n\t  };\n\t\n\t  var LANGUAGES = {\n\t    // $(language_strings)\n\t    className: 'constant',\n\t    begin: '\\\\$+\\\\([a-zA-Z0-9_]+\\\\)'\n\t  };\n\t\n\t  var PARAMETERS = {\n\t    // command parameters\n\t    className: 'params',\n\t    begin: '(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)'\n\t  };\n\t\n\t  var COMPILER ={\n\t    // !compiler_flags\n\t    className: 'constant',\n\t    begin: '\\\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)'\n\t  };\n\t\n\t  return {\n\t    case_insensitive: false,\n\t    keywords: {\n\t      keyword:\n\t      'Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText IntCmp IntCmpU IntFmt IntOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetPluginUnload SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption SubSectionEnd Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegStr WriteUninstaller XPStyle',\n\t      literal:\n\t      'admin all auto both colored current false force hide highest lastused leave listonly none normal notset off on open print show silent silentlog smooth textonly true user '\n\t    },\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\"', end: '\"',\n\t        illegal: '\\\\n',\n\t        contains: [\n\t          { // $\\n, $\\r, $\\t, $$\n\t            className: 'symbol',\n\t            begin: '\\\\$(\\\\\\\\(n|r|t)|\\\\$)'\n\t          },\n\t          CONSTANTS,\n\t          DEFINES,\n\t          VARIABLES,\n\t          LANGUAGES\n\t        ]\n\t      },\n\t      hljs.COMMENT(\n\t        ';',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'Function PageEx Section SectionGroup SubSection', end: '$'\n\t      },\n\t      COMPILER,\n\t      DEFINES,\n\t      VARIABLES,\n\t      LANGUAGES,\n\t      PARAMETERS,\n\t      hljs.NUMBER_MODE,\n\t      { // plug::ins\n\t        className: 'literal',\n\t        begin: hljs.IDENT_RE + '::' + hljs.IDENT_RE\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('objectivec', function(hljs) {\n\t  var API_CLASS = {\n\t    className: 'built_in',\n\t    begin: '(AV|CA|CF|CG|CI|MK|MP|NS|UI)\\\\w+',\n\t  };\n\t  var OBJC_KEYWORDS = {\n\t    keyword:\n\t      'int float while char export sizeof typedef const struct for union ' +\n\t      'unsigned long volatile static bool mutable if do return goto void ' +\n\t      'enum else break extern asm case short default double register explicit ' +\n\t      'signed typename this switch continue wchar_t inline readonly assign ' +\n\t      'readwrite self @synchronized id typeof ' +\n\t      'nonatomic super unichar IBOutlet IBAction strong weak copy ' +\n\t      'in out inout bycopy byref oneway __strong __weak __block __autoreleasing ' +\n\t      '@private @protected @public @try @property @end @throw @catch @finally ' +\n\t      '@autoreleasepool @synthesize @dynamic @selector @optional @required',\n\t    literal:\n\t      'false true FALSE TRUE nil YES NO NULL',\n\t    built_in:\n\t      'BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once'\n\t  };\n\t  var LEXEMES = /[a-zA-Z@][a-zA-Z0-9_]*/;\n\t  var CLASS_KEYWORDS = '@interface @class @protocol @implementation';\n\t  return {\n\t    aliases: ['mm', 'objc', 'obj-c'],\n\t    keywords: OBJC_KEYWORDS,\n\t    lexemes: LEXEMES,\n\t    illegal: '</',\n\t    contains: [\n\t      API_CLASS,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        variants: [\n\t          {\n\t            begin: '@\"', end: '\"',\n\t            illegal: '\\\\n',\n\t            contains: [hljs.BACKSLASH_ESCAPE]\n\t          },\n\t          {\n\t            begin: '\\'', end: '[^\\\\\\\\]\\'',\n\t            illegal: '[^\\\\\\\\][^\\']'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#',\n\t        end: '$',\n\t        contains: [\n\t          {\n\t            className: 'title',\n\t            variants: [\n\t              { begin: '\\\"', end: '\\\"' },\n\t              { begin: '<', end: '>' }\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        begin: '(' + CLASS_KEYWORDS.split(' ').join('|') + ')\\\\b', end: '({|$)', excludeEnd: true,\n\t        keywords: CLASS_KEYWORDS, lexemes: LEXEMES,\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '\\\\.'+hljs.UNDERSCORE_IDENT_RE,\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('ocaml', function(hljs) {\n\t  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n\t  return {\n\t    aliases: ['ml'],\n\t    keywords: {\n\t      keyword:\n\t        'and as assert asr begin class constraint do done downto else end ' +\n\t        'exception external for fun function functor if in include ' +\n\t        'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +\n\t        'mod module mutable new object of open! open or private rec sig struct ' +\n\t        'then to try type val! val virtual when while with ' +\n\t        /* camlp4 */\n\t        'parser value',\n\t      built_in:\n\t        /* built-in types */\n\t        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\n\t        /* (some) types in Pervasives */\n\t        'in_channel out_channel ref',\n\t      literal:\n\t        'true false'\n\t    },\n\t    illegal: /\\/\\/|>>/,\n\t    lexemes: '[a-z_]\\\\w*!?',\n\t    contains: [\n\t      {\n\t        className: 'literal',\n\t        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)'\n\t      },\n\t      hljs.COMMENT(\n\t        '\\\\(\\\\*',\n\t        '\\\\*\\\\)',\n\t        {\n\t          contains: ['self']\n\t        }\n\t      ),\n\t      { /* type variable */\n\t        className: 'symbol',\n\t        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n\t        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\t      },\n\t      { /* polymorphic variant */\n\t        className: 'tag',\n\t        begin: '`[A-Z][\\\\w\\']*'\n\t      },\n\t      { /* module or constructor */\n\t        className: 'type',\n\t        begin: '\\\\b[A-Z][\\\\w\\']*',\n\t        relevance: 0\n\t      },\n\t      { /* don't color identifiers, but safely catch all identifiers with '*/\n\t        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n\t      },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'char', relevance: 0}),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t      {\n\t        className: 'number',\n\t        begin:\n\t          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n\t          '0[oO][0-7_]+[Lln]?|' +\n\t          '0[bB][01_]+[Lln]?|' +\n\t          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: /[-=]>/ // relevance booster\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('openscad', function(hljs) {\n\t\tvar SPECIAL_VARS = {\n\t\t\tclassName: 'keyword',\n\t\t\tbegin: '\\\\$(f[asn]|t|vp[rtd]|children)'\n\t\t},\n\t\tLITERALS = {\n\t\t\tclassName: 'literal',\n\t\t\tbegin: 'false|true|PI|undef'\n\t\t},\n\t\tNUMBERS = {\n\t\t\tclassName: 'number',\n\t\t\tbegin: '\\\\b\\\\d+(\\\\.\\\\d+)?(e-?\\\\d+)?', //adds 1e5, 1e-10\n\t\t\trelevance: 0\n\t\t},\n\t\tSTRING = hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal: null}),\n\t\tPREPRO = {\n\t\t\tclassName: 'preprocessor',\n\t\t\tkeywords: 'include use',\n\t\t\tbegin: 'include|use <',\n\t\t\tend: '>'\n\t\t},\n\t\tPARAMS = {\n\t\t\tclassName: 'params',\n\t\t\tbegin: '\\\\(', end: '\\\\)',\n\t\t\tcontains: ['self', NUMBERS, STRING, SPECIAL_VARS, LITERALS]\n\t\t},\n\t\tMODIFIERS = {\n\t\t\tclassName: 'built_in',\n\t\t\tbegin: '[*!#%]',\n\t\t\trelevance: 0\n\t\t},\n\t\tFUNCTIONS = {\n\t\t\tclassName: 'function',\n\t\t\tbeginKeywords: 'module function',\n\t\t\tend: '\\\\=|\\\\{',\n\t\t\tcontains: [PARAMS, hljs.UNDERSCORE_TITLE_MODE]\n\t\t};\n\t\n\t\treturn {\n\t\t\taliases: ['scad'],\n\t\t\tkeywords: {\n\t\t\t\tkeyword: 'function module include use for intersection_for if else \\\\%',\n\t\t\t\tliteral: 'false true PI undef',\n\t\t\t\tbuilt_in: 'circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign'\n\t\t\t},\n\t\t\tcontains: [\n\t\t\t\thljs.C_LINE_COMMENT_MODE,\n\t\t\t\thljs.C_BLOCK_COMMENT_MODE,\n\t\t\t\tNUMBERS,\n\t\t\t\tPREPRO,\n\t\t\t\tSTRING,\n\t\t\t\tPARAMS,\n\t\t\t\tSPECIAL_VARS,\n\t\t\t\tMODIFIERS,\n\t\t\t\tFUNCTIONS\n\t\t\t]\n\t\t}\n\t});\n\t\n\thljs.registerLanguage('oxygene', function(hljs) {\n\t  var OXYGENE_KEYWORDS = 'abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue '+\n\t    'create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false '+\n\t    'final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited '+\n\t    'inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of '+\n\t    'old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly '+\n\t    'record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple '+\n\t    'type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal '+\n\t    'register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained';\n\t  var CURLY_COMMENT =  hljs.COMMENT(\n\t    '{',\n\t    '}',\n\t    {\n\t      relevance: 0\n\t    }\n\t  );\n\t  var PAREN_COMMENT = hljs.COMMENT(\n\t    '\\\\(\\\\*',\n\t    '\\\\*\\\\)',\n\t    {\n\t      relevance: 10\n\t    }\n\t  );\n\t  var STRING = {\n\t    className: 'string',\n\t    begin: '\\'', end: '\\'',\n\t    contains: [{begin: '\\'\\''}]\n\t  };\n\t  var CHAR_STRING = {\n\t    className: 'string', begin: '(#\\\\d+)+'\n\t  };\n\t  var FUNCTION = {\n\t    className: 'function',\n\t    beginKeywords: 'function constructor destructor procedure method', end: '[:;]',\n\t    keywords: 'function constructor|10 destructor|10 procedure|10 method|10',\n\t    contains: [\n\t      hljs.TITLE_MODE,\n\t      {\n\t        className: 'params',\n\t        begin: '\\\\(', end: '\\\\)',\n\t        keywords: OXYGENE_KEYWORDS,\n\t        contains: [STRING, CHAR_STRING]\n\t      },\n\t      CURLY_COMMENT, PAREN_COMMENT\n\t    ]\n\t  };\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: OXYGENE_KEYWORDS,\n\t    illegal: '(\"|\\\\$[G-Zg-z]|\\\\/\\\\*|</|=>|->)',\n\t    contains: [\n\t      CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n\t      STRING, CHAR_STRING,\n\t      hljs.NUMBER_MODE,\n\t      FUNCTION,\n\t      {\n\t        className: 'class',\n\t        begin: '=\\\\bclass\\\\b', end: 'end;',\n\t        keywords: OXYGENE_KEYWORDS,\n\t        contains: [\n\t          STRING, CHAR_STRING,\n\t          CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n\t          FUNCTION\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('parser3', function(hljs) {\n\t  var CURLY_SUBCOMMENT = hljs.COMMENT(\n\t    '{',\n\t    '}',\n\t    {\n\t      contains: ['self']\n\t    }\n\t  );\n\t  return {\n\t    subLanguage: 'xml', relevance: 0,\n\t    contains: [\n\t      hljs.COMMENT('^#', '$'),\n\t      hljs.COMMENT(\n\t        '\\\\^rem{',\n\t        '}',\n\t        {\n\t          relevance: 10,\n\t          contains: [\n\t            CURLY_SUBCOMMENT\n\t          ]\n\t        }\n\t      ),\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'title',\n\t        begin: '@[\\\\w\\\\-]+\\\\[[\\\\w^;\\\\-]*\\\\](?:\\\\[[\\\\w^;\\\\-]*\\\\])?(?:.*)$'\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '\\\\$\\\\{?[\\\\w\\\\-\\\\.\\\\:]+\\\\}?'\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\^[\\\\w\\\\-\\\\.\\\\:]+'\n\t      },\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\^#[0-9a-fA-F]+'\n\t      },\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('pf', function(hljs) {\n\t  var MACRO = {\n\t    className: 'variable',\n\t    begin: /\\$[\\w\\d#@][\\w\\d_]*/\n\t  };\n\t  var TABLE = {\n\t    className: 'variable',\n\t    begin: /</, end: />/\n\t  };\n\t  var QUOTE_STRING = {\n\t    className: 'string',\n\t    begin: /\"/, end: /\"/\n\t  };\n\t\n\t  return {\n\t    aliases: ['pf.conf'],\n\t    lexemes: /[a-z0-9_<>-]+/,\n\t    keywords: {\n\t      built_in: /* block match pass are \"actions\" in pf.conf(5), the rest are\n\t                 * lexically similar top-level commands.\n\t                 */\n\t        'block match pass load anchor|5 antispoof|10 set table',\n\t      keyword:\n\t        'in out log quick on rdomain inet inet6 proto from port os to route' +\n\t        'allow-opts divert-packet divert-reply divert-to flags group icmp-type' +\n\t        'icmp6-type label once probability recieved-on rtable prio queue' +\n\t        'tos tag tagged user keep fragment for os drop' +\n\t        'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin' +\n\t        'source-hash static-port' +\n\t        'dup-to reply-to route-to' +\n\t        'parent bandwidth default min max qlimit' +\n\t        'block-policy debug fingerprints hostid limit loginterface optimization' +\n\t        'reassemble ruleset-optimization basic none profile skip state-defaults' +\n\t        'state-policy timeout' +\n\t        'const counters persist' +\n\t        'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy' +\n\t        'source-track global rule max-src-nodes max-src-states max-src-conn' +\n\t        'max-src-conn-rate overload flush' +\n\t        'scrub|5 max-mss min-ttl no-df|10 random-id',\n\t      literal:\n\t        'all any no-route self urpf-failed egress|5 unknown',\n\t    },\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      MACRO,\n\t      TABLE,\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('php', function(hljs) {\n\t  var VARIABLE = {\n\t    className: 'variable', begin: '\\\\$+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*'\n\t  };\n\t  var PREPROCESSOR = {\n\t    className: 'preprocessor', begin: /<\\?(php)?|\\?>/\n\t  };\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],\n\t    variants: [\n\t      {\n\t        begin: 'b\"', end: '\"'\n\t      },\n\t      {\n\t        begin: 'b\\'', end: '\\''\n\t      },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n\t    ]\n\t  };\n\t  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n\t  return {\n\t    aliases: ['php3', 'php4', 'php5', 'php6'],\n\t    case_insensitive: true,\n\t    keywords:\n\t      'and include_once list abstract global private echo interface as static endswitch ' +\n\t      'array null if endwhile or const for endforeach self var while isset public ' +\n\t      'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n\t      'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n\t      'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n\t      'enddeclare final try switch continue endfor endif declare unset true false ' +\n\t      'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n\t      'yield finally',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.COMMENT(\n\t        '/\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          contains: [\n\t            {\n\t              className: 'doctag',\n\t              begin: '@[A-Za-z]+'\n\t            },\n\t            PREPROCESSOR\n\t          ]\n\t        }\n\t      ),\n\t      hljs.COMMENT(\n\t        '__halt_compiler.+?;',\n\t        false,\n\t        {\n\t          endsWithParent: true,\n\t          keywords: '__halt_compiler',\n\t          lexemes: hljs.UNDERSCORE_IDENT_RE\n\t        }\n\t      ),\n\t      {\n\t        className: 'string',\n\t        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      PREPROCESSOR,\n\t      VARIABLE,\n\t      {\n\t        // swallow composed identifiers to avoid parsing them as keywords\n\t        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n\t        illegal: '\\\\$|\\\\[|%',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)',\n\t            contains: [\n\t              'self',\n\t              VARIABLE,\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              STRING,\n\t              NUMBER\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        illegal: /[:\\(\\$\"]/,\n\t        contains: [\n\t          {beginKeywords: 'extends implements'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        beginKeywords: 'namespace', end: ';',\n\t        illegal: /[\\.']/,\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      {\n\t        beginKeywords: 'use', end: ';',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      {\n\t        begin: '=>' // No markup, just a relevance booster\n\t      },\n\t      STRING,\n\t      NUMBER\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('powershell', function(hljs) {\n\t  var backtickEscape = {\n\t    begin: '`[\\\\s\\\\S]',\n\t    relevance: 0\n\t  };\n\t  var dollarEscape = {\n\t    begin: '\\\\$\\\\$[\\\\s\\\\S]',\n\t    relevance: 0\n\t  };\n\t  var VAR = {\n\t    className: 'variable',\n\t    variants: [\n\t      {begin: /\\$[\\w\\d][\\w\\d_:]*/}\n\t    ]\n\t  };\n\t  var QUOTE_STRING = {\n\t    className: 'string',\n\t    begin: /\"/, end: /\"/,\n\t    contains: [\n\t      backtickEscape,\n\t      VAR,\n\t      {\n\t        className: 'variable',\n\t        begin: /\\$[A-z]/, end: /[^A-z]/\n\t      }\n\t    ]\n\t  };\n\t  var APOS_STRING = {\n\t    className: 'string',\n\t    begin: /'/, end: /'/\n\t  };\n\t\n\t  return {\n\t    aliases: ['ps'],\n\t    lexemes: /-?[A-z\\.\\-]+/,\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword: 'if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch',\n\t      literal: '$null $true $false',\n\t      built_in: 'Add-Content Add-History Add-Member Add-PSSnapin Clear-Content Clear-Item Clear-Item Property Clear-Variable Compare-Object ConvertFrom-SecureString Convert-Path ConvertTo-Html ConvertTo-SecureString Copy-Item Copy-ItemProperty Export-Alias Export-Clixml Export-Console Export-Csv ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-Content Get-Credential Get-Culture Get-Date Get-EventLog Get-ExecutionPolicy Get-Help Get-History Get-Host Get-Item Get-ItemProperty Get-Location Get-Member Get-PfxCertificate Get-Process Get-PSDrive Get-PSProvider Get-PSSnapin Get-Service Get-TraceSource Get-UICulture Get-Unique Get-Variable Get-WmiObject Group-Object Import-Alias Import-Clixml Import-Csv Invoke-Expression Invoke-History Invoke-Item Join-Path Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Item New-ItemProperty New-Object New-PSDrive New-Service New-TimeSpan New-Variable Out-Default Out-File Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Remove-Item Remove-ItemProperty Remove-PSDrive Remove-PSSnapin Remove-Variable Rename-Item Rename-ItemProperty Resolve-Path Restart-Service Resume-Service Select-Object Select-String Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-Location Set-PSDebug Set-Service Set-TraceSource Set-Variable Sort-Object Split-Path Start-Service Start-Sleep Start-Transcript Stop-Process Stop-Service Stop-Transcript Suspend-Service Tee-Object Test-Path Trace-Command Update-FormatData Update-TypeData Where-Object Write-Debug Write-Error Write-Host Write-Output Write-Progress Write-Verbose Write-Warning',\n\t      operator: '-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace'\n\t    },\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.NUMBER_MODE,\n\t      QUOTE_STRING,\n\t      APOS_STRING,\n\t      VAR\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('processing', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      keyword: 'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' +\n\t        'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' +\n\t        'Object StringDict StringList Table TableRow XML ' +\n\t        // Java keywords\n\t        'false synchronized int abstract float private char boolean static null if const ' +\n\t        'for true while long throw strictfp finally protected import native final return void ' +\n\t        'enum else break transient new catch instanceof byte super volatile case assert short ' +\n\t        'package default double public try this switch continue throws protected public private',\n\t      constant: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',\n\t      variable: 'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' +\n\t        'keyCode pixels focused frameCount frameRate height width',\n\t      title: 'setup draw',\n\t      built_in: 'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' +\n\t        'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' +\n\t        'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' +\n\t        'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' +\n\t        'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' +\n\t        'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' +\n\t        'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' +\n\t        'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' +\n\t        'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' +\n\t        'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' +\n\t        'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' +\n\t        'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' +\n\t        'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' +\n\t        'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' +\n\t        'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' +\n\t        'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' +\n\t        'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' +\n\t        'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' +\n\t        'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' +\n\t        'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' +\n\t        'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' +\n\t        'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('profile', function(hljs) {\n\t  return {\n\t    contains: [\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'built_in',\n\t        begin: '{', end: '}$',\n\t        excludeBegin: true, excludeEnd: true,\n\t        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'filename',\n\t        begin: '[a-zA-Z_][\\\\da-zA-Z_]+\\\\.[\\\\da-zA-Z_]{1,3}', end: ':',\n\t        excludeEnd: true\n\t      },\n\t      {\n\t        className: 'header',\n\t        begin: '(ncalls|tottime|cumtime)', end: '$',\n\t        keywords: 'ncalls tottime|10 cumtime|10 filename',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'summary',\n\t        begin: 'function calls', end: '$',\n\t        contains: [hljs.C_NUMBER_MODE],\n\t        relevance: 10\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'function',\n\t        begin: '\\\\(', end: '\\\\)$',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ],\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('prolog', function(hljs) {\n\t\n\t  var ATOM = {\n\t\n\t    className: 'atom',\n\t    begin: /[a-z][A-Za-z0-9_]*/,\n\t    relevance: 0\n\t  };\n\t\n\t  var VAR = {\n\t\n\t    className: 'name',\n\t    variants: [\n\t      {begin: /[A-Z][a-zA-Z0-9_]*/},\n\t      {begin: /_[A-Za-z0-9_]*/},\n\t    ],\n\t    relevance: 0\n\t  };\n\t\n\t  var PARENTED = {\n\t\n\t    begin: /\\(/,\n\t    end: /\\)/,\n\t    relevance: 0\n\t  };\n\t\n\t  var LIST = {\n\t\n\t    begin: /\\[/,\n\t    end: /\\]/\n\t  };\n\t\n\t  var LINE_COMMENT = {\n\t\n\t    className: 'comment',\n\t    begin: /%/, end: /$/,\n\t    contains: [hljs.PHRASAL_WORDS_MODE]\n\t  };\n\t\n\t  var BACKTICK_STRING = {\n\t\n\t    className: 'string',\n\t    begin: /`/, end: /`/,\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t\n\t  var CHAR_CODE = {\n\t\n\t    className: 'string', // 0'a etc.\n\t    begin: /0\\'(\\\\\\'|.)/\n\t  };\n\t\n\t  var SPACE_CODE = {\n\t\n\t    className: 'string',\n\t    begin: /0\\'\\\\s/ // 0'\\s\n\t  };\n\t\n\t  var PRED_OP = { // relevance booster\n\t    begin: /:-/\n\t  };\n\t\n\t  var inner = [\n\t\n\t    ATOM,\n\t    VAR,\n\t    PARENTED,\n\t    PRED_OP,\n\t    LIST,\n\t    LINE_COMMENT,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    hljs.QUOTE_STRING_MODE,\n\t    hljs.APOS_STRING_MODE,\n\t    BACKTICK_STRING,\n\t    CHAR_CODE,\n\t    SPACE_CODE,\n\t    hljs.C_NUMBER_MODE\n\t  ];\n\t\n\t  PARENTED.contains = inner;\n\t  LIST.contains = inner;\n\t\n\t  return {\n\t    contains: inner.concat([\n\t      {begin: /\\.$/} // relevance booster\n\t    ])\n\t  };\n\t});\n\t\n\thljs.registerLanguage('protobuf', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      keyword: 'package import option optional required repeated group',\n\t      built_in: 'double float int32 int64 uint32 uint64 sint32 sint64 ' +\n\t        'fixed32 fixed64 sfixed32 sfixed64 bool string bytes',\n\t      literal: 'true false'\n\t    },\n\t    contains: [\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'message enum service', end: /\\{/,\n\t        illegal: /\\n/,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {\n\t            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n\t          })\n\t        ]\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'rpc',\n\t        end: /;/, excludeEnd: true,\n\t        keywords: 'rpc returns'\n\t      },\n\t      {\n\t        className: 'constant',\n\t        begin: /^\\s*[A-Z_]+/,\n\t        end: /\\s*=/, excludeEnd: true\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('puppet', function(hljs) {\n\t\n\t  var PUPPET_KEYWORDS = {\n\t    keyword:\n\t    /* language keywords */\n\t      'and case default else elsif false if in import enherits node or true undef unless main settings $string ',\n\t    literal:\n\t    /* metaparameters */\n\t      'alias audit before loglevel noop require subscribe tag ' +\n\t    /* normal attributes */\n\t      'owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check ' +\n\t      'en_address ip_address realname command environment hour monute month monthday special target weekday '+\n\t      'creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore ' +\n\t      'links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source ' +\n\t      'souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid '+\n\t      'ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel ' +\n\t      'native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options ' +\n\t      'device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use ' +\n\t      'message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform ' +\n\t      'responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running ' +\n\t      'start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age ' +\n\t      'password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled ' +\n\t      'enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist ' +\n\t      'priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey ' +\n\t      'sslverify mounted',\n\t    built_in:\n\t    /* core facts */\n\t      'architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers ' +\n\t      'domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces '+\n\t      'ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion ' +\n\t      'kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease ' +\n\t      'lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major ' +\n\t      'macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease '+\n\t      'operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion '+\n\t      'rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced '+\n\t      'selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime '+\n\t      'uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version'\n\t  };\n\t\n\t  var COMMENT = hljs.COMMENT('#', '$');\n\t\n\t  var IDENT_RE = '([A-Za-z_]|::)(\\\\w|::)*';\n\t\n\t  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE});\n\t\n\t  var VARIABLE = {className: 'variable', begin: '\\\\$' + IDENT_RE};\n\t\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE],\n\t    variants: [\n\t      {begin: /'/, end: /'/},\n\t      {begin: /\"/, end: /\"/}\n\t    ]\n\t  };\n\t\n\t  return {\n\t    aliases: ['pp'],\n\t    contains: [\n\t      COMMENT,\n\t      VARIABLE,\n\t      STRING,\n\t      {\n\t        beginKeywords: 'class', end: '\\\\{|;',\n\t        illegal: /=/,\n\t        contains: [TITLE, COMMENT]\n\t      },\n\t      {\n\t        beginKeywords: 'define', end: /\\{/,\n\t        contains: [\n\t          {\n\t            className: 'title', begin: hljs.IDENT_RE, endsParent: true\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        begin: hljs.IDENT_RE + '\\\\s+\\\\{', returnBegin: true,\n\t        end: /\\S/,\n\t        contains: [\n\t          {\n\t            className: 'name',\n\t            begin: hljs.IDENT_RE\n\t          },\n\t          {\n\t            begin: /\\{/, end: /\\}/,\n\t            keywords: PUPPET_KEYWORDS,\n\t            relevance: 0,\n\t            contains: [\n\t              STRING,\n\t              COMMENT,\n\t              {\n\t                begin:'[a-zA-Z_]+\\\\s*=>'\n\t              },\n\t              {\n\t                className: 'number',\n\t                begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n\t                relevance: 0\n\t              },\n\t              VARIABLE\n\t            ]\n\t          }\n\t        ],\n\t        relevance: 0\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('python', function(hljs) {\n\t  var PROMPT = {\n\t    className: 'prompt',  begin: /^(>>>|\\.\\.\\.) /\n\t  };\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE],\n\t    variants: [\n\t      {\n\t        begin: /(u|b)?r?'''/, end: /'''/,\n\t        contains: [PROMPT],\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n\t        contains: [PROMPT],\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /(u|r|ur)'/, end: /'/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /(u|r|ur)\"/, end: /\"/,\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /(b|br)'/, end: /'/\n\t      },\n\t      {\n\t        begin: /(b|br)\"/, end: /\"/\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE\n\t    ]\n\t  };\n\t  var NUMBER = {\n\t    className: 'number', relevance: 0,\n\t    variants: [\n\t      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n\t      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n\t      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n\t    ]\n\t  };\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: /\\(/, end: /\\)/,\n\t    contains: ['self', PROMPT, NUMBER, STRING]\n\t  };\n\t  return {\n\t    aliases: ['py', 'gyp'],\n\t    keywords: {\n\t      keyword:\n\t        'and elif is global as in if from raise for except finally print import pass return ' +\n\t        'exec else break not with class assert yield try while continue del or def lambda ' +\n\t        'nonlocal|10 None True False',\n\t      built_in:\n\t        'Ellipsis NotImplemented'\n\t    },\n\t    illegal: /(<\\/|->|\\?)/,\n\t    contains: [\n\t      PROMPT,\n\t      NUMBER,\n\t      STRING,\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        variants: [\n\t          {className: 'function', beginKeywords: 'def', relevance: 10},\n\t          {className: 'class', beginKeywords: 'class'}\n\t        ],\n\t        end: /:/,\n\t        illegal: /[${=;\\n,]/,\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n\t      },\n\t      {\n\t        className: 'decorator',\n\t        begin: /^[\\t ]*@/, end: /$/\n\t      },\n\t      {\n\t        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('q', function(hljs) {\n\t  var Q_KEYWORDS = {\n\t  keyword:\n\t    'do while select delete by update from',\n\t  constant:\n\t    '0b 1b',\n\t  built_in:\n\t    'neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum',\n\t  typename:\n\t    '`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid'\n\t  };\n\t  return {\n\t  aliases:['k', 'kdb'],\n\t  keywords: Q_KEYWORDS,\n\t  lexemes: /\\b(`?)[A-Za-z0-9_]+\\b/,\n\t  contains: [\n\t  hljs.C_LINE_COMMENT_MODE,\n\t    hljs.QUOTE_STRING_MODE,\n\t    hljs.C_NUMBER_MODE\n\t     ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('r', function(hljs) {\n\t  var IDENT_RE = '([a-zA-Z]|\\\\.[a-zA-Z.])[a-zA-Z0-9._]*';\n\t\n\t  return {\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      {\n\t        begin: IDENT_RE,\n\t        lexemes: IDENT_RE,\n\t        keywords: {\n\t          keyword:\n\t            'function if in break next repeat else for return switch while try tryCatch ' +\n\t            'stop warning require library attach detach source setMethod setGeneric ' +\n\t            'setGroupGeneric setClass ...',\n\t          literal:\n\t            'NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 ' +\n\t            'NA_complex_|10'\n\t        },\n\t        relevance: 0\n\t      },\n\t      {\n\t        // hex value\n\t        className: 'number',\n\t        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n\t        relevance: 0\n\t      },\n\t      {\n\t        // explicit integer\n\t        className: 'number',\n\t        begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n\t        relevance: 0\n\t      },\n\t      {\n\t        // number with trailing decimal\n\t        className: 'number',\n\t        begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n\t        relevance: 0\n\t      },\n\t      {\n\t        // number\n\t        className: 'number',\n\t        begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n\t        relevance: 0\n\t      },\n\t      {\n\t        // number with leading decimal\n\t        className: 'number',\n\t        begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n\t        relevance: 0\n\t      },\n\t\n\t      {\n\t        // escaped identifier\n\t        begin: '`',\n\t        end: '`',\n\t        relevance: 0\n\t      },\n\t\n\t      {\n\t        className: 'string',\n\t        contains: [hljs.BACKSLASH_ESCAPE],\n\t        variants: [\n\t          {begin: '\"', end: '\"'},\n\t          {begin: \"'\", end: \"'\"}\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('rib', function(hljs) {\n\t  return {\n\t    keywords:\n\t      'ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis ' +\n\t      'Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone ' +\n\t      'CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail ' +\n\t      'DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format ' +\n\t      'FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry ' +\n\t      'Hider Hyperboloid Identity Illuminate Imager Interior LightSource ' +\n\t      'MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte ' +\n\t      'MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option ' +\n\t      'Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples ' +\n\t      'PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection ' +\n\t      'Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ' +\n\t      'ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere ' +\n\t      'SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd ' +\n\t      'TransformPoints Translate TrimCurve WorldBegin WorldEnd',\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('roboconf', function(hljs) {\n\t  var IDENTIFIER = '[a-zA-Z-_][^\\n{\\r\\n]+\\\\{';\n\t\n\t  return {\n\t    aliases: ['graph', 'instances'],\n\t    case_insensitive: true,\n\t    keywords: 'import',\n\t    contains: [\n\t      // Facet sections\n\t      {\n\t        className: 'facet',\n\t        begin: '^facet ' + IDENTIFIER,\n\t        end: '}',\n\t        keywords: 'facet installer exports children extends',\n\t        contains: [\n\t          hljs.HASH_COMMENT_MODE\n\t        ]\n\t      },\n\t\n\t      // Instance sections\n\t      {\n\t        className: 'instance-of',\n\t        begin: '^instance of ' + IDENTIFIER,\n\t        end: '}',\n\t        keywords: 'name count channels instance-data instance-state instance of',\n\t        contains: [\n\t          // Instance overridden properties\n\t          {\n\t            className: 'keyword',\n\t            begin: '[a-zA-Z-_]+( |\\t)*:'\n\t          },\n\t          hljs.HASH_COMMENT_MODE\n\t        ]\n\t      },\n\t\n\t      // Component sections\n\t      {\n\t        className: 'component',\n\t        begin: '^' + IDENTIFIER,\n\t        end: '}',\n\t        lexemes: '\\\\(?[a-zA-Z]+\\\\)?',\n\t        keywords: 'installer exports children extends imports facets alias (optional)',\n\t        contains: [\n\t          // Imported component variables\n\t          {\n\t            className: 'string',\n\t            begin: '\\\\.[a-zA-Z-_]+',\n\t            end: '\\\\s|,|;',\n\t            excludeEnd: true\n\t          },\n\t          hljs.HASH_COMMENT_MODE\n\t        ]\n\t      },\n\t\n\t      // Comments\n\t      hljs.HASH_COMMENT_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('rsl', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        'float color point normal vector matrix while for if do return else break extern continue',\n\t      built_in:\n\t        'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' +\n\t        'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' +\n\t        'faceforward filterstep floor format fresnel incident length lightsource log match ' +\n\t        'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' +\n\t        'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' +\n\t        'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' +\n\t        'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n\t    },\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$'\n\t      },\n\t      {\n\t        className: 'shader',\n\t        beginKeywords: 'surface displacement light volume imager', end: '\\\\('\n\t      },\n\t      {\n\t        className: 'shading',\n\t        beginKeywords: 'illuminate illuminance gather', end: '\\\\('\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('ruleslanguage', function(hljs) {\n\t  return {\n\t    keywords: {\n\t       keyword: 'BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE ' +\n\t         'INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 ' +\n\t         'INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 ' +\n\t         'INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 ' +\n\t         'INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 ' +\n\t         'INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 ' +\n\t         'INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 ' +\n\t         'INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 ' +\n\t         'INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 ' +\n\t         'INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 ' +\n\t         'INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 ' +\n\t         'INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 ' +\n\t         'INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 ' +\n\t         'INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 ' +\n\t         'INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 ' +\n\t         'MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER ' +\n\t         'OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE ' +\n\t         'NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH ' +\n\t         'IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND ' +\n\t         'UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ' +\n\t         'ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE ' +\n\t         'GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE ' +\n\t         'SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING ' +\n\t         'DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF ' +\n\t         'MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY ' +\n\t         'YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE ' +\n\t         'COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR ' +\n\t         'READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ' +\n\t         'ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE ' +\n\t         'EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE ' +\n\t         'SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL ' +\n\t         'COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN ' +\n\t         'MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING ' +\n\t         'FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM ' +\n\t         'NUMDAYS READ_DATE STAGING',\n\t       built_in: 'IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML ' +\n\t         'DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT ' +\n\t         'DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE ' +\n\t         'DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT ' +\n\t         'DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'array',\n\t        variants: [\n\t          {begin: '#\\\\s+[a-zA-Z\\\\ \\\\.]*', relevance: 0}, // looks like #-comment\n\t          {begin: '#[a-zA-Z\\\\ \\\\.]+'}\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('rust', function(hljs) {\n\t  var NUM_SUFFIX = '([uif](8|16|32|64|size))\\?';\n\t  var BLOCK_COMMENT = hljs.inherit(hljs.C_BLOCK_COMMENT_MODE);\n\t  BLOCK_COMMENT.contains.push('self');\n\t  return {\n\t    aliases: ['rs'],\n\t    keywords: {\n\t      keyword:\n\t        'alignof as be box break const continue crate do else enum extern ' +\n\t        'false fn for if impl in let loop match mod mut offsetof once priv ' +\n\t        'proc pub pure ref return self Self sizeof static struct super trait true ' +\n\t        'type typeof unsafe unsized use virtual while where yield ' +\n\t        'int i8 i16 i32 i64 ' +\n\t        'uint u8 u32 u64 ' +\n\t        'float f32 f64 ' +\n\t        'str char bool',\n\t      built_in:\n\t        'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n\t        'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n\t        'include_bin! include_str! line! local_data_key! module_path! ' +\n\t        'option_env! print! println! select! stringify! try! unimplemented! ' +\n\t        'unreachable! vec! write! writeln!'\n\t    },\n\t    lexemes: hljs.IDENT_RE + '!?',\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      BLOCK_COMMENT,\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t      {\n\t        className: 'string',\n\t        variants: [\n\t           { begin: /r(#*)\".*?\"\\1(?!#)/ },\n\t           { begin: /'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ },\n\t           { begin: /'[a-zA-Z_][a-zA-Z0-9_]*/ }\n\t        ]\n\t      },\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t          { begin: '\\\\b0b([01_]+)' + NUM_SUFFIX },\n\t          { begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX },\n\t          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },\n\t          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n\t                   NUM_SUFFIX\n\t          }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'fn', end: '(\\\\(|<)', excludeEnd: true,\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#\\\\!?\\\\[', end: '\\\\]'\n\t      },\n\t      {\n\t        beginKeywords: 'type', end: '(=|<)',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE],\n\t        illegal: '\\\\S'\n\t      },\n\t      {\n\t        beginKeywords: 'trait enum', end: '{',\n\t        contains: [\n\t          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n\t        ],\n\t        illegal: '[\\\\w\\\\d]'\n\t      },\n\t      {\n\t        begin: hljs.IDENT_RE + '::'\n\t      },\n\t      {\n\t        begin: '->'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('scala', function(hljs) {\n\t\n\t  var ANNOTATION = {\n\t    className: 'annotation', begin: '@[A-Za-z]+'\n\t  };\n\t\n\t  var STRING = {\n\t    className: 'string',\n\t    begin: 'u?r?\"\"\"', end: '\"\"\"',\n\t    relevance: 10\n\t  };\n\t\n\t  var SYMBOL = {\n\t    className: 'symbol',\n\t    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n\t  };\n\t\n\t  var TYPE = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n\t    relevance: 0\n\t  };\n\t\n\t  var NAME = {\n\t    className: 'title',\n\t    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n\t    relevance: 0\n\t  };\n\t\n\t  var CLASS = {\n\t    className: 'class',\n\t    beginKeywords: 'class object trait type',\n\t    end: /[:={\\[(\\n;]/,\n\t    contains: [{className: 'keyword', beginKeywords: 'extends with', relevance: 10}, NAME]\n\t  };\n\t\n\t  var METHOD = {\n\t    className: 'function',\n\t    beginKeywords: 'def val',\n\t    end: /[:={\\[(\\n;]/,\n\t    contains: [NAME]\n\t  };\n\t\n\t  return {\n\t    keywords: {\n\t      literal: 'true false null',\n\t      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      STRING,\n\t      hljs.QUOTE_STRING_MODE,\n\t      SYMBOL,\n\t      TYPE,\n\t      METHOD,\n\t      CLASS,\n\t      hljs.C_NUMBER_MODE,\n\t      ANNOTATION\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('scheme', function(hljs) {\n\t  var SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n\t  var SCHEME_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';\n\t  var SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n\t  var BUILTINS = {\n\t    built_in:\n\t      'case-lambda call/cc class define-class exit-handler field import ' +\n\t      'inherit init-field interface let*-values let-values let/ec mixin ' +\n\t      'opt-lambda override protect provide public rename require ' +\n\t      'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +\n\t      'when with-syntax and begin call-with-current-continuation ' +\n\t      'call-with-input-file call-with-output-file case cond define ' +\n\t      'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +\n\t      'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / ' +\n\t      '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +\n\t      'boolean? caar cadr call-with-input-file call-with-output-file ' +\n\t      'call-with-values car cdddar cddddr cdr ceiling char->integer ' +\n\t      'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +\n\t      'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +\n\t      'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +\n\t      'char? close-input-port close-output-port complex? cons cos ' +\n\t      'current-input-port current-output-port denominator display eof-object? ' +\n\t      'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +\n\t      'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +\n\t      'integer? interaction-environment lcm length list list->string ' +\n\t      'list->vector list-ref list-tail list? load log magnitude make-polar ' +\n\t      'make-rectangular make-string make-vector max member memq memv min ' +\n\t      'modulo negative? newline not null-environment null? number->string ' +\n\t      'number? numerator odd? open-input-file open-output-file output-port? ' +\n\t      'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +\n\t      'rational? rationalize read read-char real-part real? remainder reverse ' +\n\t      'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +\n\t      'string->list string->number string->symbol string-append string-ci<=? ' +\n\t      'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +\n\t      'string-fill! string-length string-ref string-set! string<=? string<? ' +\n\t      'string=? string>=? string>? string? substring symbol->string symbol? ' +\n\t      'tan transcript-off transcript-on truncate values vector ' +\n\t      'vector->list vector-fill! vector-length vector-ref vector-set! ' +\n\t      'with-input-from-file with-output-to-file write write-char zero?'\n\t  };\n\t\n\t  var SHEBANG = {\n\t    className: 'shebang',\n\t    begin: '^#!',\n\t    end: '$'\n\t  };\n\t\n\t  var LITERAL = {\n\t    className: 'literal',\n\t    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n\t  };\n\t\n\t  var NUMBER = {\n\t    className: 'number',\n\t    variants: [\n\t      { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },\n\t      { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },\n\t      { begin: '#b[0-1]+(/[0-1]+)?' },\n\t      { begin: '#o[0-7]+(/[0-7]+)?' },\n\t      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n\t    ]\n\t  };\n\t\n\t  var STRING = hljs.QUOTE_STRING_MODE;\n\t\n\t  var REGULAR_EXPRESSION = {\n\t    className: 'regexp',\n\t    begin: '#[pr]x\"',\n\t    end: '[^\\\\\\\\]\"'\n\t  };\n\t\n\t  var COMMENT_MODES = [\n\t    hljs.COMMENT(\n\t      ';',\n\t      '$',\n\t      {\n\t        relevance: 0\n\t      }\n\t    ),\n\t    hljs.COMMENT('#\\\\|', '\\\\|#')\n\t  ];\n\t\n\t  var IDENT = {\n\t    begin: SCHEME_IDENT_RE,\n\t    relevance: 0\n\t  };\n\t\n\t  var QUOTED_IDENT = {\n\t    className: 'variable',\n\t    begin: '\\'' + SCHEME_IDENT_RE\n\t  };\n\t\n\t  var BODY = {\n\t    endsWithParent: true,\n\t    relevance: 0\n\t  };\n\t\n\t  var LIST = {\n\t    className: 'list',\n\t    variants: [\n\t      { begin: '\\\\(', end: '\\\\)' },\n\t      { begin: '\\\\[', end: '\\\\]' }\n\t    ],\n\t    contains: [\n\t      {\n\t        className: 'keyword',\n\t        begin: SCHEME_IDENT_RE,\n\t        lexemes: SCHEME_IDENT_RE,\n\t        keywords: BUILTINS\n\t      },\n\t      BODY\n\t    ]\n\t  };\n\t\n\t  BODY.contains = [LITERAL, NUMBER, STRING, IDENT, QUOTED_IDENT, LIST].concat(COMMENT_MODES);\n\t\n\t  return {\n\t    illegal: /\\S/,\n\t    contains: [SHEBANG, NUMBER, STRING, QUOTED_IDENT, LIST].concat(COMMENT_MODES)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('scilab', function(hljs) {\n\t\n\t  var COMMON_CONTAINS = [\n\t    hljs.C_NUMBER_MODE,\n\t    {\n\t      className: 'string',\n\t      begin: '\\'|\\\"', end: '\\'|\\\"',\n\t      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n\t    }\n\t  ];\n\t\n\t  return {\n\t    aliases: ['sci'],\n\t    keywords: {\n\t      keyword: 'abort break case clear catch continue do elseif else endfunction end for function'+\n\t        'global if pause return resume select try then while'+\n\t        '%f %F %t %T %pi %eps %inf %nan %e %i %z %s',\n\t      built_in: // Scilab has more than 2000 functions. Just list the most commons\n\t       'abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error'+\n\t       'exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty'+\n\t       'isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log'+\n\t       'max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real'+\n\t       'round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan'+\n\t       'type typename warning zeros matrix'\n\t    },\n\t    illegal: '(\"|#|/\\\\*|\\\\s+/\\\\w+)',\n\t    contains: [\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function endfunction', end: '$',\n\t        keywords: 'function endfunction|10',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'transposed_variable',\n\t        begin: '[a-zA-Z_][a-zA-Z_0-9]*(\\'+[\\\\.\\']*|[\\\\.\\']+)', end: '',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'matrix',\n\t        begin: '\\\\[', end: '\\\\]\\'*[\\\\.\\']*',\n\t        relevance: 0,\n\t        contains: COMMON_CONTAINS\n\t      },\n\t      hljs.COMMENT('//', '$')\n\t    ].concat(COMMON_CONTAINS)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('scss', function(hljs) {\n\t  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n\t  var VARIABLE = {\n\t    className: 'variable',\n\t    begin: '(\\\\$' + IDENT_RE + ')\\\\b'\n\t  };\n\t  var FUNCTION = {\n\t    className: 'function',\n\t    begin: IDENT_RE + '\\\\(',\n\t    returnBegin: true,\n\t    excludeEnd: true,\n\t    end: '\\\\('\n\t  };\n\t  var HEXCOLOR = {\n\t    className: 'hexcolor', begin: '#[0-9A-Fa-f]+'\n\t  };\n\t  var DEF_INTERNALS = {\n\t    className: 'attribute',\n\t    begin: '[A-Z\\\\_\\\\.\\\\-]+', end: ':',\n\t    excludeEnd: true,\n\t    illegal: '[^\\\\s]',\n\t    starts: {\n\t      className: 'value',\n\t      endsWithParent: true, excludeEnd: true,\n\t      contains: [\n\t        FUNCTION,\n\t        HEXCOLOR,\n\t        hljs.CSS_NUMBER_MODE,\n\t        hljs.QUOTE_STRING_MODE,\n\t        hljs.APOS_STRING_MODE,\n\t        hljs.C_BLOCK_COMMENT_MODE,\n\t        {\n\t          className: 'important', begin: '!important'\n\t        }\n\t      ]\n\t    }\n\t  };\n\t  return {\n\t    case_insensitive: true,\n\t    illegal: '[=/|\\']',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      FUNCTION,\n\t      {\n\t        className: 'id', begin: '\\\\#[A-Za-z0-9_-]+',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'class', begin: '\\\\.[A-Za-z0-9_-]+',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'attr_selector',\n\t        begin: '\\\\[', end: '\\\\]',\n\t        illegal: '$'\n\t      },\n\t      {\n\t        className: 'tag', // begin: IDENT_RE, end: '[,|\\\\s]'\n\t        begin: '\\\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\\\b',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'pseudo',\n\t        begin: ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'\n\t      },\n\t      {\n\t        className: 'pseudo',\n\t        begin: '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)'\n\t      },\n\t      VARIABLE,\n\t      {\n\t        className: 'attribute',\n\t        begin: '\\\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\\\b',\n\t        illegal: '[^\\\\s]'\n\t      },\n\t      {\n\t        className: 'value',\n\t        begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b'\n\t      },\n\t      {\n\t        className: 'value',\n\t        begin: ':', end: ';',\n\t        contains: [\n\t          FUNCTION,\n\t          VARIABLE,\n\t          HEXCOLOR,\n\t          hljs.CSS_NUMBER_MODE,\n\t          hljs.QUOTE_STRING_MODE,\n\t          hljs.APOS_STRING_MODE,\n\t          {\n\t            className: 'important', begin: '!important'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'at_rule',\n\t        begin: '@', end: '[{;]',\n\t        keywords: 'mixin include extend for if else each while charset import debug media page content font-face namespace warn',\n\t        contains: [\n\t          FUNCTION,\n\t          VARIABLE,\n\t          hljs.QUOTE_STRING_MODE,\n\t          hljs.APOS_STRING_MODE,\n\t          HEXCOLOR,\n\t          hljs.CSS_NUMBER_MODE,\n\t          {\n\t            className: 'preprocessor',\n\t            begin: '\\\\s[A-Za-z0-9_.-]+',\n\t            relevance: 0\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('smali', function(hljs) {\n\t  var smali_instr_low_prio = ['add', 'and', 'cmp', 'cmpg', 'cmpl', 'const', 'div', 'double', 'float', 'goto', 'if', 'int', 'long', 'move', 'mul', 'neg', 'new', 'nop', 'not', 'or', 'rem', 'return', 'shl', 'shr', 'sput', 'sub', 'throw', 'ushr', 'xor'];\n\t  var smali_instr_high_prio = ['aget', 'aput', 'array', 'check', 'execute', 'fill', 'filled', 'goto/16', 'goto/32', 'iget', 'instance', 'invoke', 'iput', 'monitor', 'packed', 'sget', 'sparse'];\n\t  var smali_keywords = ['transient', 'constructor', 'abstract', 'final', 'synthetic', 'public', 'private', 'protected', 'static', 'bridge', 'system'];\n\t  return {\n\t    aliases: ['smali'],\n\t    contains: [\n\t      {\n\t        className: 'string',\n\t        begin: '\"', end: '\"',\n\t        relevance: 0\n\t      },\n\t      hljs.COMMENT(\n\t        '#',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\s*\\\\.end\\\\s[a-zA-Z0-9]*',\n\t        relevance: 1\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin: '^[ ]*\\\\.[a-zA-Z]*',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\s:[a-zA-Z_0-9]*',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\s('+smali_keywords.join('|')+')',\n\t        relevance: 1\n\t      },\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\[',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'instruction',\n\t        begin: '\\\\s('+smali_instr_low_prio.join('|')+')\\\\s',\n\t        relevance: 1\n\t      },\n\t      {\n\t        className: 'instruction',\n\t        begin: '\\\\s('+smali_instr_low_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)+\\\\s',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'instruction',\n\t        begin: '\\\\s('+smali_instr_high_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)*\\\\s',\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'class',\n\t        begin: 'L[^\\(;:\\n]*;',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '( |->)[^(\\n ;\"]*\\\\(',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: '\\\\)',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: '[vp][0-9]+',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('smalltalk', function(hljs) {\n\t  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n\t  var CHAR = {\n\t    className: 'char',\n\t    begin: '\\\\$.{1}'\n\t  };\n\t  var SYMBOL = {\n\t    className: 'symbol',\n\t    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n\t  };\n\t  return {\n\t    aliases: ['st'],\n\t    keywords: 'self super nil true false thisContext', // only 6\n\t    contains: [\n\t      hljs.COMMENT('\"', '\"'),\n\t      hljs.APOS_STRING_MODE,\n\t      {\n\t        className: 'class',\n\t        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'method',\n\t        begin: VAR_IDENT_RE + ':',\n\t        relevance: 0\n\t      },\n\t      hljs.C_NUMBER_MODE,\n\t      SYMBOL,\n\t      CHAR,\n\t      {\n\t        className: 'localvars',\n\t        // This looks more complicated than needed to avoid combinatorial\n\t        // explosion under V8. It effectively means `| var1 var2 ... |` with\n\t        // whitespace adjacent to `|` being optional.\n\t        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n\t        returnBegin: true, end: /\\|/,\n\t        illegal: /\\S/,\n\t        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n\t      },\n\t      {\n\t        className: 'array',\n\t        begin: '\\\\#\\\\(', end: '\\\\)',\n\t        contains: [\n\t          hljs.APOS_STRING_MODE,\n\t          CHAR,\n\t          hljs.C_NUMBER_MODE,\n\t          SYMBOL\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('sml', function(hljs) {\n\t  return {\n\t    aliases: ['ml'],\n\t    keywords: {\n\t      keyword:\n\t        /* according to Definition of Standard ML 97  */\n\t        'abstype and andalso as case datatype do else end eqtype ' +\n\t        'exception fn fun functor handle if in include infix infixr ' +\n\t        'let local nonfix of op open orelse raise rec sharing sig ' +\n\t        'signature struct structure then type val with withtype where while',\n\t      built_in:\n\t        /* built-in types according to basis library */\n\t        'array bool char exn int list option order real ref string substring vector unit word',\n\t      literal:\n\t        'true false NONE SOME LESS EQUAL GREATER nil'\n\t    },\n\t    illegal: /\\/\\/|>>/,\n\t    lexemes: '[a-z_]\\\\w*!?',\n\t    contains: [\n\t      {\n\t        className: 'literal',\n\t        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)'\n\t      },\n\t      hljs.COMMENT(\n\t        '\\\\(\\\\*',\n\t        '\\\\*\\\\)',\n\t        {\n\t          contains: ['self']\n\t        }\n\t      ),\n\t      { /* type variable */\n\t        className: 'symbol',\n\t        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n\t        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n\t      },\n\t      { /* polymorphic variant */\n\t        className: 'tag',\n\t        begin: '`[A-Z][\\\\w\\']*'\n\t      },\n\t      { /* module or constructor */\n\t        className: 'type',\n\t        begin: '\\\\b[A-Z][\\\\w\\']*',\n\t        relevance: 0\n\t      },\n\t      { /* don't color identifiers, but safely catch all identifiers with '*/\n\t        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n\t      },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'char', relevance: 0}),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t      {\n\t        className: 'number',\n\t        begin:\n\t          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n\t          '0[oO][0-7_]+[Lln]?|' +\n\t          '0[bB][01_]+[Lln]?|' +\n\t          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: /[-=]>/ // relevance booster\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('sql', function(hljs) {\n\t  var COMMENT_MODE = hljs.COMMENT('--', '$');\n\t  return {\n\t    case_insensitive: true,\n\t    illegal: /[<>]/,\n\t    contains: [\n\t      {\n\t        className: 'operator',\n\t        beginKeywords:\n\t          'begin end start commit rollback savepoint lock alter create drop rename call ' +\n\t          'delete do handler insert load replace select truncate update set show pragma grant ' +\n\t          'merge describe use explain help declare prepare execute deallocate savepoint release|0 ' +\n\t          'unlock purge reset change stop analyze cache flush optimize repair kill ' +\n\t          'install uninstall checksum restore check backup revoke',\n\t        end: /;/, endsWithParent: true,\n\t        keywords: {\n\t          keyword:\n\t            'abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +\n\t            'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +\n\t            'allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply ' +\n\t            'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +\n\t            'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +\n\t            'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +\n\t            'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +\n\t            'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +\n\t            'buffer_cache buffer_pool build bulk by byte byteordermark bytes c cache caching call calling cancel ' +\n\t            'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +\n\t            'char_length character_length characters characterset charindex charset charsetform charsetid check ' +\n\t            'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +\n\t            'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +\n\t            'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +\n\t            'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +\n\t            'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +\n\t            'consider consistent constant constraint constraints constructor container content contents context ' +\n\t            'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +\n\t            'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +\n\t            'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +\n\t            'cursor curtime customdatum cycle d data database databases datafile datafiles datalength date_add ' +\n\t            'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +\n\t            'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +\n\t            'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +\n\t            'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +\n\t            'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +\n\t            'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +\n\t            'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +\n\t            'do document domain dotnet double downgrade drop dumpfile duplicate duration e each edition editionable ' +\n\t            'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +\n\t            'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +\n\t            'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +\n\t            'execu execut execute exempt exists exit exp expire explain export export_set extended extent external ' +\n\t            'external_1 external_2 externally extract f failed failed_login_attempts failover failure far fast ' +\n\t            'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +\n\t            'finish first first_value fixed flash_cache flashback floor flush following follows for forall force ' +\n\t            'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +\n\t            'ftp full function g general generated get get_format get_lock getdate getutcdate global global_name ' +\n\t            'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +\n\t            'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +\n\t            'hierarchy high high_priority hosts hour http i id ident_current ident_incr ident_seed identified ' +\n\t            'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +\n\t            'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +\n\t            'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +\n\t            'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +\n\t            'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +\n\t            'k keep keep_duplicates key keys kill l language large last|0 last_day last_insert_id last_value lax lcase ' +\n\t            'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +\n\t            'lines link|0 list|0 listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +\n\t            'locator lock|0 locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +\n\t            'logoff logon logs long loop|0 low low_priority lower lpad lrtrim ltrim m main make_set makedate maketime ' +\n\t            'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +\n\t            'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +\n\t            'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +\n\t            'minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month ' +\n\t            'months mount move movement multiset mutex n name name_const names nan national native natural nav nchar ' +\n\t            'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +\n\t            'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +\n\t            'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +\n\t            'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +\n\t            'noswitch not nothing notice notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +\n\t            'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +\n\t            'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +\n\t            'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +\n\t            'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +\n\t            'out outer outfile outline output over overflow overriding p package pad parallel parallel_enable ' +\n\t            'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +\n\t            'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +\n\t            'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +\n\t            'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +\n\t            'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +\n\t            'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +\n\t            'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +\n\t            'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +\n\t            'quotename radians raise|0 rand range rank raw read reads readsize rebuild record records ' +\n\t            'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +\n\t            'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +\n\t            'reject rekey relational relative relaylog release|0 release_lock relies_on relocate rely rem remainder ' +\n\t            'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +\n\t            'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +\n\t            'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +\n\t            'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +\n\t            'sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment ' +\n\t            'self sequence sequential serializable server servererror session session_user sessions_per_user set ' +\n\t            'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +\n\t            'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +\n\t            'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +\n\t            'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +\n\t            'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +\n\t            'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +\n\t            'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +\n\t            'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +\n\t            'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +\n\t            'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +\n\t            'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +\n\t            'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime t table tables tablespace tan tdo ' +\n\t            'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +\n\t            'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +\n\t            'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +\n\t            'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +\n\t            'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +\n\t            'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unpivot ' +\n\t            'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +\n\t            'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +\n\t            'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +\n\t            'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +\n\t            'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +\n\t            'wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped ' +\n\t            'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +\n\t            'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',\n\t          literal:\n\t            'true false null',\n\t          built_in:\n\t            'array bigint binary bit blob boolean char character date dec decimal float int int8 integer interval number ' +\n\t            'numeric real record serial serial8 smallint text varchar varying void'\n\t        },\n\t        contains: [\n\t          {\n\t            className: 'string',\n\t            begin: '\\'', end: '\\'',\n\t            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n\t          },\n\t          {\n\t            className: 'string',\n\t            begin: '\"', end: '\"',\n\t            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\"\"'}]\n\t          },\n\t          {\n\t            className: 'string',\n\t            begin: '`', end: '`',\n\t            contains: [hljs.BACKSLASH_ESCAPE]\n\t          },\n\t          hljs.C_NUMBER_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t          COMMENT_MODE\n\t        ]\n\t      },\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      COMMENT_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('stata', function(hljs) {\n\t  return {\n\t    aliases: ['do', 'ado'],\n\t    case_insensitive: true,\n\t    keywords: 'if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5',\n\t        contains: [\n\t      {\n\t        className: 'label',\n\t        variants: [\n\t          {begin: \"\\\\$\\\\{?[a-zA-Z0-9_]+\\\\}?\"},\n\t          {begin: \"`[a-zA-Z0-9_]+'\"}\n\t\n\t        ]\n\t      },\n\t      {\n\t        className: 'string',\n\t        variants: [\n\t          {begin: '`\"[^\\r\\n]*?\"\\''},\n\t          {begin: '\"[^\\r\\n\"]*\"'}\n\t        ]\n\t      },\n\t\n\t      {\n\t        className: 'literal',\n\t        variants: [\n\t          {\n\t            begin: '\\\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\\\(|$)'\n\t          }\n\t        ]\n\t      },\n\t\n\t      hljs.COMMENT('^[ \\t]*\\\\*.*$', false),\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('step21', function(hljs) {\n\t  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n\t  var STEP21_CLOSE_RE = 'END-ISO-10303-21;';\n\t  var STEP21_KEYWORDS = {\n\t    literal: '',\n\t    built_in: '',\n\t    keyword:\n\t    'HEADER ENDSEC DATA'\n\t  };\n\t  var STEP21_START = {\n\t    className: 'preprocessor',\n\t    begin: 'ISO-10303-21;',\n\t    relevance: 10\n\t  };\n\t  var STEP21_CODE = [\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n\t    hljs.C_NUMBER_MODE,\n\t    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n\t    {\n\t      className: 'string',\n\t      begin: \"'\", end: \"'\"\n\t    },\n\t    {\n\t      className: 'label',\n\t      variants: [\n\t        {\n\t          begin: '#', end: '\\\\d+',\n\t          illegal: '\\\\W'\n\t        }\n\t      ]\n\t    }\n\t  ];\n\t\n\t  return {\n\t    aliases: ['p21', 'step', 'stp'],\n\t    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n\t    lexemes: STEP21_IDENT_RE,\n\t    keywords: STEP21_KEYWORDS,\n\t    contains: [\n\t      {\n\t        className: 'preprocessor',\n\t        begin: STEP21_CLOSE_RE,\n\t        relevance: 10\n\t      },\n\t      STEP21_START\n\t    ].concat(STEP21_CODE)\n\t  };\n\t});\n\t\n\thljs.registerLanguage('stylus', function(hljs) {\n\t\n\t  var VARIABLE = {\n\t    className: 'variable',\n\t    begin: '\\\\$' + hljs.IDENT_RE\n\t  };\n\t\n\t  var HEX_COLOR = {\n\t    className: 'hexcolor',\n\t    begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})',\n\t    relevance: 10\n\t  };\n\t\n\t  var AT_KEYWORDS = [\n\t    'charset',\n\t    'css',\n\t    'debug',\n\t    'extend',\n\t    'font-face',\n\t    'for',\n\t    'import',\n\t    'include',\n\t    'media',\n\t    'mixin',\n\t    'page',\n\t    'warn',\n\t    'while'\n\t  ];\n\t\n\t  var PSEUDO_SELECTORS = [\n\t    'after',\n\t    'before',\n\t    'first-letter',\n\t    'first-line',\n\t    'active',\n\t    'first-child',\n\t    'focus',\n\t    'hover',\n\t    'lang',\n\t    'link',\n\t    'visited'\n\t  ];\n\t\n\t  var TAGS = [\n\t    'a',\n\t    'abbr',\n\t    'address',\n\t    'article',\n\t    'aside',\n\t    'audio',\n\t    'b',\n\t    'blockquote',\n\t    'body',\n\t    'button',\n\t    'canvas',\n\t    'caption',\n\t    'cite',\n\t    'code',\n\t    'dd',\n\t    'del',\n\t    'details',\n\t    'dfn',\n\t    'div',\n\t    'dl',\n\t    'dt',\n\t    'em',\n\t    'fieldset',\n\t    'figcaption',\n\t    'figure',\n\t    'footer',\n\t    'form',\n\t    'h1',\n\t    'h2',\n\t    'h3',\n\t    'h4',\n\t    'h5',\n\t    'h6',\n\t    'header',\n\t    'hgroup',\n\t    'html',\n\t    'i',\n\t    'iframe',\n\t    'img',\n\t    'input',\n\t    'ins',\n\t    'kbd',\n\t    'label',\n\t    'legend',\n\t    'li',\n\t    'mark',\n\t    'menu',\n\t    'nav',\n\t    'object',\n\t    'ol',\n\t    'p',\n\t    'q',\n\t    'quote',\n\t    'samp',\n\t    'section',\n\t    'span',\n\t    'strong',\n\t    'summary',\n\t    'sup',\n\t    'table',\n\t    'tbody',\n\t    'td',\n\t    'textarea',\n\t    'tfoot',\n\t    'th',\n\t    'thead',\n\t    'time',\n\t    'tr',\n\t    'ul',\n\t    'var',\n\t    'video'\n\t  ];\n\t\n\t  var TAG_END = '[\\\\.\\\\s\\\\n\\\\[\\\\:,]';\n\t\n\t  var ATTRIBUTES = [\n\t    'align-content',\n\t    'align-items',\n\t    'align-self',\n\t    'animation',\n\t    'animation-delay',\n\t    'animation-direction',\n\t    'animation-duration',\n\t    'animation-fill-mode',\n\t    'animation-iteration-count',\n\t    'animation-name',\n\t    'animation-play-state',\n\t    'animation-timing-function',\n\t    'auto',\n\t    'backface-visibility',\n\t    'background',\n\t    'background-attachment',\n\t    'background-clip',\n\t    'background-color',\n\t    'background-image',\n\t    'background-origin',\n\t    'background-position',\n\t    'background-repeat',\n\t    'background-size',\n\t    'border',\n\t    'border-bottom',\n\t    'border-bottom-color',\n\t    'border-bottom-left-radius',\n\t    'border-bottom-right-radius',\n\t    'border-bottom-style',\n\t    'border-bottom-width',\n\t    'border-collapse',\n\t    'border-color',\n\t    'border-image',\n\t    'border-image-outset',\n\t    'border-image-repeat',\n\t    'border-image-slice',\n\t    'border-image-source',\n\t    'border-image-width',\n\t    'border-left',\n\t    'border-left-color',\n\t    'border-left-style',\n\t    'border-left-width',\n\t    'border-radius',\n\t    'border-right',\n\t    'border-right-color',\n\t    'border-right-style',\n\t    'border-right-width',\n\t    'border-spacing',\n\t    'border-style',\n\t    'border-top',\n\t    'border-top-color',\n\t    'border-top-left-radius',\n\t    'border-top-right-radius',\n\t    'border-top-style',\n\t    'border-top-width',\n\t    'border-width',\n\t    'bottom',\n\t    'box-decoration-break',\n\t    'box-shadow',\n\t    'box-sizing',\n\t    'break-after',\n\t    'break-before',\n\t    'break-inside',\n\t    'caption-side',\n\t    'clear',\n\t    'clip',\n\t    'clip-path',\n\t    'color',\n\t    'column-count',\n\t    'column-fill',\n\t    'column-gap',\n\t    'column-rule',\n\t    'column-rule-color',\n\t    'column-rule-style',\n\t    'column-rule-width',\n\t    'column-span',\n\t    'column-width',\n\t    'columns',\n\t    'content',\n\t    'counter-increment',\n\t    'counter-reset',\n\t    'cursor',\n\t    'direction',\n\t    'display',\n\t    'empty-cells',\n\t    'filter',\n\t    'flex',\n\t    'flex-basis',\n\t    'flex-direction',\n\t    'flex-flow',\n\t    'flex-grow',\n\t    'flex-shrink',\n\t    'flex-wrap',\n\t    'float',\n\t    'font',\n\t    'font-family',\n\t    'font-feature-settings',\n\t    'font-kerning',\n\t    'font-language-override',\n\t    'font-size',\n\t    'font-size-adjust',\n\t    'font-stretch',\n\t    'font-style',\n\t    'font-variant',\n\t    'font-variant-ligatures',\n\t    'font-weight',\n\t    'height',\n\t    'hyphens',\n\t    'icon',\n\t    'image-orientation',\n\t    'image-rendering',\n\t    'image-resolution',\n\t    'ime-mode',\n\t    'inherit',\n\t    'initial',\n\t    'justify-content',\n\t    'left',\n\t    'letter-spacing',\n\t    'line-height',\n\t    'list-style',\n\t    'list-style-image',\n\t    'list-style-position',\n\t    'list-style-type',\n\t    'margin',\n\t    'margin-bottom',\n\t    'margin-left',\n\t    'margin-right',\n\t    'margin-top',\n\t    'marks',\n\t    'mask',\n\t    'max-height',\n\t    'max-width',\n\t    'min-height',\n\t    'min-width',\n\t    'nav-down',\n\t    'nav-index',\n\t    'nav-left',\n\t    'nav-right',\n\t    'nav-up',\n\t    'none',\n\t    'normal',\n\t    'object-fit',\n\t    'object-position',\n\t    'opacity',\n\t    'order',\n\t    'orphans',\n\t    'outline',\n\t    'outline-color',\n\t    'outline-offset',\n\t    'outline-style',\n\t    'outline-width',\n\t    'overflow',\n\t    'overflow-wrap',\n\t    'overflow-x',\n\t    'overflow-y',\n\t    'padding',\n\t    'padding-bottom',\n\t    'padding-left',\n\t    'padding-right',\n\t    'padding-top',\n\t    'page-break-after',\n\t    'page-break-before',\n\t    'page-break-inside',\n\t    'perspective',\n\t    'perspective-origin',\n\t    'pointer-events',\n\t    'position',\n\t    'quotes',\n\t    'resize',\n\t    'right',\n\t    'tab-size',\n\t    'table-layout',\n\t    'text-align',\n\t    'text-align-last',\n\t    'text-decoration',\n\t    'text-decoration-color',\n\t    'text-decoration-line',\n\t    'text-decoration-style',\n\t    'text-indent',\n\t    'text-overflow',\n\t    'text-rendering',\n\t    'text-shadow',\n\t    'text-transform',\n\t    'text-underline-position',\n\t    'top',\n\t    'transform',\n\t    'transform-origin',\n\t    'transform-style',\n\t    'transition',\n\t    'transition-delay',\n\t    'transition-duration',\n\t    'transition-property',\n\t    'transition-timing-function',\n\t    'unicode-bidi',\n\t    'vertical-align',\n\t    'visibility',\n\t    'white-space',\n\t    'widows',\n\t    'width',\n\t    'word-break',\n\t    'word-spacing',\n\t    'word-wrap',\n\t    'z-index'\n\t  ];\n\t\n\t  // illegals\n\t  var ILLEGAL = [\n\t    '\\\\{',\n\t    '\\\\}',\n\t    '\\\\?',\n\t    '(\\\\bReturn\\\\b)', // monkey\n\t    '(\\\\bEnd\\\\b)', // monkey\n\t    '(\\\\bend\\\\b)', // vbscript\n\t    ';', // sql\n\t    '#\\\\s', // markdown\n\t    '\\\\*\\\\s', // markdown\n\t    '===\\\\s', // markdown\n\t    '\\\\|',\n\t    '%', // prolog\n\t  ];\n\t\n\t  return {\n\t    aliases: ['styl'],\n\t    case_insensitive: false,\n\t    illegal: '(' + ILLEGAL.join('|') + ')',\n\t    keywords: 'if else for in',\n\t    contains: [\n\t\n\t      // strings\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t\n\t      // comments\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t\n\t      // hex colors\n\t      HEX_COLOR,\n\t\n\t      // class tag\n\t      {\n\t        begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n\t        returnBegin: true,\n\t        contains: [\n\t          {className: 'class', begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*'}\n\t        ]\n\t      },\n\t\n\t      // id tag\n\t      {\n\t        begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n\t        returnBegin: true,\n\t        contains: [\n\t          {className: 'id', begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*'}\n\t        ]\n\t      },\n\t\n\t      // tags\n\t      {\n\t        begin: '\\\\b(' + TAGS.join('|') + ')' + TAG_END,\n\t        returnBegin: true,\n\t        contains: [\n\t          {className: 'tag', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_-]*'}\n\t        ]\n\t      },\n\t\n\t      // psuedo selectors\n\t      {\n\t        className: 'pseudo',\n\t        begin: '&?:?:\\\\b(' + PSEUDO_SELECTORS.join('|') + ')' + TAG_END\n\t      },\n\t\n\t      // @ keywords\n\t      {\n\t        className: 'at_rule',\n\t        begin: '\\@(' + AT_KEYWORDS.join('|') + ')\\\\b'\n\t      },\n\t\n\t      // variables\n\t      VARIABLE,\n\t\n\t      // dimension\n\t      hljs.CSS_NUMBER_MODE,\n\t\n\t      // number\n\t      hljs.NUMBER_MODE,\n\t\n\t      // functions\n\t      //  - only from beginning of line + whitespace\n\t      {\n\t        className: 'function',\n\t        begin: '\\\\b[a-zA-Z][a-zA-Z0-9_\\-]*\\\\(.*\\\\)',\n\t        illegal: '[\\\\n]',\n\t        returnBegin: true,\n\t        contains: [\n\t          {className: 'title', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_\\-]*'},\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/,\n\t            end: /\\)/,\n\t            contains: [\n\t              HEX_COLOR,\n\t              VARIABLE,\n\t              hljs.APOS_STRING_MODE,\n\t              hljs.CSS_NUMBER_MODE,\n\t              hljs.NUMBER_MODE,\n\t              hljs.QUOTE_STRING_MODE\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t\n\t      // attributes\n\t      //  - only from beginning of line + whitespace\n\t      //  - must have whitespace after it\n\t      {\n\t        className: 'attribute',\n\t        begin: '\\\\b(' + ATTRIBUTES.reverse().join('|') + ')\\\\b'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('swift', function(hljs) {\n\t  var SWIFT_KEYWORDS = {\n\t      keyword: 'class deinit enum extension func import init let protocol static ' +\n\t        'struct subscript typealias var break case continue default do ' +\n\t        'else fallthrough if in for return switch where while as dynamicType ' +\n\t        'is new super self Self Type __COLUMN__ __FILE__ __FUNCTION__ ' +\n\t        '__LINE__ associativity didSet get infix inout left mutating none ' +\n\t        'nonmutating operator override postfix precedence prefix right set '+\n\t        'unowned unowned safe unsafe weak willSet',\n\t      literal: 'true false nil',\n\t      built_in: 'abs advance alignof alignofValue assert bridgeFromObjectiveC ' +\n\t        'bridgeFromObjectiveCUnconditional bridgeToObjectiveC ' +\n\t        'bridgeToObjectiveCUnconditional c contains count countElements ' +\n\t        'countLeadingZeros debugPrint debugPrintln distance dropFirst dropLast dump ' +\n\t        'encodeBitsAsWords enumerate equal filter find getBridgedObjectiveCType ' +\n\t        'getVaList indices insertionSort isBridgedToObjectiveC ' +\n\t        'isBridgedVerbatimToObjectiveC isUniquelyReferenced join ' +\n\t        'lexicographicalCompare map max maxElement min minElement numericCast ' +\n\t        'partition posix print println quickSort reduce reflect reinterpretCast ' +\n\t        'reverse roundUpToAlignment sizeof sizeofValue sort split startsWith strideof ' +\n\t        'strideofValue swap swift toString transcode underestimateCount ' +\n\t        'unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer ' +\n\t        'withUnsafePointerToObject withUnsafePointers withVaList'\n\t    };\n\t\n\t  var TYPE = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][\\\\w\\']*',\n\t    relevance: 0\n\t  };\n\t  var BLOCK_COMMENT = hljs.COMMENT(\n\t    '/\\\\*',\n\t    '\\\\*/',\n\t    {\n\t      contains: ['self']\n\t    }\n\t  );\n\t  var SUBST = {\n\t    className: 'subst',\n\t    begin: /\\\\\\(/, end: '\\\\)',\n\t    keywords: SWIFT_KEYWORDS,\n\t    contains: [] // assigned later\n\t  };\n\t  var NUMBERS = {\n\t      className: 'number',\n\t      begin: '\\\\b([\\\\d_]+(\\\\.[\\\\deE_]+)?|0x[a-fA-F0-9_]+(\\\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\\\b',\n\t      relevance: 0\n\t  };\n\t  var QUOTE_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n\t    contains: [SUBST, hljs.BACKSLASH_ESCAPE]\n\t  });\n\t  SUBST.contains = [NUMBERS];\n\t\n\t  return {\n\t    keywords: SWIFT_KEYWORDS,\n\t    contains: [\n\t      QUOTE_STRING_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      BLOCK_COMMENT,\n\t      TYPE,\n\t      NUMBERS,\n\t      {\n\t        className: 'func',\n\t        beginKeywords: 'func', end: '{', excludeEnd: true,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {\n\t            begin: /[A-Za-z$_][0-9A-Za-z$_]*/,\n\t            illegal: /\\(/\n\t          }),\n\t          {\n\t            className: 'generics',\n\t            begin: /</, end: />/,\n\t            illegal: />/\n\t          },\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/, endsParent: true,\n\t            keywords: SWIFT_KEYWORDS,\n\t            contains: [\n\t              'self',\n\t              NUMBERS,\n\t              QUOTE_STRING_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              {begin: ':'} // relevance booster\n\t            ],\n\t            illegal: /[\"']/\n\t          }\n\t        ],\n\t        illegal: /\\[|%/\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'struct protocol class extension enum',\n\t        keywords: SWIFT_KEYWORDS,\n\t        end: '\\\\{',\n\t        excludeEnd: true,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/})\n\t        ]\n\t      },\n\t      {\n\t        className: 'preprocessor', // @attributes\n\t        begin: '(@assignment|@class_protocol|@exported|@final|@lazy|@noreturn|' +\n\t                  '@NSCopying|@NSManaged|@objc|@optional|@required|@auto_closure|' +\n\t                  '@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|' +\n\t                  '@infix|@prefix|@postfix)'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('tcl', function(hljs) {\n\t  return {\n\t    aliases: ['tk'],\n\t    keywords: 'after append apply array auto_execok auto_import auto_load auto_mkindex ' +\n\t      'auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock ' +\n\t      'close concat continue dde dict encoding eof error eval exec exit expr fblocked ' +\n\t      'fconfigure fcopy file fileevent filename flush for foreach format gets glob global ' +\n\t      'history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list ' +\n\t      'llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 '+\n\t      'mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex '+\n\t      'platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename '+\n\t      'return safe scan seek set socket source split string subst switch tcl_endOfWord '+\n\t      'tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter '+\n\t      'tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update '+\n\t      'uplevel upvar variable vwait while',\n\t    contains: [\n\t      hljs.COMMENT(';[ \\\\t]*#', '$'),\n\t      hljs.COMMENT('^[ \\\\t]*#', '$'),\n\t      {\n\t        beginKeywords: 'proc',\n\t        end: '[\\\\{]',\n\t        excludeEnd: true,\n\t        contains: [\n\t          {\n\t            className: 'symbol',\n\t            begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n\t            end: '[ \\\\t\\\\n\\\\r]',\n\t            endsWithParent: true,\n\t            excludeEnd: true\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        excludeEnd: true,\n\t        variants: [\n\t          {\n\t            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\\\(([a-zA-Z0-9_])*\\\\)',\n\t            end: '[^a-zA-Z0-9_\\\\}\\\\$]'\n\t          },\n\t          {\n\t            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n\t            end: '(\\\\))?[^a-zA-Z0-9_\\\\}\\\\$]'\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'string',\n\t        contains: [hljs.BACKSLASH_ESCAPE],\n\t        variants: [\n\t          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n\t        ]\n\t      },\n\t      {\n\t        className: 'number',\n\t        variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n\t      }\n\t    ]\n\t  }\n\t});\n\t\n\thljs.registerLanguage('tex', function(hljs) {\n\t  var COMMAND1 = {\n\t    className: 'command',\n\t    begin: '\\\\\\\\[a-zA-Zа-яА-я]+[\\\\*]?'\n\t  };\n\t  var COMMAND2 = {\n\t    className: 'command',\n\t    begin: '\\\\\\\\[^a-zA-Zа-яА-я0-9]'\n\t  };\n\t  var SPECIAL = {\n\t    className: 'special',\n\t    begin: '[{}\\\\[\\\\]\\\\&#~]',\n\t    relevance: 0\n\t  };\n\t\n\t  return {\n\t    contains: [\n\t      { // parameter\n\t        begin: '\\\\\\\\[a-zA-Zа-яА-я]+[\\\\*]? *= *-?\\\\d*\\\\.?\\\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?',\n\t        returnBegin: true,\n\t        contains: [\n\t          COMMAND1, COMMAND2,\n\t          {\n\t            className: 'number',\n\t            begin: ' *=', end: '-?\\\\d*\\\\.?\\\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?',\n\t            excludeBegin: true\n\t          }\n\t        ],\n\t        relevance: 10\n\t      },\n\t      COMMAND1, COMMAND2,\n\t      SPECIAL,\n\t      {\n\t        className: 'formula',\n\t        begin: '\\\\$\\\\$', end: '\\\\$\\\\$',\n\t        contains: [COMMAND1, COMMAND2, SPECIAL],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'formula',\n\t        begin: '\\\\$', end: '\\\\$',\n\t        contains: [COMMAND1, COMMAND2, SPECIAL],\n\t        relevance: 0\n\t      },\n\t      hljs.COMMENT(\n\t        '%',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      )\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('thrift', function(hljs) {\n\t  var BUILT_IN_TYPES = 'bool byte i16 i32 i64 double string binary';\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        'namespace const typedef struct enum service exception void oneway set list map required optional',\n\t      built_in:\n\t        BUILT_IN_TYPES,\n\t      literal:\n\t        'true false'\n\t    },\n\t    contains: [\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'struct enum service exception', end: /\\{/,\n\t        illegal: /\\n/,\n\t        contains: [\n\t          hljs.inherit(hljs.TITLE_MODE, {\n\t            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n\t          })\n\t        ]\n\t      },\n\t      {\n\t        begin: '\\\\b(set|list|map)\\\\s*<', end: '>',\n\t        keywords: BUILT_IN_TYPES,\n\t        contains: ['self']\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('tp', function(hljs) {\n\t  var TPID = {\n\t    className: 'number',\n\t    begin: '[1-9][0-9]*', /* no leading zeros */\n\t    relevance: 0\n\t  }\n\t  var TPLABEL = {\n\t    className: 'comment',\n\t    begin: ':[^\\\\]]+'\n\t  }\n\t  var TPDATA = {\n\t    className: 'built_in',\n\t    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|\\\n\t    TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[', end: '\\\\]',\n\t    contains: [\n\t      'self',\n\t      TPID,\n\t      TPLABEL\n\t    ]\n\t  };\n\t  var TPIO = {\n\t    className: 'built_in',\n\t    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[', end: '\\\\]',\n\t    contains: [\n\t      'self',\n\t      TPID,\n\t      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n\t      TPLABEL\n\t    ]\n\t  };\n\t\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\n\t        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\n\t        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\n\t        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\n\t        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\n\t        'SUBSTR FINDSTR VOFFSET',\n\t      constant:\n\t        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET',\n\t    },\n\t    contains: [\n\t      TPDATA,\n\t      TPIO,\n\t      {\n\t        className: 'keyword',\n\t        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n\t      },\n\t      {\n\t        /* this is for cases like ,CALL */\n\t        className: 'keyword',\n\t        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n\t      },\n\t      {\n\t        /* this is for cases like CNT100 where the default lexemes do not\n\t         * separate the keyword and the number */\n\t        className: 'keyword',\n\t        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n\t      },\n\t      {\n\t        /* to catch numbers that do not have a word boundary on the left */\n\t        className: 'number',\n\t        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n\t        relevance: 0\n\t      },\n\t      hljs.COMMENT('//', '[;$]'),\n\t      hljs.COMMENT('!', '[;$]'),\n\t      hljs.COMMENT('--eg:', '$'),\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\\'', end: '\\''\n\t      },\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'variable',\n\t        begin: '\\\\$[A-Za-z0-9_]+'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('twig', function(hljs) {\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)'\n\t  };\n\t\n\t  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\n\t                  'max min parent random range source template_from_string';\n\t\n\t  var FUNCTIONS = {\n\t    className: 'function',\n\t    beginKeywords: FUNCTION_NAMES,\n\t    relevance: 0,\n\t    contains: [\n\t      PARAMS\n\t    ]\n\t  };\n\t\n\t  var FILTER = {\n\t    className: 'filter',\n\t    begin: /\\|[A-Za-z_]+:?/,\n\t    keywords:\n\t      'abs batch capitalize convert_encoding date date_modify default ' +\n\t      'escape first format join json_encode keys last length lower ' +\n\t      'merge nl2br number_format raw replace reverse round slice sort split ' +\n\t      'striptags title trim upper url_encode',\n\t    contains: [\n\t      FUNCTIONS\n\t    ]\n\t  };\n\t\n\t  var TAGS = 'autoescape block do embed extends filter flush for ' +\n\t    'if import include macro sandbox set spaceless use verbatim';\n\t\n\t  TAGS = TAGS + ' ' + TAGS.split(' ').map(function(t){return 'end' + t}).join(' ');\n\t\n\t  return {\n\t    aliases: ['craftcms'],\n\t    case_insensitive: true,\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      hljs.COMMENT(/\\{#/, /#}/),\n\t      {\n\t        className: 'template_tag',\n\t        begin: /\\{%/, end: /%}/,\n\t        keywords: TAGS,\n\t        contains: [FILTER, FUNCTIONS]\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: /\\{\\{/, end: /}}/,\n\t        contains: [FILTER, FUNCTIONS]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('typescript', function(hljs) {\n\t  var KEYWORDS = {\n\t    keyword:\n\t      'in if for while finally var new function|0 do return void else break catch ' +\n\t      'instanceof with throw case default try this switch continue typeof delete ' +\n\t      'let yield const class public private get set super ' +\n\t      'static implements enum export import declare type protected',\n\t    literal:\n\t      'true false null undefined NaN Infinity',\n\t    built_in:\n\t      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n\t      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n\t      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n\t      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n\t      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n\t      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n\t      'module console window document any number boolean string void'\n\t  };\n\t\n\t  return {\n\t    aliases: ['ts'],\n\t    keywords: KEYWORDS,\n\t    contains: [\n\t      {\n\t        className: 'pi',\n\t        begin: /^\\s*['\"]use strict['\"]/,\n\t        relevance: 0\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t          { begin: '\\\\b(0[bB][01]+)' },\n\t          { begin: '\\\\b(0[oO][0-7]+)' },\n\t          { begin: hljs.C_NUMBER_RE }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      { // \"value\" container\n\t        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n\t        keywords: 'return throw case',\n\t        contains: [\n\t          hljs.C_LINE_COMMENT_MODE,\n\t          hljs.C_BLOCK_COMMENT_MODE,\n\t          hljs.REGEXP_MODE\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        begin: 'function', end: /[\\{;]/, excludeEnd: true,\n\t        keywords: KEYWORDS,\n\t        contains: [\n\t          'self',\n\t          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n\t          {\n\t            className: 'params',\n\t            begin: /\\(/, end: /\\)/,\n\t            excludeBegin: true,\n\t            excludeEnd: true,\n\t            keywords: KEYWORDS,\n\t            contains: [\n\t              hljs.C_LINE_COMMENT_MODE,\n\t              hljs.C_BLOCK_COMMENT_MODE\n\t            ],\n\t            illegal: /[\"'\\(]/\n\t          }\n\t        ],\n\t        illegal: /\\[|%/,\n\t        relevance: 0 // () => {} is more typical in TypeScript\n\t      },\n\t      {\n\t        className: 'constructor',\n\t        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true,\n\t        relevance: 10\n\t      },\n\t      {\n\t        className: 'module',\n\t        beginKeywords: 'module', end: /\\{/, excludeEnd: true\n\t      },\n\t      {\n\t        className: 'interface',\n\t        beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n\t        keywords: 'interface extends'\n\t      },\n\t      {\n\t        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n\t      },\n\t      {\n\t        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('vala', function(hljs) {\n\t  return {\n\t    keywords: {\n\t      keyword:\n\t        // Value types\n\t        'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +\n\t        'uint16 uint32 uint64 float double bool struct enum string void ' +\n\t        // Reference types\n\t        'weak unowned owned ' +\n\t        // Modifiers\n\t        'async signal static abstract interface override ' +\n\t        // Control Structures\n\t        'while do for foreach else switch case break default return try catch ' +\n\t        // Visibility\n\t        'public private protected internal ' +\n\t        // Other\n\t        'using new this get set const stdout stdin stderr var',\n\t      built_in:\n\t        'DBus GLib CCode Gee Object',\n\t      literal:\n\t        'false true null'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface delegate namespace', end: '{', excludeEnd: true,\n\t        illegal: '[^,:\\\\n\\\\s\\\\.]',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        className: 'string',\n\t        begin: '\"\"\"', end: '\"\"\"',\n\t        relevance: 5\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '^#', end: '$',\n\t        relevance: 2\n\t      },\n\t      {\n\t        className: 'constant',\n\t        begin: ' [A-Z_]+ ',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('vbnet', function(hljs) {\n\t  return {\n\t    aliases: ['vb'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval ' + /* a-b */\n\t        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\n\t        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\n\t        'get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue ' + /* g-i */\n\t        'join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass ' + /* j-m */\n\t        'namespace narrowing new next not notinheritable notoverridable ' + /* n */\n\t        'of off on operator option optional or order orelse overloads overridable overrides ' + /* o */\n\t        'paramarray partial preserve private property protected public ' + /* p */\n\t        'raiseevent readonly redim rem removehandler resume return ' + /* r */\n\t        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\n\t        'take text then throw to try unicode until using when where while widening with withevents writeonly xor', /* t-x */\n\t      built_in:\n\t        'boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype ' +  /* b-c */\n\t        'date decimal directcast double gettype getxmlnamespace iif integer long object ' + /* d-o */\n\t        'sbyte short single string trycast typeof uinteger ulong ushort', /* s-u */\n\t      literal:\n\t        'true false nothing'\n\t    },\n\t    illegal: '//|{|}|endif|gosub|variant|wend', /* reserved deprecated keywords */\n\t    contains: [\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n\t      hljs.COMMENT(\n\t        '\\'',\n\t        '$',\n\t        {\n\t          returnBegin: true,\n\t          contains: [\n\t            {\n\t              className: 'xmlDocTag',\n\t              begin: '\\'\\'\\'|<!--|-->',\n\t              contains: [hljs.PHRASAL_WORDS_MODE]\n\t            },\n\t            {\n\t              className: 'xmlDocTag',\n\t              begin: '</?', end: '>',\n\t              contains: [hljs.PHRASAL_WORDS_MODE]\n\t            }\n\t          ]\n\t        }\n\t      ),\n\t      hljs.C_NUMBER_MODE,\n\t      {\n\t        className: 'preprocessor',\n\t        begin: '#', end: '$',\n\t        keywords: 'if else elseif end region externalsource'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('vbscript', function(hljs) {\n\t  return {\n\t    aliases: ['vbs'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'call class const dim do loop erase execute executeglobal exit for each next function ' +\n\t        'if then else on error option explicit new private property let get public randomize ' +\n\t        'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +\n\t        'class_initialize class_terminate default preserve in me byval byref step resume goto',\n\t      built_in:\n\t        'lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +\n\t        'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +\n\t        'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +\n\t        'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +\n\t        'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +\n\t        'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +\n\t        'strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion ' +\n\t        'scriptengine split scriptengineminorversion cint sin datepart ltrim sqr ' +\n\t        'scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw ' +\n\t        'chrw regexp server response request cstr err',\n\t      literal:\n\t        'true false null nothing empty'\n\t    },\n\t    illegal: '//',\n\t    contains: [\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n\t      hljs.COMMENT(\n\t        /'/,\n\t        /$/,\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      hljs.C_NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('vbscript-html', function(hljs) {\n\t  return {\n\t    subLanguage: 'xml',\n\t    contains: [\n\t      {\n\t        begin: '<%', end: '%>',\n\t        subLanguage: 'vbscript'\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('verilog', function(hljs) {\n\t  return {\n\t    aliases: ['v'],\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'always and assign begin buf bufif0 bufif1 case casex casez cmos deassign ' +\n\t        'default defparam disable edge else end endcase endfunction endmodule ' +\n\t        'endprimitive endspecify endtable endtask event for force forever fork ' +\n\t        'function if ifnone initial inout input join macromodule module nand ' +\n\t        'negedge nmos nor not notif0 notif1 or output parameter pmos posedge ' +\n\t        'primitive pulldown pullup rcmos release repeat rnmos rpmos rtran ' +\n\t        'rtranif0 rtranif1 specify specparam table task timescale tran ' +\n\t        'tranif0 tranif1 wait while xnor xor',\n\t      typename:\n\t        'highz0 highz1 integer large medium pull0 pull1 real realtime reg ' +\n\t        'scalared signed small strong0 strong1 supply0 supply0 supply1 supply1 ' +\n\t        'time tri tri0 tri1 triand trior trireg vectored wand weak0 weak1 wire wor'\n\t    },\n\t    contains: [\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b(\\\\d+\\'(b|h|o|d|B|H|O|D))?[0-9xzXZ]+',\n\t        contains: [hljs.BACKSLASH_ESCAPE],\n\t        relevance: 0\n\t      },\n\t      /* ports in instances */\n\t      {\n\t        className: 'typename',\n\t        begin: '\\\\.\\\\w+',\n\t        relevance: 0\n\t      },\n\t      /* parameters to instances */\n\t      {\n\t        className: 'value',\n\t        begin: '#\\\\((?!parameter).+\\\\)'\n\t      },\n\t      /* operators */\n\t      {\n\t        className: 'keyword',\n\t        begin: '\\\\+|-|\\\\*|/|%|<|>|=|#|`|\\\\!|&|\\\\||@|:|\\\\^|~|\\\\{|\\\\}',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  }; // return\n\t});\n\t\n\thljs.registerLanguage('vhdl', function(hljs) {\n\t  // Regular expression for VHDL numeric literals.\n\t\n\t  // Decimal literal:\n\t  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n\t  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n\t  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n\t  // Based literal:\n\t  var BASED_INTEGER_RE = '\\\\w+';\n\t  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\t\n\t  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\t\n\t  return {\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'abs access after alias all and architecture array assert attribute begin block ' +\n\t        'body buffer bus case component configuration constant context cover disconnect ' +\n\t        'downto default else elsif end entity exit fairness file for force function generate ' +\n\t        'generic group guarded if impure in inertial inout is label library linkage literal ' +\n\t        'loop map mod nand new next nor not null of on open or others out package port ' +\n\t        'postponed procedure process property protected pure range record register reject ' +\n\t        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\n\t        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\n\t        'unaffected units until use variable vmode vprop vunit wait when while with xnor xor',\n\t      typename:\n\t        'boolean bit character severity_level integer time delay_length natural positive ' +\n\t        'string bit_vector file_open_kind file_open_status std_ulogic std_ulogic_vector ' +\n\t        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\n\t        'real_vector time_vector'\n\t    },\n\t    illegal: '{',\n\t    contains: [\n\t      hljs.C_BLOCK_COMMENT_MODE,        // VHDL-2008 block commenting.\n\t      hljs.COMMENT('--', '$'),\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'number',\n\t        begin: NUMBER_RE,\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'literal',\n\t        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      {\n\t        className: 'attribute',\n\t        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('vim', function(hljs) {\n\t  return {\n\t    lexemes: /[!#@\\w]+/,\n\t    keywords: {\n\t      keyword: //ex command\n\t        // express version except: ! & * < = > !! # @ @@\n\t        'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+\n\t        'cp cpf cq cr cs cst cu cuna cunme cw d|0 delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu g|0 go gr grepa gu gv ha h|0 helpf helpg helpt hi hid his i|0 ia iabc if ij il im imapc '+\n\t        'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs n|0 new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+\n\t        'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf q|0 quita qa r|0 rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv s|0 sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+\n\t        'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync t|0 tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+\n\t        'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up v|0 ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+\n\t        // full version\n\t        'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+\n\t        'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+\n\t        'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+\n\t        'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+\n\t        'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+\n\t        'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+\n\t        'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+\n\t        'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+\n\t        'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+\n\t        'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+\n\t        'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',\n\t      built_in: //built in func\n\t        'abs acos add and append argc argidx argv asin atan atan2 browse browsedir bufexists buflisted bufloaded bufname bufnr bufwinnr byte2line byteidx call ceil changenr char2nr cindent clearmatches col complete complete_add complete_check confirm copy cos cosh count cscope_connection cursor '+\n\t        'deepcopy delete did_filetype diff_filler diff_hlID empty escape eval eventhandler executable exists exp expand extend feedkeys filereadable filewritable filter finddir findfile float2nr floor fmod fnameescape fnamemodify foldclosed foldclosedend foldlevel foldtext foldtextresult foreground function '+\n\t        'garbagecollect get getbufline getbufvar getchar getcharmod getcmdline getcmdpos getcmdtype getcwd getfontname getfperm getfsize getftime getftype getline getloclist getmatches getpid getpos getqflist getreg getregtype gettabvar gettabwinvar getwinposx getwinposy getwinvar glob globpath has has_key '+\n\t        'haslocaldir hasmapto histadd histdel histget histnr hlexists hlID hostname iconv indent index input inputdialog inputlist inputrestore inputsave inputsecret insert invert isdirectory islocked items join keys len libcall libcallnr line line2byte lispindent localtime log log10 luaeval map maparg mapcheck '+\n\t        'match matchadd matcharg matchdelete matchend matchlist matchstr max min mkdir mode mzeval nextnonblank nr2char or pathshorten pow prevnonblank printf pumvisible py3eval pyeval range readfile reltime reltimestr remote_expr remote_foreground remote_peek remote_read remote_send remove rename repeat '+\n\t        'resolve reverse round screenattr screenchar screencol screenrow search searchdecl searchpair searchpairpos searchpos server2client serverlist setbufvar setcmdpos setline setloclist setmatches setpos setqflist setreg settabvar settabwinvar setwinvar sha256 shellescape shiftwidth simplify sin '+\n\t        'sinh sort soundfold spellbadword spellsuggest split sqrt str2float str2nr strchars strdisplaywidth strftime stridx string strlen strpart strridx strtrans strwidth submatch substitute synconcealed synID synIDattr '+\n\t        'synIDtrans synstack system tabpagebuflist tabpagenr tabpagewinnr tagfiles taglist tan tanh tempname tolower toupper tr trunc type undofile undotree values virtcol visualmode wildmenumode winbufnr wincol winheight winline winnr winrestcmd winrestview winsaveview winwidth writefile xor'\n\t    },\n\t    illegal: /[{:]/,\n\t    contains: [\n\t      hljs.NUMBER_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        // quote with escape, comment as quote\n\t        begin: /\"((\\\\\")|[^\"\\n])*(\"|\\n)/\n\t      },\n\t      {\n\t        className: 'variable',\n\t        begin: /[bwtglsav]:[\\w\\d_]*/\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function function!', end: '$',\n\t        relevance: 0,\n\t        contains: [\n\t          hljs.TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)'\n\t          }\n\t        ]\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('x86asm', function(hljs) {\n\t  return {\n\t    case_insensitive: true,\n\t    lexemes: '\\\\.?' + hljs.IDENT_RE,\n\t    keywords: {\n\t      keyword:\n\t        'lock rep repe repz repne repnz xaquire xrelease bnd nobnd ' +\n\t        'aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63',\n\t      literal:\n\t        // Instruction pointer\n\t        'ip eip rip ' +\n\t        // 8-bit registers\n\t        'al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ' +\n\t        // 16-bit registers\n\t        'ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w ' +\n\t        // 32-bit registers\n\t        'eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d ' +\n\t        // 64-bit registers\n\t        'rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 ' +\n\t        // Segment registers\n\t        'cs ds es fs gs ss ' +\n\t        // Floating point stack registers\n\t        'st st0 st1 st2 st3 st4 st5 st6 st7 ' +\n\t        // MMX Registers\n\t        'mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 ' +\n\t        // SSE registers\n\t        'xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 ' +\n\t        'xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ' +\n\t        // AVX registers\n\t        'ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ' +\n\t        'ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 ' +\n\t        // AVX-512F registers\n\t        'zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 ' +\n\t        'zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 ' +\n\t        // AVX-512F mask registers\n\t        'k0 k1 k2 k3 k4 k5 k6 k7 ' +\n\t        // Bound (MPX) register\n\t        'bnd0 bnd1 bnd2 bnd3 ' +\n\t        // Special register\n\t        'cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 ' +\n\t        // NASM altreg package\n\t        'r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b ' +\n\t        'r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d ' +\n\t        'r0h r1h r2h r3h ' +\n\t        'r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l',\n\t\n\t      pseudo:\n\t        'db dw dd dq dt ddq do dy dz ' +\n\t        'resb resw resd resq rest resdq reso resy resz ' +\n\t        'incbin equ times',\n\t\n\t      preprocessor:\n\t        '%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif ' +\n\t        '%ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep ' +\n\t        '%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment ' +\n\t        '.nolist ' +\n\t        'byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr ' +\n\t        '__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ ' +\n\t        '__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend ' +\n\t        'align alignb sectalign daz nodaz up down zero default option assume public ',\n\t\n\t      built_in:\n\t        'bits use16 use32 use64 default section segment absolute extern global common cpu float ' +\n\t        '__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ ' +\n\t        '__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ ' +\n\t        '__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e ' +\n\t        'float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__'\n\t    },\n\t    contains: [\n\t      hljs.COMMENT(\n\t        ';',\n\t        '$',\n\t        {\n\t          relevance: 0\n\t        }\n\t      ),\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t          // Float number and x87 BCD\n\t          {\n\t            begin: '\\\\b(?:([0-9][0-9_]*)?\\\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|' +\n\t                   '(0[Xx])?[0-9][0-9_]*\\\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\\\b',\n\t            relevance: 0\n\t          },\n\t\n\t          // Hex number in $\n\t          { begin: '\\\\$[0-9][0-9A-Fa-f]*', relevance: 0 },\n\t\n\t          // Number in H,D,T,Q,O,B,Y suffix\n\t          { begin: '\\\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\\\b' },\n\t\n\t          // Number in X,D,T,Q,O,B,Y prefix\n\t          { begin: '\\\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\\\b'}\n\t        ]\n\t      },\n\t      // Double quote string\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        className: 'string',\n\t        variants: [\n\t          // Single-quoted string\n\t          { begin: '\\'', end: '[^\\\\\\\\]\\'' },\n\t          // Backquoted string\n\t          { begin: '`', end: '[^\\\\\\\\]`' },\n\t          // Section name\n\t          { begin: '\\\\.[A-Za-z0-9]+' }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'label',\n\t        variants: [\n\t          // Global label and local label\n\t          { begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)' },\n\t          // Macro-local label\n\t          { begin: '^\\\\s*%%[A-Za-z0-9_$#@~.?]*:' }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      // Macro parameter\n\t      {\n\t        className: 'argument',\n\t        begin: '%[0-9]+',\n\t        relevance: 0\n\t      },\n\t      // Macro parameter\n\t      {\n\t        className: 'built_in',\n\t        begin: '%!\\S+',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('xl', function(hljs) {\n\t  var BUILTIN_MODULES = 'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\n\t\n\t  var XL_KEYWORDS = {\n\t    keyword: 'if then else do while until for loop import with is as where when by data constant',\n\t    literal: 'true false nil',\n\t    type: 'integer real text name boolean symbol infix prefix postfix block tree',\n\t    built_in: 'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin acos atan exp expm1 log log2 log10 log1p pi at',\n\t    module: BUILTIN_MODULES,\n\t    id: 'text_length text_range text_find text_replace contains page slide basic_slide title_slide title subtitle fade_in fade_out fade_at clear_color color line_color line_width texture_wrap texture_transform texture scale_?x scale_?y scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y rotate_?z? rectangle circle ellipse sphere path line_to move_to quad_to curve_to theme background contents locally time mouse_?x mouse_?y mouse_buttons'\n\t  };\n\t\n\t  var XL_CONSTANT = {\n\t    className: 'constant',\n\t    begin: '[A-Z][A-Z_0-9]+',\n\t    relevance: 0\n\t  };\n\t  var XL_VARIABLE = {\n\t    className: 'variable',\n\t    begin: '([A-Z][a-z_0-9]+)+',\n\t    relevance: 0\n\t  };\n\t  var XL_ID = {\n\t    className: 'id',\n\t    begin: '[a-z][a-z_0-9]+',\n\t    relevance: 0\n\t  };\n\t\n\t  var DOUBLE_QUOTE_TEXT = {\n\t    className: 'string',\n\t    begin: '\"', end: '\"', illegal: '\\\\n'\n\t  };\n\t  var SINGLE_QUOTE_TEXT = {\n\t    className: 'string',\n\t    begin: '\\'', end: '\\'', illegal: '\\\\n'\n\t  };\n\t  var LONG_TEXT = {\n\t    className: 'string',\n\t    begin: '<<', end: '>>'\n\t  };\n\t  var BASED_NUMBER = {\n\t    className: 'number',\n\t    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?',\n\t    relevance: 10\n\t  };\n\t  var IMPORT = {\n\t    className: 'import',\n\t    beginKeywords: 'import', end: '$',\n\t    keywords: {\n\t      keyword: 'import',\n\t      module: BUILTIN_MODULES\n\t    },\n\t    relevance: 0,\n\t    contains: [DOUBLE_QUOTE_TEXT]\n\t  };\n\t  var FUNCTION_DEFINITION = {\n\t    className: 'function',\n\t    begin: '[a-z].*->'\n\t  };\n\t  return {\n\t    aliases: ['tao'],\n\t    lexemes: /[a-zA-Z][a-zA-Z0-9_?]*/,\n\t    keywords: XL_KEYWORDS,\n\t    contains: [\n\t    hljs.C_LINE_COMMENT_MODE,\n\t    hljs.C_BLOCK_COMMENT_MODE,\n\t    DOUBLE_QUOTE_TEXT,\n\t    SINGLE_QUOTE_TEXT,\n\t    LONG_TEXT,\n\t    FUNCTION_DEFINITION,\n\t    IMPORT,\n\t    XL_CONSTANT,\n\t    XL_VARIABLE,\n\t    XL_ID,\n\t    BASED_NUMBER,\n\t    hljs.NUMBER_MODE\n\t    ]\n\t  };\n\t});\n\t\n\thljs.registerLanguage('xquery', function(hljs) {\n\t  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n\t    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n\t    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n\t    'at tumbling window sliding window start when only end when previous next stable ascending' +\n\t    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n\t    'or to union intersect instance of treat as castable cast map array delete insert into' +\n\t    'replace value rename copy modify update';\n\t  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n\t  var VAR = {\n\t    className: 'variable',\n\t    begin: /\\$[a-zA-Z0-9\\-]+/,\n\t    relevance: 5\n\t  };\n\t\n\t  var NUMBER = {\n\t    className: 'number',\n\t    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n\t    relevance: 0\n\t  };\n\t\n\t  var STRING = {\n\t    className: 'string',\n\t    variants: [\n\t      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n\t      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n\t    ]\n\t  };\n\t\n\t  var ANNOTATION = {\n\t    className: 'decorator',\n\t    begin: '%\\\\w+'\n\t  };\n\t\n\t  var COMMENT = {\n\t    className: 'comment',\n\t    begin: '\\\\(:', end: ':\\\\)',\n\t    relevance: 10,\n\t    contains: [\n\t      {\n\t        className: 'doc', begin: '@\\\\w+'\n\t      }\n\t    ]\n\t  };\n\t\n\t  var METHOD = {\n\t    begin: '{', end: '}'\n\t  };\n\t\n\t  var CONTAINS = [\n\t    VAR,\n\t    STRING,\n\t    NUMBER,\n\t    COMMENT,\n\t    ANNOTATION,\n\t    METHOD\n\t  ];\n\t  METHOD.contains = CONTAINS;\n\t\n\t\n\t  return {\n\t    aliases: ['xpath', 'xq'],\n\t    case_insensitive: false,\n\t    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n\t    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n\t    keywords: {\n\t      keyword: KEYWORDS,\n\t      literal: LITERAL\n\t    },\n\t    contains: CONTAINS\n\t  };\n\t});\n\t\n\thljs.registerLanguage('zephir', function(hljs) {\n\t  var STRING = {\n\t    className: 'string',\n\t    contains: [hljs.BACKSLASH_ESCAPE],\n\t    variants: [\n\t      {\n\t        begin: 'b\"', end: '\"'\n\t      },\n\t      {\n\t        begin: 'b\\'', end: '\\''\n\t      },\n\t      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n\t    ]\n\t  };\n\t  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n\t  return {\n\t    aliases: ['zep'],\n\t    case_insensitive: true,\n\t    keywords:\n\t    'and include_once list abstract global private echo interface as static endswitch ' +\n\t    'array null if endwhile or const for endforeach self var let while isset public ' +\n\t    'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n\t    'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n\t    'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n\t    'enddeclare final try switch continue endfor endif declare unset true false ' +\n\t    'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n\t    'yield finally int uint long ulong char uchar double float bool boolean string' +\n\t    'likely unlikely',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.HASH_COMMENT_MODE,\n\t      hljs.COMMENT(\n\t        '/\\\\*',\n\t        '\\\\*/',\n\t        {\n\t          contains: [\n\t            {\n\t              className: 'doctag',\n\t              begin: '@[A-Za-z]+'\n\t            }\n\t          ]\n\t        }\n\t      ),\n\t      hljs.COMMENT(\n\t        '__halt_compiler.+?;',\n\t        false,\n\t        {\n\t          endsWithParent: true,\n\t          keywords: '__halt_compiler',\n\t          lexemes: hljs.UNDERSCORE_IDENT_RE\n\t        }\n\t      ),\n\t      {\n\t        className: 'string',\n\t        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n\t        contains: [hljs.BACKSLASH_ESCAPE]\n\t      },\n\t      {\n\t        // swallow composed identifiers to avoid parsing them as keywords\n\t        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n\t        illegal: '\\\\$|\\\\[|%',\n\t        contains: [\n\t          hljs.UNDERSCORE_TITLE_MODE,\n\t          {\n\t            className: 'params',\n\t            begin: '\\\\(', end: '\\\\)',\n\t            contains: [\n\t              'self',\n\t              hljs.C_BLOCK_COMMENT_MODE,\n\t              STRING,\n\t              NUMBER\n\t            ]\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n\t        illegal: /[:\\(\\$\"]/,\n\t        contains: [\n\t          {beginKeywords: 'extends implements'},\n\t          hljs.UNDERSCORE_TITLE_MODE\n\t        ]\n\t      },\n\t      {\n\t        beginKeywords: 'namespace', end: ';',\n\t        illegal: /[\\.']/,\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      {\n\t        beginKeywords: 'use', end: ';',\n\t        contains: [hljs.UNDERSCORE_TITLE_MODE]\n\t      },\n\t      {\n\t        begin: '=>' // No markup, just a relevance booster\n\t      },\n\t      STRING,\n\t      NUMBER\n\t    ]\n\t  };\n\t});\n\t\n\t  return hljs;\n\t}));\n\n\n/***/ },\n\n/***/ 28:\n/***/ function(module, exports) {\n\n\t/**\n\t * @license AngularJS v1.2.29\n\t * (c) 2010-2014 Google, Inc. http://angularjs.org\n\t * License: MIT\n\t */\n\t(function(window, angular, undefined) {'use strict';\n\t\n\t/* jshint maxlen: false */\n\t\n\t/**\n\t * @ngdoc module\n\t * @name ngAnimate\n\t * @description\n\t *\n\t * # ngAnimate\n\t *\n\t * The `ngAnimate` module provides support for JavaScript, CSS3 transition and CSS3 keyframe animation hooks within existing core and custom directives.\n\t *\n\t *\n\t * <div doc-module-components=\"ngAnimate\"></div>\n\t *\n\t * # Usage\n\t *\n\t * To see animations in action, all that is required is to define the appropriate CSS classes\n\t * or to register a JavaScript animation via the myModule.animation() function. The directives that support animation automatically are:\n\t * `ngRepeat`, `ngInclude`, `ngIf`, `ngSwitch`, `ngShow`, `ngHide`, `ngView` and `ngClass`. Custom directives can take advantage of animation\n\t * by using the `$animate` service.\n\t *\n\t * Below is a more detailed breakdown of the supported animation events provided by pre-existing ng directives:\n\t *\n\t * | Directive                                                 | Supported Animations                               |\n\t * |---------------------------------------------------------- |----------------------------------------------------|\n\t * | {@link ng.directive:ngRepeat#usage_animations ngRepeat}         | enter, leave and move                              |\n\t * | {@link ngRoute.directive:ngView#usage_animations ngView}        | enter and leave                                    |\n\t * | {@link ng.directive:ngInclude#usage_animations ngInclude}       | enter and leave                                    |\n\t * | {@link ng.directive:ngSwitch#usage_animations ngSwitch}         | enter and leave                                    |\n\t * | {@link ng.directive:ngIf#usage_animations ngIf}                 | enter and leave                                    |\n\t * | {@link ng.directive:ngClass#usage_animations ngClass}           | add and remove                                     |\n\t * | {@link ng.directive:ngShow#usage_animations ngShow & ngHide}    | add and remove (the ng-hide class value)           |\n\t * | {@link ng.directive:form#usage_animations form}                 | add and remove (dirty, pristine, valid, invalid & all other validations)                |\n\t * | {@link ng.directive:ngModel#usage_animations ngModel}           | add and remove (dirty, pristine, valid, invalid & all other validations)                |\n\t *\n\t * You can find out more information about animations upon visiting each directive page.\n\t *\n\t * Below is an example of how to apply animations to a directive that supports animation hooks:\n\t *\n\t * ```html\n\t * <style type=\"text/css\">\n\t * .slide.ng-enter, .slide.ng-leave {\n\t *   -webkit-transition:0.5s linear all;\n\t *   transition:0.5s linear all;\n\t * }\n\t *\n\t * .slide.ng-enter { }        /&#42; starting animations for enter &#42;/\n\t * .slide.ng-enter.ng-enter-active { } /&#42; terminal animations for enter &#42;/\n\t * .slide.ng-leave { }        /&#42; starting animations for leave &#42;/\n\t * .slide.ng-leave.ng-leave-active { } /&#42; terminal animations for leave &#42;/\n\t * </style>\n\t *\n\t * <!--\n\t * the animate service will automatically add .ng-enter and .ng-leave to the element\n\t * to trigger the CSS transition/animations\n\t * -->\n\t * <ANY class=\"slide\" ng-include=\"...\"></ANY>\n\t * ```\n\t *\n\t * Keep in mind that, by default, if an animation is running, any child elements cannot be animated\n\t * until the parent element's animation has completed. This blocking feature can be overridden by\n\t * placing the `ng-animate-children` attribute on a parent container tag.\n\t *\n\t * ```html\n\t * <div class=\"slide-animation\" ng-if=\"on\" ng-animate-children>\n\t *   <div class=\"fade-animation\" ng-if=\"on\">\n\t *     <div class=\"explode-animation\" ng-if=\"on\">\n\t *        ...\n\t *     </div>\n\t *   </div>\n\t * </div>\n\t * ```\n\t *\n\t * When the `on` expression value changes and an animation is triggered then each of the elements within\n\t * will all animate without the block being applied to child elements.\n\t *\n\t * <h2>CSS-defined Animations</h2>\n\t * The animate service will automatically apply two CSS classes to the animated element and these two CSS classes\n\t * are designed to contain the start and end CSS styling. Both CSS transitions and keyframe animations are supported\n\t * and can be used to play along with this naming structure.\n\t *\n\t * The following code below demonstrates how to perform animations using **CSS transitions** with Angular:\n\t *\n\t * ```html\n\t * <style type=\"text/css\">\n\t * /&#42;\n\t *  The animate class is apart of the element and the ng-enter class\n\t *  is attached to the element once the enter animation event is triggered\n\t * &#42;/\n\t * .reveal-animation.ng-enter {\n\t *  -webkit-transition: 1s linear all; /&#42; Safari/Chrome &#42;/\n\t *  transition: 1s linear all; /&#42; All other modern browsers and IE10+ &#42;/\n\t *\n\t *  /&#42; The animation preparation code &#42;/\n\t *  opacity: 0;\n\t * }\n\t *\n\t * /&#42;\n\t *  Keep in mind that you want to combine both CSS\n\t *  classes together to avoid any CSS-specificity\n\t *  conflicts\n\t * &#42;/\n\t * .reveal-animation.ng-enter.ng-enter-active {\n\t *  /&#42; The animation code itself &#42;/\n\t *  opacity: 1;\n\t * }\n\t * </style>\n\t *\n\t * <div class=\"view-container\">\n\t *   <div ng-view class=\"reveal-animation\"></div>\n\t * </div>\n\t * ```\n\t *\n\t * The following code below demonstrates how to perform animations using **CSS animations** with Angular:\n\t *\n\t * ```html\n\t * <style type=\"text/css\">\n\t * .reveal-animation.ng-enter {\n\t *   -webkit-animation: enter_sequence 1s linear; /&#42; Safari/Chrome &#42;/\n\t *   animation: enter_sequence 1s linear; /&#42; IE10+ and Future Browsers &#42;/\n\t * }\n\t * @-webkit-keyframes enter_sequence {\n\t *   from { opacity:0; }\n\t *   to { opacity:1; }\n\t * }\n\t * @keyframes enter_sequence {\n\t *   from { opacity:0; }\n\t *   to { opacity:1; }\n\t * }\n\t * </style>\n\t *\n\t * <div class=\"view-container\">\n\t *   <div ng-view class=\"reveal-animation\"></div>\n\t * </div>\n\t * ```\n\t *\n\t * Both CSS3 animations and transitions can be used together and the animate service will figure out the correct duration and delay timing.\n\t *\n\t * Upon DOM mutation, the event class is added first (something like `ng-enter`), then the browser prepares itself to add\n\t * the active class (in this case `ng-enter-active`) which then triggers the animation. The animation module will automatically\n\t * detect the CSS code to determine when the animation ends. Once the animation is over then both CSS classes will be\n\t * removed from the DOM. If a browser does not support CSS transitions or CSS animations then the animation will start and end\n\t * immediately resulting in a DOM element that is at its final state. This final state is when the DOM element\n\t * has no CSS transition/animation classes applied to it.\n\t *\n\t * <h3>CSS Staggering Animations</h3>\n\t * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n\t * curtain-like effect. The ngAnimate module, as of 1.2.0, supports staggering animations and the stagger effect can be\n\t * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n\t * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n\t * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n\t *\n\t * ```css\n\t * .my-animation.ng-enter {\n\t *   /&#42; standard transition code &#42;/\n\t *   -webkit-transition: 1s linear all;\n\t *   transition: 1s linear all;\n\t *   opacity:0;\n\t * }\n\t * .my-animation.ng-enter-stagger {\n\t *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n\t *   -webkit-transition-delay: 0.1s;\n\t *   transition-delay: 0.1s;\n\t *\n\t *   /&#42; in case the stagger doesn't work then these two values\n\t *    must be set to 0 to avoid an accidental CSS inheritance &#42;/\n\t *   -webkit-transition-duration: 0s;\n\t *   transition-duration: 0s;\n\t * }\n\t * .my-animation.ng-enter.ng-enter-active {\n\t *   /&#42; standard transition styles &#42;/\n\t *   opacity:1;\n\t * }\n\t * ```\n\t *\n\t * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n\t * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n\t * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n\t * will also be reset if more than 10ms has passed after the last animation has been fired.\n\t *\n\t * The following code will issue the **ng-leave-stagger** event on the element provided:\n\t *\n\t * ```js\n\t * var kids = parent.children();\n\t *\n\t * $animate.leave(kids[0]); //stagger index=0\n\t * $animate.leave(kids[1]); //stagger index=1\n\t * $animate.leave(kids[2]); //stagger index=2\n\t * $animate.leave(kids[3]); //stagger index=3\n\t * $animate.leave(kids[4]); //stagger index=4\n\t *\n\t * $timeout(function() {\n\t *   //stagger has reset itself\n\t *   $animate.leave(kids[5]); //stagger index=0\n\t *   $animate.leave(kids[6]); //stagger index=1\n\t * }, 100, false);\n\t * ```\n\t *\n\t * Stagger animations are currently only supported within CSS-defined animations.\n\t *\n\t * <h2>JavaScript-defined Animations</h2>\n\t * In the event that you do not want to use CSS3 transitions or CSS3 animations or if you wish to offer animations on browsers that do not\n\t * yet support CSS transitions/animations, then you can make use of JavaScript animations defined inside of your AngularJS module.\n\t *\n\t * ```js\n\t * //!annotate=\"YourApp\" Your AngularJS Module|Replace this or ngModule with the module that you used to define your application.\n\t * var ngModule = angular.module('YourApp', ['ngAnimate']);\n\t * ngModule.animation('.my-crazy-animation', function() {\n\t *   return {\n\t *     enter: function(element, done) {\n\t *       //run the animation here and call done when the animation is complete\n\t *       return function(cancelled) {\n\t *         //this (optional) function will be called when the animation\n\t *         //completes or when the animation is cancelled (the cancelled\n\t *         //flag will be set to true if cancelled).\n\t *       };\n\t *     },\n\t *     leave: function(element, done) { },\n\t *     move: function(element, done) { },\n\t *\n\t *     //animation that can be triggered before the class is added\n\t *     beforeAddClass: function(element, className, done) { },\n\t *\n\t *     //animation that can be triggered after the class is added\n\t *     addClass: function(element, className, done) { },\n\t *\n\t *     //animation that can be triggered before the class is removed\n\t *     beforeRemoveClass: function(element, className, done) { },\n\t *\n\t *     //animation that can be triggered after the class is removed\n\t *     removeClass: function(element, className, done) { }\n\t *   };\n\t * });\n\t * ```\n\t *\n\t * JavaScript-defined animations are created with a CSS-like class selector and a collection of events which are set to run\n\t * a javascript callback function. When an animation is triggered, $animate will look for a matching animation which fits\n\t * the element's CSS class attribute value and then run the matching animation event function (if found).\n\t * In other words, if the CSS classes present on the animated element match any of the JavaScript animations then the callback function will\n\t * be executed. It should be also noted that only simple, single class selectors are allowed (compound class selectors are not supported).\n\t *\n\t * Within a JavaScript animation, an object containing various event callback animation functions is expected to be returned.\n\t * As explained above, these callbacks are triggered based on the animation event. Therefore if an enter animation is run,\n\t * and the JavaScript animation is found, then the enter callback will handle that animation (in addition to the CSS keyframe animation\n\t * or transition code that is defined via a stylesheet).\n\t *\n\t */\n\t\n\tangular.module('ngAnimate', ['ng'])\n\t\n\t  /**\n\t   * @ngdoc provider\n\t   * @name $animateProvider\n\t   * @description\n\t   *\n\t   * The `$animateProvider` allows developers to register JavaScript animation event handlers directly inside of a module.\n\t   * When an animation is triggered, the $animate service will query the $animate service to find any animations that match\n\t   * the provided name value.\n\t   *\n\t   * Requires the {@link ngAnimate `ngAnimate`} module to be installed.\n\t   *\n\t   * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.\n\t   *\n\t   */\n\t  .directive('ngAnimateChildren', function() {\n\t    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';\n\t    return function(scope, element, attrs) {\n\t      var val = attrs.ngAnimateChildren;\n\t      if(angular.isString(val) && val.length === 0) { //empty attribute\n\t        element.data(NG_ANIMATE_CHILDREN, true);\n\t      } else {\n\t        scope.$watch(val, function(value) {\n\t          element.data(NG_ANIMATE_CHILDREN, !!value);\n\t        });\n\t      }\n\t    };\n\t  })\n\t\n\t  //this private service is only used within CSS-enabled animations\n\t  //IE8 + IE9 do not support rAF natively, but that is fine since they\n\t  //also don't support transitions and keyframes which means that the code\n\t  //below will never be used by the two browsers.\n\t  .factory('$$animateReflow', ['$$rAF', '$document', function($$rAF, $document) {\n\t    var bod = $document[0].body;\n\t    return function(fn) {\n\t      //the returned function acts as the cancellation function\n\t      return $$rAF(function() {\n\t        //the line below will force the browser to perform a repaint\n\t        //so that all the animated elements within the animation frame\n\t        //will be properly updated and drawn on screen. This is\n\t        //required to perform multi-class CSS based animations with\n\t        //Firefox. DO NOT REMOVE THIS LINE. DO NOT OPTIMIZE THIS LINE.\n\t        //THE MINIFIER WILL REMOVE IT OTHERWISE WHICH WILL RESULT IN AN\n\t        //UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND WILL\n\t        //TAKE YEARS AWAY FROM YOUR LIFE!\n\t        fn(bod.offsetWidth);\n\t      });\n\t    };\n\t  }])\n\t\n\t  .config(['$provide', '$animateProvider', function($provide, $animateProvider) {\n\t    var noop = angular.noop;\n\t    var forEach = angular.forEach;\n\t    var selectors = $animateProvider.$$selectors;\n\t\n\t    var ELEMENT_NODE = 1;\n\t    var NG_ANIMATE_STATE = '$$ngAnimateState';\n\t    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';\n\t    var NG_ANIMATE_CLASS_NAME = 'ng-animate';\n\t    var rootAnimateState = {running: true};\n\t\n\t    function extractElementNode(element) {\n\t      for(var i = 0; i < element.length; i++) {\n\t        var elm = element[i];\n\t        if(elm.nodeType == ELEMENT_NODE) {\n\t          return elm;\n\t        }\n\t      }\n\t    }\n\t\n\t    function prepareElement(element) {\n\t      return element && angular.element(element);\n\t    }\n\t\n\t    function stripCommentsFromElement(element) {\n\t      return angular.element(extractElementNode(element));\n\t    }\n\t\n\t    function isMatchingElement(elm1, elm2) {\n\t      return extractElementNode(elm1) == extractElementNode(elm2);\n\t    }\n\t\n\t    $provide.decorator('$animate', ['$delegate', '$injector', '$sniffer', '$rootElement', '$$asyncCallback', '$rootScope', '$document',\n\t                            function($delegate,   $injector,   $sniffer,   $rootElement,   $$asyncCallback,    $rootScope,   $document) {\n\t\n\t      var globalAnimationCounter = 0;\n\t      $rootElement.data(NG_ANIMATE_STATE, rootAnimateState);\n\t\n\t      // disable animations during bootstrap, but once we bootstrapped, wait again\n\t      // for another digest until enabling animations. The reason why we digest twice\n\t      // is because all structural animations (enter, leave and move) all perform a\n\t      // post digest operation before animating. If we only wait for a single digest\n\t      // to pass then the structural animation would render its animation on page load.\n\t      // (which is what we're trying to avoid when the application first boots up.)\n\t      $rootScope.$$postDigest(function() {\n\t        $rootScope.$$postDigest(function() {\n\t          rootAnimateState.running = false;\n\t        });\n\t      });\n\t\n\t      var classNameFilter = $animateProvider.classNameFilter();\n\t      var isAnimatableClassName = !classNameFilter\n\t              ? function() { return true; }\n\t              : function(className) {\n\t                return classNameFilter.test(className);\n\t              };\n\t\n\t      function blockElementAnimations(element) {\n\t        var data = element.data(NG_ANIMATE_STATE) || {};\n\t        data.running = true;\n\t        element.data(NG_ANIMATE_STATE, data);\n\t      }\n\t\n\t      function lookup(name) {\n\t        if (name) {\n\t          var matches = [],\n\t              flagMap = {},\n\t              classes = name.substr(1).split('.');\n\t\n\t          //the empty string value is the default animation\n\t          //operation which performs CSS transition and keyframe\n\t          //animations sniffing. This is always included for each\n\t          //element animation procedure if the browser supports\n\t          //transitions and/or keyframe animations. The default\n\t          //animation is added to the top of the list to prevent\n\t          //any previous animations from affecting the element styling\n\t          //prior to the element being animated.\n\t          if ($sniffer.transitions || $sniffer.animations) {\n\t            matches.push($injector.get(selectors['']));\n\t          }\n\t\n\t          for(var i=0; i < classes.length; i++) {\n\t            var klass = classes[i],\n\t                selectorFactoryName = selectors[klass];\n\t            if(selectorFactoryName && !flagMap[klass]) {\n\t              matches.push($injector.get(selectorFactoryName));\n\t              flagMap[klass] = true;\n\t            }\n\t          }\n\t          return matches;\n\t        }\n\t      }\n\t\n\t      function animationRunner(element, animationEvent, className) {\n\t        //transcluded directives may sometimes fire an animation using only comment nodes\n\t        //best to catch this early on to prevent any animation operations from occurring\n\t        var node = element[0];\n\t        if(!node) {\n\t          return;\n\t        }\n\t\n\t        var isSetClassOperation = animationEvent == 'setClass';\n\t        var isClassBased = isSetClassOperation ||\n\t                           animationEvent == 'addClass' ||\n\t                           animationEvent == 'removeClass';\n\t\n\t        var classNameAdd, classNameRemove;\n\t        if(angular.isArray(className)) {\n\t          classNameAdd = className[0];\n\t          classNameRemove = className[1];\n\t          className = classNameAdd + ' ' + classNameRemove;\n\t        }\n\t\n\t        var currentClassName = element.attr('class');\n\t        var classes = currentClassName + ' ' + className;\n\t        if(!isAnimatableClassName(classes)) {\n\t          return;\n\t        }\n\t\n\t        var beforeComplete = noop,\n\t            beforeCancel = [],\n\t            before = [],\n\t            afterComplete = noop,\n\t            afterCancel = [],\n\t            after = [];\n\t\n\t        var animationLookup = (' ' + classes).replace(/\\s+/g,'.');\n\t        forEach(lookup(animationLookup), function(animationFactory) {\n\t          var created = registerAnimation(animationFactory, animationEvent);\n\t          if(!created && isSetClassOperation) {\n\t            registerAnimation(animationFactory, 'addClass');\n\t            registerAnimation(animationFactory, 'removeClass');\n\t          }\n\t        });\n\t\n\t        function registerAnimation(animationFactory, event) {\n\t          var afterFn = animationFactory[event];\n\t          var beforeFn = animationFactory['before' + event.charAt(0).toUpperCase() + event.substr(1)];\n\t          if(afterFn || beforeFn) {\n\t            if(event == 'leave') {\n\t              beforeFn = afterFn;\n\t              //when set as null then animation knows to skip this phase\n\t              afterFn = null;\n\t            }\n\t            after.push({\n\t              event : event, fn : afterFn\n\t            });\n\t            before.push({\n\t              event : event, fn : beforeFn\n\t            });\n\t            return true;\n\t          }\n\t        }\n\t\n\t        function run(fns, cancellations, allCompleteFn) {\n\t          var animations = [];\n\t          forEach(fns, function(animation) {\n\t            animation.fn && animations.push(animation);\n\t          });\n\t\n\t          var count = 0;\n\t          function afterAnimationComplete(index) {\n\t            if(cancellations) {\n\t              (cancellations[index] || noop)();\n\t              if(++count < animations.length) return;\n\t              cancellations = null;\n\t            }\n\t            allCompleteFn();\n\t          }\n\t\n\t          //The code below adds directly to the array in order to work with\n\t          //both sync and async animations. Sync animations are when the done()\n\t          //operation is called right away. DO NOT REFACTOR!\n\t          forEach(animations, function(animation, index) {\n\t            var progress = function() {\n\t              afterAnimationComplete(index);\n\t            };\n\t            switch(animation.event) {\n\t              case 'setClass':\n\t                cancellations.push(animation.fn(element, classNameAdd, classNameRemove, progress));\n\t                break;\n\t              case 'addClass':\n\t                cancellations.push(animation.fn(element, classNameAdd || className,     progress));\n\t                break;\n\t              case 'removeClass':\n\t                cancellations.push(animation.fn(element, classNameRemove || className,  progress));\n\t                break;\n\t              default:\n\t                cancellations.push(animation.fn(element, progress));\n\t                break;\n\t            }\n\t          });\n\t\n\t          if(cancellations && cancellations.length === 0) {\n\t            allCompleteFn();\n\t          }\n\t        }\n\t\n\t        return {\n\t          node : node,\n\t          event : animationEvent,\n\t          className : className,\n\t          isClassBased : isClassBased,\n\t          isSetClassOperation : isSetClassOperation,\n\t          before : function(allCompleteFn) {\n\t            beforeComplete = allCompleteFn;\n\t            run(before, beforeCancel, function() {\n\t              beforeComplete = noop;\n\t              allCompleteFn();\n\t            });\n\t          },\n\t          after : function(allCompleteFn) {\n\t            afterComplete = allCompleteFn;\n\t            run(after, afterCancel, function() {\n\t              afterComplete = noop;\n\t              allCompleteFn();\n\t            });\n\t          },\n\t          cancel : function() {\n\t            if(beforeCancel) {\n\t              forEach(beforeCancel, function(cancelFn) {\n\t                (cancelFn || noop)(true);\n\t              });\n\t              beforeComplete(true);\n\t            }\n\t            if(afterCancel) {\n\t              forEach(afterCancel, function(cancelFn) {\n\t                (cancelFn || noop)(true);\n\t              });\n\t              afterComplete(true);\n\t            }\n\t          }\n\t        };\n\t      }\n\t\n\t      /**\n\t       * @ngdoc service\n\t       * @name $animate\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * The `$animate` service provides animation detection support while performing DOM operations (enter, leave and move) as well as during addClass and removeClass operations.\n\t       * When any of these operations are run, the $animate service\n\t       * will examine any JavaScript-defined animations (which are defined by using the $animateProvider provider object)\n\t       * as well as any CSS-defined animations against the CSS classes present on the element once the DOM operation is run.\n\t       *\n\t       * The `$animate` service is used behind the scenes with pre-existing directives and animation with these directives\n\t       * will work out of the box without any extra configuration.\n\t       *\n\t       * Requires the {@link ngAnimate `ngAnimate`} module to be installed.\n\t       *\n\t       * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.\n\t       *\n\t       */\n\t      return {\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#enter\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Appends the element to the parentElement element that resides in the document and then runs the enter animation. Once\n\t         * the animation is started, the following CSS classes will be present on the element for the duration of the animation:\n\t         *\n\t         * Below is a breakdown of each step that occurs during enter animation:\n\t         *\n\t         * | Animation Step                                                                               | What the element class attribute looks like |\n\t         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n\t         * | 1. $animate.enter(...) is called                                                             | class=\"my-animation\"                        |\n\t         * | 2. element is inserted into the parentElement element or beside the afterElement element     | class=\"my-animation\"                        |\n\t         * | 3. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n\t         * | 4. the .ng-enter class is added to the element                                               | class=\"my-animation ng-animate ng-enter\"    |\n\t         * | 5. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-enter\"    |\n\t         * | 6. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-enter\"    |\n\t         * | 7. the .ng-enter-active and .ng-animate-active classes are added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-enter ng-enter-active\" |\n\t         * | 8. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-enter ng-enter-active\" |\n\t         * | 9. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n\t         * | 10. The doneCallback() callback is fired (if provided)                                       | class=\"my-animation\"                        |\n\t         *\n\t         * @param {DOMElement} element the element that will be the focus of the enter animation\n\t         * @param {DOMElement} parentElement the parent element of the element that will be the focus of the enter animation\n\t         * @param {DOMElement} afterElement the sibling element (which is the previous element) of the element that will be the focus of the enter animation\n\t         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n\t        */\n\t        enter : function(element, parentElement, afterElement, doneCallback) {\n\t          element = angular.element(element);\n\t          parentElement = prepareElement(parentElement);\n\t          afterElement = prepareElement(afterElement);\n\t\n\t          blockElementAnimations(element);\n\t          $delegate.enter(element, parentElement, afterElement);\n\t          $rootScope.$$postDigest(function() {\n\t            element = stripCommentsFromElement(element);\n\t            performAnimation('enter', 'ng-enter', element, parentElement, afterElement, noop, doneCallback);\n\t          });\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#leave\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Runs the leave animation operation and, upon completion, removes the element from the DOM. Once\n\t         * the animation is started, the following CSS classes will be added for the duration of the animation:\n\t         *\n\t         * Below is a breakdown of each step that occurs during leave animation:\n\t         *\n\t         * | Animation Step                                                                               | What the element class attribute looks like |\n\t         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n\t         * | 1. $animate.leave(...) is called                                                             | class=\"my-animation\"                        |\n\t         * | 2. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n\t         * | 3. the .ng-leave class is added to the element                                               | class=\"my-animation ng-animate ng-leave\"    |\n\t         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-leave\"    |\n\t         * | 5. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-leave\"    |\n\t         * | 6. the .ng-leave-active and .ng-animate-active classes is added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-leave ng-leave-active\" |\n\t         * | 7. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-leave ng-leave-active\" |\n\t         * | 8. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n\t         * | 9. The element is removed from the DOM                                                       | ...                                         |\n\t         * | 10. The doneCallback() callback is fired (if provided)                                       | ...                                         |\n\t         *\n\t         * @param {DOMElement} element the element that will be the focus of the leave animation\n\t         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n\t        */\n\t        leave : function(element, doneCallback) {\n\t          element = angular.element(element);\n\t          cancelChildAnimations(element);\n\t          blockElementAnimations(element);\n\t          $rootScope.$$postDigest(function() {\n\t            performAnimation('leave', 'ng-leave', stripCommentsFromElement(element), null, null, function() {\n\t              $delegate.leave(element);\n\t            }, doneCallback);\n\t          });\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#move\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Fires the move DOM operation. Just before the animation starts, the animate service will either append it into the parentElement container or\n\t         * add the element directly after the afterElement element if present. Then the move animation will be run. Once\n\t         * the animation is started, the following CSS classes will be added for the duration of the animation:\n\t         *\n\t         * Below is a breakdown of each step that occurs during move animation:\n\t         *\n\t         * | Animation Step                                                                               | What the element class attribute looks like |\n\t         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n\t         * | 1. $animate.move(...) is called                                                              | class=\"my-animation\"                        |\n\t         * | 2. element is moved into the parentElement element or beside the afterElement element        | class=\"my-animation\"                        |\n\t         * | 3. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n\t         * | 4. the .ng-move class is added to the element                                                | class=\"my-animation ng-animate ng-move\"     |\n\t         * | 5. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-move\"     |\n\t         * | 6. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-move\"     |\n\t         * | 7. the .ng-move-active and .ng-animate-active classes is added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-move ng-move-active\" |\n\t         * | 8. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-move ng-move-active\" |\n\t         * | 9. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n\t         * | 10. The doneCallback() callback is fired (if provided)                                       | class=\"my-animation\"                        |\n\t         *\n\t         * @param {DOMElement} element the element that will be the focus of the move animation\n\t         * @param {DOMElement} parentElement the parentElement element of the element that will be the focus of the move animation\n\t         * @param {DOMElement} afterElement the sibling element (which is the previous element) of the element that will be the focus of the move animation\n\t         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n\t        */\n\t        move : function(element, parentElement, afterElement, doneCallback) {\n\t          element = angular.element(element);\n\t          parentElement = prepareElement(parentElement);\n\t          afterElement = prepareElement(afterElement);\n\t\n\t          cancelChildAnimations(element);\n\t          blockElementAnimations(element);\n\t          $delegate.move(element, parentElement, afterElement);\n\t          $rootScope.$$postDigest(function() {\n\t            element = stripCommentsFromElement(element);\n\t            performAnimation('move', 'ng-move', element, parentElement, afterElement, noop, doneCallback);\n\t          });\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#addClass\n\t         *\n\t         * @description\n\t         * Triggers a custom animation event based off the className variable and then attaches the className value to the element as a CSS class.\n\t         * Unlike the other animation methods, the animate service will suffix the className value with {@type -add} in order to provide\n\t         * the animate service the setup and active CSS classes in order to trigger the animation (this will be skipped if no CSS transitions\n\t         * or keyframes are defined on the -add or base CSS class).\n\t         *\n\t         * Below is a breakdown of each step that occurs during addClass animation:\n\t         *\n\t         * | Animation Step                                                                                 | What the element class attribute looks like |\n\t         * |------------------------------------------------------------------------------------------------|---------------------------------------------|\n\t         * | 1. $animate.addClass(element, 'super') is called                                               | class=\"my-animation\"                        |\n\t         * | 2. $animate runs any JavaScript-defined animations on the element                              | class=\"my-animation ng-animate\"             |\n\t         * | 3. the .super-add class are added to the element                                               | class=\"my-animation ng-animate super-add\"   |\n\t         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay    | class=\"my-animation ng-animate super-add\"   |\n\t         * | 5. $animate waits for 10ms (this performs a reflow)                                            | class=\"my-animation ng-animate super-add\"   |\n\t         * | 6. the .super, .super-add-active and .ng-animate-active classes are added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active super super-add super-add-active\"          |\n\t         * | 7. $animate waits for X milliseconds for the animation to complete                             | class=\"my-animation super super-add super-add-active\"  |\n\t         * | 8. The animation ends and all generated CSS classes are removed from the element               | class=\"my-animation super\"                  |\n\t         * | 9. The super class is kept on the element                                                      | class=\"my-animation super\"                  |\n\t         * | 10. The doneCallback() callback is fired (if provided)                                         | class=\"my-animation super\"                  |\n\t         *\n\t         * @param {DOMElement} element the element that will be animated\n\t         * @param {string} className the CSS class that will be added to the element and then animated\n\t         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n\t        */\n\t        addClass : function(element, className, doneCallback) {\n\t          element = angular.element(element);\n\t          element = stripCommentsFromElement(element);\n\t          performAnimation('addClass', className, element, null, null, function() {\n\t            $delegate.addClass(element, className);\n\t          }, doneCallback);\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#removeClass\n\t         *\n\t         * @description\n\t         * Triggers a custom animation event based off the className variable and then removes the CSS class provided by the className value\n\t         * from the element. Unlike the other animation methods, the animate service will suffix the className value with {@type -remove} in\n\t         * order to provide the animate service the setup and active CSS classes in order to trigger the animation (this will be skipped if\n\t         * no CSS transitions or keyframes are defined on the -remove or base CSS classes).\n\t         *\n\t         * Below is a breakdown of each step that occurs during removeClass animation:\n\t         *\n\t         * | Animation Step                                                                                | What the element class attribute looks like     |\n\t         * |-----------------------------------------------------------------------------------------------|---------------------------------------------|\n\t         * | 1. $animate.removeClass(element, 'super') is called                                           | class=\"my-animation super\"                  |\n\t         * | 2. $animate runs any JavaScript-defined animations on the element                             | class=\"my-animation super ng-animate\"       |\n\t         * | 3. the .super-remove class are added to the element                                           | class=\"my-animation super ng-animate super-remove\"|\n\t         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay   | class=\"my-animation super ng-animate super-remove\"   |\n\t         * | 5. $animate waits for 10ms (this performs a reflow)                                           | class=\"my-animation super ng-animate super-remove\"   |\n\t         * | 6. the .super-remove-active and .ng-animate-active classes are added and .super is removed (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active super-remove super-remove-active\"          |\n\t         * | 7. $animate waits for X milliseconds for the animation to complete                            | class=\"my-animation ng-animate ng-animate-active super-remove super-remove-active\"   |\n\t         * | 8. The animation ends and all generated CSS classes are removed from the element              | class=\"my-animation\"                        |\n\t         * | 9. The doneCallback() callback is fired (if provided)                                         | class=\"my-animation\"                        |\n\t         *\n\t         *\n\t         * @param {DOMElement} element the element that will be animated\n\t         * @param {string} className the CSS class that will be animated and then removed from the element\n\t         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n\t        */\n\t        removeClass : function(element, className, doneCallback) {\n\t          element = angular.element(element);\n\t          element = stripCommentsFromElement(element);\n\t          performAnimation('removeClass', className, element, null, null, function() {\n\t            $delegate.removeClass(element, className);\n\t          }, doneCallback);\n\t        },\n\t\n\t          /**\n\t           *\n\t           * @ngdoc function\n\t           * @name $animate#setClass\n\t           * @function\n\t           * @description Adds and/or removes the given CSS classes to and from the element.\n\t           * Once complete, the done() callback will be fired (if provided).\n\t           * @param {DOMElement} element the element which will its CSS classes changed\n\t           *   removed from it\n\t           * @param {string} add the CSS classes which will be added to the element\n\t           * @param {string} remove the CSS class which will be removed from the element\n\t           * @param {Function=} done the callback function (if provided) that will be fired after the\n\t           *   CSS classes have been set on the element\n\t           */\n\t        setClass : function(element, add, remove, doneCallback) {\n\t          element = angular.element(element);\n\t          element = stripCommentsFromElement(element);\n\t          performAnimation('setClass', [add, remove], element, null, null, function() {\n\t            $delegate.setClass(element, add, remove);\n\t          }, doneCallback);\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $animate#enabled\n\t         * @kind function\n\t         *\n\t         * @param {boolean=} value If provided then set the animation on or off.\n\t         * @param {DOMElement=} element If provided then the element will be used to represent the enable/disable operation\n\t         * @return {boolean} Current animation state.\n\t         *\n\t         * @description\n\t         * Globally enables/disables animations.\n\t         *\n\t        */\n\t        enabled : function(value, element) {\n\t          switch(arguments.length) {\n\t            case 2:\n\t              if(value) {\n\t                cleanup(element);\n\t              } else {\n\t                var data = element.data(NG_ANIMATE_STATE) || {};\n\t                data.disabled = true;\n\t                element.data(NG_ANIMATE_STATE, data);\n\t              }\n\t            break;\n\t\n\t            case 1:\n\t              rootAnimateState.disabled = !value;\n\t            break;\n\t\n\t            default:\n\t              value = !rootAnimateState.disabled;\n\t            break;\n\t          }\n\t          return !!value;\n\t         }\n\t      };\n\t\n\t      /*\n\t        all animations call this shared animation triggering function internally.\n\t        The animationEvent variable refers to the JavaScript animation event that will be triggered\n\t        and the className value is the name of the animation that will be applied within the\n\t        CSS code. Element, parentElement and afterElement are provided DOM elements for the animation\n\t        and the onComplete callback will be fired once the animation is fully complete.\n\t      */\n\t      function performAnimation(animationEvent, className, element, parentElement, afterElement, domOperation, doneCallback) {\n\t\n\t        var runner = animationRunner(element, animationEvent, className);\n\t        if(!runner) {\n\t          fireDOMOperation();\n\t          fireBeforeCallbackAsync();\n\t          fireAfterCallbackAsync();\n\t          closeAnimation();\n\t          return;\n\t        }\n\t\n\t        className = runner.className;\n\t        var elementEvents = angular.element._data(runner.node);\n\t        elementEvents = elementEvents && elementEvents.events;\n\t\n\t        if (!parentElement) {\n\t          parentElement = afterElement ? afterElement.parent() : element.parent();\n\t        }\n\t\n\t        var ngAnimateState  = element.data(NG_ANIMATE_STATE) || {};\n\t        var runningAnimations     = ngAnimateState.active || {};\n\t        var totalActiveAnimations = ngAnimateState.totalActive || 0;\n\t        var lastAnimation         = ngAnimateState.last;\n\t\n\t        //only allow animations if the currently running animation is not structural\n\t        //or if there is no animation running at all\n\t        var skipAnimations;\n\t        if (runner.isClassBased) {\n\t          skipAnimations = ngAnimateState.running ||\n\t                           ngAnimateState.disabled ||\n\t                           (lastAnimation && !lastAnimation.isClassBased);\n\t        }\n\t\n\t        //skip the animation if animations are disabled, a parent is already being animated,\n\t        //the element is not currently attached to the document body or then completely close\n\t        //the animation if any matching animations are not found at all.\n\t        //NOTE: IE8 + IE9 should close properly (run closeAnimation()) in case an animation was found.\n\t        if (skipAnimations || animationsDisabled(element, parentElement)) {\n\t          fireDOMOperation();\n\t          fireBeforeCallbackAsync();\n\t          fireAfterCallbackAsync();\n\t          closeAnimation();\n\t          return;\n\t        }\n\t\n\t        var skipAnimation = false;\n\t        if(totalActiveAnimations > 0) {\n\t          var animationsToCancel = [];\n\t          if(!runner.isClassBased) {\n\t            if(animationEvent == 'leave' && runningAnimations['ng-leave']) {\n\t              skipAnimation = true;\n\t            } else {\n\t              //cancel all animations when a structural animation takes place\n\t              for(var klass in runningAnimations) {\n\t                animationsToCancel.push(runningAnimations[klass]);\n\t                cleanup(element, klass);\n\t              }\n\t              runningAnimations = {};\n\t              totalActiveAnimations = 0;\n\t            }\n\t          } else if(lastAnimation.event == 'setClass') {\n\t            animationsToCancel.push(lastAnimation);\n\t            cleanup(element, className);\n\t          }\n\t          else if(runningAnimations[className]) {\n\t            var current = runningAnimations[className];\n\t            if(current.event == animationEvent) {\n\t              skipAnimation = true;\n\t            } else {\n\t              animationsToCancel.push(current);\n\t              cleanup(element, className);\n\t            }\n\t          }\n\t\n\t          if(animationsToCancel.length > 0) {\n\t            forEach(animationsToCancel, function(operation) {\n\t              operation.cancel();\n\t            });\n\t          }\n\t        }\n\t\n\t        if(runner.isClassBased && !runner.isSetClassOperation && !skipAnimation) {\n\t          skipAnimation = (animationEvent == 'addClass') == element.hasClass(className); //opposite of XOR\n\t        }\n\t\n\t        if(skipAnimation) {\n\t          fireDOMOperation();\n\t          fireBeforeCallbackAsync();\n\t          fireAfterCallbackAsync();\n\t          fireDoneCallbackAsync();\n\t          return;\n\t        }\n\t\n\t        if(animationEvent == 'leave') {\n\t          //there's no need to ever remove the listener since the element\n\t          //will be removed (destroyed) after the leave animation ends or\n\t          //is cancelled midway\n\t          element.one('$destroy', function(e) {\n\t            var element = angular.element(this);\n\t            var state = element.data(NG_ANIMATE_STATE);\n\t            if(state) {\n\t              var activeLeaveAnimation = state.active['ng-leave'];\n\t              if(activeLeaveAnimation) {\n\t                activeLeaveAnimation.cancel();\n\t                cleanup(element, 'ng-leave');\n\t              }\n\t            }\n\t          });\n\t        }\n\t\n\t        //the ng-animate class does nothing, but it's here to allow for\n\t        //parent animations to find and cancel child animations when needed\n\t        element.addClass(NG_ANIMATE_CLASS_NAME);\n\t\n\t        var localAnimationCount = globalAnimationCounter++;\n\t        totalActiveAnimations++;\n\t        runningAnimations[className] = runner;\n\t\n\t        element.data(NG_ANIMATE_STATE, {\n\t          last : runner,\n\t          active : runningAnimations,\n\t          index : localAnimationCount,\n\t          totalActive : totalActiveAnimations\n\t        });\n\t\n\t        //first we run the before animations and when all of those are complete\n\t        //then we perform the DOM operation and run the next set of animations\n\t        fireBeforeCallbackAsync();\n\t        runner.before(function(cancelled) {\n\t          var data = element.data(NG_ANIMATE_STATE);\n\t          cancelled = cancelled ||\n\t                        !data || !data.active[className] ||\n\t                        (runner.isClassBased && data.active[className].event != animationEvent);\n\t\n\t          fireDOMOperation();\n\t          if(cancelled === true) {\n\t            closeAnimation();\n\t          } else {\n\t            fireAfterCallbackAsync();\n\t            runner.after(closeAnimation);\n\t          }\n\t        });\n\t\n\t        function fireDOMCallback(animationPhase) {\n\t          var eventName = '$animate:' + animationPhase;\n\t          if(elementEvents && elementEvents[eventName] && elementEvents[eventName].length > 0) {\n\t            $$asyncCallback(function() {\n\t              element.triggerHandler(eventName, {\n\t                event : animationEvent,\n\t                className : className\n\t              });\n\t            });\n\t          }\n\t        }\n\t\n\t        function fireBeforeCallbackAsync() {\n\t          fireDOMCallback('before');\n\t        }\n\t\n\t        function fireAfterCallbackAsync() {\n\t          fireDOMCallback('after');\n\t        }\n\t\n\t        function fireDoneCallbackAsync() {\n\t          fireDOMCallback('close');\n\t          if(doneCallback) {\n\t            $$asyncCallback(function() {\n\t              doneCallback();\n\t            });\n\t          }\n\t        }\n\t\n\t        //it is less complicated to use a flag than managing and canceling\n\t        //timeouts containing multiple callbacks.\n\t        function fireDOMOperation() {\n\t          if(!fireDOMOperation.hasBeenRun) {\n\t            fireDOMOperation.hasBeenRun = true;\n\t            domOperation();\n\t          }\n\t        }\n\t\n\t        function closeAnimation() {\n\t          if(!closeAnimation.hasBeenRun) {\n\t            closeAnimation.hasBeenRun = true;\n\t            var data = element.data(NG_ANIMATE_STATE);\n\t            if(data) {\n\t              /* only structural animations wait for reflow before removing an\n\t                 animation, but class-based animations don't. An example of this\n\t                 failing would be when a parent HTML tag has a ng-class attribute\n\t                 causing ALL directives below to skip animations during the digest */\n\t              if(runner && runner.isClassBased) {\n\t                cleanup(element, className);\n\t              } else {\n\t                $$asyncCallback(function() {\n\t                  var data = element.data(NG_ANIMATE_STATE) || {};\n\t                  if(localAnimationCount == data.index) {\n\t                    cleanup(element, className, animationEvent);\n\t                  }\n\t                });\n\t                element.data(NG_ANIMATE_STATE, data);\n\t              }\n\t            }\n\t            fireDoneCallbackAsync();\n\t          }\n\t        }\n\t      }\n\t\n\t      function cancelChildAnimations(element) {\n\t        var node = extractElementNode(element);\n\t        if (node) {\n\t          var nodes = angular.isFunction(node.getElementsByClassName) ?\n\t            node.getElementsByClassName(NG_ANIMATE_CLASS_NAME) :\n\t            node.querySelectorAll('.' + NG_ANIMATE_CLASS_NAME);\n\t          forEach(nodes, function(element) {\n\t            element = angular.element(element);\n\t            var data = element.data(NG_ANIMATE_STATE);\n\t            if(data && data.active) {\n\t              forEach(data.active, function(runner) {\n\t                runner.cancel();\n\t              });\n\t            }\n\t          });\n\t        }\n\t      }\n\t\n\t      function cleanup(element, className) {\n\t        if(isMatchingElement(element, $rootElement)) {\n\t          if(!rootAnimateState.disabled) {\n\t            rootAnimateState.running = false;\n\t            rootAnimateState.structural = false;\n\t          }\n\t        } else if(className) {\n\t          var data = element.data(NG_ANIMATE_STATE) || {};\n\t\n\t          var removeAnimations = className === true;\n\t          if(!removeAnimations && data.active && data.active[className]) {\n\t            data.totalActive--;\n\t            delete data.active[className];\n\t          }\n\t\n\t          if(removeAnimations || !data.totalActive) {\n\t            element.removeClass(NG_ANIMATE_CLASS_NAME);\n\t            element.removeData(NG_ANIMATE_STATE);\n\t          }\n\t        }\n\t      }\n\t\n\t      function animationsDisabled(element, parentElement) {\n\t        if (rootAnimateState.disabled) {\n\t          return true;\n\t        }\n\t\n\t        if (isMatchingElement(element, $rootElement)) {\n\t          return rootAnimateState.running;\n\t        }\n\t\n\t        var allowChildAnimations, parentRunningAnimation, hasParent;\n\t        do {\n\t          //the element did not reach the root element which means that it\n\t          //is not apart of the DOM. Therefore there is no reason to do\n\t          //any animations on it\n\t          if (parentElement.length === 0) break;\n\t\n\t          var isRoot = isMatchingElement(parentElement, $rootElement);\n\t          var state = isRoot ? rootAnimateState : (parentElement.data(NG_ANIMATE_STATE) || {});\n\t          if (state.disabled) {\n\t            return true;\n\t          }\n\t\n\t          //no matter what, for an animation to work it must reach the root element\n\t          //this implies that the element is attached to the DOM when the animation is run\n\t          if (isRoot) {\n\t            hasParent = true;\n\t          }\n\t\n\t          //once a flag is found that is strictly false then everything before\n\t          //it will be discarded and all child animations will be restricted\n\t          if (allowChildAnimations !== false) {\n\t            var animateChildrenFlag = parentElement.data(NG_ANIMATE_CHILDREN);\n\t            if(angular.isDefined(animateChildrenFlag)) {\n\t              allowChildAnimations = animateChildrenFlag;\n\t            }\n\t          }\n\t\n\t          parentRunningAnimation = parentRunningAnimation ||\n\t                                   state.running ||\n\t                                   (state.last && !state.last.isClassBased);\n\t        }\n\t        while(parentElement = parentElement.parent());\n\t\n\t        return !hasParent || (!allowChildAnimations && parentRunningAnimation);\n\t      }\n\t    }]);\n\t\n\t    $animateProvider.register('', ['$window', '$sniffer', '$timeout', '$$animateReflow',\n\t                           function($window,   $sniffer,   $timeout,   $$animateReflow) {\n\t      // Detect proper transitionend/animationend event names.\n\t      var CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\t\n\t      // If unprefixed events are not supported but webkit-prefixed are, use the latter.\n\t      // Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n\t      // Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n\t      // but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n\t      // Register both events in case `window.onanimationend` is not supported because of that,\n\t      // do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n\t      // Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n\t      // therefore there is no reason to test anymore for other vendor prefixes: http://caniuse.com/#search=transition\n\t      if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n\t        CSS_PREFIX = '-webkit-';\n\t        TRANSITION_PROP = 'WebkitTransition';\n\t        TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n\t      } else {\n\t        TRANSITION_PROP = 'transition';\n\t        TRANSITIONEND_EVENT = 'transitionend';\n\t      }\n\t\n\t      if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n\t        CSS_PREFIX = '-webkit-';\n\t        ANIMATION_PROP = 'WebkitAnimation';\n\t        ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n\t      } else {\n\t        ANIMATION_PROP = 'animation';\n\t        ANIMATIONEND_EVENT = 'animationend';\n\t      }\n\t\n\t      var DURATION_KEY = 'Duration';\n\t      var PROPERTY_KEY = 'Property';\n\t      var DELAY_KEY = 'Delay';\n\t      var ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\n\t      var NG_ANIMATE_PARENT_KEY = '$$ngAnimateKey';\n\t      var NG_ANIMATE_CSS_DATA_KEY = '$$ngAnimateCSS3Data';\n\t      var NG_ANIMATE_BLOCK_CLASS_NAME = 'ng-animate-block-transitions';\n\t      var ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\n\t      var CLOSING_TIME_BUFFER = 1.5;\n\t      var ONE_SECOND = 1000;\n\t\n\t      var lookupCache = {};\n\t      var parentCounter = 0;\n\t      var animationReflowQueue = [];\n\t      var cancelAnimationReflow;\n\t      function clearCacheAfterReflow() {\n\t        if (!cancelAnimationReflow) {\n\t          cancelAnimationReflow = $$animateReflow(function() {\n\t            animationReflowQueue = [];\n\t            cancelAnimationReflow = null;\n\t            lookupCache = {};\n\t          });\n\t        }\n\t      }\n\t\n\t      function afterReflow(element, callback) {\n\t        if(cancelAnimationReflow) {\n\t          cancelAnimationReflow();\n\t        }\n\t        animationReflowQueue.push(callback);\n\t        cancelAnimationReflow = $$animateReflow(function() {\n\t          forEach(animationReflowQueue, function(fn) {\n\t            fn();\n\t          });\n\t\n\t          animationReflowQueue = [];\n\t          cancelAnimationReflow = null;\n\t          lookupCache = {};\n\t        });\n\t      }\n\t\n\t      var closingTimer = null;\n\t      var closingTimestamp = 0;\n\t      var animationElementQueue = [];\n\t      function animationCloseHandler(element, totalTime) {\n\t        var node = extractElementNode(element);\n\t        element = angular.element(node);\n\t\n\t        //this item will be garbage collected by the closing\n\t        //animation timeout\n\t        animationElementQueue.push(element);\n\t\n\t        //but it may not need to cancel out the existing timeout\n\t        //if the timestamp is less than the previous one\n\t        var futureTimestamp = Date.now() + totalTime;\n\t        if(futureTimestamp <= closingTimestamp) {\n\t          return;\n\t        }\n\t\n\t        $timeout.cancel(closingTimer);\n\t\n\t        closingTimestamp = futureTimestamp;\n\t        closingTimer = $timeout(function() {\n\t          closeAllAnimations(animationElementQueue);\n\t          animationElementQueue = [];\n\t        }, totalTime, false);\n\t      }\n\t\n\t      function closeAllAnimations(elements) {\n\t        forEach(elements, function(element) {\n\t          var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);\n\t          if(elementData) {\n\t            (elementData.closeAnimationFn || noop)();\n\t          }\n\t        });\n\t      }\n\t\n\t      function getElementAnimationDetails(element, cacheKey) {\n\t        var data = cacheKey ? lookupCache[cacheKey] : null;\n\t        if(!data) {\n\t          var transitionDuration = 0;\n\t          var transitionDelay = 0;\n\t          var animationDuration = 0;\n\t          var animationDelay = 0;\n\t          var transitionDelayStyle;\n\t          var animationDelayStyle;\n\t          var transitionDurationStyle;\n\t          var transitionPropertyStyle;\n\t\n\t          //we want all the styles defined before and after\n\t          forEach(element, function(element) {\n\t            if (element.nodeType == ELEMENT_NODE) {\n\t              var elementStyles = $window.getComputedStyle(element) || {};\n\t\n\t              transitionDurationStyle = elementStyles[TRANSITION_PROP + DURATION_KEY];\n\t\n\t              transitionDuration = Math.max(parseMaxTime(transitionDurationStyle), transitionDuration);\n\t\n\t              transitionPropertyStyle = elementStyles[TRANSITION_PROP + PROPERTY_KEY];\n\t\n\t              transitionDelayStyle = elementStyles[TRANSITION_PROP + DELAY_KEY];\n\t\n\t              transitionDelay  = Math.max(parseMaxTime(transitionDelayStyle), transitionDelay);\n\t\n\t              animationDelayStyle = elementStyles[ANIMATION_PROP + DELAY_KEY];\n\t\n\t              animationDelay   = Math.max(parseMaxTime(animationDelayStyle), animationDelay);\n\t\n\t              var aDuration  = parseMaxTime(elementStyles[ANIMATION_PROP + DURATION_KEY]);\n\t\n\t              if(aDuration > 0) {\n\t                aDuration *= parseInt(elementStyles[ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY], 10) || 1;\n\t              }\n\t\n\t              animationDuration = Math.max(aDuration, animationDuration);\n\t            }\n\t          });\n\t          data = {\n\t            total : 0,\n\t            transitionPropertyStyle: transitionPropertyStyle,\n\t            transitionDurationStyle: transitionDurationStyle,\n\t            transitionDelayStyle: transitionDelayStyle,\n\t            transitionDelay: transitionDelay,\n\t            transitionDuration: transitionDuration,\n\t            animationDelayStyle: animationDelayStyle,\n\t            animationDelay: animationDelay,\n\t            animationDuration: animationDuration\n\t          };\n\t          if(cacheKey) {\n\t            lookupCache[cacheKey] = data;\n\t          }\n\t        }\n\t        return data;\n\t      }\n\t\n\t      function parseMaxTime(str) {\n\t        var maxValue = 0;\n\t        var values = angular.isString(str) ?\n\t          str.split(/\\s*,\\s*/) :\n\t          [];\n\t        forEach(values, function(value) {\n\t          maxValue = Math.max(parseFloat(value) || 0, maxValue);\n\t        });\n\t        return maxValue;\n\t      }\n\t\n\t      function getCacheKey(element) {\n\t        var parentElement = element.parent();\n\t        var parentID = parentElement.data(NG_ANIMATE_PARENT_KEY);\n\t        if(!parentID) {\n\t          parentElement.data(NG_ANIMATE_PARENT_KEY, ++parentCounter);\n\t          parentID = parentCounter;\n\t        }\n\t        return parentID + '-' + extractElementNode(element).getAttribute('class');\n\t      }\n\t\n\t      function animateSetup(animationEvent, element, className, calculationDecorator) {\n\t        var cacheKey = getCacheKey(element);\n\t        var eventCacheKey = cacheKey + ' ' + className;\n\t        var itemIndex = lookupCache[eventCacheKey] ? ++lookupCache[eventCacheKey].total : 0;\n\t\n\t        var stagger = {};\n\t        if(itemIndex > 0) {\n\t          var staggerClassName = className + '-stagger';\n\t          var staggerCacheKey = cacheKey + ' ' + staggerClassName;\n\t          var applyClasses = !lookupCache[staggerCacheKey];\n\t\n\t          applyClasses && element.addClass(staggerClassName);\n\t\n\t          stagger = getElementAnimationDetails(element, staggerCacheKey);\n\t\n\t          applyClasses && element.removeClass(staggerClassName);\n\t        }\n\t\n\t        /* the animation itself may need to add/remove special CSS classes\n\t         * before calculating the anmation styles */\n\t        calculationDecorator = calculationDecorator ||\n\t                               function(fn) { return fn(); };\n\t\n\t        element.addClass(className);\n\t\n\t        var formerData = element.data(NG_ANIMATE_CSS_DATA_KEY) || {};\n\t\n\t        var timings = calculationDecorator(function() {\n\t          return getElementAnimationDetails(element, eventCacheKey);\n\t        });\n\t\n\t        var transitionDuration = timings.transitionDuration;\n\t        var animationDuration = timings.animationDuration;\n\t        if(transitionDuration === 0 && animationDuration === 0) {\n\t          element.removeClass(className);\n\t          return false;\n\t        }\n\t\n\t        element.data(NG_ANIMATE_CSS_DATA_KEY, {\n\t          running : formerData.running || 0,\n\t          itemIndex : itemIndex,\n\t          stagger : stagger,\n\t          timings : timings,\n\t          closeAnimationFn : noop\n\t        });\n\t\n\t        //temporarily disable the transition so that the enter styles\n\t        //don't animate twice (this is here to avoid a bug in Chrome/FF).\n\t        var isCurrentlyAnimating = formerData.running > 0 || animationEvent == 'setClass';\n\t        if(transitionDuration > 0) {\n\t          blockTransitions(element, className, isCurrentlyAnimating);\n\t        }\n\t\n\t        //staggering keyframe animations work by adjusting the `animation-delay` CSS property\n\t        //on the given element, however, the delay value can only calculated after the reflow\n\t        //since by that time $animate knows how many elements are being animated. Therefore,\n\t        //until the reflow occurs the element needs to be blocked (where the keyframe animation\n\t        //is set to `none 0s`). This blocking mechanism should only be set for when a stagger\n\t        //animation is detected and when the element item index is greater than 0.\n\t        if(animationDuration > 0 && stagger.animationDelay > 0 && stagger.animationDuration === 0) {\n\t          blockKeyframeAnimations(element);\n\t        }\n\t\n\t        return true;\n\t      }\n\t\n\t      function isStructuralAnimation(className) {\n\t        return className == 'ng-enter' || className == 'ng-move' || className == 'ng-leave';\n\t      }\n\t\n\t      function blockTransitions(element, className, isAnimating) {\n\t        if(isStructuralAnimation(className) || !isAnimating) {\n\t          extractElementNode(element).style[TRANSITION_PROP + PROPERTY_KEY] = 'none';\n\t        } else {\n\t          element.addClass(NG_ANIMATE_BLOCK_CLASS_NAME);\n\t        }\n\t      }\n\t\n\t      function blockKeyframeAnimations(element) {\n\t        extractElementNode(element).style[ANIMATION_PROP] = 'none 0s';\n\t      }\n\t\n\t      function unblockTransitions(element, className) {\n\t        var prop = TRANSITION_PROP + PROPERTY_KEY;\n\t        var node = extractElementNode(element);\n\t        if(node.style[prop] && node.style[prop].length > 0) {\n\t          node.style[prop] = '';\n\t        }\n\t        element.removeClass(NG_ANIMATE_BLOCK_CLASS_NAME);\n\t      }\n\t\n\t      function unblockKeyframeAnimations(element) {\n\t        var prop = ANIMATION_PROP;\n\t        var node = extractElementNode(element);\n\t        if(node.style[prop] && node.style[prop].length > 0) {\n\t          node.style[prop] = '';\n\t        }\n\t      }\n\t\n\t      function animateRun(animationEvent, element, className, activeAnimationComplete) {\n\t        var node = extractElementNode(element);\n\t        var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);\n\t        if(node.getAttribute('class').indexOf(className) == -1 || !elementData) {\n\t          activeAnimationComplete();\n\t          return;\n\t        }\n\t\n\t        var activeClassName = '';\n\t        forEach(className.split(' '), function(klass, i) {\n\t          activeClassName += (i > 0 ? ' ' : '') + klass + '-active';\n\t        });\n\t\n\t        var stagger = elementData.stagger;\n\t        var timings = elementData.timings;\n\t        var itemIndex = elementData.itemIndex;\n\t        var maxDuration = Math.max(timings.transitionDuration, timings.animationDuration);\n\t        var maxDelay = Math.max(timings.transitionDelay, timings.animationDelay);\n\t        var maxDelayTime = maxDelay * ONE_SECOND;\n\t\n\t        var startTime = Date.now();\n\t        var css3AnimationEvents = ANIMATIONEND_EVENT + ' ' + TRANSITIONEND_EVENT;\n\t\n\t        var style = '', appliedStyles = [];\n\t        if(timings.transitionDuration > 0) {\n\t          var propertyStyle = timings.transitionPropertyStyle;\n\t          if(propertyStyle.indexOf('all') == -1) {\n\t            style += CSS_PREFIX + 'transition-property: ' + propertyStyle + ';';\n\t            style += CSS_PREFIX + 'transition-duration: ' + timings.transitionDurationStyle + ';';\n\t            appliedStyles.push(CSS_PREFIX + 'transition-property');\n\t            appliedStyles.push(CSS_PREFIX + 'transition-duration');\n\t          }\n\t        }\n\t\n\t        if(itemIndex > 0) {\n\t          if(stagger.transitionDelay > 0 && stagger.transitionDuration === 0) {\n\t            var delayStyle = timings.transitionDelayStyle;\n\t            style += CSS_PREFIX + 'transition-delay: ' +\n\t                     prepareStaggerDelay(delayStyle, stagger.transitionDelay, itemIndex) + '; ';\n\t            appliedStyles.push(CSS_PREFIX + 'transition-delay');\n\t          }\n\t\n\t          if(stagger.animationDelay > 0 && stagger.animationDuration === 0) {\n\t            style += CSS_PREFIX + 'animation-delay: ' +\n\t                     prepareStaggerDelay(timings.animationDelayStyle, stagger.animationDelay, itemIndex) + '; ';\n\t            appliedStyles.push(CSS_PREFIX + 'animation-delay');\n\t          }\n\t        }\n\t\n\t        if(appliedStyles.length > 0) {\n\t          //the element being animated may sometimes contain comment nodes in\n\t          //the jqLite object, so we're safe to use a single variable to house\n\t          //the styles since there is always only one element being animated\n\t          var oldStyle = node.getAttribute('style') || '';\n\t          node.setAttribute('style', oldStyle + '; ' + style);\n\t        }\n\t\n\t        element.on(css3AnimationEvents, onAnimationProgress);\n\t        element.addClass(activeClassName);\n\t        elementData.closeAnimationFn = function() {\n\t          onEnd();\n\t          activeAnimationComplete();\n\t        };\n\t\n\t        var staggerTime       = itemIndex * (Math.max(stagger.animationDelay, stagger.transitionDelay) || 0);\n\t        var animationTime     = (maxDelay + maxDuration) * CLOSING_TIME_BUFFER;\n\t        var totalTime         = (staggerTime + animationTime) * ONE_SECOND;\n\t\n\t        elementData.running++;\n\t        animationCloseHandler(element, totalTime);\n\t        return onEnd;\n\t\n\t        // This will automatically be called by $animate so\n\t        // there is no need to attach this internally to the\n\t        // timeout done method.\n\t        function onEnd(cancelled) {\n\t          element.off(css3AnimationEvents, onAnimationProgress);\n\t          element.removeClass(activeClassName);\n\t          animateClose(element, className);\n\t          var node = extractElementNode(element);\n\t          for (var i in appliedStyles) {\n\t            node.style.removeProperty(appliedStyles[i]);\n\t          }\n\t        }\n\t\n\t        function onAnimationProgress(event) {\n\t          event.stopPropagation();\n\t          var ev = event.originalEvent || event;\n\t          var timeStamp = ev.$manualTimeStamp || ev.timeStamp || Date.now();\n\t\n\t          /* Firefox (or possibly just Gecko) likes to not round values up\n\t           * when a ms measurement is used for the animation */\n\t          var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\t\n\t          /* $manualTimeStamp is a mocked timeStamp value which is set\n\t           * within browserTrigger(). This is only here so that tests can\n\t           * mock animations properly. Real events fallback to event.timeStamp,\n\t           * or, if they don't, then a timeStamp is automatically created for them.\n\t           * We're checking to see if the timeStamp surpasses the expected delay,\n\t           * but we're using elapsedTime instead of the timeStamp on the 2nd\n\t           * pre-condition since animations sometimes close off early */\n\t          if(Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n\t            activeAnimationComplete();\n\t          }\n\t        }\n\t      }\n\t\n\t      function prepareStaggerDelay(delayStyle, staggerDelay, index) {\n\t        var style = '';\n\t        forEach(delayStyle.split(','), function(val, i) {\n\t          style += (i > 0 ? ',' : '') +\n\t                   (index * staggerDelay + parseInt(val, 10)) + 's';\n\t        });\n\t        return style;\n\t      }\n\t\n\t      function animateBefore(animationEvent, element, className, calculationDecorator) {\n\t        if(animateSetup(animationEvent, element, className, calculationDecorator)) {\n\t          return function(cancelled) {\n\t            cancelled && animateClose(element, className);\n\t          };\n\t        }\n\t      }\n\t\n\t      function animateAfter(animationEvent, element, className, afterAnimationComplete) {\n\t        if(element.data(NG_ANIMATE_CSS_DATA_KEY)) {\n\t          return animateRun(animationEvent, element, className, afterAnimationComplete);\n\t        } else {\n\t          animateClose(element, className);\n\t          afterAnimationComplete();\n\t        }\n\t      }\n\t\n\t      function animate(animationEvent, element, className, animationComplete) {\n\t        //If the animateSetup function doesn't bother returning a\n\t        //cancellation function then it means that there is no animation\n\t        //to perform at all\n\t        var preReflowCancellation = animateBefore(animationEvent, element, className);\n\t        if (!preReflowCancellation) {\n\t          clearCacheAfterReflow();\n\t          animationComplete();\n\t          return;\n\t        }\n\t\n\t        //There are two cancellation functions: one is before the first\n\t        //reflow animation and the second is during the active state\n\t        //animation. The first function will take care of removing the\n\t        //data from the element which will not make the 2nd animation\n\t        //happen in the first place\n\t        var cancel = preReflowCancellation;\n\t        afterReflow(element, function() {\n\t          unblockTransitions(element, className);\n\t          unblockKeyframeAnimations(element);\n\t          //once the reflow is complete then we point cancel to\n\t          //the new cancellation function which will remove all of the\n\t          //animation properties from the active animation\n\t          cancel = animateAfter(animationEvent, element, className, animationComplete);\n\t        });\n\t\n\t        return function(cancelled) {\n\t          (cancel || noop)(cancelled);\n\t        };\n\t      }\n\t\n\t      function animateClose(element, className) {\n\t        element.removeClass(className);\n\t        var data = element.data(NG_ANIMATE_CSS_DATA_KEY);\n\t        if(data) {\n\t          if(data.running) {\n\t            data.running--;\n\t          }\n\t          if(!data.running || data.running === 0) {\n\t            element.removeData(NG_ANIMATE_CSS_DATA_KEY);\n\t          }\n\t        }\n\t      }\n\t\n\t      return {\n\t        enter : function(element, animationCompleted) {\n\t          return animate('enter', element, 'ng-enter', animationCompleted);\n\t        },\n\t\n\t        leave : function(element, animationCompleted) {\n\t          return animate('leave', element, 'ng-leave', animationCompleted);\n\t        },\n\t\n\t        move : function(element, animationCompleted) {\n\t          return animate('move', element, 'ng-move', animationCompleted);\n\t        },\n\t\n\t        beforeSetClass : function(element, add, remove, animationCompleted) {\n\t          var className = suffixClasses(remove, '-remove') + ' ' +\n\t                          suffixClasses(add, '-add');\n\t          var cancellationMethod = animateBefore('setClass', element, className, function(fn) {\n\t            /* when classes are removed from an element then the transition style\n\t             * that is applied is the transition defined on the element without the\n\t             * CSS class being there. This is how CSS3 functions outside of ngAnimate.\n\t             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */\n\t            var klass = element.attr('class');\n\t            element.removeClass(remove);\n\t            element.addClass(add);\n\t            var timings = fn();\n\t            element.attr('class', klass);\n\t            return timings;\n\t          });\n\t\n\t          if(cancellationMethod) {\n\t            afterReflow(element, function() {\n\t              unblockTransitions(element, className);\n\t              unblockKeyframeAnimations(element);\n\t              animationCompleted();\n\t            });\n\t            return cancellationMethod;\n\t          }\n\t          clearCacheAfterReflow();\n\t          animationCompleted();\n\t        },\n\t\n\t        beforeAddClass : function(element, className, animationCompleted) {\n\t          var cancellationMethod = animateBefore('addClass', element, suffixClasses(className, '-add'), function(fn) {\n\t\n\t            /* when a CSS class is added to an element then the transition style that\n\t             * is applied is the transition defined on the element when the CSS class\n\t             * is added at the time of the animation. This is how CSS3 functions\n\t             * outside of ngAnimate. */\n\t            element.addClass(className);\n\t            var timings = fn();\n\t            element.removeClass(className);\n\t            return timings;\n\t          });\n\t\n\t          if(cancellationMethod) {\n\t            afterReflow(element, function() {\n\t              unblockTransitions(element, className);\n\t              unblockKeyframeAnimations(element);\n\t              animationCompleted();\n\t            });\n\t            return cancellationMethod;\n\t          }\n\t          clearCacheAfterReflow();\n\t          animationCompleted();\n\t        },\n\t\n\t        setClass : function(element, add, remove, animationCompleted) {\n\t          remove = suffixClasses(remove, '-remove');\n\t          add = suffixClasses(add, '-add');\n\t          var className = remove + ' ' + add;\n\t          return animateAfter('setClass', element, className, animationCompleted);\n\t        },\n\t\n\t        addClass : function(element, className, animationCompleted) {\n\t          return animateAfter('addClass', element, suffixClasses(className, '-add'), animationCompleted);\n\t        },\n\t\n\t        beforeRemoveClass : function(element, className, animationCompleted) {\n\t          var cancellationMethod = animateBefore('removeClass', element, suffixClasses(className, '-remove'), function(fn) {\n\t            /* when classes are removed from an element then the transition style\n\t             * that is applied is the transition defined on the element without the\n\t             * CSS class being there. This is how CSS3 functions outside of ngAnimate.\n\t             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */\n\t            var klass = element.attr('class');\n\t            element.removeClass(className);\n\t            var timings = fn();\n\t            element.attr('class', klass);\n\t            return timings;\n\t          });\n\t\n\t          if(cancellationMethod) {\n\t            afterReflow(element, function() {\n\t              unblockTransitions(element, className);\n\t              unblockKeyframeAnimations(element);\n\t              animationCompleted();\n\t            });\n\t            return cancellationMethod;\n\t          }\n\t          animationCompleted();\n\t        },\n\t\n\t        removeClass : function(element, className, animationCompleted) {\n\t          return animateAfter('removeClass', element, suffixClasses(className, '-remove'), animationCompleted);\n\t        }\n\t      };\n\t\n\t      function suffixClasses(classes, suffix) {\n\t        var className = '';\n\t        classes = angular.isArray(classes) ? classes : classes.split(/\\s+/);\n\t        forEach(classes, function(klass, i) {\n\t          if(klass && klass.length > 0) {\n\t            className += (i > 0 ? ' ' : '') + klass + suffix;\n\t          }\n\t        });\n\t        return className;\n\t      }\n\t    }]);\n\t  }]);\n\t\n\t\n\t})(window, window.angular);\n\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;/**\n\t * @license AngularJS v1.2.29\n\t * (c) 2010-2014 Google, Inc. http://angularjs.org\n\t * License: MIT\n\t */\n\t(function(window, document, undefined) {'use strict';\n\t\n\t/**\n\t * @description\n\t *\n\t * This object provides a utility for producing rich Error messages within\n\t * Angular. It can be called as follows:\n\t *\n\t * var exampleMinErr = minErr('example');\n\t * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\n\t *\n\t * The above creates an instance of minErr in the example namespace. The\n\t * resulting error will have a namespaced error code of example.one.  The\n\t * resulting error will replace {0} with the value of foo, and {1} with the\n\t * value of bar. The object is not restricted in the number of arguments it can\n\t * take.\n\t *\n\t * If fewer arguments are specified than necessary for interpolation, the extra\n\t * interpolation markers will be preserved in the final string.\n\t *\n\t * Since data will be parsed statically during a build step, some restrictions\n\t * are applied with respect to how minErr instances are created and called.\n\t * Instances should have names of the form namespaceMinErr for a minErr created\n\t * using minErr('namespace') . Error codes, namespaces and template strings\n\t * should all be static strings, not variables or general expressions.\n\t *\n\t * @param {string} module The namespace to use for the new minErr instance.\n\t * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\n\t */\n\t\n\tfunction minErr(module) {\n\t  return function () {\n\t    var code = arguments[0],\n\t      prefix = '[' + (module ? module + ':' : '') + code + '] ',\n\t      template = arguments[1],\n\t      templateArgs = arguments,\n\t      stringify = function (obj) {\n\t        if (typeof obj === 'function') {\n\t          return obj.toString().replace(/ \\{[\\s\\S]*$/, '');\n\t        } else if (typeof obj === 'undefined') {\n\t          return 'undefined';\n\t        } else if (typeof obj !== 'string') {\n\t          return JSON.stringify(obj);\n\t        }\n\t        return obj;\n\t      },\n\t      message, i;\n\t\n\t    message = prefix + template.replace(/\\{\\d+\\}/g, function (match) {\n\t      var index = +match.slice(1, -1), arg;\n\t\n\t      if (index + 2 < templateArgs.length) {\n\t        arg = templateArgs[index + 2];\n\t        if (typeof arg === 'function') {\n\t          return arg.toString().replace(/ ?\\{[\\s\\S]*$/, '');\n\t        } else if (typeof arg === 'undefined') {\n\t          return 'undefined';\n\t        } else if (typeof arg !== 'string') {\n\t          return toJson(arg);\n\t        }\n\t        return arg;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    message = message + '\\nhttp://errors.angularjs.org/1.2.29/' +\n\t      (module ? module + '/' : '') + code;\n\t    for (i = 2; i < arguments.length; i++) {\n\t      message = message + (i == 2 ? '?' : '&') + 'p' + (i-2) + '=' +\n\t        encodeURIComponent(stringify(arguments[i]));\n\t    }\n\t\n\t    return new Error(message);\n\t  };\n\t}\n\t\n\t/* We need to tell jshint what variables are being exported */\n\t/* global angular: true,\n\t    msie: true,\n\t    jqLite: true,\n\t    jQuery: true,\n\t    slice: true,\n\t    push: true,\n\t    toString: true,\n\t    ngMinErr: true,\n\t    angularModule: true,\n\t    nodeName_: true,\n\t    uid: true,\n\t    VALIDITY_STATE_PROPERTY: true,\n\t\n\t    lowercase: true,\n\t    uppercase: true,\n\t    manualLowercase: true,\n\t    manualUppercase: true,\n\t    nodeName_: true,\n\t    isArrayLike: true,\n\t    forEach: true,\n\t    sortedKeys: true,\n\t    forEachSorted: true,\n\t    reverseParams: true,\n\t    nextUid: true,\n\t    setHashKey: true,\n\t    extend: true,\n\t    int: true,\n\t    inherit: true,\n\t    noop: true,\n\t    identity: true,\n\t    valueFn: true,\n\t    isUndefined: true,\n\t    isDefined: true,\n\t    isObject: true,\n\t    isString: true,\n\t    isNumber: true,\n\t    isDate: true,\n\t    isArray: true,\n\t    isFunction: true,\n\t    isRegExp: true,\n\t    isWindow: true,\n\t    isScope: true,\n\t    isFile: true,\n\t    isBlob: true,\n\t    isBoolean: true,\n\t    isPromiseLike: true,\n\t    trim: true,\n\t    isElement: true,\n\t    makeMap: true,\n\t    map: true,\n\t    size: true,\n\t    includes: true,\n\t    indexOf: true,\n\t    arrayRemove: true,\n\t    isLeafNode: true,\n\t    copy: true,\n\t    shallowCopy: true,\n\t    equals: true,\n\t    csp: true,\n\t    concat: true,\n\t    sliceArgs: true,\n\t    bind: true,\n\t    toJsonReplacer: true,\n\t    toJson: true,\n\t    fromJson: true,\n\t    toBoolean: true,\n\t    startingTag: true,\n\t    tryDecodeURIComponent: true,\n\t    parseKeyValue: true,\n\t    toKeyValue: true,\n\t    encodeUriSegment: true,\n\t    encodeUriQuery: true,\n\t    angularInit: true,\n\t    bootstrap: true,\n\t    snake_case: true,\n\t    bindJQuery: true,\n\t    assertArg: true,\n\t    assertArgFn: true,\n\t    assertNotHasOwnProperty: true,\n\t    getter: true,\n\t    getBlockElements: true,\n\t    hasOwnProperty: true,\n\t*/\n\t\n\t////////////////////////////////////\n\t\n\t/**\n\t * @ngdoc module\n\t * @name ng\n\t * @module ng\n\t * @description\n\t *\n\t * # ng (core module)\n\t * The ng module is loaded by default when an AngularJS application is started. The module itself\n\t * contains the essential components for an AngularJS application to function. The table below\n\t * lists a high level breakdown of each of the services/factories, filters, directives and testing\n\t * components available within this core module.\n\t *\n\t * <div doc-module-components=\"ng\"></div>\n\t */\n\t\n\t// The name of a form control's ValidityState property.\n\t// This is used so that it's possible for internal tests to create mock ValidityStates.\n\tvar VALIDITY_STATE_PROPERTY = 'validity';\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.lowercase\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description Converts the specified string to lowercase.\n\t * @param {string} string String to be converted to lowercase.\n\t * @returns {string} Lowercased string.\n\t */\n\tvar lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.uppercase\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description Converts the specified string to uppercase.\n\t * @param {string} string String to be converted to uppercase.\n\t * @returns {string} Uppercased string.\n\t */\n\tvar uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n\t\n\t\n\tvar manualLowercase = function(s) {\n\t  /* jshint bitwise: false */\n\t  return isString(s)\n\t      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n\t      : s;\n\t};\n\tvar manualUppercase = function(s) {\n\t  /* jshint bitwise: false */\n\t  return isString(s)\n\t      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n\t      : s;\n\t};\n\t\n\t\n\t// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n\t// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n\t// with correct but slower alternatives.\n\tif ('i' !== 'I'.toLowerCase()) {\n\t  lowercase = manualLowercase;\n\t  uppercase = manualUppercase;\n\t}\n\t\n\t\n\tvar\n\t    msie,             // holds major version number for IE, or NaN if UA is not IE.\n\t    jqLite,           // delay binding since jQuery could be loaded after us.\n\t    jQuery,           // delay binding\n\t    slice             = [].slice,\n\t    push              = [].push,\n\t    toString          = Object.prototype.toString,\n\t    ngMinErr          = minErr('ng'),\n\t\n\t    /** @name angular */\n\t    angular           = window.angular || (window.angular = {}),\n\t    angularModule,\n\t    nodeName_,\n\t    uid               = ['0', '0', '0'];\n\t\n\t/**\n\t * IE 11 changed the format of the UserAgent string.\n\t * See http://msdn.microsoft.com/en-us/library/ms537503.aspx\n\t */\n\tmsie = int((/msie (\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);\n\tif (isNaN(msie)) {\n\t  msie = int((/trident\\/.*; rv:(\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);\n\t}\n\t\n\t\n\t/**\n\t * @private\n\t * @param {*} obj\n\t * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n\t *                   String ...)\n\t */\n\tfunction isArrayLike(obj) {\n\t  if (obj == null || isWindow(obj)) {\n\t    return false;\n\t  }\n\t\n\t  var length = obj.length;\n\t\n\t  if (obj.nodeType === 1 && length) {\n\t    return true;\n\t  }\n\t\n\t  return isString(obj) || isArray(obj) || length === 0 ||\n\t         typeof length === 'number' && length > 0 && (length - 1) in obj;\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.forEach\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n\t * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\n\t * is the value of an object property or an array element and `key` is the object property key or\n\t * array element index. Specifying a `context` for the function is optional.\n\t *\n\t * It is worth noting that `.forEach` does not iterate over inherited properties because it filters\n\t * using the `hasOwnProperty` method.\n\t *\n\t   ```js\n\t     var values = {name: 'misko', gender: 'male'};\n\t     var log = [];\n\t     angular.forEach(values, function(value, key) {\n\t       this.push(key + ': ' + value);\n\t     }, log);\n\t     expect(log).toEqual(['name: misko', 'gender: male']);\n\t   ```\n\t *\n\t * @param {Object|Array} obj Object to iterate over.\n\t * @param {Function} iterator Iterator function.\n\t * @param {Object=} context Object to become context (`this`) for the iterator function.\n\t * @returns {Object|Array} Reference to `obj`.\n\t */\n\tfunction forEach(obj, iterator, context) {\n\t  var key;\n\t  if (obj) {\n\t    if (isFunction(obj)) {\n\t      for (key in obj) {\n\t        // Need to check if hasOwnProperty exists,\n\t        // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\n\t        if (key != 'prototype' && key != 'length' && key != 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\n\t          iterator.call(context, obj[key], key);\n\t        }\n\t      }\n\t    } else if (isArray(obj) || isArrayLike(obj)) {\n\t      for (key = 0; key < obj.length; key++) {\n\t        iterator.call(context, obj[key], key);\n\t      }\n\t    } else if (obj.forEach && obj.forEach !== forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else {\n\t      for (key in obj) {\n\t        if (obj.hasOwnProperty(key)) {\n\t          iterator.call(context, obj[key], key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return obj;\n\t}\n\t\n\tfunction sortedKeys(obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    if (obj.hasOwnProperty(key)) {\n\t      keys.push(key);\n\t    }\n\t  }\n\t  return keys.sort();\n\t}\n\t\n\tfunction forEachSorted(obj, iterator, context) {\n\t  var keys = sortedKeys(obj);\n\t  for ( var i = 0; i < keys.length; i++) {\n\t    iterator.call(context, obj[keys[i]], keys[i]);\n\t  }\n\t  return keys;\n\t}\n\t\n\t\n\t/**\n\t * when using forEach the params are value, key, but it is often useful to have key, value.\n\t * @param {function(string, *)} iteratorFn\n\t * @returns {function(*, string)}\n\t */\n\tfunction reverseParams(iteratorFn) {\n\t  return function(value, key) { iteratorFn(key, value); };\n\t}\n\t\n\t/**\n\t * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric\n\t * characters such as '012ABC'. The reason why we are not using simply a number counter is that\n\t * the number string gets longer over time, and it can also overflow, where as the nextId\n\t * will grow much slower, it is a string, and it will never overflow.\n\t *\n\t * @returns {string} an unique alpha-numeric string\n\t */\n\tfunction nextUid() {\n\t  var index = uid.length;\n\t  var digit;\n\t\n\t  while(index) {\n\t    index--;\n\t    digit = uid[index].charCodeAt(0);\n\t    if (digit == 57 /*'9'*/) {\n\t      uid[index] = 'A';\n\t      return uid.join('');\n\t    }\n\t    if (digit == 90  /*'Z'*/) {\n\t      uid[index] = '0';\n\t    } else {\n\t      uid[index] = String.fromCharCode(digit + 1);\n\t      return uid.join('');\n\t    }\n\t  }\n\t  uid.unshift('0');\n\t  return uid.join('');\n\t}\n\t\n\t\n\t/**\n\t * Set or clear the hashkey for an object.\n\t * @param obj object\n\t * @param h the hashkey (!truthy to delete the hashkey)\n\t */\n\tfunction setHashKey(obj, h) {\n\t  if (h) {\n\t    obj.$$hashKey = h;\n\t  }\n\t  else {\n\t    delete obj.$$hashKey;\n\t  }\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.extend\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\n\t * to `dst`. You can specify multiple `src` objects.\n\t *\n\t * @param {Object} dst Destination object.\n\t * @param {...Object} src Source object(s).\n\t * @returns {Object} Reference to `dst`.\n\t */\n\tfunction extend(dst) {\n\t  var h = dst.$$hashKey;\n\t  forEach(arguments, function(obj) {\n\t    if (obj !== dst) {\n\t      forEach(obj, function(value, key) {\n\t        dst[key] = value;\n\t      });\n\t    }\n\t  });\n\t\n\t  setHashKey(dst,h);\n\t  return dst;\n\t}\n\t\n\tfunction int(str) {\n\t  return parseInt(str, 10);\n\t}\n\t\n\t\n\tfunction inherit(parent, extra) {\n\t  return extend(new (extend(function() {}, {prototype:parent}))(), extra);\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.noop\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * A function that performs no operations. This function can be useful when writing code in the\n\t * functional style.\n\t   ```js\n\t     function foo(callback) {\n\t       var result = calculateResult();\n\t       (callback || angular.noop)(result);\n\t     }\n\t   ```\n\t */\n\tfunction noop() {}\n\tnoop.$inject = [];\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.identity\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * A function that returns its first argument. This function is useful when writing code in the\n\t * functional style.\n\t *\n\t   ```js\n\t     function transformer(transformationFn, value) {\n\t       return (transformationFn || angular.identity)(value);\n\t     };\n\t   ```\n\t  * @param {*} value to be returned.\n\t  * @returns {*} the value passed in.\n\t */\n\tfunction identity($) {return $;}\n\tidentity.$inject = [];\n\t\n\t\n\tfunction valueFn(value) {return function() {return value;};}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isUndefined\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is undefined.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is undefined.\n\t */\n\tfunction isUndefined(value){return typeof value === 'undefined';}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isDefined\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is defined.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is defined.\n\t */\n\tfunction isDefined(value){return typeof value !== 'undefined';}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isObject\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n\t * considered to be objects. Note that JavaScript arrays are objects.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is an `Object` but not `null`.\n\t */\n\tfunction isObject(value){return value != null && typeof value === 'object';}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isString\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is a `String`.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a `String`.\n\t */\n\tfunction isString(value){return typeof value === 'string';}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isNumber\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is a `Number`.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a `Number`.\n\t */\n\tfunction isNumber(value){return typeof value === 'number';}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isDate\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a value is a date.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a `Date`.\n\t */\n\tfunction isDate(value) {\n\t  return toString.call(value) === '[object Date]';\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isArray\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is an `Array`.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is an `Array`.\n\t */\n\tvar isArray = (function() {\n\t  if (!isFunction(Array.isArray)) {\n\t    return function(value) {\n\t      return toString.call(value) === '[object Array]';\n\t    };\n\t  }\n\t  return Array.isArray;\n\t})();\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isFunction\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is a `Function`.\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a `Function`.\n\t */\n\tfunction isFunction(value){return typeof value === 'function';}\n\t\n\t\n\t/**\n\t * Determines if a value is a regular expression object.\n\t *\n\t * @private\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a `RegExp`.\n\t */\n\tfunction isRegExp(value) {\n\t  return toString.call(value) === '[object RegExp]';\n\t}\n\t\n\t\n\t/**\n\t * Checks if `obj` is a window object.\n\t *\n\t * @private\n\t * @param {*} obj Object to check\n\t * @returns {boolean} True if `obj` is a window obj.\n\t */\n\tfunction isWindow(obj) {\n\t  return obj && obj.document && obj.location && obj.alert && obj.setInterval;\n\t}\n\t\n\t\n\tfunction isScope(obj) {\n\t  return obj && obj.$evalAsync && obj.$watch;\n\t}\n\t\n\t\n\tfunction isFile(obj) {\n\t  return toString.call(obj) === '[object File]';\n\t}\n\t\n\t\n\tfunction isBlob(obj) {\n\t  return toString.call(obj) === '[object Blob]';\n\t}\n\t\n\t\n\tfunction isBoolean(value) {\n\t  return typeof value === 'boolean';\n\t}\n\t\n\t\n\tfunction isPromiseLike(obj) {\n\t  return obj && isFunction(obj.then);\n\t}\n\t\n\t\n\tvar trim = (function() {\n\t  // native trim is way faster: http://jsperf.com/angular-trim-test\n\t  // but IE doesn't have it... :-(\n\t  // TODO: we should move this into IE/ES5 polyfill\n\t  if (!String.prototype.trim) {\n\t    return function(value) {\n\t      return isString(value) ? value.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') : value;\n\t    };\n\t  }\n\t  return function(value) {\n\t    return isString(value) ? value.trim() : value;\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.isElement\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if a reference is a DOM element (or wrapped jQuery element).\n\t *\n\t * @param {*} value Reference to check.\n\t * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n\t */\n\tfunction isElement(node) {\n\t  return !!(node &&\n\t    (node.nodeName  // we are a direct element\n\t    || (node.prop && node.attr && node.find)));  // we have an on and find method part of jQuery API\n\t}\n\t\n\t/**\n\t * @param str 'key1,key2,...'\n\t * @returns {object} in the form of {key1:true, key2:true, ...}\n\t */\n\tfunction makeMap(str) {\n\t  var obj = {}, items = str.split(\",\"), i;\n\t  for ( i = 0; i < items.length; i++ )\n\t    obj[ items[i] ] = true;\n\t  return obj;\n\t}\n\t\n\t\n\tif (msie < 9) {\n\t  nodeName_ = function(element) {\n\t    element = element.nodeName ? element : element[0];\n\t    return (element.scopeName && element.scopeName != 'HTML')\n\t      ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;\n\t  };\n\t} else {\n\t  nodeName_ = function(element) {\n\t    return element.nodeName ? element.nodeName : element[0].nodeName;\n\t  };\n\t}\n\t\n\t\n\tfunction map(obj, iterator, context) {\n\t  var results = [];\n\t  forEach(obj, function(value, index, list) {\n\t    results.push(iterator.call(context, value, index, list));\n\t  });\n\t  return results;\n\t}\n\t\n\t\n\t/**\n\t * @description\n\t * Determines the number of elements in an array, the number of properties an object has, or\n\t * the length of a string.\n\t *\n\t * Note: This function is used to augment the Object type in Angular expressions. See\n\t * {@link angular.Object} for more information about Angular arrays.\n\t *\n\t * @param {Object|Array|string} obj Object, array, or string to inspect.\n\t * @param {boolean} [ownPropsOnly=false] Count only \"own\" properties in an object\n\t * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.\n\t */\n\tfunction size(obj, ownPropsOnly) {\n\t  var count = 0, key;\n\t\n\t  if (isArray(obj) || isString(obj)) {\n\t    return obj.length;\n\t  } else if (isObject(obj)) {\n\t    for (key in obj)\n\t      if (!ownPropsOnly || obj.hasOwnProperty(key))\n\t        count++;\n\t  }\n\t\n\t  return count;\n\t}\n\t\n\t\n\tfunction includes(array, obj) {\n\t  return indexOf(array, obj) != -1;\n\t}\n\t\n\tfunction indexOf(array, obj) {\n\t  if (array.indexOf) return array.indexOf(obj);\n\t\n\t  for (var i = 0; i < array.length; i++) {\n\t    if (obj === array[i]) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\tfunction arrayRemove(array, value) {\n\t  var index = indexOf(array, value);\n\t  if (index >=0)\n\t    array.splice(index, 1);\n\t  return value;\n\t}\n\t\n\tfunction isLeafNode (node) {\n\t  if (node) {\n\t    switch (node.nodeName) {\n\t    case \"OPTION\":\n\t    case \"PRE\":\n\t    case \"TITLE\":\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.copy\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Creates a deep copy of `source`, which should be an object or an array.\n\t *\n\t * * If no destination is supplied, a copy of the object or array is created.\n\t * * If a destination is provided, all of its elements (for array) or properties (for objects)\n\t *   are deleted and then all elements/properties from the source are copied to it.\n\t * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.\n\t * * If `source` is identical to 'destination' an exception will be thrown.\n\t *\n\t * @param {*} source The source that will be used to make a copy.\n\t *                   Can be any type, including primitives, `null`, and `undefined`.\n\t * @param {(Object|Array)=} destination Destination into which the source is copied. If\n\t *     provided, must be of the same type as `source`.\n\t * @returns {*} The copy or updated `destination`, if `destination` was specified.\n\t *\n\t * @example\n\t <example module=\"copyExample\">\n\t <file name=\"index.html\">\n\t <div ng-controller=\"ExampleController\">\n\t <form novalidate class=\"simple-form\">\n\t Name: <input type=\"text\" ng-model=\"user.name\" /><br />\n\t E-mail: <input type=\"email\" ng-model=\"user.email\" /><br />\n\t Gender: <input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male\n\t <input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female<br />\n\t <button ng-click=\"reset()\">RESET</button>\n\t <button ng-click=\"update(user)\">SAVE</button>\n\t </form>\n\t <pre>form = {{user | json}}</pre>\n\t <pre>master = {{master | json}}</pre>\n\t </div>\n\t\n\t <script>\n\t  angular.module('copyExample', [])\n\t    .controller('ExampleController', ['$scope', function($scope) {\n\t      $scope.master= {};\n\t\n\t      $scope.update = function(user) {\n\t        // Example with 1 argument\n\t        $scope.master= angular.copy(user);\n\t      };\n\t\n\t      $scope.reset = function() {\n\t        // Example with 2 arguments\n\t        angular.copy($scope.master, $scope.user);\n\t      };\n\t\n\t      $scope.reset();\n\t    }]);\n\t </script>\n\t </file>\n\t </example>\n\t */\n\tfunction copy(source, destination, stackSource, stackDest) {\n\t  if (isWindow(source) || isScope(source)) {\n\t    throw ngMinErr('cpws',\n\t      \"Can't copy! Making copies of Window or Scope instances is not supported.\");\n\t  }\n\t\n\t  if (!destination) {\n\t    destination = source;\n\t    if (source) {\n\t      if (isArray(source)) {\n\t        destination = copy(source, [], stackSource, stackDest);\n\t      } else if (isDate(source)) {\n\t        destination = new Date(source.getTime());\n\t      } else if (isRegExp(source)) {\n\t        destination = new RegExp(source.source, source.toString().match(/[^\\/]*$/)[0]);\n\t        destination.lastIndex = source.lastIndex;\n\t      } else if (isObject(source)) {\n\t        destination = copy(source, {}, stackSource, stackDest);\n\t      }\n\t    }\n\t  } else {\n\t    if (source === destination) throw ngMinErr('cpi',\n\t      \"Can't copy! Source and destination are identical.\");\n\t\n\t    stackSource = stackSource || [];\n\t    stackDest = stackDest || [];\n\t\n\t    if (isObject(source)) {\n\t      var index = indexOf(stackSource, source);\n\t      if (index !== -1) return stackDest[index];\n\t\n\t      stackSource.push(source);\n\t      stackDest.push(destination);\n\t    }\n\t\n\t    var result;\n\t    if (isArray(source)) {\n\t      destination.length = 0;\n\t      for ( var i = 0; i < source.length; i++) {\n\t        result = copy(source[i], null, stackSource, stackDest);\n\t        if (isObject(source[i])) {\n\t          stackSource.push(source[i]);\n\t          stackDest.push(result);\n\t        }\n\t        destination.push(result);\n\t      }\n\t    } else {\n\t      var h = destination.$$hashKey;\n\t      if (isArray(destination)) {\n\t        destination.length = 0;\n\t      } else {\n\t        forEach(destination, function(value, key) {\n\t          delete destination[key];\n\t        });\n\t      }\n\t      for ( var key in source) {\n\t        result = copy(source[key], null, stackSource, stackDest);\n\t        if (isObject(source[key])) {\n\t          stackSource.push(source[key]);\n\t          stackDest.push(result);\n\t        }\n\t        destination[key] = result;\n\t      }\n\t      setHashKey(destination,h);\n\t    }\n\t\n\t  }\n\t  return destination;\n\t}\n\t\n\t/**\n\t * Creates a shallow copy of an object, an array or a primitive\n\t */\n\tfunction shallowCopy(src, dst) {\n\t  if (isArray(src)) {\n\t    dst = dst || [];\n\t\n\t    for ( var i = 0; i < src.length; i++) {\n\t      dst[i] = src[i];\n\t    }\n\t  } else if (isObject(src)) {\n\t    dst = dst || {};\n\t\n\t    for (var key in src) {\n\t      if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n\t        dst[key] = src[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return dst || src;\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.equals\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Determines if two objects or two values are equivalent. Supports value types, regular\n\t * expressions, arrays and objects.\n\t *\n\t * Two objects or values are considered equivalent if at least one of the following is true:\n\t *\n\t * * Both objects or values pass `===` comparison.\n\t * * Both objects or values are of the same type and all of their properties are equal by\n\t *   comparing them with `angular.equals`.\n\t * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)\n\t * * Both values represent the same regular expression (In JavaScript,\n\t *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\n\t *   representation matches).\n\t *\n\t * During a property comparison, properties of `function` type and properties with names\n\t * that begin with `$` are ignored.\n\t *\n\t * Scope and DOMWindow objects are being compared only by identify (`===`).\n\t *\n\t * @param {*} o1 Object or value to compare.\n\t * @param {*} o2 Object or value to compare.\n\t * @returns {boolean} True if arguments are equal.\n\t */\n\tfunction equals(o1, o2) {\n\t  if (o1 === o2) return true;\n\t  if (o1 === null || o2 === null) return false;\n\t  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n\t  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n\t  if (t1 == t2) {\n\t    if (t1 == 'object') {\n\t      if (isArray(o1)) {\n\t        if (!isArray(o2)) return false;\n\t        if ((length = o1.length) == o2.length) {\n\t          for(key=0; key<length; key++) {\n\t            if (!equals(o1[key], o2[key])) return false;\n\t          }\n\t          return true;\n\t        }\n\t      } else if (isDate(o1)) {\n\t        if (!isDate(o2)) return false;\n\t        return (isNaN(o1.getTime()) && isNaN(o2.getTime())) || (o1.getTime() === o2.getTime());\n\t      } else if (isRegExp(o1) && isRegExp(o2)) {\n\t        return o1.toString() == o2.toString();\n\t      } else {\n\t        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2)) return false;\n\t        keySet = {};\n\t        for(key in o1) {\n\t          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n\t          if (!equals(o1[key], o2[key])) return false;\n\t          keySet[key] = true;\n\t        }\n\t        for(key in o2) {\n\t          if (!keySet.hasOwnProperty(key) &&\n\t              key.charAt(0) !== '$' &&\n\t              o2[key] !== undefined &&\n\t              !isFunction(o2[key])) return false;\n\t        }\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tvar csp = function() {\n\t  if (isDefined(csp.isActive_)) return csp.isActive_;\n\t\n\t  var active = !!(document.querySelector('[ng-csp]') ||\n\t                  document.querySelector('[data-ng-csp]'));\n\t\n\t  if (!active) {\n\t    try {\n\t      /* jshint -W031, -W054 */\n\t      new Function('');\n\t      /* jshint +W031, +W054 */\n\t    } catch (e) {\n\t      active = true;\n\t    }\n\t  }\n\t\n\t  return (csp.isActive_ = active);\n\t};\n\t\n\t\n\t\n\tfunction concat(array1, array2, index) {\n\t  return array1.concat(slice.call(array2, index));\n\t}\n\t\n\tfunction sliceArgs(args, startIndex) {\n\t  return slice.call(args, startIndex || 0);\n\t}\n\t\n\t\n\t/* jshint -W101 */\n\t/**\n\t * @ngdoc function\n\t * @name angular.bind\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n\t * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n\t * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as\n\t * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).\n\t *\n\t * @param {Object} self Context which `fn` should be evaluated in.\n\t * @param {function()} fn Function to be bound.\n\t * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n\t * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n\t */\n\t/* jshint +W101 */\n\tfunction bind(self, fn) {\n\t  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n\t  if (isFunction(fn) && !(fn instanceof RegExp)) {\n\t    return curryArgs.length\n\t      ? function() {\n\t          return arguments.length\n\t            ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))\n\t            : fn.apply(self, curryArgs);\n\t        }\n\t      : function() {\n\t          return arguments.length\n\t            ? fn.apply(self, arguments)\n\t            : fn.call(self);\n\t        };\n\t  } else {\n\t    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n\t    return fn;\n\t  }\n\t}\n\t\n\t\n\tfunction toJsonReplacer(key, value) {\n\t  var val = value;\n\t\n\t  if (typeof key === 'string' && key.charAt(0) === '$') {\n\t    val = undefined;\n\t  } else if (isWindow(value)) {\n\t    val = '$WINDOW';\n\t  } else if (value &&  document === value) {\n\t    val = '$DOCUMENT';\n\t  } else if (isScope(value)) {\n\t    val = '$SCOPE';\n\t  }\n\t\n\t  return val;\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.toJson\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Serializes input into a JSON-formatted string. Properties with leading $ characters will be\n\t * stripped since angular uses this notation internally.\n\t *\n\t * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n\t * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.\n\t * @returns {string|undefined} JSON-ified string representing `obj`.\n\t */\n\tfunction toJson(obj, pretty) {\n\t  if (typeof obj === 'undefined') return undefined;\n\t  return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.fromJson\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Deserializes a JSON string.\n\t *\n\t * @param {string} json JSON string to deserialize.\n\t * @returns {Object|Array|string|number} Deserialized thingy.\n\t */\n\tfunction fromJson(json) {\n\t  return isString(json)\n\t      ? JSON.parse(json)\n\t      : json;\n\t}\n\t\n\t\n\tfunction toBoolean(value) {\n\t  if (typeof value === 'function') {\n\t    value = true;\n\t  } else if (value && value.length !== 0) {\n\t    var v = lowercase(\"\" + value);\n\t    value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');\n\t  } else {\n\t    value = false;\n\t  }\n\t  return value;\n\t}\n\t\n\t/**\n\t * @returns {string} Returns the string representation of the element.\n\t */\n\tfunction startingTag(element) {\n\t  element = jqLite(element).clone();\n\t  try {\n\t    // turns out IE does not let you set .html() on elements which\n\t    // are not allowed to have children. So we just ignore it.\n\t    element.empty();\n\t  } catch(e) {}\n\t  // As Per DOM Standards\n\t  var TEXT_NODE = 3;\n\t  var elemHtml = jqLite('<div>').append(element).html();\n\t  try {\n\t    return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :\n\t        elemHtml.\n\t          match(/^(<[^>]+>)/)[1].\n\t          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n\t  } catch(e) {\n\t    return lowercase(elemHtml);\n\t  }\n\t\n\t}\n\t\n\t\n\t/////////////////////////////////////////////////\n\t\n\t/**\n\t * Tries to decode the URI component without throwing an exception.\n\t *\n\t * @private\n\t * @param str value potential URI component to check.\n\t * @returns {boolean} True if `value` can be decoded\n\t * with the decodeURIComponent function.\n\t */\n\tfunction tryDecodeURIComponent(value) {\n\t  try {\n\t    return decodeURIComponent(value);\n\t  } catch(e) {\n\t    // Ignore any invalid uri component\n\t  }\n\t}\n\t\n\t\n\t/**\n\t * Parses an escaped url query string into key-value pairs.\n\t * @returns {Object.<string,boolean|Array>}\n\t */\n\tfunction parseKeyValue(/**string*/keyValue) {\n\t  var obj = {}, key_value, key;\n\t  forEach((keyValue || \"\").split('&'), function(keyValue) {\n\t    if ( keyValue ) {\n\t      key_value = keyValue.replace(/\\+/g,'%20').split('=');\n\t      key = tryDecodeURIComponent(key_value[0]);\n\t      if ( isDefined(key) ) {\n\t        var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\n\t        if (!hasOwnProperty.call(obj, key)) {\n\t          obj[key] = val;\n\t        } else if(isArray(obj[key])) {\n\t          obj[key].push(val);\n\t        } else {\n\t          obj[key] = [obj[key],val];\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return obj;\n\t}\n\t\n\tfunction toKeyValue(obj) {\n\t  var parts = [];\n\t  forEach(obj, function(value, key) {\n\t    if (isArray(value)) {\n\t      forEach(value, function(arrayValue) {\n\t        parts.push(encodeUriQuery(key, true) +\n\t                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));\n\t      });\n\t    } else {\n\t    parts.push(encodeUriQuery(key, true) +\n\t               (value === true ? '' : '=' + encodeUriQuery(value, true)));\n\t    }\n\t  });\n\t  return parts.length ? parts.join('&') : '';\n\t}\n\t\n\t\n\t/**\n\t * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n\t * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n\t * segments:\n\t *    segment       = *pchar\n\t *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n\t *    pct-encoded   = \"%\" HEXDIG HEXDIG\n\t *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n\t *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n\t *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n\t */\n\tfunction encodeUriSegment(val) {\n\t  return encodeUriQuery(val, true).\n\t             replace(/%26/gi, '&').\n\t             replace(/%3D/gi, '=').\n\t             replace(/%2B/gi, '+');\n\t}\n\t\n\t\n\t/**\n\t * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n\t * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n\t * encoded per http://tools.ietf.org/html/rfc3986:\n\t *    query       = *( pchar / \"/\" / \"?\" )\n\t *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n\t *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n\t *    pct-encoded   = \"%\" HEXDIG HEXDIG\n\t *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n\t *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n\t */\n\tfunction encodeUriQuery(val, pctEncodeSpaces) {\n\t  return encodeURIComponent(val).\n\t             replace(/%40/gi, '@').\n\t             replace(/%3A/gi, ':').\n\t             replace(/%24/g, '$').\n\t             replace(/%2C/gi, ',').\n\t             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngApp\n\t * @module ng\n\t *\n\t * @element ANY\n\t * @param {angular.Module} ngApp an optional application\n\t *   {@link angular.module module} name to load.\n\t *\n\t * @description\n\t *\n\t * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive\n\t * designates the **root element** of the application and is typically placed near the root element\n\t * of the page - e.g. on the `<body>` or `<html>` tags.\n\t *\n\t * Only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`\n\t * found in the document will be used to define the root element to auto-bootstrap as an\n\t * application. To run multiple applications in an HTML document you must manually bootstrap them using\n\t * {@link angular.bootstrap} instead. AngularJS applications cannot be nested within each other.\n\t *\n\t * You can specify an **AngularJS module** to be used as the root module for the application.  This\n\t * module will be loaded into the {@link auto.$injector} when the application is bootstrapped and\n\t * should contain the application code needed or have dependencies on other modules that will\n\t * contain the code. See {@link angular.module} for more information.\n\t *\n\t * In the example below if the `ngApp` directive were not placed on the `html` element then the\n\t * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`\n\t * would not be resolved to `3`.\n\t *\n\t * `ngApp` is the easiest, and most common, way to bootstrap an application.\n\t *\n\t <example module=\"ngAppDemo\">\n\t   <file name=\"index.html\">\n\t   <div ng-controller=\"ngAppDemoController\">\n\t     I can add: {{a}} + {{b}} =  {{ a+b }}\n\t   </div>\n\t   </file>\n\t   <file name=\"script.js\">\n\t   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {\n\t     $scope.a = 1;\n\t     $scope.b = 2;\n\t   });\n\t   </file>\n\t </example>\n\t *\n\t */\n\tfunction angularInit(element, bootstrap) {\n\t  var elements = [element],\n\t      appElement,\n\t      module,\n\t      names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n\t      NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/;\n\t\n\t  function append(element) {\n\t    element && elements.push(element);\n\t  }\n\t\n\t  forEach(names, function(name) {\n\t    names[name] = true;\n\t    append(document.getElementById(name));\n\t    name = name.replace(':', '\\\\:');\n\t    if (element.querySelectorAll) {\n\t      forEach(element.querySelectorAll('.' + name), append);\n\t      forEach(element.querySelectorAll('.' + name + '\\\\:'), append);\n\t      forEach(element.querySelectorAll('[' + name + ']'), append);\n\t    }\n\t  });\n\t\n\t  forEach(elements, function(element) {\n\t    if (!appElement) {\n\t      var className = ' ' + element.className + ' ';\n\t      var match = NG_APP_CLASS_REGEXP.exec(className);\n\t      if (match) {\n\t        appElement = element;\n\t        module = (match[2] || '').replace(/\\s+/g, ',');\n\t      } else {\n\t        forEach(element.attributes, function(attr) {\n\t          if (!appElement && names[attr.name]) {\n\t            appElement = element;\n\t            module = attr.value;\n\t          }\n\t        });\n\t      }\n\t    }\n\t  });\n\t  if (appElement) {\n\t    bootstrap(appElement, module ? [module] : []);\n\t  }\n\t}\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.bootstrap\n\t * @module ng\n\t * @description\n\t * Use this function to manually start up angular application.\n\t *\n\t * See: {@link guide/bootstrap Bootstrap}\n\t *\n\t * Note that ngScenario-based end-to-end tests cannot use this function to bootstrap manually.\n\t * They must use {@link ng.directive:ngApp ngApp}.\n\t *\n\t * Angular will detect if it has been loaded into the browser more than once and only allow the\n\t * first loaded script to be bootstrapped and will report a warning to the browser console for\n\t * each of the subsequent scripts. This prevents strange results in applications, where otherwise\n\t * multiple instances of Angular try to work on the DOM.\n\t *\n\t * <example name=\"multi-bootstrap\" module=\"multi-bootstrap\">\n\t * <file name=\"index.html\">\n\t * <script src=\"../../../angular.js\"></script>\n\t * <div ng-controller=\"BrokenTable\">\n\t *   <table>\n\t *   <tr>\n\t *     <th ng-repeat=\"heading in headings\">{{heading}}</th>\n\t *   </tr>\n\t *   <tr ng-repeat=\"filling in fillings\">\n\t *     <td ng-repeat=\"fill in filling\">{{fill}}</td>\n\t *   </tr>\n\t * </table>\n\t * </div>\n\t * </file>\n\t * <file name=\"controller.js\">\n\t * var app = angular.module('multi-bootstrap', [])\n\t *\n\t * .controller('BrokenTable', function($scope) {\n\t *     $scope.headings = ['One', 'Two', 'Three'];\n\t *     $scope.fillings = [[1, 2, 3], ['A', 'B', 'C'], [7, 8, 9]];\n\t * });\n\t * </file>\n\t * <file name=\"protractor.js\" type=\"protractor\">\n\t * it('should only insert one table cell for each item in $scope.fillings', function() {\n\t *  expect(element.all(by.css('td')).count())\n\t *      .toBe(9);\n\t * });\n\t * </file>\n\t * </example>\n\t *\n\t * @param {DOMElement} element DOM element which is the root of angular application.\n\t * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.\n\t *     Each item in the array should be the name of a predefined module or a (DI annotated)\n\t *     function that will be invoked by the injector as a run block.\n\t *     See: {@link angular.module modules}\n\t * @returns {auto.$injector} Returns the newly created injector for this app.\n\t */\n\tfunction bootstrap(element, modules) {\n\t  var doBootstrap = function() {\n\t    element = jqLite(element);\n\t\n\t    if (element.injector()) {\n\t      var tag = (element[0] === document) ? 'document' : startingTag(element);\n\t      //Encode angle brackets to prevent input from being sanitized to empty string #8683\n\t      throw ngMinErr(\n\t          'btstrpd',\n\t          \"App Already Bootstrapped with this Element '{0}'\",\n\t          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));\n\t    }\n\t\n\t    modules = modules || [];\n\t    modules.unshift(['$provide', function($provide) {\n\t      $provide.value('$rootElement', element);\n\t    }]);\n\t    modules.unshift('ng');\n\t    var injector = createInjector(modules);\n\t    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector', '$animate',\n\t       function(scope, element, compile, injector, animate) {\n\t        scope.$apply(function() {\n\t          element.data('$injector', injector);\n\t          compile(element)(scope);\n\t        });\n\t      }]\n\t    );\n\t    return injector;\n\t  };\n\t\n\t  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\t\n\t  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n\t    return doBootstrap();\n\t  }\n\t\n\t  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n\t  angular.resumeBootstrap = function(extraModules) {\n\t    forEach(extraModules, function(module) {\n\t      modules.push(module);\n\t    });\n\t    doBootstrap();\n\t  };\n\t}\n\t\n\tvar SNAKE_CASE_REGEXP = /[A-Z]/g;\n\tfunction snake_case(name, separator) {\n\t  separator = separator || '_';\n\t  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n\t    return (pos ? separator : '') + letter.toLowerCase();\n\t  });\n\t}\n\t\n\tfunction bindJQuery() {\n\t  // bind to jQuery if present;\n\t  jQuery = window.jQuery;\n\t  // Use jQuery if it exists with proper functionality, otherwise default to us.\n\t  // Angular 1.2+ requires jQuery 1.7.1+ for on()/off() support.\n\t  if (jQuery && jQuery.fn.on) {\n\t    jqLite = jQuery;\n\t    extend(jQuery.fn, {\n\t      scope: JQLitePrototype.scope,\n\t      isolateScope: JQLitePrototype.isolateScope,\n\t      controller: JQLitePrototype.controller,\n\t      injector: JQLitePrototype.injector,\n\t      inheritedData: JQLitePrototype.inheritedData\n\t    });\n\t    // Method signature:\n\t    //     jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments)\n\t    jqLitePatchJQueryRemove('remove', true, true, false);\n\t    jqLitePatchJQueryRemove('empty', false, false, false);\n\t    jqLitePatchJQueryRemove('html', false, false, true);\n\t  } else {\n\t    jqLite = JQLite;\n\t  }\n\t  angular.element = jqLite;\n\t}\n\t\n\t/**\n\t * throw error if the argument is falsy.\n\t */\n\tfunction assertArg(arg, name, reason) {\n\t  if (!arg) {\n\t    throw ngMinErr('areq', \"Argument '{0}' is {1}\", (name || '?'), (reason || \"required\"));\n\t  }\n\t  return arg;\n\t}\n\t\n\tfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n\t  if (acceptArrayAnnotation && isArray(arg)) {\n\t      arg = arg[arg.length - 1];\n\t  }\n\t\n\t  assertArg(isFunction(arg), name, 'not a function, got ' +\n\t      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\n\t  return arg;\n\t}\n\t\n\t/**\n\t * throw error if the name given is hasOwnProperty\n\t * @param  {String} name    the name to test\n\t * @param  {String} context the context in which the name is used, such as module or directive\n\t */\n\tfunction assertNotHasOwnProperty(name, context) {\n\t  if (name === 'hasOwnProperty') {\n\t    throw ngMinErr('badname', \"hasOwnProperty is not a valid {0} name\", context);\n\t  }\n\t}\n\t\n\t/**\n\t * Return the value accessible from the object by path. Any undefined traversals are ignored\n\t * @param {Object} obj starting object\n\t * @param {String} path path to traverse\n\t * @param {boolean} [bindFnToScope=true]\n\t * @returns {Object} value as accessible by path\n\t */\n\t//TODO(misko): this function needs to be removed\n\tfunction getter(obj, path, bindFnToScope) {\n\t  if (!path) return obj;\n\t  var keys = path.split('.');\n\t  var key;\n\t  var lastInstance = obj;\n\t  var len = keys.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    key = keys[i];\n\t    if (obj) {\n\t      obj = (lastInstance = obj)[key];\n\t    }\n\t  }\n\t  if (!bindFnToScope && isFunction(obj)) {\n\t    return bind(lastInstance, obj);\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Return the DOM siblings between the first and last node in the given array.\n\t * @param {Array} array like object\n\t * @returns {DOMElement} object containing the elements\n\t */\n\tfunction getBlockElements(nodes) {\n\t  var startNode = nodes[0],\n\t      endNode = nodes[nodes.length - 1];\n\t  if (startNode === endNode) {\n\t    return jqLite(startNode);\n\t  }\n\t\n\t  var element = startNode;\n\t  var elements = [element];\n\t\n\t  do {\n\t    element = element.nextSibling;\n\t    if (!element) break;\n\t    elements.push(element);\n\t  } while (element !== endNode);\n\t\n\t  return jqLite(elements);\n\t}\n\t\n\t/**\n\t * @ngdoc type\n\t * @name angular.Module\n\t * @module ng\n\t * @description\n\t *\n\t * Interface for configuring angular {@link angular.module modules}.\n\t */\n\t\n\tfunction setupModuleLoader(window) {\n\t\n\t  var $injectorMinErr = minErr('$injector');\n\t  var ngMinErr = minErr('ng');\n\t\n\t  function ensure(obj, name, factory) {\n\t    return obj[name] || (obj[name] = factory());\n\t  }\n\t\n\t  var angular = ensure(window, 'angular', Object);\n\t\n\t  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap\n\t  angular.$$minErr = angular.$$minErr || minErr;\n\t\n\t  return ensure(angular, 'module', function() {\n\t    /** @type {Object.<string, angular.Module>} */\n\t    var modules = {};\n\t\n\t    /**\n\t     * @ngdoc function\n\t     * @name angular.module\n\t     * @module ng\n\t     * @description\n\t     *\n\t     * The `angular.module` is a global place for creating, registering and retrieving Angular\n\t     * modules.\n\t     * All modules (angular core or 3rd party) that should be available to an application must be\n\t     * registered using this mechanism.\n\t     *\n\t     * When passed two or more arguments, a new module is created.  If passed only one argument, an\n\t     * existing module (the name passed as the first argument to `module`) is retrieved.\n\t     *\n\t     *\n\t     * # Module\n\t     *\n\t     * A module is a collection of services, directives, controllers, filters, and configuration information.\n\t     * `angular.module` is used to configure the {@link auto.$injector $injector}.\n\t     *\n\t     * ```js\n\t     * // Create a new module\n\t     * var myModule = angular.module('myModule', []);\n\t     *\n\t     * // register a new service\n\t     * myModule.value('appName', 'MyCoolApp');\n\t     *\n\t     * // configure existing services inside initialization blocks.\n\t     * myModule.config(['$locationProvider', function($locationProvider) {\n\t     *   // Configure existing providers\n\t     *   $locationProvider.hashPrefix('!');\n\t     * }]);\n\t     * ```\n\t     *\n\t     * Then you can create an injector and load your modules like this:\n\t     *\n\t     * ```js\n\t     * var injector = angular.injector(['ng', 'myModule'])\n\t     * ```\n\t     *\n\t     * However it's more likely that you'll just use\n\t     * {@link ng.directive:ngApp ngApp} or\n\t     * {@link angular.bootstrap} to simplify this process for you.\n\t     *\n\t     * @param {!string} name The name of the module to create or retrieve.\n\t     * @param {!Array.<string>=} requires If specified then new module is being created. If\n\t     *        unspecified then the module is being retrieved for further configuration.\n\t     * @param {Function=} configFn Optional configuration function for the module. Same as\n\t     *        {@link angular.Module#config Module#config()}.\n\t     * @returns {module} new module with the {@link angular.Module} api.\n\t     */\n\t    return function module(name, requires, configFn) {\n\t      var assertNotHasOwnProperty = function(name, context) {\n\t        if (name === 'hasOwnProperty') {\n\t          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\n\t        }\n\t      };\n\t\n\t      assertNotHasOwnProperty(name, 'module');\n\t      if (requires && modules.hasOwnProperty(name)) {\n\t        modules[name] = null;\n\t      }\n\t      return ensure(modules, name, function() {\n\t        if (!requires) {\n\t          throw $injectorMinErr('nomod', \"Module '{0}' is not available! You either misspelled \" +\n\t             \"the module name or forgot to load it. If registering a module ensure that you \" +\n\t             \"specify the dependencies as the second argument.\", name);\n\t        }\n\t\n\t        /** @type {!Array.<Array.<*>>} */\n\t        var invokeQueue = [];\n\t\n\t        /** @type {!Array.<Function>} */\n\t        var runBlocks = [];\n\t\n\t        var config = invokeLater('$injector', 'invoke');\n\t\n\t        /** @type {angular.Module} */\n\t        var moduleInstance = {\n\t          // Private state\n\t          _invokeQueue: invokeQueue,\n\t          _runBlocks: runBlocks,\n\t\n\t          /**\n\t           * @ngdoc property\n\t           * @name angular.Module#requires\n\t           * @module ng\n\t           *\n\t           * @description\n\t           * Holds the list of modules which the injector will load before the current module is\n\t           * loaded.\n\t           */\n\t          requires: requires,\n\t\n\t          /**\n\t           * @ngdoc property\n\t           * @name angular.Module#name\n\t           * @module ng\n\t           *\n\t           * @description\n\t           * Name of the module.\n\t           */\n\t          name: name,\n\t\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#provider\n\t           * @module ng\n\t           * @param {string} name service name\n\t           * @param {Function} providerType Construction function for creating new instance of the\n\t           *                                service.\n\t           * @description\n\t           * See {@link auto.$provide#provider $provide.provider()}.\n\t           */\n\t          provider: invokeLater('$provide', 'provider'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#factory\n\t           * @module ng\n\t           * @param {string} name service name\n\t           * @param {Function} providerFunction Function for creating new instance of the service.\n\t           * @description\n\t           * See {@link auto.$provide#factory $provide.factory()}.\n\t           */\n\t          factory: invokeLater('$provide', 'factory'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#service\n\t           * @module ng\n\t           * @param {string} name service name\n\t           * @param {Function} constructor A constructor function that will be instantiated.\n\t           * @description\n\t           * See {@link auto.$provide#service $provide.service()}.\n\t           */\n\t          service: invokeLater('$provide', 'service'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#value\n\t           * @module ng\n\t           * @param {string} name service name\n\t           * @param {*} object Service instance object.\n\t           * @description\n\t           * See {@link auto.$provide#value $provide.value()}.\n\t           */\n\t          value: invokeLater('$provide', 'value'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#constant\n\t           * @module ng\n\t           * @param {string} name constant name\n\t           * @param {*} object Constant value.\n\t           * @description\n\t           * Because the constant are fixed, they get applied before other provide methods.\n\t           * See {@link auto.$provide#constant $provide.constant()}.\n\t           */\n\t          constant: invokeLater('$provide', 'constant', 'unshift'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#animation\n\t           * @module ng\n\t           * @param {string} name animation name\n\t           * @param {Function} animationFactory Factory function for creating new instance of an\n\t           *                                    animation.\n\t           * @description\n\t           *\n\t           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.\n\t           *\n\t           *\n\t           * Defines an animation hook that can be later used with\n\t           * {@link ngAnimate.$animate $animate} service and directives that use this service.\n\t           *\n\t           * ```js\n\t           * module.animation('.animation-name', function($inject1, $inject2) {\n\t           *   return {\n\t           *     eventName : function(element, done) {\n\t           *       //code to run the animation\n\t           *       //once complete, then run done()\n\t           *       return function cancellationFunction(element) {\n\t           *         //code to cancel the animation\n\t           *       }\n\t           *     }\n\t           *   }\n\t           * })\n\t           * ```\n\t           *\n\t           * See {@link ngAnimate.$animateProvider#register $animateProvider.register()} and\n\t           * {@link ngAnimate ngAnimate module} for more information.\n\t           */\n\t          animation: invokeLater('$animateProvider', 'register'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#filter\n\t           * @module ng\n\t           * @param {string} name Filter name.\n\t           * @param {Function} filterFactory Factory function for creating new instance of filter.\n\t           * @description\n\t           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n\t           */\n\t          filter: invokeLater('$filterProvider', 'register'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#controller\n\t           * @module ng\n\t           * @param {string|Object} name Controller name, or an object map of controllers where the\n\t           *    keys are the names and the values are the constructors.\n\t           * @param {Function} constructor Controller constructor function.\n\t           * @description\n\t           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n\t           */\n\t          controller: invokeLater('$controllerProvider', 'register'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#directive\n\t           * @module ng\n\t           * @param {string|Object} name Directive name, or an object map of directives where the\n\t           *    keys are the names and the values are the factories.\n\t           * @param {Function} directiveFactory Factory function for creating new instance of\n\t           * directives.\n\t           * @description\n\t           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n\t           */\n\t          directive: invokeLater('$compileProvider', 'directive'),\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#config\n\t           * @module ng\n\t           * @param {Function} configFn Execute this function on module load. Useful for service\n\t           *    configuration.\n\t           * @description\n\t           * Use this method to register work which needs to be performed on module loading.\n\t           * For more about how to configure services, see\n\t           * {@link providers#providers_provider-recipe Provider Recipe}.\n\t           */\n\t          config: config,\n\t\n\t          /**\n\t           * @ngdoc method\n\t           * @name angular.Module#run\n\t           * @module ng\n\t           * @param {Function} initializationFn Execute this function after injector creation.\n\t           *    Useful for application initialization.\n\t           * @description\n\t           * Use this method to register work which should be performed when the injector is done\n\t           * loading all modules.\n\t           */\n\t          run: function(block) {\n\t            runBlocks.push(block);\n\t            return this;\n\t          }\n\t        };\n\t\n\t        if (configFn) {\n\t          config(configFn);\n\t        }\n\t\n\t        return  moduleInstance;\n\t\n\t        /**\n\t         * @param {string} provider\n\t         * @param {string} method\n\t         * @param {String=} insertMethod\n\t         * @returns {angular.Module}\n\t         */\n\t        function invokeLater(provider, method, insertMethod) {\n\t          return function() {\n\t            invokeQueue[insertMethod || 'push']([provider, method, arguments]);\n\t            return moduleInstance;\n\t          };\n\t        }\n\t      });\n\t    };\n\t  });\n\t\n\t}\n\t\n\t/* global angularModule: true,\n\t  version: true,\n\t\n\t  $LocaleProvider,\n\t  $CompileProvider,\n\t\n\t    htmlAnchorDirective,\n\t    inputDirective,\n\t    inputDirective,\n\t    formDirective,\n\t    scriptDirective,\n\t    selectDirective,\n\t    styleDirective,\n\t    optionDirective,\n\t    ngBindDirective,\n\t    ngBindHtmlDirective,\n\t    ngBindTemplateDirective,\n\t    ngClassDirective,\n\t    ngClassEvenDirective,\n\t    ngClassOddDirective,\n\t    ngCspDirective,\n\t    ngCloakDirective,\n\t    ngControllerDirective,\n\t    ngFormDirective,\n\t    ngHideDirective,\n\t    ngIfDirective,\n\t    ngIncludeDirective,\n\t    ngIncludeFillContentDirective,\n\t    ngInitDirective,\n\t    ngNonBindableDirective,\n\t    ngPluralizeDirective,\n\t    ngRepeatDirective,\n\t    ngShowDirective,\n\t    ngStyleDirective,\n\t    ngSwitchDirective,\n\t    ngSwitchWhenDirective,\n\t    ngSwitchDefaultDirective,\n\t    ngOptionsDirective,\n\t    ngTranscludeDirective,\n\t    ngModelDirective,\n\t    ngListDirective,\n\t    ngChangeDirective,\n\t    requiredDirective,\n\t    requiredDirective,\n\t    ngValueDirective,\n\t    ngAttributeAliasDirectives,\n\t    ngEventDirectives,\n\t\n\t    $AnchorScrollProvider,\n\t    $AnimateProvider,\n\t    $BrowserProvider,\n\t    $CacheFactoryProvider,\n\t    $ControllerProvider,\n\t    $DocumentProvider,\n\t    $ExceptionHandlerProvider,\n\t    $FilterProvider,\n\t    $InterpolateProvider,\n\t    $IntervalProvider,\n\t    $HttpProvider,\n\t    $HttpBackendProvider,\n\t    $LocationProvider,\n\t    $LogProvider,\n\t    $ParseProvider,\n\t    $RootScopeProvider,\n\t    $QProvider,\n\t    $$SanitizeUriProvider,\n\t    $SceProvider,\n\t    $SceDelegateProvider,\n\t    $SnifferProvider,\n\t    $TemplateCacheProvider,\n\t    $TimeoutProvider,\n\t    $$RAFProvider,\n\t    $$AsyncCallbackProvider,\n\t    $WindowProvider\n\t*/\n\t\n\t\n\t/**\n\t * @ngdoc object\n\t * @name angular.version\n\t * @module ng\n\t * @description\n\t * An object that contains information about the current AngularJS version. This object has the\n\t * following properties:\n\t *\n\t * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n\t * - `major` – `{number}` – Major version number, such as \"0\".\n\t * - `minor` – `{number}` – Minor version number, such as \"9\".\n\t * - `dot` – `{number}` – Dot version number, such as \"18\".\n\t * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n\t */\n\tvar version = {\n\t  full: '1.2.29',    // all of these placeholder strings will be replaced by grunt's\n\t  major: 1,    // package task\n\t  minor: 2,\n\t  dot: 29,\n\t  codeName: 'ultimate-deprecation'\n\t};\n\t\n\t\n\tfunction publishExternalAPI(angular){\n\t  extend(angular, {\n\t    'bootstrap': bootstrap,\n\t    'copy': copy,\n\t    'extend': extend,\n\t    'equals': equals,\n\t    'element': jqLite,\n\t    'forEach': forEach,\n\t    'injector': createInjector,\n\t    'noop': noop,\n\t    'bind': bind,\n\t    'toJson': toJson,\n\t    'fromJson': fromJson,\n\t    'identity': identity,\n\t    'isUndefined': isUndefined,\n\t    'isDefined': isDefined,\n\t    'isString': isString,\n\t    'isFunction': isFunction,\n\t    'isObject': isObject,\n\t    'isNumber': isNumber,\n\t    'isElement': isElement,\n\t    'isArray': isArray,\n\t    'version': version,\n\t    'isDate': isDate,\n\t    'lowercase': lowercase,\n\t    'uppercase': uppercase,\n\t    'callbacks': {counter: 0},\n\t    '$$minErr': minErr,\n\t    '$$csp': csp\n\t  });\n\t\n\t  angularModule = setupModuleLoader(window);\n\t  try {\n\t    angularModule('ngLocale');\n\t  } catch (e) {\n\t    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n\t  }\n\t\n\t  angularModule('ng', ['ngLocale'], ['$provide',\n\t    function ngModule($provide) {\n\t      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.\n\t      $provide.provider({\n\t        $$sanitizeUri: $$SanitizeUriProvider\n\t      });\n\t      $provide.provider('$compile', $CompileProvider).\n\t        directive({\n\t            a: htmlAnchorDirective,\n\t            input: inputDirective,\n\t            textarea: inputDirective,\n\t            form: formDirective,\n\t            script: scriptDirective,\n\t            select: selectDirective,\n\t            style: styleDirective,\n\t            option: optionDirective,\n\t            ngBind: ngBindDirective,\n\t            ngBindHtml: ngBindHtmlDirective,\n\t            ngBindTemplate: ngBindTemplateDirective,\n\t            ngClass: ngClassDirective,\n\t            ngClassEven: ngClassEvenDirective,\n\t            ngClassOdd: ngClassOddDirective,\n\t            ngCloak: ngCloakDirective,\n\t            ngController: ngControllerDirective,\n\t            ngForm: ngFormDirective,\n\t            ngHide: ngHideDirective,\n\t            ngIf: ngIfDirective,\n\t            ngInclude: ngIncludeDirective,\n\t            ngInit: ngInitDirective,\n\t            ngNonBindable: ngNonBindableDirective,\n\t            ngPluralize: ngPluralizeDirective,\n\t            ngRepeat: ngRepeatDirective,\n\t            ngShow: ngShowDirective,\n\t            ngStyle: ngStyleDirective,\n\t            ngSwitch: ngSwitchDirective,\n\t            ngSwitchWhen: ngSwitchWhenDirective,\n\t            ngSwitchDefault: ngSwitchDefaultDirective,\n\t            ngOptions: ngOptionsDirective,\n\t            ngTransclude: ngTranscludeDirective,\n\t            ngModel: ngModelDirective,\n\t            ngList: ngListDirective,\n\t            ngChange: ngChangeDirective,\n\t            required: requiredDirective,\n\t            ngRequired: requiredDirective,\n\t            ngValue: ngValueDirective\n\t        }).\n\t        directive({\n\t          ngInclude: ngIncludeFillContentDirective\n\t        }).\n\t        directive(ngAttributeAliasDirectives).\n\t        directive(ngEventDirectives);\n\t      $provide.provider({\n\t        $anchorScroll: $AnchorScrollProvider,\n\t        $animate: $AnimateProvider,\n\t        $browser: $BrowserProvider,\n\t        $cacheFactory: $CacheFactoryProvider,\n\t        $controller: $ControllerProvider,\n\t        $document: $DocumentProvider,\n\t        $exceptionHandler: $ExceptionHandlerProvider,\n\t        $filter: $FilterProvider,\n\t        $interpolate: $InterpolateProvider,\n\t        $interval: $IntervalProvider,\n\t        $http: $HttpProvider,\n\t        $httpBackend: $HttpBackendProvider,\n\t        $location: $LocationProvider,\n\t        $log: $LogProvider,\n\t        $parse: $ParseProvider,\n\t        $rootScope: $RootScopeProvider,\n\t        $q: $QProvider,\n\t        $sce: $SceProvider,\n\t        $sceDelegate: $SceDelegateProvider,\n\t        $sniffer: $SnifferProvider,\n\t        $templateCache: $TemplateCacheProvider,\n\t        $timeout: $TimeoutProvider,\n\t        $window: $WindowProvider,\n\t        $$rAF: $$RAFProvider,\n\t        $$asyncCallback : $$AsyncCallbackProvider\n\t      });\n\t    }\n\t  ]);\n\t}\n\t\n\t/* global JQLitePrototype: true,\n\t  addEventListenerFn: true,\n\t  removeEventListenerFn: true,\n\t  BOOLEAN_ATTR: true\n\t*/\n\t\n\t//////////////////////////////////\n\t//JQLite\n\t//////////////////////////////////\n\t\n\t/**\n\t * @ngdoc function\n\t * @name angular.element\n\t * @module ng\n\t * @kind function\n\t *\n\t * @description\n\t * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n\t *\n\t * If jQuery is available, `angular.element` is an alias for the\n\t * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`\n\t * delegates to Angular's built-in subset of jQuery, called \"jQuery lite\" or \"jqLite.\"\n\t *\n\t * <div class=\"alert alert-success\">jqLite is a tiny, API-compatible subset of jQuery that allows\n\t * Angular to manipulate the DOM in a cross-browser compatible way. **jqLite** implements only the most\n\t * commonly needed functionality with the goal of having a very small footprint.</div>\n\t *\n\t * To use jQuery, simply load it before `DOMContentLoaded` event fired.\n\t *\n\t * <div class=\"alert\">**Note:** all element references in Angular are always wrapped with jQuery or\n\t * jqLite; they are never raw DOM references.</div>\n\t *\n\t * ## Angular's jqLite\n\t * jqLite provides only the following jQuery methods:\n\t *\n\t * - [`addClass()`](http://api.jquery.com/addClass/)\n\t * - [`after()`](http://api.jquery.com/after/)\n\t * - [`append()`](http://api.jquery.com/append/)\n\t * - [`attr()`](http://api.jquery.com/attr/)\n\t * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData\n\t * - [`children()`](http://api.jquery.com/children/) - Does not support selectors\n\t * - [`clone()`](http://api.jquery.com/clone/)\n\t * - [`contents()`](http://api.jquery.com/contents/)\n\t * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyles()`\n\t * - [`data()`](http://api.jquery.com/data/)\n\t * - [`empty()`](http://api.jquery.com/empty/)\n\t * - [`eq()`](http://api.jquery.com/eq/)\n\t * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name\n\t * - [`hasClass()`](http://api.jquery.com/hasClass/)\n\t * - [`html()`](http://api.jquery.com/html/)\n\t * - [`next()`](http://api.jquery.com/next/) - Does not support selectors\n\t * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData\n\t * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces or selectors\n\t * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors\n\t * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors\n\t * - [`prepend()`](http://api.jquery.com/prepend/)\n\t * - [`prop()`](http://api.jquery.com/prop/)\n\t * - [`ready()`](http://api.jquery.com/ready/)\n\t * - [`remove()`](http://api.jquery.com/remove/)\n\t * - [`removeAttr()`](http://api.jquery.com/removeAttr/)\n\t * - [`removeClass()`](http://api.jquery.com/removeClass/)\n\t * - [`removeData()`](http://api.jquery.com/removeData/)\n\t * - [`replaceWith()`](http://api.jquery.com/replaceWith/)\n\t * - [`text()`](http://api.jquery.com/text/)\n\t * - [`toggleClass()`](http://api.jquery.com/toggleClass/)\n\t * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.\n\t * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces\n\t * - [`val()`](http://api.jquery.com/val/)\n\t * - [`wrap()`](http://api.jquery.com/wrap/)\n\t *\n\t * ## jQuery/jqLite Extras\n\t * Angular also provides the following additional methods and events to both jQuery and jqLite:\n\t *\n\t * ### Events\n\t * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\n\t *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM\n\t *    element before it is removed.\n\t *\n\t * ### Methods\n\t * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n\t *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n\t *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n\t *   `'ngModel'`).\n\t * - `injector()` - retrieves the injector of the current element or its parent.\n\t * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current\n\t *   element or its parent.\n\t * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the\n\t *   current element. This getter should be used only on elements that contain a directive which starts a new isolate\n\t *   scope. Calling `scope()` on this element always returns the original non-isolate scope.\n\t * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n\t *   parent element is reached.\n\t *\n\t * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n\t * @returns {Object} jQuery object.\n\t */\n\t\n\tJQLite.expando = 'ng339';\n\t\n\tvar jqCache = JQLite.cache = {},\n\t    jqId = 1,\n\t    addEventListenerFn = (window.document.addEventListener\n\t      ? function(element, type, fn) {element.addEventListener(type, fn, false);}\n\t      : function(element, type, fn) {element.attachEvent('on' + type, fn);}),\n\t    removeEventListenerFn = (window.document.removeEventListener\n\t      ? function(element, type, fn) {element.removeEventListener(type, fn, false); }\n\t      : function(element, type, fn) {element.detachEvent('on' + type, fn); });\n\t\n\t/*\n\t * !!! This is an undocumented \"private\" function !!!\n\t */\n\tvar jqData = JQLite._data = function(node) {\n\t  //jQuery always returns an object on cache miss\n\t  return this.cache[node[this.expando]] || {};\n\t};\n\t\n\tfunction jqNextId() { return ++jqId; }\n\t\n\t\n\tvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n\tvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\tvar jqLiteMinErr = minErr('jqLite');\n\t\n\t/**\n\t * Converts snake_case to camelCase.\n\t * Also there is special case for Moz prefix starting with upper case letter.\n\t * @param name Name to normalize\n\t */\n\tfunction camelCase(name) {\n\t  return name.\n\t    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n\t      return offset ? letter.toUpperCase() : letter;\n\t    }).\n\t    replace(MOZ_HACK_REGEXP, 'Moz$1');\n\t}\n\t\n\t/////////////////////////////////////////////\n\t// jQuery mutation patch\n\t//\n\t// In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a\n\t// $destroy event on all DOM nodes being removed.\n\t//\n\t/////////////////////////////////////////////\n\t\n\tfunction jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments) {\n\t  var originalJqFn = jQuery.fn[name];\n\t  originalJqFn = originalJqFn.$original || originalJqFn;\n\t  removePatch.$original = originalJqFn;\n\t  jQuery.fn[name] = removePatch;\n\t\n\t  function removePatch(param) {\n\t    // jshint -W040\n\t    var list = filterElems && param ? [this.filter(param)] : [this],\n\t        fireEvent = dispatchThis,\n\t        set, setIndex, setLength,\n\t        element, childIndex, childLength, children;\n\t\n\t    if (!getterIfNoArguments || param != null) {\n\t      while(list.length) {\n\t        set = list.shift();\n\t        for(setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {\n\t          element = jqLite(set[setIndex]);\n\t          if (fireEvent) {\n\t            element.triggerHandler('$destroy');\n\t          } else {\n\t            fireEvent = !fireEvent;\n\t          }\n\t          for(childIndex = 0, childLength = (children = element.children()).length;\n\t              childIndex < childLength;\n\t              childIndex++) {\n\t            list.push(jQuery(children[childIndex]));\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return originalJqFn.apply(this, arguments);\n\t  }\n\t}\n\t\n\tvar SINGLE_TAG_REGEXP = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\n\tvar HTML_REGEXP = /<|&#?\\w+;/;\n\tvar TAG_NAME_REGEXP = /<([\\w:]+)/;\n\tvar XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\t\n\tvar wrapMap = {\n\t  'option': [1, '<select multiple=\"multiple\">', '</select>'],\n\t\n\t  'thead': [1, '<table>', '</table>'],\n\t  'col': [2, '<table><colgroup>', '</colgroup></table>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n\t  '_default': [0, \"\", \"\"]\n\t};\n\t\n\twrapMap.optgroup = wrapMap.option;\n\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\twrapMap.th = wrapMap.td;\n\t\n\tfunction jqLiteIsTextNode(html) {\n\t  return !HTML_REGEXP.test(html);\n\t}\n\t\n\tfunction jqLiteBuildFragment(html, context) {\n\t  var elem, tmp, tag, wrap,\n\t      fragment = context.createDocumentFragment(),\n\t      nodes = [], i, j, jj;\n\t\n\t  if (jqLiteIsTextNode(html)) {\n\t    // Convert non-html into a text node\n\t    nodes.push(context.createTextNode(html));\n\t  } else {\n\t    tmp = fragment.appendChild(context.createElement('div'));\n\t    // Convert html into DOM nodes\n\t    tag = (TAG_NAME_REGEXP.exec(html) || [\"\", \"\"])[1].toLowerCase();\n\t    wrap = wrapMap[tag] || wrapMap._default;\n\t    tmp.innerHTML = '<div>&#160;</div>' +\n\t      wrap[1] + html.replace(XHTML_TAG_REGEXP, \"<$1></$2>\") + wrap[2];\n\t    tmp.removeChild(tmp.firstChild);\n\t\n\t    // Descend through wrappers to the right content\n\t    i = wrap[0];\n\t    while (i--) {\n\t      tmp = tmp.lastChild;\n\t    }\n\t\n\t    for (j=0, jj=tmp.childNodes.length; j<jj; ++j) nodes.push(tmp.childNodes[j]);\n\t\n\t    tmp = fragment.firstChild;\n\t    tmp.textContent = \"\";\n\t  }\n\t\n\t  // Remove wrapper from fragment\n\t  fragment.textContent = \"\";\n\t  fragment.innerHTML = \"\"; // Clear inner HTML\n\t  return nodes;\n\t}\n\t\n\tfunction jqLiteParseHTML(html, context) {\n\t  context = context || document;\n\t  var parsed;\n\t\n\t  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {\n\t    return [context.createElement(parsed[1])];\n\t  }\n\t\n\t  return jqLiteBuildFragment(html, context);\n\t}\n\t\n\t/////////////////////////////////////////////\n\tfunction JQLite(element) {\n\t  if (element instanceof JQLite) {\n\t    return element;\n\t  }\n\t  if (isString(element)) {\n\t    element = trim(element);\n\t  }\n\t  if (!(this instanceof JQLite)) {\n\t    if (isString(element) && element.charAt(0) != '<') {\n\t      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');\n\t    }\n\t    return new JQLite(element);\n\t  }\n\t\n\t  if (isString(element)) {\n\t    jqLiteAddNodes(this, jqLiteParseHTML(element));\n\t    var fragment = jqLite(document.createDocumentFragment());\n\t    fragment.append(this);\n\t  } else {\n\t    jqLiteAddNodes(this, element);\n\t  }\n\t}\n\t\n\tfunction jqLiteClone(element) {\n\t  return element.cloneNode(true);\n\t}\n\t\n\tfunction jqLiteDealoc(element){\n\t  jqLiteRemoveData(element);\n\t  for ( var i = 0, children = element.childNodes || []; i < children.length; i++) {\n\t    jqLiteDealoc(children[i]);\n\t  }\n\t}\n\t\n\tfunction jqLiteOff(element, type, fn, unsupported) {\n\t  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');\n\t\n\t  var events = jqLiteExpandoStore(element, 'events'),\n\t      handle = jqLiteExpandoStore(element, 'handle');\n\t\n\t  if (!handle) return; //no listeners registered\n\t\n\t  if (isUndefined(type)) {\n\t    forEach(events, function(eventHandler, type) {\n\t      removeEventListenerFn(element, type, eventHandler);\n\t      delete events[type];\n\t    });\n\t  } else {\n\t    forEach(type.split(' '), function(type) {\n\t      if (isUndefined(fn)) {\n\t        removeEventListenerFn(element, type, events[type]);\n\t        delete events[type];\n\t      } else {\n\t        arrayRemove(events[type] || [], fn);\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction jqLiteRemoveData(element, name) {\n\t  var expandoId = element.ng339,\n\t      expandoStore = jqCache[expandoId];\n\t\n\t  if (expandoStore) {\n\t    if (name) {\n\t      delete jqCache[expandoId].data[name];\n\t      return;\n\t    }\n\t\n\t    if (expandoStore.handle) {\n\t      expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');\n\t      jqLiteOff(element);\n\t    }\n\t    delete jqCache[expandoId];\n\t    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it\n\t  }\n\t}\n\t\n\tfunction jqLiteExpandoStore(element, key, value) {\n\t  var expandoId = element.ng339,\n\t      expandoStore = jqCache[expandoId || -1];\n\t\n\t  if (isDefined(value)) {\n\t    if (!expandoStore) {\n\t      element.ng339 = expandoId = jqNextId();\n\t      expandoStore = jqCache[expandoId] = {};\n\t    }\n\t    expandoStore[key] = value;\n\t  } else {\n\t    return expandoStore && expandoStore[key];\n\t  }\n\t}\n\t\n\tfunction jqLiteData(element, key, value) {\n\t  var data = jqLiteExpandoStore(element, 'data'),\n\t      isSetter = isDefined(value),\n\t      keyDefined = !isSetter && isDefined(key),\n\t      isSimpleGetter = keyDefined && !isObject(key);\n\t\n\t  if (!data && !isSimpleGetter) {\n\t    jqLiteExpandoStore(element, 'data', data = {});\n\t  }\n\t\n\t  if (isSetter) {\n\t    data[key] = value;\n\t  } else {\n\t    if (keyDefined) {\n\t      if (isSimpleGetter) {\n\t        // don't create data in this case.\n\t        return data && data[key];\n\t      } else {\n\t        extend(data, key);\n\t      }\n\t    } else {\n\t      return data;\n\t    }\n\t  }\n\t}\n\t\n\tfunction jqLiteHasClass(element, selector) {\n\t  if (!element.getAttribute) return false;\n\t  return ((\" \" + (element.getAttribute('class') || '') + \" \").replace(/[\\n\\t]/g, \" \").\n\t      indexOf( \" \" + selector + \" \" ) > -1);\n\t}\n\t\n\tfunction jqLiteRemoveClass(element, cssClasses) {\n\t  if (cssClasses && element.setAttribute) {\n\t    forEach(cssClasses.split(' '), function(cssClass) {\n\t      element.setAttribute('class', trim(\n\t          (\" \" + (element.getAttribute('class') || '') + \" \")\n\t          .replace(/[\\n\\t]/g, \" \")\n\t          .replace(\" \" + trim(cssClass) + \" \", \" \"))\n\t      );\n\t    });\n\t  }\n\t}\n\t\n\tfunction jqLiteAddClass(element, cssClasses) {\n\t  if (cssClasses && element.setAttribute) {\n\t    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')\n\t                            .replace(/[\\n\\t]/g, \" \");\n\t\n\t    forEach(cssClasses.split(' '), function(cssClass) {\n\t      cssClass = trim(cssClass);\n\t      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {\n\t        existingClasses += cssClass + ' ';\n\t      }\n\t    });\n\t\n\t    element.setAttribute('class', trim(existingClasses));\n\t  }\n\t}\n\t\n\tfunction jqLiteAddNodes(root, elements) {\n\t  if (elements) {\n\t    elements = (!elements.nodeName && isDefined(elements.length) && !isWindow(elements))\n\t      ? elements\n\t      : [ elements ];\n\t    for(var i=0; i < elements.length; i++) {\n\t      root.push(elements[i]);\n\t    }\n\t  }\n\t}\n\t\n\tfunction jqLiteController(element, name) {\n\t  return jqLiteInheritedData(element, '$' + (name || 'ngController' ) + 'Controller');\n\t}\n\t\n\tfunction jqLiteInheritedData(element, name, value) {\n\t  // if element is the document object work with the html element instead\n\t  // this makes $(document).scope() possible\n\t  if(element.nodeType == 9) {\n\t    element = element.documentElement;\n\t  }\n\t  var names = isArray(name) ? name : [name];\n\t\n\t  while (element) {\n\t    for (var i = 0, ii = names.length; i < ii; i++) {\n\t      if ((value = jqLite.data(element, names[i])) !== undefined) return value;\n\t    }\n\t\n\t    // If dealing with a document fragment node with a host element, and no parent, use the host\n\t    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM\n\t    // to lookup parent controllers.\n\t    element = element.parentNode || (element.nodeType === 11 && element.host);\n\t  }\n\t}\n\t\n\tfunction jqLiteEmpty(element) {\n\t  for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n\t    jqLiteDealoc(childNodes[i]);\n\t  }\n\t  while (element.firstChild) {\n\t    element.removeChild(element.firstChild);\n\t  }\n\t}\n\t\n\t//////////////////////////////////////////\n\t// Functions which are declared directly.\n\t//////////////////////////////////////////\n\tvar JQLitePrototype = JQLite.prototype = {\n\t  ready: function(fn) {\n\t    var fired = false;\n\t\n\t    function trigger() {\n\t      if (fired) return;\n\t      fired = true;\n\t      fn();\n\t    }\n\t\n\t    // check if document already is loaded\n\t    if (document.readyState === 'complete'){\n\t      setTimeout(trigger);\n\t    } else {\n\t      this.on('DOMContentLoaded', trigger); // works for modern browsers and IE9\n\t      // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n\t      // jshint -W064\n\t      JQLite(window).on('load', trigger); // fallback to window.onload for others\n\t      // jshint +W064\n\t    }\n\t  },\n\t  toString: function() {\n\t    var value = [];\n\t    forEach(this, function(e){ value.push('' + e);});\n\t    return '[' + value.join(', ') + ']';\n\t  },\n\t\n\t  eq: function(index) {\n\t      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n\t  },\n\t\n\t  length: 0,\n\t  push: push,\n\t  sort: [].sort,\n\t  splice: [].splice\n\t};\n\t\n\t//////////////////////////////////////////\n\t// Functions iterating getter/setters.\n\t// these functions return self on setter and\n\t// value on get.\n\t//////////////////////////////////////////\n\tvar BOOLEAN_ATTR = {};\n\tforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\n\t  BOOLEAN_ATTR[lowercase(value)] = value;\n\t});\n\tvar BOOLEAN_ELEMENTS = {};\n\tforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\n\t  BOOLEAN_ELEMENTS[uppercase(value)] = true;\n\t});\n\t\n\tfunction getBooleanAttrName(element, name) {\n\t  // check dom last since we will most likely fail on name\n\t  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\t\n\t  // booleanAttr is here twice to minimize DOM access\n\t  return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;\n\t}\n\t\n\tforEach({\n\t  data: jqLiteData,\n\t  removeData: jqLiteRemoveData\n\t}, function(fn, name) {\n\t  JQLite[name] = fn;\n\t});\n\t\n\tforEach({\n\t  data: jqLiteData,\n\t  inheritedData: jqLiteInheritedData,\n\t\n\t  scope: function(element) {\n\t    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n\t    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);\n\t  },\n\t\n\t  isolateScope: function(element) {\n\t    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n\t    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');\n\t  },\n\t\n\t  controller: jqLiteController,\n\t\n\t  injector: function(element) {\n\t    return jqLiteInheritedData(element, '$injector');\n\t  },\n\t\n\t  removeAttr: function(element,name) {\n\t    element.removeAttribute(name);\n\t  },\n\t\n\t  hasClass: jqLiteHasClass,\n\t\n\t  css: function(element, name, value) {\n\t    name = camelCase(name);\n\t\n\t    if (isDefined(value)) {\n\t      element.style[name] = value;\n\t    } else {\n\t      var val;\n\t\n\t      if (msie <= 8) {\n\t        // this is some IE specific weirdness that jQuery 1.6.4 does not sure why\n\t        val = element.currentStyle && element.currentStyle[name];\n\t        if (val === '') val = 'auto';\n\t      }\n\t\n\t      val = val || element.style[name];\n\t\n\t      if (msie <= 8) {\n\t        // jquery weirdness :-/\n\t        val = (val === '') ? undefined : val;\n\t      }\n\t\n\t      return  val;\n\t    }\n\t  },\n\t\n\t  attr: function(element, name, value){\n\t    var lowercasedName = lowercase(name);\n\t    if (BOOLEAN_ATTR[lowercasedName]) {\n\t      if (isDefined(value)) {\n\t        if (!!value) {\n\t          element[name] = true;\n\t          element.setAttribute(name, lowercasedName);\n\t        } else {\n\t          element[name] = false;\n\t          element.removeAttribute(lowercasedName);\n\t        }\n\t      } else {\n\t        return (element[name] ||\n\t                 (element.attributes.getNamedItem(name)|| noop).specified)\n\t               ? lowercasedName\n\t               : undefined;\n\t      }\n\t    } else if (isDefined(value)) {\n\t      element.setAttribute(name, value);\n\t    } else if (element.getAttribute) {\n\t      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n\t      // some elements (e.g. Document) don't have get attribute, so return undefined\n\t      var ret = element.getAttribute(name, 2);\n\t      // normalize non-existing attributes to undefined (as jQuery)\n\t      return ret === null ? undefined : ret;\n\t    }\n\t  },\n\t\n\t  prop: function(element, name, value) {\n\t    if (isDefined(value)) {\n\t      element[name] = value;\n\t    } else {\n\t      return element[name];\n\t    }\n\t  },\n\t\n\t  text: (function() {\n\t    var NODE_TYPE_TEXT_PROPERTY = [];\n\t    if (msie < 9) {\n\t      NODE_TYPE_TEXT_PROPERTY[1] = 'innerText';    /** Element **/\n\t      NODE_TYPE_TEXT_PROPERTY[3] = 'nodeValue';    /** Text **/\n\t    } else {\n\t      NODE_TYPE_TEXT_PROPERTY[1] =                 /** Element **/\n\t      NODE_TYPE_TEXT_PROPERTY[3] = 'textContent';  /** Text **/\n\t    }\n\t    getText.$dv = '';\n\t    return getText;\n\t\n\t    function getText(element, value) {\n\t      var textProp = NODE_TYPE_TEXT_PROPERTY[element.nodeType];\n\t      if (isUndefined(value)) {\n\t        return textProp ? element[textProp] : '';\n\t      }\n\t      element[textProp] = value;\n\t    }\n\t  })(),\n\t\n\t  val: function(element, value) {\n\t    if (isUndefined(value)) {\n\t      if (nodeName_(element) === 'SELECT' && element.multiple) {\n\t        var result = [];\n\t        forEach(element.options, function (option) {\n\t          if (option.selected) {\n\t            result.push(option.value || option.text);\n\t          }\n\t        });\n\t        return result.length === 0 ? null : result;\n\t      }\n\t      return element.value;\n\t    }\n\t    element.value = value;\n\t  },\n\t\n\t  html: function(element, value) {\n\t    if (isUndefined(value)) {\n\t      return element.innerHTML;\n\t    }\n\t    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n\t      jqLiteDealoc(childNodes[i]);\n\t    }\n\t    element.innerHTML = value;\n\t  },\n\t\n\t  empty: jqLiteEmpty\n\t}, function(fn, name){\n\t  /**\n\t   * Properties: writes return selection, reads return first value\n\t   */\n\t  JQLite.prototype[name] = function(arg1, arg2) {\n\t    var i, key;\n\t    var nodeCount = this.length;\n\t\n\t    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n\t    // in a way that survives minification.\n\t    // jqLiteEmpty takes no arguments but is a setter.\n\t    if (fn !== jqLiteEmpty &&\n\t        (((fn.length == 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2) === undefined)) {\n\t      if (isObject(arg1)) {\n\t\n\t        // we are a write, but the object properties are the key/values\n\t        for (i = 0; i < nodeCount; i++) {\n\t          if (fn === jqLiteData) {\n\t            // data() takes the whole object in jQuery\n\t            fn(this[i], arg1);\n\t          } else {\n\t            for (key in arg1) {\n\t              fn(this[i], key, arg1[key]);\n\t            }\n\t          }\n\t        }\n\t        // return self for chaining\n\t        return this;\n\t      } else {\n\t        // we are a read, so read the first child.\n\t        // TODO: do we still need this?\n\t        var value = fn.$dv;\n\t        // Only if we have $dv do we iterate over all, otherwise it is just the first element.\n\t        var jj = (value === undefined) ? Math.min(nodeCount, 1) : nodeCount;\n\t        for (var j = 0; j < jj; j++) {\n\t          var nodeValue = fn(this[j], arg1, arg2);\n\t          value = value ? value + nodeValue : nodeValue;\n\t        }\n\t        return value;\n\t      }\n\t    } else {\n\t      // we are a write, so apply to all children\n\t      for (i = 0; i < nodeCount; i++) {\n\t        fn(this[i], arg1, arg2);\n\t      }\n\t      // return self for chaining\n\t      return this;\n\t    }\n\t  };\n\t});\n\t\n\tfunction createEventHandler(element, events) {\n\t  var eventHandler = function (event, type) {\n\t    if (!event.preventDefault) {\n\t      event.preventDefault = function() {\n\t        event.returnValue = false; //ie\n\t      };\n\t    }\n\t\n\t    if (!event.stopPropagation) {\n\t      event.stopPropagation = function() {\n\t        event.cancelBubble = true; //ie\n\t      };\n\t    }\n\t\n\t    if (!event.target) {\n\t      event.target = event.srcElement || document;\n\t    }\n\t\n\t    if (isUndefined(event.defaultPrevented)) {\n\t      var prevent = event.preventDefault;\n\t      event.preventDefault = function() {\n\t        event.defaultPrevented = true;\n\t        prevent.call(event);\n\t      };\n\t      event.defaultPrevented = false;\n\t    }\n\t\n\t    event.isDefaultPrevented = function() {\n\t      return event.defaultPrevented || event.returnValue === false;\n\t    };\n\t\n\t    // Copy event handlers in case event handlers array is modified during execution.\n\t    var eventHandlersCopy = shallowCopy(events[type || event.type] || []);\n\t\n\t    forEach(eventHandlersCopy, function(fn) {\n\t      fn.call(element, event);\n\t    });\n\t\n\t    // Remove monkey-patched methods (IE),\n\t    // as they would cause memory leaks in IE8.\n\t    if (msie <= 8) {\n\t      // IE7/8 does not allow to delete property on native object\n\t      event.preventDefault = null;\n\t      event.stopPropagation = null;\n\t      event.isDefaultPrevented = null;\n\t    } else {\n\t      // It shouldn't affect normal browsers (native methods are defined on prototype).\n\t      delete event.preventDefault;\n\t      delete event.stopPropagation;\n\t      delete event.isDefaultPrevented;\n\t    }\n\t  };\n\t  eventHandler.elem = element;\n\t  return eventHandler;\n\t}\n\t\n\t//////////////////////////////////////////\n\t// Functions iterating traversal.\n\t// These functions chain results into a single\n\t// selector.\n\t//////////////////////////////////////////\n\tforEach({\n\t  removeData: jqLiteRemoveData,\n\t\n\t  dealoc: jqLiteDealoc,\n\t\n\t  on: function onFn(element, type, fn, unsupported){\n\t    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');\n\t\n\t    var events = jqLiteExpandoStore(element, 'events'),\n\t        handle = jqLiteExpandoStore(element, 'handle');\n\t\n\t    if (!events) jqLiteExpandoStore(element, 'events', events = {});\n\t    if (!handle) jqLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));\n\t\n\t    forEach(type.split(' '), function(type){\n\t      var eventFns = events[type];\n\t\n\t      if (!eventFns) {\n\t        if (type == 'mouseenter' || type == 'mouseleave') {\n\t          var contains = document.body.contains || document.body.compareDocumentPosition ?\n\t          function( a, b ) {\n\t            // jshint bitwise: false\n\t            var adown = a.nodeType === 9 ? a.documentElement : a,\n\t            bup = b && b.parentNode;\n\t            return a === bup || !!( bup && bup.nodeType === 1 && (\n\t              adown.contains ?\n\t              adown.contains( bup ) :\n\t              a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t              ));\n\t            } :\n\t            function( a, b ) {\n\t              if ( b ) {\n\t                while ( (b = b.parentNode) ) {\n\t                  if ( b === a ) {\n\t                    return true;\n\t                  }\n\t                }\n\t              }\n\t              return false;\n\t            };\n\t\n\t          events[type] = [];\n\t\n\t          // Refer to jQuery's implementation of mouseenter & mouseleave\n\t          // Read about mouseenter and mouseleave:\n\t          // http://www.quirksmode.org/js/events_mouse.html#link8\n\t          var eventmap = { mouseleave : \"mouseout\", mouseenter : \"mouseover\"};\n\t\n\t          onFn(element, eventmap[type], function(event) {\n\t            var target = this, related = event.relatedTarget;\n\t            // For mousenter/leave call the handler if related is outside the target.\n\t            // NB: No relatedTarget if the mouse left/entered the browser window\n\t            if ( !related || (related !== target && !contains(target, related)) ){\n\t              handle(event, type);\n\t            }\n\t          });\n\t\n\t        } else {\n\t          addEventListenerFn(element, type, handle);\n\t          events[type] = [];\n\t        }\n\t        eventFns = events[type];\n\t      }\n\t      eventFns.push(fn);\n\t    });\n\t  },\n\t\n\t  off: jqLiteOff,\n\t\n\t  one: function(element, type, fn) {\n\t    element = jqLite(element);\n\t\n\t    //add the listener twice so that when it is called\n\t    //you can remove the original function and still be\n\t    //able to call element.off(ev, fn) normally\n\t    element.on(type, function onFn() {\n\t      element.off(type, fn);\n\t      element.off(type, onFn);\n\t    });\n\t    element.on(type, fn);\n\t  },\n\t\n\t  replaceWith: function(element, replaceNode) {\n\t    var index, parent = element.parentNode;\n\t    jqLiteDealoc(element);\n\t    forEach(new JQLite(replaceNode), function(node){\n\t      if (index) {\n\t        parent.insertBefore(node, index.nextSibling);\n\t      } else {\n\t        parent.replaceChild(node, element);\n\t      }\n\t      index = node;\n\t    });\n\t  },\n\t\n\t  children: function(element) {\n\t    var children = [];\n\t    forEach(element.childNodes, function(element){\n\t      if (element.nodeType === 1)\n\t        children.push(element);\n\t    });\n\t    return children;\n\t  },\n\t\n\t  contents: function(element) {\n\t    return element.contentDocument || element.childNodes || [];\n\t  },\n\t\n\t  append: function(element, node) {\n\t    forEach(new JQLite(node), function(child){\n\t      if (element.nodeType === 1 || element.nodeType === 11) {\n\t        element.appendChild(child);\n\t      }\n\t    });\n\t  },\n\t\n\t  prepend: function(element, node) {\n\t    if (element.nodeType === 1) {\n\t      var index = element.firstChild;\n\t      forEach(new JQLite(node), function(child){\n\t        element.insertBefore(child, index);\n\t      });\n\t    }\n\t  },\n\t\n\t  wrap: function(element, wrapNode) {\n\t    wrapNode = jqLite(wrapNode)[0];\n\t    var parent = element.parentNode;\n\t    if (parent) {\n\t      parent.replaceChild(wrapNode, element);\n\t    }\n\t    wrapNode.appendChild(element);\n\t  },\n\t\n\t  remove: function(element) {\n\t    jqLiteDealoc(element);\n\t    var parent = element.parentNode;\n\t    if (parent) parent.removeChild(element);\n\t  },\n\t\n\t  after: function(element, newElement) {\n\t    var index = element, parent = element.parentNode;\n\t    forEach(new JQLite(newElement), function(node){\n\t      parent.insertBefore(node, index.nextSibling);\n\t      index = node;\n\t    });\n\t  },\n\t\n\t  addClass: jqLiteAddClass,\n\t  removeClass: jqLiteRemoveClass,\n\t\n\t  toggleClass: function(element, selector, condition) {\n\t    if (selector) {\n\t      forEach(selector.split(' '), function(className){\n\t        var classCondition = condition;\n\t        if (isUndefined(classCondition)) {\n\t          classCondition = !jqLiteHasClass(element, className);\n\t        }\n\t        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);\n\t      });\n\t    }\n\t  },\n\t\n\t  parent: function(element) {\n\t    var parent = element.parentNode;\n\t    return parent && parent.nodeType !== 11 ? parent : null;\n\t  },\n\t\n\t  next: function(element) {\n\t    if (element.nextElementSibling) {\n\t      return element.nextElementSibling;\n\t    }\n\t\n\t    // IE8 doesn't have nextElementSibling\n\t    var elm = element.nextSibling;\n\t    while (elm != null && elm.nodeType !== 1) {\n\t      elm = elm.nextSibling;\n\t    }\n\t    return elm;\n\t  },\n\t\n\t  find: function(element, selector) {\n\t    if (element.getElementsByTagName) {\n\t      return element.getElementsByTagName(selector);\n\t    } else {\n\t      return [];\n\t    }\n\t  },\n\t\n\t  clone: jqLiteClone,\n\t\n\t  triggerHandler: function(element, event, extraParameters) {\n\t\n\t    var dummyEvent, eventFnsCopy, handlerArgs;\n\t    var eventName = event.type || event;\n\t    var eventFns = (jqLiteExpandoStore(element, 'events') || {})[eventName];\n\t\n\t    if (eventFns) {\n\t\n\t      // Create a dummy event to pass to the handlers\n\t      dummyEvent = {\n\t        preventDefault: function() { this.defaultPrevented = true; },\n\t        isDefaultPrevented: function() { return this.defaultPrevented === true; },\n\t        stopPropagation: noop,\n\t        type: eventName,\n\t        target: element\n\t      };\n\t\n\t      // If a custom event was provided then extend our dummy event with it\n\t      if (event.type) {\n\t        dummyEvent = extend(dummyEvent, event);\n\t      }\n\t\n\t      // Copy event handlers in case event handlers array is modified during execution.\n\t      eventFnsCopy = shallowCopy(eventFns);\n\t      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];\n\t\n\t      forEach(eventFnsCopy, function(fn) {\n\t        fn.apply(element, handlerArgs);\n\t      });\n\t\n\t    }\n\t  }\n\t}, function(fn, name){\n\t  /**\n\t   * chaining functions\n\t   */\n\t  JQLite.prototype[name] = function(arg1, arg2, arg3) {\n\t    var value;\n\t    for(var i=0; i < this.length; i++) {\n\t      if (isUndefined(value)) {\n\t        value = fn(this[i], arg1, arg2, arg3);\n\t        if (isDefined(value)) {\n\t          // any function which returns a value needs to be wrapped\n\t          value = jqLite(value);\n\t        }\n\t      } else {\n\t        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));\n\t      }\n\t    }\n\t    return isDefined(value) ? value : this;\n\t  };\n\t\n\t  // bind legacy bind/unbind to on/off\n\t  JQLite.prototype.bind = JQLite.prototype.on;\n\t  JQLite.prototype.unbind = JQLite.prototype.off;\n\t});\n\t\n\t/**\n\t * Computes a hash of an 'obj'.\n\t * Hash of a:\n\t *  string is string\n\t *  number is number as string\n\t *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n\t *         that is also assigned to the $$hashKey property of the object.\n\t *\n\t * @param obj\n\t * @returns {string} hash string such that the same input will have the same hash string.\n\t *         The resulting string key is in 'type:hashKey' format.\n\t */\n\tfunction hashKey(obj, nextUidFn) {\n\t  var objType = typeof obj,\n\t      key;\n\t\n\t  if (objType == 'function' || (objType == 'object' && obj !== null)) {\n\t    if (typeof (key = obj.$$hashKey) == 'function') {\n\t      // must invoke on object to keep the right this\n\t      key = obj.$$hashKey();\n\t    } else if (key === undefined) {\n\t      key = obj.$$hashKey = (nextUidFn || nextUid)();\n\t    }\n\t  } else {\n\t    key = obj;\n\t  }\n\t\n\t  return objType + ':' + key;\n\t}\n\t\n\t/**\n\t * HashMap which can use objects as keys\n\t */\n\tfunction HashMap(array, isolatedUid) {\n\t  if (isolatedUid) {\n\t    var uid = 0;\n\t    this.nextUid = function() {\n\t      return ++uid;\n\t    };\n\t  }\n\t  forEach(array, this.put, this);\n\t}\n\tHashMap.prototype = {\n\t  /**\n\t   * Store key value pair\n\t   * @param key key to store can be any type\n\t   * @param value value to store can be any type\n\t   */\n\t  put: function(key, value) {\n\t    this[hashKey(key, this.nextUid)] = value;\n\t  },\n\t\n\t  /**\n\t   * @param key\n\t   * @returns {Object} the value for the key\n\t   */\n\t  get: function(key) {\n\t    return this[hashKey(key, this.nextUid)];\n\t  },\n\t\n\t  /**\n\t   * Remove the key/value pair\n\t   * @param key\n\t   */\n\t  remove: function(key) {\n\t    var value = this[key = hashKey(key, this.nextUid)];\n\t    delete this[key];\n\t    return value;\n\t  }\n\t};\n\t\n\t/**\n\t * @ngdoc function\n\t * @module ng\n\t * @name angular.injector\n\t * @kind function\n\t *\n\t * @description\n\t * Creates an injector object that can be used for retrieving services as well as for\n\t * dependency injection (see {@link guide/di dependency injection}).\n\t *\n\t\n\t * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n\t *        {@link angular.module}. The `ng` module must be explicitly added.\n\t * @returns {injector} Injector object. See {@link auto.$injector $injector}.\n\t *\n\t * @example\n\t * Typical usage\n\t * ```js\n\t *   // create an injector\n\t *   var $injector = angular.injector(['ng']);\n\t *\n\t *   // use the injector to kick off your application\n\t *   // use the type inference to auto inject arguments, or use implicit injection\n\t *   $injector.invoke(function($rootScope, $compile, $document){\n\t *     $compile($document)($rootScope);\n\t *     $rootScope.$digest();\n\t *   });\n\t * ```\n\t *\n\t * Sometimes you want to get access to the injector of a currently running Angular app\n\t * from outside Angular. Perhaps, you want to inject and compile some markup after the\n\t * application has been bootstrapped. You can do this using the extra `injector()` added\n\t * to JQuery/jqLite elements. See {@link angular.element}.\n\t *\n\t * *This is fairly rare but could be the case if a third party library is injecting the\n\t * markup.*\n\t *\n\t * In the following example a new block of HTML containing a `ng-controller`\n\t * directive is added to the end of the document body by JQuery. We then compile and link\n\t * it into the current AngularJS scope.\n\t *\n\t * ```js\n\t * var $div = $('<div ng-controller=\"MyCtrl\">{{content.label}}</div>');\n\t * $(document.body).append($div);\n\t *\n\t * angular.element(document).injector().invoke(function($compile) {\n\t *   var scope = angular.element($div).scope();\n\t *   $compile($div)(scope);\n\t * });\n\t * ```\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc module\n\t * @name auto\n\t * @description\n\t *\n\t * Implicit module which gets automatically added to each {@link auto.$injector $injector}.\n\t */\n\t\n\tvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n\tvar FN_ARG_SPLIT = /,/;\n\tvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\n\tvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\tvar $injectorMinErr = minErr('$injector');\n\tfunction annotate(fn) {\n\t  var $inject,\n\t      fnText,\n\t      argDecl,\n\t      last;\n\t\n\t  if (typeof fn === 'function') {\n\t    if (!($inject = fn.$inject)) {\n\t      $inject = [];\n\t      if (fn.length) {\n\t        fnText = fn.toString().replace(STRIP_COMMENTS, '');\n\t        argDecl = fnText.match(FN_ARGS);\n\t        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){\n\t          arg.replace(FN_ARG, function(all, underscore, name){\n\t            $inject.push(name);\n\t          });\n\t        });\n\t      }\n\t      fn.$inject = $inject;\n\t    }\n\t  } else if (isArray(fn)) {\n\t    last = fn.length - 1;\n\t    assertArgFn(fn[last], 'fn');\n\t    $inject = fn.slice(0, last);\n\t  } else {\n\t    assertArgFn(fn, 'fn', true);\n\t  }\n\t  return $inject;\n\t}\n\t\n\t///////////////////////////////////////\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $injector\n\t *\n\t * @description\n\t *\n\t * `$injector` is used to retrieve object instances as defined by\n\t * {@link auto.$provide provider}, instantiate types, invoke methods,\n\t * and load modules.\n\t *\n\t * The following always holds true:\n\t *\n\t * ```js\n\t *   var $injector = angular.injector();\n\t *   expect($injector.get('$injector')).toBe($injector);\n\t *   expect($injector.invoke(function($injector){\n\t *     return $injector;\n\t *   })).toBe($injector);\n\t * ```\n\t *\n\t * # Injection Function Annotation\n\t *\n\t * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n\t * following are all valid ways of annotating function with injection arguments and are equivalent.\n\t *\n\t * ```js\n\t *   // inferred (only works if code not minified/obfuscated)\n\t *   $injector.invoke(function(serviceA){});\n\t *\n\t *   // annotated\n\t *   function explicit(serviceA) {};\n\t *   explicit.$inject = ['serviceA'];\n\t *   $injector.invoke(explicit);\n\t *\n\t *   // inline\n\t *   $injector.invoke(['serviceA', function(serviceA){}]);\n\t * ```\n\t *\n\t * ## Inference\n\t *\n\t * In JavaScript calling `toString()` on a function returns the function definition. The definition\n\t * can then be parsed and the function arguments can be extracted. *NOTE:* This does not work with\n\t * minification, and obfuscation tools since these tools change the argument names.\n\t *\n\t * ## `$inject` Annotation\n\t * By adding an `$inject` property onto a function the injection parameters can be specified.\n\t *\n\t * ## Inline\n\t * As an array of injection names, where the last item in the array is the function to call.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $injector#get\n\t *\n\t * @description\n\t * Return an instance of the service.\n\t *\n\t * @param {string} name The name of the instance to retrieve.\n\t * @return {*} The instance.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $injector#invoke\n\t *\n\t * @description\n\t * Invoke the method and supply the method arguments from the `$injector`.\n\t *\n\t * @param {!Function} fn The function to invoke. Function parameters are injected according to the\n\t *   {@link guide/di $inject Annotation} rules.\n\t * @param {Object=} self The `this` for the invoked method.\n\t * @param {Object=} locals Optional object. If preset then any argument names are read from this\n\t *                         object first, before the `$injector` is consulted.\n\t * @returns {*} the value returned by the invoked `fn` function.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $injector#has\n\t *\n\t * @description\n\t * Allows the user to query if the particular service exists.\n\t *\n\t * @param {string} name Name of the service to query.\n\t * @returns {boolean} `true` if injector has given service.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $injector#instantiate\n\t * @description\n\t * Create a new instance of JS type. The method takes a constructor function, invokes the new\n\t * operator, and supplies all of the arguments to the constructor function as specified by the\n\t * constructor annotation.\n\t *\n\t * @param {Function} Type Annotated constructor function.\n\t * @param {Object=} locals Optional object. If preset then any argument names are read from this\n\t * object first, before the `$injector` is consulted.\n\t * @returns {Object} new instance of `Type`.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $injector#annotate\n\t *\n\t * @description\n\t * Returns an array of service names which the function is requesting for injection. This API is\n\t * used by the injector to determine which services need to be injected into the function when the\n\t * function is invoked. There are three ways in which the function can be annotated with the needed\n\t * dependencies.\n\t *\n\t * # Argument names\n\t *\n\t * The simplest form is to extract the dependencies from the arguments of the function. This is done\n\t * by converting the function into a string using `toString()` method and extracting the argument\n\t * names.\n\t * ```js\n\t *   // Given\n\t *   function MyController($scope, $route) {\n\t *     // ...\n\t *   }\n\t *\n\t *   // Then\n\t *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n\t * ```\n\t *\n\t * This method does not work with code minification / obfuscation. For this reason the following\n\t * annotation strategies are supported.\n\t *\n\t * # The `$inject` property\n\t *\n\t * If a function has an `$inject` property and its value is an array of strings, then the strings\n\t * represent names of services to be injected into the function.\n\t * ```js\n\t *   // Given\n\t *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n\t *     // ...\n\t *   }\n\t *   // Define function dependencies\n\t *   MyController['$inject'] = ['$scope', '$route'];\n\t *\n\t *   // Then\n\t *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n\t * ```\n\t *\n\t * # The array notation\n\t *\n\t * It is often desirable to inline Injected functions and that's when setting the `$inject` property\n\t * is very inconvenient. In these situations using the array notation to specify the dependencies in\n\t * a way that survives minification is a better choice:\n\t *\n\t * ```js\n\t *   // We wish to write this (not minification / obfuscation safe)\n\t *   injector.invoke(function($compile, $rootScope) {\n\t *     // ...\n\t *   });\n\t *\n\t *   // We are forced to write break inlining\n\t *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n\t *     // ...\n\t *   };\n\t *   tmpFn.$inject = ['$compile', '$rootScope'];\n\t *   injector.invoke(tmpFn);\n\t *\n\t *   // To better support inline function the inline annotation is supported\n\t *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n\t *     // ...\n\t *   }]);\n\t *\n\t *   // Therefore\n\t *   expect(injector.annotate(\n\t *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n\t *    ).toEqual(['$compile', '$rootScope']);\n\t * ```\n\t *\n\t * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to\n\t * be retrieved as described above.\n\t *\n\t * @returns {Array.<string>} The names of the services which the function requires.\n\t */\n\t\n\t\n\t\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $provide\n\t *\n\t * @description\n\t *\n\t * The {@link auto.$provide $provide} service has a number of methods for registering components\n\t * with the {@link auto.$injector $injector}. Many of these functions are also exposed on\n\t * {@link angular.Module}.\n\t *\n\t * An Angular **service** is a singleton object created by a **service factory**.  These **service\n\t * factories** are functions which, in turn, are created by a **service provider**.\n\t * The **service providers** are constructor functions. When instantiated they must contain a\n\t * property called `$get`, which holds the **service factory** function.\n\t *\n\t * When you request a service, the {@link auto.$injector $injector} is responsible for finding the\n\t * correct **service provider**, instantiating it and then calling its `$get` **service factory**\n\t * function to get the instance of the **service**.\n\t *\n\t * Often services have no configuration options and there is no need to add methods to the service\n\t * provider.  The provider will be no more than a constructor function with a `$get` property. For\n\t * these cases the {@link auto.$provide $provide} service has additional helper methods to register\n\t * services without specifying a provider.\n\t *\n\t * * {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n\t *     {@link auto.$injector $injector}\n\t * * {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n\t *     providers and services.\n\t * * {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n\t *     services, not providers.\n\t * * {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n\t *     that will be wrapped in a **service provider** object, whose `$get` property will contain the\n\t *     given factory function.\n\t * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n\t *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n\t *      a new object using the given constructor function.\n\t *\n\t * See the individual methods for more information and examples.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#provider\n\t * @description\n\t *\n\t * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\n\t * are constructor functions, whose instances are responsible for \"providing\" a factory for a\n\t * service.\n\t *\n\t * Service provider names start with the name of the service they provide followed by `Provider`.\n\t * For example, the {@link ng.$log $log} service has a provider called\n\t * {@link ng.$logProvider $logProvider}.\n\t *\n\t * Service provider objects can have additional methods which allow configuration of the provider\n\t * and its service. Importantly, you can configure what kind of service is created by the `$get`\n\t * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\n\t * method {@link ng.$logProvider#debugEnabled debugEnabled}\n\t * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the\n\t * console or not.\n\t *\n\t * @param {string} name The name of the instance. NOTE: the provider will be available under `name +\n\t                        'Provider'` key.\n\t * @param {(Object|function())} provider If the provider is:\n\t *\n\t *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n\t *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n\t *   - `Constructor`: a new instance of the provider will be created using\n\t *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n\t *\n\t * @returns {Object} registered provider instance\n\t\n\t * @example\n\t *\n\t * The following example shows how to create a simple event tracking service and register it using\n\t * {@link auto.$provide#provider $provide.provider()}.\n\t *\n\t * ```js\n\t *  // Define the eventTracker provider\n\t *  function EventTrackerProvider() {\n\t *    var trackingUrl = '/track';\n\t *\n\t *    // A provider method for configuring where the tracked events should been saved\n\t *    this.setTrackingUrl = function(url) {\n\t *      trackingUrl = url;\n\t *    };\n\t *\n\t *    // The service factory function\n\t *    this.$get = ['$http', function($http) {\n\t *      var trackedEvents = {};\n\t *      return {\n\t *        // Call this to track an event\n\t *        event: function(event) {\n\t *          var count = trackedEvents[event] || 0;\n\t *          count += 1;\n\t *          trackedEvents[event] = count;\n\t *          return count;\n\t *        },\n\t *        // Call this to save the tracked events to the trackingUrl\n\t *        save: function() {\n\t *          $http.post(trackingUrl, trackedEvents);\n\t *        }\n\t *      };\n\t *    }];\n\t *  }\n\t *\n\t *  describe('eventTracker', function() {\n\t *    var postSpy;\n\t *\n\t *    beforeEach(module(function($provide) {\n\t *      // Register the eventTracker provider\n\t *      $provide.provider('eventTracker', EventTrackerProvider);\n\t *    }));\n\t *\n\t *    beforeEach(module(function(eventTrackerProvider) {\n\t *      // Configure eventTracker provider\n\t *      eventTrackerProvider.setTrackingUrl('/custom-track');\n\t *    }));\n\t *\n\t *    it('tracks events', inject(function(eventTracker) {\n\t *      expect(eventTracker.event('login')).toEqual(1);\n\t *      expect(eventTracker.event('login')).toEqual(2);\n\t *    }));\n\t *\n\t *    it('saves to the tracking url', inject(function(eventTracker, $http) {\n\t *      postSpy = spyOn($http, 'post');\n\t *      eventTracker.event('login');\n\t *      eventTracker.save();\n\t *      expect(postSpy).toHaveBeenCalled();\n\t *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n\t *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n\t *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n\t *    }));\n\t *  });\n\t * ```\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#factory\n\t * @description\n\t *\n\t * Register a **service factory**, which will be called to return the service instance.\n\t * This is short for registering a service where its provider consists of only a `$get` property,\n\t * which is the given service factory function.\n\t * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\n\t * configure your service in a provider.\n\t *\n\t * @param {string} name The name of the instance.\n\t * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand\n\t *                            for `$provide.provider(name, {$get: $getFn})`.\n\t * @returns {Object} registered provider instance\n\t *\n\t * @example\n\t * Here is an example of registering a service\n\t * ```js\n\t *   $provide.factory('ping', ['$http', function($http) {\n\t *     return function ping() {\n\t *       return $http.send('/ping');\n\t *     };\n\t *   }]);\n\t * ```\n\t * You would then inject and use this service like this:\n\t * ```js\n\t *   someModule.controller('Ctrl', ['ping', function(ping) {\n\t *     ping();\n\t *   }]);\n\t * ```\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#service\n\t * @description\n\t *\n\t * Register a **service constructor**, which will be invoked with `new` to create the service\n\t * instance.\n\t * This is short for registering a service where its provider's `$get` property is the service\n\t * constructor function that will be used to instantiate the service instance.\n\t *\n\t * You should use {@link auto.$provide#service $provide.service(class)} if you define your service\n\t * as a type/class.\n\t *\n\t * @param {string} name The name of the instance.\n\t * @param {Function} constructor A class (constructor function) that will be instantiated.\n\t * @returns {Object} registered provider instance\n\t *\n\t * @example\n\t * Here is an example of registering a service using\n\t * {@link auto.$provide#service $provide.service(class)}.\n\t * ```js\n\t *   var Ping = function($http) {\n\t *     this.$http = $http;\n\t *   };\n\t *\n\t *   Ping.$inject = ['$http'];\n\t *\n\t *   Ping.prototype.send = function() {\n\t *     return this.$http.get('/ping');\n\t *   };\n\t *   $provide.service('ping', Ping);\n\t * ```\n\t * You would then inject and use this service like this:\n\t * ```js\n\t *   someModule.controller('Ctrl', ['ping', function(ping) {\n\t *     ping.send();\n\t *   }]);\n\t * ```\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#value\n\t * @description\n\t *\n\t * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\n\t * number, an array, an object or a function.  This is short for registering a service where its\n\t * provider's `$get` property is a factory function that takes no arguments and returns the **value\n\t * service**.\n\t *\n\t * Value services are similar to constant services, except that they cannot be injected into a\n\t * module configuration function (see {@link angular.Module#config}) but they can be overridden by\n\t * an Angular\n\t * {@link auto.$provide#decorator decorator}.\n\t *\n\t * @param {string} name The name of the instance.\n\t * @param {*} value The value.\n\t * @returns {Object} registered provider instance\n\t *\n\t * @example\n\t * Here are some examples of creating value services.\n\t * ```js\n\t *   $provide.value('ADMIN_USER', 'admin');\n\t *\n\t *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n\t *\n\t *   $provide.value('halfOf', function(value) {\n\t *     return value / 2;\n\t *   });\n\t * ```\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#constant\n\t * @description\n\t *\n\t * Register a **constant service**, such as a string, a number, an array, an object or a function,\n\t * with the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\n\t * injected into a module configuration function (see {@link angular.Module#config}) and it cannot\n\t * be overridden by an Angular {@link auto.$provide#decorator decorator}.\n\t *\n\t * @param {string} name The name of the constant.\n\t * @param {*} value The constant value.\n\t * @returns {Object} registered instance\n\t *\n\t * @example\n\t * Here a some examples of creating constants:\n\t * ```js\n\t *   $provide.constant('SHARD_HEIGHT', 306);\n\t *\n\t *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n\t *\n\t *   $provide.constant('double', function(value) {\n\t *     return value * 2;\n\t *   });\n\t * ```\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $provide#decorator\n\t * @description\n\t *\n\t * Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\n\t * intercepts the creation of a service, allowing it to override or modify the behaviour of the\n\t * service. The object returned by the decorator may be the original service, or a new service\n\t * object which replaces or wraps and delegates to the original service.\n\t *\n\t * @param {string} name The name of the service to decorate.\n\t * @param {function()} decorator This function will be invoked when the service needs to be\n\t *    instantiated and should return the decorated service instance. The function is called using\n\t *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n\t *    Local injection arguments:\n\t *\n\t *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n\t *      decorated or delegated to.\n\t *\n\t * @example\n\t * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\n\t * calls to {@link ng.$log#error $log.warn()}.\n\t * ```js\n\t *   $provide.decorator('$log', ['$delegate', function($delegate) {\n\t *     $delegate.warn = $delegate.error;\n\t *     return $delegate;\n\t *   }]);\n\t * ```\n\t */\n\t\n\t\n\tfunction createInjector(modulesToLoad) {\n\t  var INSTANTIATING = {},\n\t      providerSuffix = 'Provider',\n\t      path = [],\n\t      loadedModules = new HashMap([], true),\n\t      providerCache = {\n\t        $provide: {\n\t            provider: supportObject(provider),\n\t            factory: supportObject(factory),\n\t            service: supportObject(service),\n\t            value: supportObject(value),\n\t            constant: supportObject(constant),\n\t            decorator: decorator\n\t          }\n\t      },\n\t      providerInjector = (providerCache.$injector =\n\t          createInternalInjector(providerCache, function() {\n\t            throw $injectorMinErr('unpr', \"Unknown provider: {0}\", path.join(' <- '));\n\t          })),\n\t      instanceCache = {},\n\t      instanceInjector = (instanceCache.$injector =\n\t          createInternalInjector(instanceCache, function(servicename) {\n\t            var provider = providerInjector.get(servicename + providerSuffix);\n\t            return instanceInjector.invoke(provider.$get, provider);\n\t          }));\n\t\n\t\n\t  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\t\n\t  return instanceInjector;\n\t\n\t  ////////////////////////////////////\n\t  // $provider\n\t  ////////////////////////////////////\n\t\n\t  function supportObject(delegate) {\n\t    return function(key, value) {\n\t      if (isObject(key)) {\n\t        forEach(key, reverseParams(delegate));\n\t      } else {\n\t        return delegate(key, value);\n\t      }\n\t    };\n\t  }\n\t\n\t  function provider(name, provider_) {\n\t    assertNotHasOwnProperty(name, 'service');\n\t    if (isFunction(provider_) || isArray(provider_)) {\n\t      provider_ = providerInjector.instantiate(provider_);\n\t    }\n\t    if (!provider_.$get) {\n\t      throw $injectorMinErr('pget', \"Provider '{0}' must define $get factory method.\", name);\n\t    }\n\t    return providerCache[name + providerSuffix] = provider_;\n\t  }\n\t\n\t  function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }\n\t\n\t  function service(name, constructor) {\n\t    return factory(name, ['$injector', function($injector) {\n\t      return $injector.instantiate(constructor);\n\t    }]);\n\t  }\n\t\n\t  function value(name, val) { return factory(name, valueFn(val)); }\n\t\n\t  function constant(name, value) {\n\t    assertNotHasOwnProperty(name, 'constant');\n\t    providerCache[name] = value;\n\t    instanceCache[name] = value;\n\t  }\n\t\n\t  function decorator(serviceName, decorFn) {\n\t    var origProvider = providerInjector.get(serviceName + providerSuffix),\n\t        orig$get = origProvider.$get;\n\t\n\t    origProvider.$get = function() {\n\t      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n\t      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n\t    };\n\t  }\n\t\n\t  ////////////////////////////////////\n\t  // Module Loading\n\t  ////////////////////////////////////\n\t  function loadModules(modulesToLoad){\n\t    var runBlocks = [], moduleFn, invokeQueue, i, ii;\n\t    forEach(modulesToLoad, function(module) {\n\t      if (loadedModules.get(module)) return;\n\t      loadedModules.put(module, true);\n\t\n\t      try {\n\t        if (isString(module)) {\n\t          moduleFn = angularModule(module);\n\t          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n\t\n\t          for(invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {\n\t            var invokeArgs = invokeQueue[i],\n\t                provider = providerInjector.get(invokeArgs[0]);\n\t\n\t            provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n\t          }\n\t        } else if (isFunction(module)) {\n\t            runBlocks.push(providerInjector.invoke(module));\n\t        } else if (isArray(module)) {\n\t            runBlocks.push(providerInjector.invoke(module));\n\t        } else {\n\t          assertArgFn(module, 'module');\n\t        }\n\t      } catch (e) {\n\t        if (isArray(module)) {\n\t          module = module[module.length - 1];\n\t        }\n\t        if (e.message && e.stack && e.stack.indexOf(e.message) == -1) {\n\t          // Safari & FF's stack traces don't contain error.message content\n\t          // unlike those of Chrome and IE\n\t          // So if stack doesn't contain message, we create a new string that contains both.\n\t          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\n\t          /* jshint -W022 */\n\t          e = e.message + '\\n' + e.stack;\n\t        }\n\t        throw $injectorMinErr('modulerr', \"Failed to instantiate module {0} due to:\\n{1}\",\n\t                  module, e.stack || e.message || e);\n\t      }\n\t    });\n\t    return runBlocks;\n\t  }\n\t\n\t  ////////////////////////////////////\n\t  // internal Injector\n\t  ////////////////////////////////////\n\t\n\t  function createInternalInjector(cache, factory) {\n\t\n\t    function getService(serviceName) {\n\t      if (cache.hasOwnProperty(serviceName)) {\n\t        if (cache[serviceName] === INSTANTIATING) {\n\t          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\n\t                    serviceName + ' <- ' + path.join(' <- '));\n\t        }\n\t        return cache[serviceName];\n\t      } else {\n\t        try {\n\t          path.unshift(serviceName);\n\t          cache[serviceName] = INSTANTIATING;\n\t          return cache[serviceName] = factory(serviceName);\n\t        } catch (err) {\n\t          if (cache[serviceName] === INSTANTIATING) {\n\t            delete cache[serviceName];\n\t          }\n\t          throw err;\n\t        } finally {\n\t          path.shift();\n\t        }\n\t      }\n\t    }\n\t\n\t    function invoke(fn, self, locals){\n\t      var args = [],\n\t          $inject = annotate(fn),\n\t          length, i,\n\t          key;\n\t\n\t      for(i = 0, length = $inject.length; i < length; i++) {\n\t        key = $inject[i];\n\t        if (typeof key !== 'string') {\n\t          throw $injectorMinErr('itkn',\n\t                  'Incorrect injection token! Expected service name as string, got {0}', key);\n\t        }\n\t        args.push(\n\t          locals && locals.hasOwnProperty(key)\n\t          ? locals[key]\n\t          : getService(key)\n\t        );\n\t      }\n\t      if (isArray(fn)) {\n\t        fn = fn[length];\n\t      }\n\t\n\t      // http://jsperf.com/angularjs-invoke-apply-vs-switch\n\t      // #5388\n\t      return fn.apply(self, args);\n\t    }\n\t\n\t    function instantiate(Type, locals) {\n\t      var Constructor = function() {},\n\t          instance, returnedValue;\n\t\n\t      // Check if Type is annotated and use just the given function at n-1 as parameter\n\t      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n\t      Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;\n\t      instance = new Constructor();\n\t      returnedValue = invoke(Type, instance, locals);\n\t\n\t      return isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance;\n\t    }\n\t\n\t    return {\n\t      invoke: invoke,\n\t      instantiate: instantiate,\n\t      get: getService,\n\t      annotate: annotate,\n\t      has: function(name) {\n\t        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $anchorScroll\n\t * @kind function\n\t * @requires $window\n\t * @requires $location\n\t * @requires $rootScope\n\t *\n\t * @description\n\t * When called, it checks current value of `$location.hash()` and scrolls to the related element,\n\t * according to rules specified in\n\t * [Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).\n\t *\n\t * It also watches the `$location.hash()` and scrolls whenever it changes to match any anchor.\n\t * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <div id=\"scrollArea\" ng-controller=\"ScrollCtrl\">\n\t         <a ng-click=\"gotoBottom()\">Go to bottom</a>\n\t         <a id=\"bottom\"></a> You're at the bottom!\n\t       </div>\n\t     </file>\n\t     <file name=\"script.js\">\n\t       function ScrollCtrl($scope, $location, $anchorScroll) {\n\t         $scope.gotoBottom = function (){\n\t           // set the location.hash to the id of\n\t           // the element you wish to scroll to.\n\t           $location.hash('bottom');\n\t\n\t           // call $anchorScroll()\n\t           $anchorScroll();\n\t         };\n\t       }\n\t     </file>\n\t     <file name=\"style.css\">\n\t       #scrollArea {\n\t         height: 350px;\n\t         overflow: auto;\n\t       }\n\t\n\t       #bottom {\n\t         display: block;\n\t         margin-top: 2000px;\n\t       }\n\t     </file>\n\t   </example>\n\t */\n\tfunction $AnchorScrollProvider() {\n\t\n\t  var autoScrollingEnabled = true;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $anchorScrollProvider#disableAutoScrolling\n\t   *\n\t   * @description\n\t   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n\t   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\n\t   * Use this method to disable automatic scrolling.\n\t   *\n\t   * If automatic scrolling is disabled, one must explicitly call\n\t   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\n\t   * current hash.\n\t   */\n\t  this.disableAutoScrolling = function() {\n\t    autoScrollingEnabled = false;\n\t  };\n\t\n\t  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n\t    var document = $window.document;\n\t\n\t    // helper function to get first anchor from a NodeList\n\t    // can't use filter.filter, as it accepts only instances of Array\n\t    // and IE can't convert NodeList to an array using [].slice\n\t    // TODO(vojta): use filter if we change it to accept lists as well\n\t    function getFirstAnchor(list) {\n\t      var result = null;\n\t      forEach(list, function(element) {\n\t        if (!result && lowercase(element.nodeName) === 'a') result = element;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    function scroll() {\n\t      var hash = $location.hash(), elm;\n\t\n\t      // empty hash, scroll to the top of the page\n\t      if (!hash) $window.scrollTo(0, 0);\n\t\n\t      // element with given id\n\t      else if ((elm = document.getElementById(hash))) elm.scrollIntoView();\n\t\n\t      // first anchor with given name :-D\n\t      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();\n\t\n\t      // no element and hash == 'top', scroll to the top of the page\n\t      else if (hash === 'top') $window.scrollTo(0, 0);\n\t    }\n\t\n\t    // does not scroll when user clicks on anchor link that is currently on\n\t    // (no url change, no $location.hash() change), browser native does scroll\n\t    if (autoScrollingEnabled) {\n\t      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n\t        function autoScrollWatchAction() {\n\t          $rootScope.$evalAsync(scroll);\n\t        });\n\t    }\n\t\n\t    return scroll;\n\t  }];\n\t}\n\t\n\tvar $animateMinErr = minErr('$animate');\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $animateProvider\n\t *\n\t * @description\n\t * Default implementation of $animate that doesn't perform any animations, instead just\n\t * synchronously performs DOM\n\t * updates and calls done() callbacks.\n\t *\n\t * In order to enable animations the ngAnimate module has to be loaded.\n\t *\n\t * To see the functional implementation check out src/ngAnimate/animate.js\n\t */\n\tvar $AnimateProvider = ['$provide', function($provide) {\n\t\n\t\n\t  this.$$selectors = {};\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $animateProvider#register\n\t   *\n\t   * @description\n\t   * Registers a new injectable animation factory function. The factory function produces the\n\t   * animation object which contains callback functions for each event that is expected to be\n\t   * animated.\n\t   *\n\t   *   * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\n\t   *   must be called once the element animation is complete. If a function is returned then the\n\t   *   animation service will use this function to cancel the animation whenever a cancel event is\n\t   *   triggered.\n\t   *\n\t   *\n\t   * ```js\n\t   *   return {\n\t     *     eventFn : function(element, done) {\n\t     *       //code to run the animation\n\t     *       //once complete, then run done()\n\t     *       return function cancellationFunction() {\n\t     *         //code to cancel the animation\n\t     *       }\n\t     *     }\n\t     *   }\n\t   * ```\n\t   *\n\t   * @param {string} name The name of the animation.\n\t   * @param {Function} factory The factory function that will be executed to return the animation\n\t   *                           object.\n\t   */\n\t  this.register = function(name, factory) {\n\t    var key = name + '-animation';\n\t    if (name && name.charAt(0) != '.') throw $animateMinErr('notcsel',\n\t        \"Expecting class selector starting with '.' got '{0}'.\", name);\n\t    this.$$selectors[name.substr(1)] = key;\n\t    $provide.factory(key, factory);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $animateProvider#classNameFilter\n\t   *\n\t   * @description\n\t   * Sets and/or returns the CSS class regular expression that is checked when performing\n\t   * an animation. Upon bootstrap the classNameFilter value is not set at all and will\n\t   * therefore enable $animate to attempt to perform an animation on any element.\n\t   * When setting the classNameFilter value, animations will only be performed on elements\n\t   * that successfully match the filter expression. This in turn can boost performance\n\t   * for low-powered devices as well as applications containing a lot of structural operations.\n\t   * @param {RegExp=} expression The className expression which will be checked against all animations\n\t   * @return {RegExp} The current CSS className expression value. If null then there is no expression value\n\t   */\n\t  this.classNameFilter = function(expression) {\n\t    if(arguments.length === 1) {\n\t      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;\n\t    }\n\t    return this.$$classNameFilter;\n\t  };\n\t\n\t  this.$get = ['$timeout', '$$asyncCallback', function($timeout, $$asyncCallback) {\n\t\n\t    function async(fn) {\n\t      fn && $$asyncCallback(fn);\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @ngdoc service\n\t     * @name $animate\n\t     * @description The $animate service provides rudimentary DOM manipulation functions to\n\t     * insert, remove and move elements within the DOM, as well as adding and removing classes.\n\t     * This service is the core service used by the ngAnimate $animator service which provides\n\t     * high-level animation hooks for CSS and JavaScript.\n\t     *\n\t     * $animate is available in the AngularJS core, however, the ngAnimate module must be included\n\t     * to enable full out animation support. Otherwise, $animate will only perform simple DOM\n\t     * manipulation operations.\n\t     *\n\t     * To learn more about enabling animation support, click here to visit the {@link ngAnimate\n\t     * ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\n\t     * page}.\n\t     */\n\t    return {\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#enter\n\t       * @kind function\n\t       * @description Inserts the element into the DOM either after the `after` element or within\n\t       *   the `parent` element. Once complete, the done() callback will be fired (if provided).\n\t       * @param {DOMElement} element the element which will be inserted into the DOM\n\t       * @param {DOMElement} parent the parent element which will append the element as\n\t       *   a child (if the after element is not present)\n\t       * @param {DOMElement} after the sibling element which will append the element\n\t       *   after itself\n\t       * @param {Function=} done callback function that will be called after the element has been\n\t       *   inserted into the DOM\n\t       */\n\t      enter : function(element, parent, after, done) {\n\t        if (after) {\n\t          after.after(element);\n\t        } else {\n\t          if (!parent || !parent[0]) {\n\t            parent = after.parent();\n\t          }\n\t          parent.append(element);\n\t        }\n\t        async(done);\n\t      },\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#leave\n\t       * @kind function\n\t       * @description Removes the element from the DOM. Once complete, the done() callback will be\n\t       *   fired (if provided).\n\t       * @param {DOMElement} element the element which will be removed from the DOM\n\t       * @param {Function=} done callback function that will be called after the element has been\n\t       *   removed from the DOM\n\t       */\n\t      leave : function(element, done) {\n\t        element.remove();\n\t        async(done);\n\t      },\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#move\n\t       * @kind function\n\t       * @description Moves the position of the provided element within the DOM to be placed\n\t       * either after the `after` element or inside of the `parent` element. Once complete, the\n\t       * done() callback will be fired (if provided).\n\t       *\n\t       * @param {DOMElement} element the element which will be moved around within the\n\t       *   DOM\n\t       * @param {DOMElement} parent the parent element where the element will be\n\t       *   inserted into (if the after element is not present)\n\t       * @param {DOMElement} after the sibling element where the element will be\n\t       *   positioned next to\n\t       * @param {Function=} done the callback function (if provided) that will be fired after the\n\t       *   element has been moved to its new position\n\t       */\n\t      move : function(element, parent, after, done) {\n\t        // Do not remove element before insert. Removing will cause data associated with the\n\t        // element to be dropped. Insert will implicitly do the remove.\n\t        this.enter(element, parent, after, done);\n\t      },\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#addClass\n\t       * @kind function\n\t       * @description Adds the provided className CSS class value to the provided element. Once\n\t       * complete, the done() callback will be fired (if provided).\n\t       * @param {DOMElement} element the element which will have the className value\n\t       *   added to it\n\t       * @param {string} className the CSS class which will be added to the element\n\t       * @param {Function=} done the callback function (if provided) that will be fired after the\n\t       *   className value has been added to the element\n\t       */\n\t      addClass : function(element, className, done) {\n\t        className = isString(className) ?\n\t                      className :\n\t                      isArray(className) ? className.join(' ') : '';\n\t        forEach(element, function (element) {\n\t          jqLiteAddClass(element, className);\n\t        });\n\t        async(done);\n\t      },\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#removeClass\n\t       * @kind function\n\t       * @description Removes the provided className CSS class value from the provided element.\n\t       * Once complete, the done() callback will be fired (if provided).\n\t       * @param {DOMElement} element the element which will have the className value\n\t       *   removed from it\n\t       * @param {string} className the CSS class which will be removed from the element\n\t       * @param {Function=} done the callback function (if provided) that will be fired after the\n\t       *   className value has been removed from the element\n\t       */\n\t      removeClass : function(element, className, done) {\n\t        className = isString(className) ?\n\t                      className :\n\t                      isArray(className) ? className.join(' ') : '';\n\t        forEach(element, function (element) {\n\t          jqLiteRemoveClass(element, className);\n\t        });\n\t        async(done);\n\t      },\n\t\n\t      /**\n\t       *\n\t       * @ngdoc method\n\t       * @name $animate#setClass\n\t       * @kind function\n\t       * @description Adds and/or removes the given CSS classes to and from the element.\n\t       * Once complete, the done() callback will be fired (if provided).\n\t       * @param {DOMElement} element the element which will have its CSS classes changed\n\t       *   removed from it\n\t       * @param {string} add the CSS classes which will be added to the element\n\t       * @param {string} remove the CSS class which will be removed from the element\n\t       * @param {Function=} done the callback function (if provided) that will be fired after the\n\t       *   CSS classes have been set on the element\n\t       */\n\t      setClass : function(element, add, remove, done) {\n\t        forEach(element, function (element) {\n\t          jqLiteAddClass(element, add);\n\t          jqLiteRemoveClass(element, remove);\n\t        });\n\t        async(done);\n\t      },\n\t\n\t      enabled : noop\n\t    };\n\t  }];\n\t}];\n\t\n\tfunction $$AsyncCallbackProvider(){\n\t  this.$get = ['$$rAF', '$timeout', function($$rAF, $timeout) {\n\t    return $$rAF.supported\n\t      ? function(fn) { return $$rAF(fn); }\n\t      : function(fn) {\n\t        return $timeout(fn, 0, false);\n\t      };\n\t  }];\n\t}\n\t\n\t/* global stripHash: true */\n\t\n\t/**\n\t * ! This is a private undocumented service !\n\t *\n\t * @name $browser\n\t * @requires $log\n\t * @description\n\t * This object has two goals:\n\t *\n\t * - hide all the global state in the browser caused by the window object\n\t * - abstract away all the browser specific features and inconsistencies\n\t *\n\t * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n\t * service, which can be used for convenient testing of the application without the interaction with\n\t * the real browser apis.\n\t */\n\t/**\n\t * @param {object} window The global window object.\n\t * @param {object} document jQuery wrapped document.\n\t * @param {function()} XHR XMLHttpRequest constructor.\n\t * @param {object} $log console.log or an object with the same interface.\n\t * @param {object} $sniffer $sniffer service\n\t */\n\tfunction Browser(window, document, $log, $sniffer) {\n\t  var self = this,\n\t      rawDocument = document[0],\n\t      location = window.location,\n\t      history = window.history,\n\t      setTimeout = window.setTimeout,\n\t      clearTimeout = window.clearTimeout,\n\t      pendingDeferIds = {};\n\t\n\t  self.isMock = false;\n\t\n\t  var outstandingRequestCount = 0;\n\t  var outstandingRequestCallbacks = [];\n\t\n\t  // TODO(vojta): remove this temporary api\n\t  self.$$completeOutstandingRequest = completeOutstandingRequest;\n\t  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\t\n\t  /**\n\t   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n\t   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n\t   */\n\t  function completeOutstandingRequest(fn) {\n\t    try {\n\t      fn.apply(null, sliceArgs(arguments, 1));\n\t    } finally {\n\t      outstandingRequestCount--;\n\t      if (outstandingRequestCount === 0) {\n\t        while(outstandingRequestCallbacks.length) {\n\t          try {\n\t            outstandingRequestCallbacks.pop()();\n\t          } catch (e) {\n\t            $log.error(e);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function getHash(url) {\n\t    var index = url.indexOf('#');\n\t    return index === -1 ? '' : url.substr(index + 1);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * Note: this method is used only by scenario runner\n\t   * TODO(vojta): prefix this method with $$ ?\n\t   * @param {function()} callback Function that will be called when no outstanding request\n\t   */\n\t  self.notifyWhenNoOutstandingRequests = function(callback) {\n\t    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n\t    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n\t    // regular poller would result in flaky tests.\n\t    forEach(pollFns, function(pollFn){ pollFn(); });\n\t\n\t    if (outstandingRequestCount === 0) {\n\t      callback();\n\t    } else {\n\t      outstandingRequestCallbacks.push(callback);\n\t    }\n\t  };\n\t\n\t  //////////////////////////////////////////////////////////////\n\t  // Poll Watcher API\n\t  //////////////////////////////////////////////////////////////\n\t  var pollFns = [],\n\t      pollTimeout;\n\t\n\t  /**\n\t   * @name $browser#addPollFn\n\t   *\n\t   * @param {function()} fn Poll function to add\n\t   *\n\t   * @description\n\t   * Adds a function to the list of functions that poller periodically executes,\n\t   * and starts polling if not started yet.\n\t   *\n\t   * @returns {function()} the added function\n\t   */\n\t  self.addPollFn = function(fn) {\n\t    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n\t    pollFns.push(fn);\n\t    return fn;\n\t  };\n\t\n\t  /**\n\t   * @param {number} interval How often should browser call poll functions (ms)\n\t   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n\t   *\n\t   * @description\n\t   * Configures the poller to run in the specified intervals, using the specified\n\t   * setTimeout fn and kicks it off.\n\t   */\n\t  function startPoller(interval, setTimeout) {\n\t    (function check() {\n\t      forEach(pollFns, function(pollFn){ pollFn(); });\n\t      pollTimeout = setTimeout(check, interval);\n\t    })();\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////\n\t  // URL API\n\t  //////////////////////////////////////////////////////////////\n\t\n\t  var lastBrowserUrl = location.href,\n\t      baseElement = document.find('base'),\n\t      reloadLocation = null;\n\t\n\t  /**\n\t   * @name $browser#url\n\t   *\n\t   * @description\n\t   * GETTER:\n\t   * Without any argument, this method just returns current value of location.href.\n\t   *\n\t   * SETTER:\n\t   * With at least one argument, this method sets url to new value.\n\t   * If html5 history api supported, pushState/replaceState is used, otherwise\n\t   * location.href/location.replace is used.\n\t   * Returns its own instance to allow chaining\n\t   *\n\t   * NOTE: this api is intended for use only by the $location service. Please use the\n\t   * {@link ng.$location $location service} to change url.\n\t   *\n\t   * @param {string} url New url (when used as setter)\n\t   * @param {boolean=} replace Should new url replace current history record ?\n\t   */\n\t  self.url = function(url, replace) {\n\t    // Android Browser BFCache causes location, history reference to become stale.\n\t    if (location !== window.location) location = window.location;\n\t    if (history !== window.history) history = window.history;\n\t\n\t    // setter\n\t    if (url) {\n\t      if (lastBrowserUrl == url) return;\n\t      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);\n\t      lastBrowserUrl = url;\n\t      // Don't use history API if only the hash changed\n\t      // due to a bug in IE10/IE11 which leads\n\t      // to not firing a `hashchange` nor `popstate` event\n\t      // in some cases (see #9143).\n\t      if (!sameBase && $sniffer.history) {\n\t        if (replace) history.replaceState(null, '', url);\n\t        else {\n\t          history.pushState(null, '', url);\n\t          // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462\n\t          baseElement.attr('href', baseElement.attr('href'));\n\t        }\n\t      } else {\n\t        if (!sameBase) {\n\t          reloadLocation = url;\n\t        }\n\t        if (replace) {\n\t          location.replace(url);\n\t        } else if (!sameBase) {\n\t          location.href = url;\n\t        } else {\n\t          location.hash = getHash(url);\n\t        }\n\t      }\n\t      return self;\n\t    // getter\n\t    } else {\n\t      // - reloadLocation is needed as browsers don't allow to read out\n\t      //   the new location.href if a reload happened.\n\t      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n\t      return reloadLocation || location.href.replace(/%27/g,\"'\");\n\t    }\n\t  };\n\t\n\t  var urlChangeListeners = [],\n\t      urlChangeInit = false;\n\t\n\t  function fireUrlChange() {\n\t    if (lastBrowserUrl == self.url()) return;\n\t\n\t    lastBrowserUrl = self.url();\n\t    forEach(urlChangeListeners, function(listener) {\n\t      listener(self.url());\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @name $browser#onUrlChange\n\t   *\n\t   * @description\n\t   * Register callback function that will be called, when url changes.\n\t   *\n\t   * It's only called when the url is changed from outside of angular:\n\t   * - user types different url into address bar\n\t   * - user clicks on history (forward/back) button\n\t   * - user clicks on a link\n\t   *\n\t   * It's not called when url is changed by $browser.url() method\n\t   *\n\t   * The listener gets called with new url as parameter.\n\t   *\n\t   * NOTE: this api is intended for use only by the $location service. Please use the\n\t   * {@link ng.$location $location service} to monitor url changes in angular apps.\n\t   *\n\t   * @param {function(string)} listener Listener function to be called when url changes.\n\t   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n\t   */\n\t  self.onUrlChange = function(callback) {\n\t    // TODO(vojta): refactor to use node's syntax for events\n\t    if (!urlChangeInit) {\n\t      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n\t      // don't fire popstate when user change the address bar and don't fire hashchange when url\n\t      // changed by push/replaceState\n\t\n\t      // html5 history api - popstate event\n\t      if ($sniffer.history) jqLite(window).on('popstate', fireUrlChange);\n\t      // hashchange event\n\t      if ($sniffer.hashchange) jqLite(window).on('hashchange', fireUrlChange);\n\t      // polling\n\t      else self.addPollFn(fireUrlChange);\n\t\n\t      urlChangeInit = true;\n\t    }\n\t\n\t    urlChangeListeners.push(callback);\n\t    return callback;\n\t  };\n\t\n\t  /**\n\t   * Checks whether the url has changed outside of Angular.\n\t   * Needs to be exported to be able to check for changes that have been done in sync,\n\t   * as hashchange/popstate events fire in async.\n\t   */\n\t  self.$$checkUrlChange = fireUrlChange;\n\t\n\t  //////////////////////////////////////////////////////////////\n\t  // Misc API\n\t  //////////////////////////////////////////////////////////////\n\t\n\t  /**\n\t   * @name $browser#baseHref\n\t   *\n\t   * @description\n\t   * Returns current <base href>\n\t   * (always relative - without domain)\n\t   *\n\t   * @returns {string} The current base href\n\t   */\n\t  self.baseHref = function() {\n\t    var href = baseElement.attr('href');\n\t    return href ? href.replace(/^(https?\\:)?\\/\\/[^\\/]*/, '') : '';\n\t  };\n\t\n\t  //////////////////////////////////////////////////////////////\n\t  // Cookies API\n\t  //////////////////////////////////////////////////////////////\n\t  var lastCookies = {};\n\t  var lastCookieString = '';\n\t  var cookiePath = self.baseHref();\n\t\n\t  /**\n\t   * @name $browser#cookies\n\t   *\n\t   * @param {string=} name Cookie name\n\t   * @param {string=} value Cookie value\n\t   *\n\t   * @description\n\t   * The cookies method provides a 'private' low level access to browser cookies.\n\t   * It is not meant to be used directly, use the $cookie service instead.\n\t   *\n\t   * The return values vary depending on the arguments that the method was called with as follows:\n\t   *\n\t   * - cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\n\t   *   it\n\t   * - cookies(name, value) -> set name to value, if value is undefined delete the cookie\n\t   * - cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\n\t   *   way)\n\t   *\n\t   * @returns {Object} Hash of all cookies (if called without any parameter)\n\t   */\n\t  self.cookies = function(name, value) {\n\t    /* global escape: false, unescape: false */\n\t    var cookieLength, cookieArray, cookie, i, index;\n\t\n\t    if (name) {\n\t      if (value === undefined) {\n\t        rawDocument.cookie = escape(name) + \"=;path=\" + cookiePath +\n\t                                \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n\t      } else {\n\t        if (isString(value)) {\n\t          cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) +\n\t                                ';path=' + cookiePath).length + 1;\n\t\n\t          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n\t          // - 300 cookies\n\t          // - 20 cookies per unique domain\n\t          // - 4096 bytes per cookie\n\t          if (cookieLength > 4096) {\n\t            $log.warn(\"Cookie '\"+ name +\n\t              \"' possibly not set or overflowed because it was too large (\"+\n\t              cookieLength + \" > 4096 bytes)!\");\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      if (rawDocument.cookie !== lastCookieString) {\n\t        lastCookieString = rawDocument.cookie;\n\t        cookieArray = lastCookieString.split(\"; \");\n\t        lastCookies = {};\n\t\n\t        for (i = 0; i < cookieArray.length; i++) {\n\t          cookie = cookieArray[i];\n\t          index = cookie.indexOf('=');\n\t          if (index > 0) { //ignore nameless cookies\n\t            name = unescape(cookie.substring(0, index));\n\t            // the first value that is seen for a cookie is the most\n\t            // specific one.  values for the same cookie name that\n\t            // follow are for less specific paths.\n\t            if (lastCookies[name] === undefined) {\n\t              lastCookies[name] = unescape(cookie.substring(index + 1));\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return lastCookies;\n\t    }\n\t  };\n\t\n\t\n\t  /**\n\t   * @name $browser#defer\n\t   * @param {function()} fn A function, who's execution should be deferred.\n\t   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n\t   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n\t   *\n\t   * @description\n\t   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\n\t   *\n\t   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n\t   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n\t   * via `$browser.defer.flush()`.\n\t   *\n\t   */\n\t  self.defer = function(fn, delay) {\n\t    var timeoutId;\n\t    outstandingRequestCount++;\n\t    timeoutId = setTimeout(function() {\n\t      delete pendingDeferIds[timeoutId];\n\t      completeOutstandingRequest(fn);\n\t    }, delay || 0);\n\t    pendingDeferIds[timeoutId] = true;\n\t    return timeoutId;\n\t  };\n\t\n\t\n\t  /**\n\t   * @name $browser#defer.cancel\n\t   *\n\t   * @description\n\t   * Cancels a deferred task identified with `deferId`.\n\t   *\n\t   * @param {*} deferId Token returned by the `$browser.defer` function.\n\t   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n\t   *                    canceled.\n\t   */\n\t  self.defer.cancel = function(deferId) {\n\t    if (pendingDeferIds[deferId]) {\n\t      delete pendingDeferIds[deferId];\n\t      clearTimeout(deferId);\n\t      completeOutstandingRequest(noop);\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t}\n\t\n\tfunction $BrowserProvider(){\n\t  this.$get = ['$window', '$log', '$sniffer', '$document',\n\t      function( $window,   $log,   $sniffer,   $document){\n\t        return new Browser($window, $document, $log, $sniffer);\n\t      }];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $cacheFactory\n\t *\n\t * @description\n\t * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\n\t * them.\n\t *\n\t * ```js\n\t *\n\t *  var cache = $cacheFactory('cacheId');\n\t *  expect($cacheFactory.get('cacheId')).toBe(cache);\n\t *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n\t *\n\t *  cache.put(\"key\", \"value\");\n\t *  cache.put(\"another key\", \"another value\");\n\t *\n\t *  // We've specified no options on creation\n\t *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n\t *\n\t * ```\n\t *\n\t *\n\t * @param {string} cacheId Name or id of the newly created cache.\n\t * @param {object=} options Options object that specifies the cache behavior. Properties:\n\t *\n\t *   - `{number=}` `capacity` — turns the cache into LRU cache.\n\t *\n\t * @returns {object} Newly created cache object with the following set of methods:\n\t *\n\t * - `{object}` `info()` — Returns id, size, and options of cache.\n\t * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n\t *   it.\n\t * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n\t * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n\t * - `{void}` `removeAll()` — Removes all cached values.\n\t * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n\t *\n\t * @example\n\t   <example module=\"cacheExampleApp\">\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"CacheController\">\n\t         <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n\t         <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n\t         <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\t\n\t         <p ng-if=\"keys.length\">Cached Values</p>\n\t         <div ng-repeat=\"key in keys\">\n\t           <span ng-bind=\"key\"></span>\n\t           <span>: </span>\n\t           <b ng-bind=\"cache.get(key)\"></b>\n\t         </div>\n\t\n\t         <p>Cache Info</p>\n\t         <div ng-repeat=\"(key, value) in cache.info()\">\n\t           <span ng-bind=\"key\"></span>\n\t           <span>: </span>\n\t           <b ng-bind=\"value\"></b>\n\t         </div>\n\t       </div>\n\t     </file>\n\t     <file name=\"script.js\">\n\t       angular.module('cacheExampleApp', []).\n\t         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n\t           $scope.keys = [];\n\t           $scope.cache = $cacheFactory('cacheId');\n\t           $scope.put = function(key, value) {\n\t             if ($scope.cache.get(key) === undefined) {\n\t               $scope.keys.push(key);\n\t             }\n\t             $scope.cache.put(key, value === undefined ? null : value);\n\t           };\n\t         }]);\n\t     </file>\n\t     <file name=\"style.css\">\n\t       p {\n\t         margin: 10px 0 3px;\n\t       }\n\t     </file>\n\t   </example>\n\t */\n\tfunction $CacheFactoryProvider() {\n\t\n\t  this.$get = function() {\n\t    var caches = {};\n\t\n\t    function cacheFactory(cacheId, options) {\n\t      if (cacheId in caches) {\n\t        throw minErr('$cacheFactory')('iid', \"CacheId '{0}' is already taken!\", cacheId);\n\t      }\n\t\n\t      var size = 0,\n\t          stats = extend({}, options, {id: cacheId}),\n\t          data = {},\n\t          capacity = (options && options.capacity) || Number.MAX_VALUE,\n\t          lruHash = {},\n\t          freshEnd = null,\n\t          staleEnd = null;\n\t\n\t      /**\n\t       * @ngdoc type\n\t       * @name $cacheFactory.Cache\n\t       *\n\t       * @description\n\t       * A cache object used to store and retrieve data, primarily used by\n\t       * {@link $http $http} and the {@link ng.directive:script script} directive to cache\n\t       * templates and other data.\n\t       *\n\t       * ```js\n\t       *  angular.module('superCache')\n\t       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n\t       *      return $cacheFactory('super-cache');\n\t       *    }]);\n\t       * ```\n\t       *\n\t       * Example test:\n\t       *\n\t       * ```js\n\t       *  it('should behave like a cache', inject(function(superCache) {\n\t       *    superCache.put('key', 'value');\n\t       *    superCache.put('another key', 'another value');\n\t       *\n\t       *    expect(superCache.info()).toEqual({\n\t       *      id: 'super-cache',\n\t       *      size: 2\n\t       *    });\n\t       *\n\t       *    superCache.remove('another key');\n\t       *    expect(superCache.get('another key')).toBeUndefined();\n\t       *\n\t       *    superCache.removeAll();\n\t       *    expect(superCache.info()).toEqual({\n\t       *      id: 'super-cache',\n\t       *      size: 0\n\t       *    });\n\t       *  }));\n\t       * ```\n\t       */\n\t      return caches[cacheId] = {\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#put\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\n\t         * retrieved later, and incrementing the size of the cache if the key was not already\n\t         * present in the cache. If behaving like an LRU cache, it will also remove stale\n\t         * entries from the set.\n\t         *\n\t         * It will not insert undefined values into the cache.\n\t         *\n\t         * @param {string} key the key under which the cached data is stored.\n\t         * @param {*} value the value to store alongside the key. If it is undefined, the key\n\t         *    will not be stored.\n\t         * @returns {*} the value stored.\n\t         */\n\t        put: function(key, value) {\n\t          if (capacity < Number.MAX_VALUE) {\n\t            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\t\n\t            refresh(lruEntry);\n\t          }\n\t\n\t          if (isUndefined(value)) return;\n\t          if (!(key in data)) size++;\n\t          data[key] = value;\n\t\n\t          if (size > capacity) {\n\t            this.remove(staleEnd.key);\n\t          }\n\t\n\t          return value;\n\t        },\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#get\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.\n\t         *\n\t         * @param {string} key the key of the data to be retrieved\n\t         * @returns {*} the value stored.\n\t         */\n\t        get: function(key) {\n\t          if (capacity < Number.MAX_VALUE) {\n\t            var lruEntry = lruHash[key];\n\t\n\t            if (!lruEntry) return;\n\t\n\t            refresh(lruEntry);\n\t          }\n\t\n\t          return data[key];\n\t        },\n\t\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#remove\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.\n\t         *\n\t         * @param {string} key the key of the entry to be removed\n\t         */\n\t        remove: function(key) {\n\t          if (capacity < Number.MAX_VALUE) {\n\t            var lruEntry = lruHash[key];\n\t\n\t            if (!lruEntry) return;\n\t\n\t            if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n\t            if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n\t            link(lruEntry.n,lruEntry.p);\n\t\n\t            delete lruHash[key];\n\t          }\n\t\n\t          delete data[key];\n\t          size--;\n\t        },\n\t\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#removeAll\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Clears the cache object of any entries.\n\t         */\n\t        removeAll: function() {\n\t          data = {};\n\t          size = 0;\n\t          lruHash = {};\n\t          freshEnd = staleEnd = null;\n\t        },\n\t\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#destroy\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,\n\t         * removing it from the {@link $cacheFactory $cacheFactory} set.\n\t         */\n\t        destroy: function() {\n\t          data = null;\n\t          stats = null;\n\t          lruHash = null;\n\t          delete caches[cacheId];\n\t        },\n\t\n\t\n\t        /**\n\t         * @ngdoc method\n\t         * @name $cacheFactory.Cache#info\n\t         * @kind function\n\t         *\n\t         * @description\n\t         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.\n\t         *\n\t         * @returns {object} an object with the following properties:\n\t         *   <ul>\n\t         *     <li>**id**: the id of the cache instance</li>\n\t         *     <li>**size**: the number of entries kept in the cache instance</li>\n\t         *     <li>**...**: any additional properties from the options object when creating the\n\t         *       cache.</li>\n\t         *   </ul>\n\t         */\n\t        info: function() {\n\t          return extend({}, stats, {size: size});\n\t        }\n\t      };\n\t\n\t\n\t      /**\n\t       * makes the `entry` the freshEnd of the LRU linked list\n\t       */\n\t      function refresh(entry) {\n\t        if (entry != freshEnd) {\n\t          if (!staleEnd) {\n\t            staleEnd = entry;\n\t          } else if (staleEnd == entry) {\n\t            staleEnd = entry.n;\n\t          }\n\t\n\t          link(entry.n, entry.p);\n\t          link(entry, freshEnd);\n\t          freshEnd = entry;\n\t          freshEnd.n = null;\n\t        }\n\t      }\n\t\n\t\n\t      /**\n\t       * bidirectionally links two entries of the LRU linked list\n\t       */\n\t      function link(nextEntry, prevEntry) {\n\t        if (nextEntry != prevEntry) {\n\t          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n\t          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n\t        }\n\t      }\n\t    }\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $cacheFactory#info\n\t   *\n\t   * @description\n\t   * Get information about all the caches that have been created\n\t   *\n\t   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\n\t   */\n\t    cacheFactory.info = function() {\n\t      var info = {};\n\t      forEach(caches, function(cache, cacheId) {\n\t        info[cacheId] = cache.info();\n\t      });\n\t      return info;\n\t    };\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $cacheFactory#get\n\t   *\n\t   * @description\n\t   * Get access to a cache object by the `cacheId` used when it was created.\n\t   *\n\t   * @param {string} cacheId Name or id of a cache to access.\n\t   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\n\t   */\n\t    cacheFactory.get = function(cacheId) {\n\t      return caches[cacheId];\n\t    };\n\t\n\t\n\t    return cacheFactory;\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $templateCache\n\t *\n\t * @description\n\t * The first time a template is used, it is loaded in the template cache for quick retrieval. You\n\t * can load templates directly into the cache in a `script` tag, or by consuming the\n\t * `$templateCache` service directly.\n\t *\n\t * Adding via the `script` tag:\n\t *\n\t * ```html\n\t *   <script type=\"text/ng-template\" id=\"templateId.html\">\n\t *     <p>This is the content of the template</p>\n\t *   </script>\n\t * ```\n\t *\n\t * **Note:** the `script` tag containing the template does not need to be included in the `head` of\n\t * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\n\t * element with ng-app attribute), otherwise the template will be ignored.\n\t *\n\t * Adding via the $templateCache service:\n\t *\n\t * ```js\n\t * var myApp = angular.module('myApp', []);\n\t * myApp.run(function($templateCache) {\n\t *   $templateCache.put('templateId.html', 'This is the content of the template');\n\t * });\n\t * ```\n\t *\n\t * To retrieve the template later, simply use it in your HTML:\n\t * ```html\n\t * <div ng-include=\" 'templateId.html' \"></div>\n\t * ```\n\t *\n\t * or get it via Javascript:\n\t * ```js\n\t * $templateCache.get('templateId.html')\n\t * ```\n\t *\n\t * See {@link ng.$cacheFactory $cacheFactory}.\n\t *\n\t */\n\tfunction $TemplateCacheProvider() {\n\t  this.$get = ['$cacheFactory', function($cacheFactory) {\n\t    return $cacheFactory('templates');\n\t  }];\n\t}\n\t\n\t/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n\t *\n\t * DOM-related variables:\n\t *\n\t * - \"node\" - DOM Node\n\t * - \"element\" - DOM Element or Node\n\t * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n\t *\n\t *\n\t * Compiler related stuff:\n\t *\n\t * - \"linkFn\" - linking fn of a single directive\n\t * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n\t * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n\t * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $compile\n\t * @kind function\n\t *\n\t * @description\n\t * Compiles an HTML string or DOM into a template and produces a template function, which\n\t * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n\t *\n\t * The compilation is a process of walking the DOM tree and matching DOM elements to\n\t * {@link ng.$compileProvider#directive directives}.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** This document is an in-depth reference of all directive options.\n\t * For a gentle introduction to directives with examples of common use cases,\n\t * see the {@link guide/directive directive guide}.\n\t * </div>\n\t *\n\t * ## Comprehensive Directive API\n\t *\n\t * There are many different options for a directive.\n\t *\n\t * The difference resides in the return value of the factory function.\n\t * You can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\n\t * or just the `postLink` function (all other properties will have the default values).\n\t *\n\t * <div class=\"alert alert-success\">\n\t * **Best Practice:** It's recommended to use the \"directive definition object\" form.\n\t * </div>\n\t *\n\t * Here's an example directive declared with a Directive Definition Object:\n\t *\n\t * ```js\n\t *   var myModule = angular.module(...);\n\t *\n\t *   myModule.directive('directiveName', function factory(injectables) {\n\t *     var directiveDefinitionObject = {\n\t *       priority: 0,\n\t *       template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n\t *       // or\n\t *       // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n\t *       transclude: false,\n\t *       restrict: 'A',\n\t *       scope: false,\n\t *       controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n\t *       controllerAs: 'stringAlias',\n\t *       require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n\t *       compile: function compile(tElement, tAttrs, transclude) {\n\t *         return {\n\t *           pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n\t *           post: function postLink(scope, iElement, iAttrs, controller) { ... }\n\t *         }\n\t *         // or\n\t *         // return function postLink( ... ) { ... }\n\t *       },\n\t *       // or\n\t *       // link: {\n\t *       //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n\t *       //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n\t *       // }\n\t *       // or\n\t *       // link: function postLink( ... ) { ... }\n\t *     };\n\t *     return directiveDefinitionObject;\n\t *   });\n\t * ```\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** Any unspecified options will use the default value. You can see the default values below.\n\t * </div>\n\t *\n\t * Therefore the above can be simplified as:\n\t *\n\t * ```js\n\t *   var myModule = angular.module(...);\n\t *\n\t *   myModule.directive('directiveName', function factory(injectables) {\n\t *     var directiveDefinitionObject = {\n\t *       link: function postLink(scope, iElement, iAttrs) { ... }\n\t *     };\n\t *     return directiveDefinitionObject;\n\t *     // or\n\t *     // return function postLink(scope, iElement, iAttrs) { ... }\n\t *   });\n\t * ```\n\t *\n\t *\n\t *\n\t * ### Directive Definition Object\n\t *\n\t * The directive definition object provides instructions to the {@link ng.$compile\n\t * compiler}. The attributes are:\n\t *\n\t * #### `priority`\n\t * When there are multiple directives defined on a single DOM element, sometimes it\n\t * is necessary to specify the order in which the directives are applied. The `priority` is used\n\t * to sort the directives before their `compile` functions get called. Priority is defined as a\n\t * number. Directives with greater numerical `priority` are compiled first. Pre-link functions\n\t * are also run in priority order, but post-link functions are run in reverse order. The order\n\t * of directives with the same priority is undefined. The default priority is `0`.\n\t *\n\t * #### `terminal`\n\t * If set to true then the current `priority` will be the last set of directives\n\t * which will execute (any directives at the current priority will still execute\n\t * as the order of execution on same `priority` is undefined).\n\t *\n\t * #### `scope`\n\t * **If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\n\t * same element request a new scope, only one new scope is created. The new scope rule does not\n\t * apply for the root of the template since the root of the template always gets a new scope.\n\t *\n\t * **If set to `{}` (object hash),** then a new \"isolate\" scope is created. The 'isolate' scope differs from\n\t * normal scope in that it does not prototypically inherit from the parent scope. This is useful\n\t * when creating reusable components, which should not accidentally read or modify data in the\n\t * parent scope.\n\t *\n\t * The 'isolate' scope takes an object hash which defines a set of local scope properties\n\t * derived from the parent scope. These local properties are useful for aliasing values for\n\t * templates. Locals definition is a hash of local scope property to its source:\n\t *\n\t * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n\t *   always a string since DOM attributes are strings. If no `attr` name is specified  then the\n\t *   attribute name is assumed to be the same as the local name.\n\t *   Given `<widget my-attr=\"hello {{name}}\">` and widget definition\n\t *   of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\n\t *   the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\n\t *   `localName` property on the widget scope. The `name` is read from the parent scope (not\n\t *   component scope).\n\t *\n\t * * `=` or `=attr` - set up bi-directional binding between a local scope property and the\n\t *   parent scope property of name defined via the value of the `attr` attribute. If no `attr`\n\t *   name is specified then the attribute name is assumed to be the same as the local name.\n\t *   Given `<widget my-attr=\"parentModel\">` and widget definition of\n\t *   `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\n\t *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n\t *   in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\n\t *   scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\n\t *   can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional.\n\t *\n\t * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\n\t *   If no `attr` name is specified then the attribute name is assumed to be the same as the\n\t *   local name. Given `<widget my-attr=\"count = count + value\">` and widget definition of\n\t *   `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\n\t *   a function wrapper for the `count = count + value` expression. Often it's desirable to\n\t *   pass data from the isolated scope via an expression to the parent scope, this can be\n\t *   done by passing a map of local variable names and values into the expression wrapper fn.\n\t *   For example, if the expression is `increment(amount)` then we can specify the amount value\n\t *   by calling the `localFn` as `localFn({amount: 22})`.\n\t *\n\t *\n\t *\n\t * #### `controller`\n\t * Controller constructor function. The controller is instantiated before the\n\t * pre-linking phase and it is shared with other directives (see\n\t * `require` attribute). This allows the directives to communicate with each other and augment\n\t * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n\t *\n\t * * `$scope` - Current scope associated with the element\n\t * * `$element` - Current element\n\t * * `$attrs` - Current attributes object for the element\n\t * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope.\n\t *    The scope can be overridden by an optional first argument.\n\t *   `function([scope], cloneLinkingFn)`.\n\t *\n\t *\n\t * #### `require`\n\t * Require another directive and inject its controller as the fourth argument to the linking function. The\n\t * `require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\n\t * injected argument will be an array in corresponding order. If no such directive can be\n\t * found, or if the directive does not have a controller, then an error is raised. The name can be prefixed with:\n\t *\n\t * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n\t * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n\t * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n\t * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n\t *   `null` to the `link` fn if not found.\n\t *\n\t *\n\t * #### `controllerAs`\n\t * Controller alias at the directive scope. An alias for the controller so it\n\t * can be referenced at the directive template. The directive needs to define a scope for this\n\t * configuration to be used. Useful in the case when directive is used as component.\n\t *\n\t *\n\t * #### `restrict`\n\t * String of subset of `EACM` which restricts the directive to a specific directive\n\t * declaration style. If omitted, the default (attributes only) is used.\n\t *\n\t * * `E` - Element name: `<my-directive></my-directive>`\n\t * * `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n\t * * `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n\t * * `M` - Comment: `<!-- directive: my-directive exp -->`\n\t *\n\t *\n\t * #### `template`\n\t * HTML markup that may:\n\t * * Replace the contents of the directive's element (default).\n\t * * Replace the directive's element itself (if `replace` is true - DEPRECATED).\n\t * * Wrap the contents of the directive's element (if `transclude` is true).\n\t *\n\t * Value may be:\n\t *\n\t * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n\t * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n\t *   function api below) and returns a string value.\n\t *\n\t *\n\t * #### `templateUrl`\n\t * Same as `template` but the template is loaded from the specified URL. Because\n\t * the template loading is asynchronous the compilation/linking is suspended until the template\n\t * is loaded.\n\t *\n\t * You can specify `templateUrl` as a string representing the URL or as a function which takes two\n\t * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\n\t * a string value representing the url.  In either case, the template URL is passed through {@link\n\t * api/ng.$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n\t *\n\t *\n\t * #### `replace` ([*DEPRECATED*!], will be removed in next major release)\n\t * specify what the template should replace. Defaults to `false`.\n\t *\n\t * * `true` - the template will replace the directive's element.\n\t * * `false` - the template will replace the contents of the directive's element.\n\t *\n\t * The replacement process migrates all of the attributes / classes from the old element to the new\n\t * one. See the {@link guide/directive#creating-custom-directives_creating-directives_template-expanding-directive\n\t * Directives Guide} for an example.\n\t *\n\t * #### `transclude`\n\t * compile the content of the element and make it available to the directive.\n\t * Typically used with {@link ng.directive:ngTransclude\n\t * ngTransclude}. The advantage of transclusion is that the linking function receives a\n\t * transclusion function which is pre-bound to the correct scope. In a typical setup the widget\n\t * creates an `isolate` scope, but the transclusion is not a child, but a sibling of the `isolate`\n\t * scope. This makes it possible for the widget to have private state, and the transclusion to\n\t * be bound to the parent (pre-`isolate`) scope.\n\t *\n\t * There are two kinds of transclusion depending upon whether you want to transclude just the contents of the\n\t * directive's element or the entire element:\n\t *\n\t * * `true` - transclude the content (i.e. the child nodes) of the directive's element.\n\t * * `'element'` - transclude the whole of the directive's element including any directives on this\n\t *   element that defined at a lower priority than this directive. When used, the `template`\n\t *   property is ignored.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** When testing an element transclude directive you must not place the directive at the root of the\n\t * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\n\t * Testing Transclusion Directives}.\n\t * </div>\n\t *\n\t * #### `compile`\n\t *\n\t * ```js\n\t *   function compile(tElement, tAttrs, transclude) { ... }\n\t * ```\n\t *\n\t * The compile function deals with transforming the template DOM. Since most directives do not do\n\t * template transformation, it is not used often. The compile function takes the following arguments:\n\t *\n\t *   * `tElement` - template element - The element where the directive has been declared. It is\n\t *     safe to do template transformation on the element and child elements only.\n\t *\n\t *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n\t *     between all directive compile functions.\n\t *\n\t *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** The template instance and the link instance may be different objects if the template has\n\t * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that\n\t * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\n\t * should be done in a linking function rather than in a compile function.\n\t * </div>\n\t\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** The compile function cannot handle directives that recursively use themselves in their\n\t * own templates or compile functions. Compiling these directives results in an infinite loop and a\n\t * stack overflow errors.\n\t *\n\t * This can be avoided by manually using $compile in the postLink function to imperatively compile\n\t * a directive's template instead of relying on automatic template compilation via `template` or\n\t * `templateUrl` declaration or manual compilation inside the compile function.\n\t * </div>\n\t *\n\t * <div class=\"alert alert-error\">\n\t * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n\t *   e.g. does not know about the right outer scope. Please use the transclude function that is passed\n\t *   to the link function instead.\n\t * </div>\n\t\n\t * A compile function can have a return value which can be either a function or an object.\n\t *\n\t * * returning a (post-link) function - is equivalent to registering the linking function via the\n\t *   `link` property of the config object when the compile function is empty.\n\t *\n\t * * returning an object with function(s) registered via `pre` and `post` properties - allows you to\n\t *   control when a linking function should be called during the linking phase. See info about\n\t *   pre-linking and post-linking functions below.\n\t *\n\t *\n\t * #### `link`\n\t * This property is used only if the `compile` property is not defined.\n\t *\n\t * ```js\n\t *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n\t * ```\n\t *\n\t * The link function is responsible for registering DOM listeners as well as updating the DOM. It is\n\t * executed after the template has been cloned. This is where most of the directive logic will be\n\t * put.\n\t *\n\t *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n\t *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n\t *\n\t *   * `iElement` - instance element - The element where the directive is to be used. It is safe to\n\t *     manipulate the children of the element only in `postLink` function since the children have\n\t *     already been linked.\n\t *\n\t *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n\t *     between all directive linking functions.\n\t *\n\t *   * `controller` - a controller instance - A controller instance if at least one directive on the\n\t *     element defines a controller. The controller is shared among all the directives, which allows\n\t *     the directives to use the controllers as a communication channel.\n\t *\n\t *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n\t *     The scope can be overridden by an optional first argument. This is the same as the `$transclude`\n\t *     parameter of directive controllers.\n\t *     `function([scope], cloneLinkingFn)`.\n\t *\n\t *\n\t * #### Pre-linking function\n\t *\n\t * Executed before the child elements are linked. Not safe to do DOM transformation since the\n\t * compiler linking function will fail to locate the correct elements for linking.\n\t *\n\t * #### Post-linking function\n\t *\n\t * Executed after the child elements are linked. It is safe to do DOM transformation in the post-linking function.\n\t *\n\t * <a name=\"Attributes\"></a>\n\t * ### Attributes\n\t *\n\t * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n\t * `link()` or `compile()` functions. It has a variety of uses.\n\t *\n\t * accessing *Normalized attribute names:*\n\t * Directives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\n\t * the attributes object allows for normalized access to\n\t *   the attributes.\n\t *\n\t * * *Directive inter-communication:* All directives share the same instance of the attributes\n\t *   object which allows the directives to use the attributes object as inter directive\n\t *   communication.\n\t *\n\t * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n\t *   allowing other directives to read the interpolated value.\n\t *\n\t * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n\t *   that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n\t *   the only way to easily get the actual value because during the linking phase the interpolation\n\t *   hasn't been evaluated yet and so the value is at this time set to `undefined`.\n\t *\n\t * ```js\n\t * function linkingFn(scope, elm, attrs, ctrl) {\n\t *   // get the attribute value\n\t *   console.log(attrs.ngModel);\n\t *\n\t *   // change the attribute\n\t *   attrs.$set('ngModel', 'new value');\n\t *\n\t *   // observe changes to interpolated attribute\n\t *   attrs.$observe('ngModel', function(value) {\n\t *     console.log('ngModel has changed value to ' + value);\n\t *   });\n\t * }\n\t * ```\n\t *\n\t * ## Example\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note**: Typically directives are registered with `module.directive`. The example below is\n\t * to illustrate how `$compile` works.\n\t * </div>\n\t *\n\t <example module=\"compileExample\">\n\t   <file name=\"index.html\">\n\t    <script>\n\t      angular.module('compileExample', [], function($compileProvider) {\n\t        // configure new 'compile' directive by passing a directive\n\t        // factory function. The factory function injects the '$compile'\n\t        $compileProvider.directive('compile', function($compile) {\n\t          // directive factory creates a link function\n\t          return function(scope, element, attrs) {\n\t            scope.$watch(\n\t              function(scope) {\n\t                 // watch the 'compile' expression for changes\n\t                return scope.$eval(attrs.compile);\n\t              },\n\t              function(value) {\n\t                // when the 'compile' expression changes\n\t                // assign it into the current DOM\n\t                element.html(value);\n\t\n\t                // compile the new DOM and link it to the current\n\t                // scope.\n\t                // NOTE: we only compile .childNodes so that\n\t                // we don't get into infinite loop compiling ourselves\n\t                $compile(element.contents())(scope);\n\t              }\n\t            );\n\t          };\n\t        });\n\t      })\n\t      .controller('GreeterController', ['$scope', function($scope) {\n\t        $scope.name = 'Angular';\n\t        $scope.html = 'Hello {{name}}';\n\t      }]);\n\t    </script>\n\t    <div ng-controller=\"GreeterController\">\n\t      <input ng-model=\"name\"> <br>\n\t      <textarea ng-model=\"html\"></textarea> <br>\n\t      <div compile=\"html\"></div>\n\t    </div>\n\t   </file>\n\t   <file name=\"protractor.js\" type=\"protractor\">\n\t     it('should auto compile', function() {\n\t       var textarea = $('textarea');\n\t       var output = $('div[compile]');\n\t       // The initial state reads 'Hello Angular'.\n\t       expect(output.getText()).toBe('Hello Angular');\n\t       textarea.clear();\n\t       textarea.sendKeys('{{name}}!');\n\t       expect(output.getText()).toBe('Angular!');\n\t     });\n\t   </file>\n\t </example>\n\t\n\t *\n\t *\n\t * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n\t * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives.\n\t * @param {number} maxPriority only apply directives lower than given priority (Only effects the\n\t *                 root element(s), not their children)\n\t * @returns {function(scope, cloneAttachFn=)} a link function which is used to bind template\n\t * (a DOM element/tree) to a scope. Where:\n\t *\n\t *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n\t *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n\t *  `template` and call the `cloneAttachFn` function allowing the caller to attach the\n\t *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n\t *  called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n\t *\n\t *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n\t *      * `scope` - is the current scope with which the linking function is working with.\n\t *\n\t * Calling the linking function returns the element of the template. It is either the original\n\t * element passed in, or the clone of the element if the `cloneAttachFn` is provided.\n\t *\n\t * After linking the view is not updated until after a call to $digest which typically is done by\n\t * Angular automatically.\n\t *\n\t * If you need access to the bound view, there are two ways to do it:\n\t *\n\t * - If you are not asking the linking function to clone the template, create the DOM element(s)\n\t *   before you send them to the compiler and keep this reference around.\n\t *   ```js\n\t *     var element = $compile('<p>{{total}}</p>')(scope);\n\t *   ```\n\t *\n\t * - if on the other hand, you need the element to be cloned, the view reference from the original\n\t *   example would not point to the clone, but rather to the original template that was cloned. In\n\t *   this case, you can access the clone via the cloneAttachFn:\n\t *   ```js\n\t *     var templateElement = angular.element('<p>{{total}}</p>'),\n\t *         scope = ....;\n\t *\n\t *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n\t *       //attach the clone to DOM document at the right place\n\t *     });\n\t *\n\t *     //now we have reference to the cloned DOM via `clonedElement`\n\t *   ```\n\t *\n\t *\n\t * For information on how the compiler works, see the\n\t * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n\t */\n\t\n\tvar $compileMinErr = minErr('$compile');\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $compileProvider\n\t * @kind function\n\t *\n\t * @description\n\t */\n\t$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];\n\tfunction $CompileProvider($provide, $$sanitizeUriProvider) {\n\t  var hasDirectives = {},\n\t      Suffix = 'Directive',\n\t      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\d\\w_\\-]+)\\s+(.*)$/,\n\t      CLASS_DIRECTIVE_REGEXP = /(([\\d\\w_\\-]+)(?:\\:([^;]+))?;?)/;\n\t\n\t  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes\n\t  // The assumption is that future DOM event attribute names will begin with\n\t  // 'on' and be composed of only English letters.\n\t  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $compileProvider#directive\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Register a new directive with the compiler.\n\t   *\n\t   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which\n\t   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n\t   *    names and the values are the factories.\n\t   * @param {Function|Array} directiveFactory An injectable directive factory function. See\n\t   *    {@link guide/directive} for more info.\n\t   * @returns {ng.$compileProvider} Self for chaining.\n\t   */\n\t   this.directive = function registerDirective(name, directiveFactory) {\n\t    assertNotHasOwnProperty(name, 'directive');\n\t    if (isString(name)) {\n\t      assertArg(directiveFactory, 'directiveFactory');\n\t      if (!hasDirectives.hasOwnProperty(name)) {\n\t        hasDirectives[name] = [];\n\t        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n\t          function($injector, $exceptionHandler) {\n\t            var directives = [];\n\t            forEach(hasDirectives[name], function(directiveFactory, index) {\n\t              try {\n\t                var directive = $injector.invoke(directiveFactory);\n\t                if (isFunction(directive)) {\n\t                  directive = { compile: valueFn(directive) };\n\t                } else if (!directive.compile && directive.link) {\n\t                  directive.compile = valueFn(directive.link);\n\t                }\n\t                directive.priority = directive.priority || 0;\n\t                directive.index = index;\n\t                directive.name = directive.name || name;\n\t                directive.require = directive.require || (directive.controller && directive.name);\n\t                directive.restrict = directive.restrict || 'A';\n\t                directives.push(directive);\n\t              } catch (e) {\n\t                $exceptionHandler(e);\n\t              }\n\t            });\n\t            return directives;\n\t          }]);\n\t      }\n\t      hasDirectives[name].push(directiveFactory);\n\t    } else {\n\t      forEach(name, reverseParams(registerDirective));\n\t    }\n\t    return this;\n\t  };\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $compileProvider#aHrefSanitizationWhitelist\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n\t   * urls during a[href] sanitization.\n\t   *\n\t   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n\t   *\n\t   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n\t   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n\t   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n\t   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n\t   *\n\t   * @param {RegExp=} regexp New regexp to whitelist urls with.\n\t   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n\t   *    chaining otherwise.\n\t   */\n\t  this.aHrefSanitizationWhitelist = function(regexp) {\n\t    if (isDefined(regexp)) {\n\t      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);\n\t      return this;\n\t    } else {\n\t      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();\n\t    }\n\t  };\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $compileProvider#imgSrcSanitizationWhitelist\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n\t   * urls during img[src] sanitization.\n\t   *\n\t   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n\t   *\n\t   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n\t   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n\t   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n\t   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n\t   *\n\t   * @param {RegExp=} regexp New regexp to whitelist urls with.\n\t   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n\t   *    chaining otherwise.\n\t   */\n\t  this.imgSrcSanitizationWhitelist = function(regexp) {\n\t    if (isDefined(regexp)) {\n\t      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);\n\t      return this;\n\t    } else {\n\t      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();\n\t    }\n\t  };\n\t\n\t  this.$get = [\n\t            '$injector', '$interpolate', '$exceptionHandler', '$http', '$templateCache', '$parse',\n\t            '$controller', '$rootScope', '$document', '$sce', '$animate', '$$sanitizeUri',\n\t    function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,\n\t             $controller,   $rootScope,   $document,   $sce,   $animate,   $$sanitizeUri) {\n\t\n\t    var Attributes = function(element, attr) {\n\t      this.$$element = element;\n\t      this.$attr = attr || {};\n\t    };\n\t\n\t    Attributes.prototype = {\n\t      /**\n\t       * @ngdoc method\n\t       * @name $compile.directive.Attributes#$normalize\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n\t       * `data-`) to its normalized, camelCase form.\n\t       *\n\t       * Also there is special case for Moz prefix starting with upper case letter.\n\t       *\n\t       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n\t       *\n\t       * @param {string} name Name to normalize\n\t       */\n\t      $normalize: directiveNormalize,\n\t\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $compile.directive.Attributes#$addClass\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Adds the CSS class value specified by the classVal parameter to the element. If animations\n\t       * are enabled then an animation will be triggered for the class addition.\n\t       *\n\t       * @param {string} classVal The className value that will be added to the element\n\t       */\n\t      $addClass : function(classVal) {\n\t        if(classVal && classVal.length > 0) {\n\t          $animate.addClass(this.$$element, classVal);\n\t        }\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $compile.directive.Attributes#$removeClass\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Removes the CSS class value specified by the classVal parameter from the element. If\n\t       * animations are enabled then an animation will be triggered for the class removal.\n\t       *\n\t       * @param {string} classVal The className value that will be removed from the element\n\t       */\n\t      $removeClass : function(classVal) {\n\t        if(classVal && classVal.length > 0) {\n\t          $animate.removeClass(this.$$element, classVal);\n\t        }\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $compile.directive.Attributes#$updateClass\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Adds and removes the appropriate CSS class values to the element based on the difference\n\t       * between the new and old CSS class values (specified as newClasses and oldClasses).\n\t       *\n\t       * @param {string} newClasses The current CSS className value\n\t       * @param {string} oldClasses The former CSS className value\n\t       */\n\t      $updateClass : function(newClasses, oldClasses) {\n\t        var toAdd = tokenDifference(newClasses, oldClasses);\n\t        var toRemove = tokenDifference(oldClasses, newClasses);\n\t\n\t        if(toAdd.length === 0) {\n\t          $animate.removeClass(this.$$element, toRemove);\n\t        } else if(toRemove.length === 0) {\n\t          $animate.addClass(this.$$element, toAdd);\n\t        } else {\n\t          $animate.setClass(this.$$element, toAdd, toRemove);\n\t        }\n\t      },\n\t\n\t      /**\n\t       * Set a normalized attribute on the element in a way such that all directives\n\t       * can share the attribute. This function properly handles boolean attributes.\n\t       * @param {string} key Normalized key. (ie ngAttribute)\n\t       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n\t       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n\t       *     Defaults to true.\n\t       * @param {string=} attrName Optional none normalized name. Defaults to key.\n\t       */\n\t      $set: function(key, value, writeAttr, attrName) {\n\t        // TODO: decide whether or not to throw an error if \"class\"\n\t        //is set through this function since it may cause $updateClass to\n\t        //become unstable.\n\t\n\t        var booleanKey = getBooleanAttrName(this.$$element[0], key),\n\t            normalizedVal,\n\t            nodeName;\n\t\n\t        if (booleanKey) {\n\t          this.$$element.prop(key, value);\n\t          attrName = booleanKey;\n\t        }\n\t\n\t        this[key] = value;\n\t\n\t        // translate normalized key to actual key\n\t        if (attrName) {\n\t          this.$attr[key] = attrName;\n\t        } else {\n\t          attrName = this.$attr[key];\n\t          if (!attrName) {\n\t            this.$attr[key] = attrName = snake_case(key, '-');\n\t          }\n\t        }\n\t\n\t        nodeName = nodeName_(this.$$element);\n\t\n\t        // sanitize a[href] and img[src] values\n\t        if ((nodeName === 'A' && key === 'href') ||\n\t            (nodeName === 'IMG' && key === 'src')) {\n\t          this[key] = value = $$sanitizeUri(value, key === 'src');\n\t        }\n\t\n\t        if (writeAttr !== false) {\n\t          if (value === null || value === undefined) {\n\t            this.$$element.removeAttr(attrName);\n\t          } else {\n\t            this.$$element.attr(attrName, value);\n\t          }\n\t        }\n\t\n\t        // fire observers\n\t        var $$observers = this.$$observers;\n\t        $$observers && forEach($$observers[key], function(fn) {\n\t          try {\n\t            fn(value);\n\t          } catch (e) {\n\t            $exceptionHandler(e);\n\t          }\n\t        });\n\t      },\n\t\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $compile.directive.Attributes#$observe\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Observes an interpolated attribute.\n\t       *\n\t       * The observer function will be invoked once during the next `$digest` following\n\t       * compilation. The observer is then invoked whenever the interpolated value\n\t       * changes.\n\t       *\n\t       * @param {string} key Normalized key. (ie ngAttribute) .\n\t       * @param {function(interpolatedValue)} fn Function that will be called whenever\n\t                the interpolated value of the attribute changes.\n\t       *        See the {@link guide/directive#Attributes Directives} guide for more info.\n\t       * @returns {function()} the `fn` parameter.\n\t       */\n\t      $observe: function(key, fn) {\n\t        var attrs = this,\n\t            $$observers = (attrs.$$observers || (attrs.$$observers = {})),\n\t            listeners = ($$observers[key] || ($$observers[key] = []));\n\t\n\t        listeners.push(fn);\n\t        $rootScope.$evalAsync(function() {\n\t          if (!listeners.$$inter) {\n\t            // no one registered attribute interpolation function, so lets call it manually\n\t            fn(attrs[key]);\n\t          }\n\t        });\n\t        return fn;\n\t      }\n\t    };\n\t\n\t    var startSymbol = $interpolate.startSymbol(),\n\t        endSymbol = $interpolate.endSymbol(),\n\t        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n\t            ? identity\n\t            : function denormalizeTemplate(template) {\n\t              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n\t        },\n\t        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\n\t\n\t\n\t    return compile;\n\t\n\t    //================================\n\t\n\t    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,\n\t                        previousCompileContext) {\n\t      if (!($compileNodes instanceof jqLite)) {\n\t        // jquery always rewraps, whereas we need to preserve the original selector so that we can\n\t        // modify it.\n\t        $compileNodes = jqLite($compileNodes);\n\t      }\n\t      // We can not compile top level text elements since text nodes can be merged and we will\n\t      // not be able to attach scope data to them, so we will wrap them in <span>\n\t      forEach($compileNodes, function(node, index){\n\t        if (node.nodeType == 3 /* text node */ && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n\t          $compileNodes[index] = node = jqLite(node).wrap('<span></span>').parent()[0];\n\t        }\n\t      });\n\t      var compositeLinkFn =\n\t              compileNodes($compileNodes, transcludeFn, $compileNodes,\n\t                           maxPriority, ignoreDirective, previousCompileContext);\n\t      safeAddClass($compileNodes, 'ng-scope');\n\t      return function publicLinkFn(scope, cloneConnectFn, transcludeControllers, parentBoundTranscludeFn){\n\t        assertArg(scope, 'scope');\n\t        // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n\t        // and sometimes changes the structure of the DOM.\n\t        var $linkNode = cloneConnectFn\n\t          ? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!\n\t          : $compileNodes;\n\t\n\t        forEach(transcludeControllers, function(instance, name) {\n\t          $linkNode.data('$' + name + 'Controller', instance);\n\t        });\n\t\n\t        // Attach scope only to non-text nodes.\n\t        for(var i = 0, ii = $linkNode.length; i<ii; i++) {\n\t          var node = $linkNode[i],\n\t              nodeType = node.nodeType;\n\t          if (nodeType === 1 /* element */ || nodeType === 9 /* document */) {\n\t            $linkNode.eq(i).data('$scope', scope);\n\t          }\n\t        }\n\t\n\t        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n\t        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);\n\t        return $linkNode;\n\t      };\n\t    }\n\t\n\t    function safeAddClass($element, className) {\n\t      try {\n\t        $element.addClass(className);\n\t      } catch(e) {\n\t        // ignore, since it means that we are trying to set class on\n\t        // SVG element, where class name is read-only.\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Compile function matches each node in nodeList against the directives. Once all directives\n\t     * for a particular node are collected their compile functions are executed. The compile\n\t     * functions return values - the linking functions - are combined into a composite linking\n\t     * function, which is the a linking function for the node.\n\t     *\n\t     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n\t     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n\t     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n\t     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then\n\t     *        the rootElement must be set the jqLite collection of the compile root. This is\n\t     *        needed so that the jqLite collection items can be replaced with widgets.\n\t     * @param {number=} maxPriority Max directive priority.\n\t     * @returns {Function} A composite linking function of all of the matched directives or null.\n\t     */\n\t    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,\n\t                            previousCompileContext) {\n\t      var linkFns = [],\n\t          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound;\n\t\n\t      for (var i = 0; i < nodeList.length; i++) {\n\t        attrs = new Attributes();\n\t\n\t        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n\t        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,\n\t                                        ignoreDirective);\n\t\n\t        nodeLinkFn = (directives.length)\n\t            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,\n\t                                      null, [], [], previousCompileContext)\n\t            : null;\n\t\n\t        if (nodeLinkFn && nodeLinkFn.scope) {\n\t          safeAddClass(attrs.$$element, 'ng-scope');\n\t        }\n\t\n\t        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||\n\t                      !(childNodes = nodeList[i].childNodes) ||\n\t                      !childNodes.length)\n\t            ? null\n\t            : compileNodes(childNodes,\n\t                 nodeLinkFn ? (\n\t                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)\n\t                     && nodeLinkFn.transclude) : transcludeFn);\n\t\n\t        linkFns.push(nodeLinkFn, childLinkFn);\n\t        linkFnFound = linkFnFound || nodeLinkFn || childLinkFn;\n\t        //use the previous context only for the first element in the virtual group\n\t        previousCompileContext = null;\n\t      }\n\t\n\t      // return a linking function if we have found anything, null otherwise\n\t      return linkFnFound ? compositeLinkFn : null;\n\t\n\t      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {\n\t        var nodeLinkFn, childLinkFn, node, childScope, i, ii, n, childBoundTranscludeFn;\n\t\n\t        // copy nodeList so that linking doesn't break due to live list updates.\n\t        var nodeListLength = nodeList.length,\n\t            stableNodeList = new Array(nodeListLength);\n\t        for (i = 0; i < nodeListLength; i++) {\n\t          stableNodeList[i] = nodeList[i];\n\t        }\n\t\n\t        for(i = 0, n = 0, ii = linkFns.length; i < ii; n++) {\n\t          node = stableNodeList[n];\n\t          nodeLinkFn = linkFns[i++];\n\t          childLinkFn = linkFns[i++];\n\t\n\t          if (nodeLinkFn) {\n\t            if (nodeLinkFn.scope) {\n\t              childScope = scope.$new();\n\t              jqLite.data(node, '$scope', childScope);\n\t            } else {\n\t              childScope = scope;\n\t            }\n\t\n\t            if ( nodeLinkFn.transcludeOnThisElement ) {\n\t              childBoundTranscludeFn = createBoundTranscludeFn(scope, nodeLinkFn.transclude, parentBoundTranscludeFn);\n\t\n\t            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {\n\t              childBoundTranscludeFn = parentBoundTranscludeFn;\n\t\n\t            } else if (!parentBoundTranscludeFn && transcludeFn) {\n\t              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);\n\t\n\t            } else {\n\t              childBoundTranscludeFn = null;\n\t            }\n\t\n\t            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);\n\t\n\t          } else if (childLinkFn) {\n\t            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {\n\t\n\t      var boundTranscludeFn = function(transcludedScope, cloneFn, controllers) {\n\t        var scopeCreated = false;\n\t\n\t        if (!transcludedScope) {\n\t          transcludedScope = scope.$new();\n\t          transcludedScope.$$transcluded = true;\n\t          scopeCreated = true;\n\t        }\n\t\n\t        var clone = transcludeFn(transcludedScope, cloneFn, controllers, previousBoundTranscludeFn);\n\t        if (scopeCreated) {\n\t          clone.on('$destroy', function() { transcludedScope.$destroy(); });\n\t        }\n\t        return clone;\n\t      };\n\t\n\t      return boundTranscludeFn;\n\t    }\n\t\n\t    /**\n\t     * Looks for directives on the given node and adds them to the directive collection which is\n\t     * sorted.\n\t     *\n\t     * @param node Node to search.\n\t     * @param directives An array to which the directives are added to. This array is sorted before\n\t     *        the function returns.\n\t     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n\t     * @param {number=} maxPriority Max directive priority.\n\t     */\n\t    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\n\t      var nodeType = node.nodeType,\n\t          attrsMap = attrs.$attr,\n\t          match,\n\t          className;\n\t\n\t      switch(nodeType) {\n\t        case 1: /* Element */\n\t          // use the node name: <directive>\n\t          addDirective(directives,\n\t              directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority, ignoreDirective);\n\t\n\t          // iterate over the attributes\n\t          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,\n\t                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n\t            var attrStartName = false;\n\t            var attrEndName = false;\n\t\n\t            attr = nAttrs[j];\n\t            if (!msie || msie >= 8 || attr.specified) {\n\t              name = attr.name;\n\t              value = trim(attr.value);\n\t\n\t              // support ngAttr attribute binding\n\t              ngAttrName = directiveNormalize(name);\n\t              if (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) {\n\t                name = snake_case(ngAttrName.substr(6), '-');\n\t              }\n\t\n\t              var directiveNName = ngAttrName.replace(/(Start|End)$/, '');\n\t              if (ngAttrName === directiveNName + 'Start') {\n\t                attrStartName = name;\n\t                attrEndName = name.substr(0, name.length - 5) + 'end';\n\t                name = name.substr(0, name.length - 6);\n\t              }\n\t\n\t              nName = directiveNormalize(name.toLowerCase());\n\t              attrsMap[nName] = name;\n\t              if (isNgAttr || !attrs.hasOwnProperty(nName)) {\n\t                  attrs[nName] = value;\n\t                  if (getBooleanAttrName(node, nName)) {\n\t                    attrs[nName] = true; // presence means true\n\t                  }\n\t              }\n\t              addAttrInterpolateDirective(node, directives, value, nName);\n\t              addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,\n\t                            attrEndName);\n\t            }\n\t          }\n\t\n\t          // use class as directive\n\t          className = node.className;\n\t          if (isString(className) && className !== '') {\n\t            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n\t              nName = directiveNormalize(match[2]);\n\t              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {\n\t                attrs[nName] = trim(match[3]);\n\t              }\n\t              className = className.substr(match.index + match[0].length);\n\t            }\n\t          }\n\t          break;\n\t        case 3: /* Text Node */\n\t          if (msie === 11) {\n\t            // Workaround for #11781\n\t            while (node.parentNode && node.nextSibling && node.nextSibling.nodeType === 3 /* Text Node */) {\n\t              node.nodeValue = node.nodeValue + node.nextSibling.nodeValue;\n\t              node.parentNode.removeChild(node.nextSibling);\n\t            }\n\t          }\n\t          addTextInterpolateDirective(directives, node.nodeValue);\n\t          break;\n\t        case 8: /* Comment */\n\t          try {\n\t            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n\t            if (match) {\n\t              nName = directiveNormalize(match[1]);\n\t              if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {\n\t                attrs[nName] = trim(match[2]);\n\t              }\n\t            }\n\t          } catch (e) {\n\t            // turns out that under some circumstances IE9 throws errors when one attempts to read\n\t            // comment's node value.\n\t            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n\t          }\n\t          break;\n\t      }\n\t\n\t      directives.sort(byPriority);\n\t      return directives;\n\t    }\n\t\n\t    /**\n\t     * Given a node with an directive-start it collects all of the siblings until it finds\n\t     * directive-end.\n\t     * @param node\n\t     * @param attrStart\n\t     * @param attrEnd\n\t     * @returns {*}\n\t     */\n\t    function groupScan(node, attrStart, attrEnd) {\n\t      var nodes = [];\n\t      var depth = 0;\n\t      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {\n\t        var startNode = node;\n\t        do {\n\t          if (!node) {\n\t            throw $compileMinErr('uterdir',\n\t                      \"Unterminated attribute, found '{0}' but no matching '{1}' found.\",\n\t                      attrStart, attrEnd);\n\t          }\n\t          if (node.nodeType == 1 /** Element **/) {\n\t            if (node.hasAttribute(attrStart)) depth++;\n\t            if (node.hasAttribute(attrEnd)) depth--;\n\t          }\n\t          nodes.push(node);\n\t          node = node.nextSibling;\n\t        } while (depth > 0);\n\t      } else {\n\t        nodes.push(node);\n\t      }\n\t\n\t      return jqLite(nodes);\n\t    }\n\t\n\t    /**\n\t     * Wrapper for linking function which converts normal linking function into a grouped\n\t     * linking function.\n\t     * @param linkFn\n\t     * @param attrStart\n\t     * @param attrEnd\n\t     * @returns {Function}\n\t     */\n\t    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {\n\t      return function(scope, element, attrs, controllers, transcludeFn) {\n\t        element = groupScan(element[0], attrStart, attrEnd);\n\t        return linkFn(scope, element, attrs, controllers, transcludeFn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Once the directives have been collected, their compile functions are executed. This method\n\t     * is responsible for inlining directive templates as well as terminating the application\n\t     * of the directives if the terminal directive has been reached.\n\t     *\n\t     * @param {Array} directives Array of collected directives to execute their compile function.\n\t     *        this needs to be pre-sorted by priority order.\n\t     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n\t     * @param {Object} templateAttrs The shared attribute function\n\t     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n\t     *                                                  scope argument is auto-generated to the new\n\t     *                                                  child of the transcluded parent scope.\n\t     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n\t     *                              argument has the root jqLite array so that we can replace nodes\n\t     *                              on it.\n\t     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when\n\t     *                                           compiling the transclusion.\n\t     * @param {Array.<Function>} preLinkFns\n\t     * @param {Array.<Function>} postLinkFns\n\t     * @param {Object} previousCompileContext Context used for previous compilation of the current\n\t     *                                        node\n\t     * @returns {Function} linkFn\n\t     */\n\t    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,\n\t                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,\n\t                                   previousCompileContext) {\n\t      previousCompileContext = previousCompileContext || {};\n\t\n\t      var terminalPriority = -Number.MAX_VALUE,\n\t          newScopeDirective,\n\t          controllerDirectives = previousCompileContext.controllerDirectives,\n\t          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,\n\t          templateDirective = previousCompileContext.templateDirective,\n\t          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,\n\t          hasTranscludeDirective = false,\n\t          hasTemplate = false,\n\t          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,\n\t          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n\t          directive,\n\t          directiveName,\n\t          $template,\n\t          replaceDirective = originalReplaceDirective,\n\t          childTranscludeFn = transcludeFn,\n\t          linkFn,\n\t          directiveValue;\n\t\n\t      // executes all directives on the current element\n\t      for(var i = 0, ii = directives.length; i < ii; i++) {\n\t        directive = directives[i];\n\t        var attrStart = directive.$$start;\n\t        var attrEnd = directive.$$end;\n\t\n\t        // collect multiblock sections\n\t        if (attrStart) {\n\t          $compileNode = groupScan(compileNode, attrStart, attrEnd);\n\t        }\n\t        $template = undefined;\n\t\n\t        if (terminalPriority > directive.priority) {\n\t          break; // prevent further processing of directives\n\t        }\n\t\n\t        if (directiveValue = directive.scope) {\n\t          newScopeDirective = newScopeDirective || directive;\n\t\n\t          // skip the check for directives with async templates, we'll check the derived sync\n\t          // directive when the template arrives\n\t          if (!directive.templateUrl) {\n\t            assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,\n\t                              $compileNode);\n\t            if (isObject(directiveValue)) {\n\t              newIsolateScopeDirective = directive;\n\t            }\n\t          }\n\t        }\n\t\n\t        directiveName = directive.name;\n\t\n\t        if (!directive.templateUrl && directive.controller) {\n\t          directiveValue = directive.controller;\n\t          controllerDirectives = controllerDirectives || {};\n\t          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n\t              controllerDirectives[directiveName], directive, $compileNode);\n\t          controllerDirectives[directiveName] = directive;\n\t        }\n\t\n\t        if (directiveValue = directive.transclude) {\n\t          hasTranscludeDirective = true;\n\t\n\t          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.\n\t          // This option should only be used by directives that know how to safely handle element transclusion,\n\t          // where the transcluded nodes are added or replaced after linking.\n\t          if (!directive.$$tlb) {\n\t            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);\n\t            nonTlbTranscludeDirective = directive;\n\t          }\n\t\n\t          if (directiveValue == 'element') {\n\t            hasElementTranscludeDirective = true;\n\t            terminalPriority = directive.priority;\n\t            $template = $compileNode;\n\t            $compileNode = templateAttrs.$$element =\n\t                jqLite(document.createComment(' ' + directiveName + ': ' +\n\t                                              templateAttrs[directiveName] + ' '));\n\t            compileNode = $compileNode[0];\n\t            replaceWith(jqCollection, sliceArgs($template), compileNode);\n\t\n\t            childTranscludeFn = compile($template, transcludeFn, terminalPriority,\n\t                                        replaceDirective && replaceDirective.name, {\n\t                                          // Don't pass in:\n\t                                          // - controllerDirectives - otherwise we'll create duplicates controllers\n\t                                          // - newIsolateScopeDirective or templateDirective - combining templates with\n\t                                          //   element transclusion doesn't make sense.\n\t                                          //\n\t                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion\n\t                                          // on the same element more than once.\n\t                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective\n\t                                        });\n\t          } else {\n\t            $template = jqLite(jqLiteClone(compileNode)).contents();\n\t            $compileNode.empty(); // clear contents\n\t            childTranscludeFn = compile($template, transcludeFn);\n\t          }\n\t        }\n\t\n\t        if (directive.template) {\n\t          hasTemplate = true;\n\t          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n\t          templateDirective = directive;\n\t\n\t          directiveValue = (isFunction(directive.template))\n\t              ? directive.template($compileNode, templateAttrs)\n\t              : directive.template;\n\t\n\t          directiveValue = denormalizeTemplate(directiveValue);\n\t\n\t          if (directive.replace) {\n\t            replaceDirective = directive;\n\t            if (jqLiteIsTextNode(directiveValue)) {\n\t              $template = [];\n\t            } else {\n\t              $template = jqLite(trim(directiveValue));\n\t            }\n\t            compileNode = $template[0];\n\t\n\t            if ($template.length != 1 || compileNode.nodeType !== 1) {\n\t              throw $compileMinErr('tplrt',\n\t                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n\t                  directiveName, '');\n\t            }\n\t\n\t            replaceWith(jqCollection, $compileNode, compileNode);\n\t\n\t            var newTemplateAttrs = {$attr: {}};\n\t\n\t            // combine directives from the original node and from the template:\n\t            // - take the array of directives for this element\n\t            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)\n\t            // - collect directives from the template and sort them by priority\n\t            // - combine directives as: processed + template + unprocessed\n\t            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);\n\t            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));\n\t\n\t            if (newIsolateScopeDirective) {\n\t              markDirectivesAsIsolate(templateDirectives);\n\t            }\n\t            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);\n\t            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\t\n\t            ii = directives.length;\n\t          } else {\n\t            $compileNode.html(directiveValue);\n\t          }\n\t        }\n\t\n\t        if (directive.templateUrl) {\n\t          hasTemplate = true;\n\t          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n\t          templateDirective = directive;\n\t\n\t          if (directive.replace) {\n\t            replaceDirective = directive;\n\t          }\n\t\n\t          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,\n\t              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {\n\t                controllerDirectives: controllerDirectives,\n\t                newIsolateScopeDirective: newIsolateScopeDirective,\n\t                templateDirective: templateDirective,\n\t                nonTlbTranscludeDirective: nonTlbTranscludeDirective\n\t              });\n\t          ii = directives.length;\n\t        } else if (directive.compile) {\n\t          try {\n\t            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n\t            if (isFunction(linkFn)) {\n\t              addLinkFns(null, linkFn, attrStart, attrEnd);\n\t            } else if (linkFn) {\n\t              addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd);\n\t            }\n\t          } catch (e) {\n\t            $exceptionHandler(e, startingTag($compileNode));\n\t          }\n\t        }\n\t\n\t        if (directive.terminal) {\n\t          nodeLinkFn.terminal = true;\n\t          terminalPriority = Math.max(terminalPriority, directive.priority);\n\t        }\n\t\n\t      }\n\t\n\t      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;\n\t      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;\n\t      nodeLinkFn.templateOnThisElement = hasTemplate;\n\t      nodeLinkFn.transclude = childTranscludeFn;\n\t\n\t      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;\n\t\n\t      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n\t      return nodeLinkFn;\n\t\n\t      ////////////////////\n\t\n\t      function addLinkFns(pre, post, attrStart, attrEnd) {\n\t        if (pre) {\n\t          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);\n\t          pre.require = directive.require;\n\t          pre.directiveName = directiveName;\n\t          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n\t            pre = cloneAndAnnotateFn(pre, {isolateScope: true});\n\t          }\n\t          preLinkFns.push(pre);\n\t        }\n\t        if (post) {\n\t          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);\n\t          post.require = directive.require;\n\t          post.directiveName = directiveName;\n\t          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n\t            post = cloneAndAnnotateFn(post, {isolateScope: true});\n\t          }\n\t          postLinkFns.push(post);\n\t        }\n\t      }\n\t\n\t\n\t      function getControllers(directiveName, require, $element, elementControllers) {\n\t        var value, retrievalMethod = 'data', optional = false;\n\t        if (isString(require)) {\n\t          while((value = require.charAt(0)) == '^' || value == '?') {\n\t            require = require.substr(1);\n\t            if (value == '^') {\n\t              retrievalMethod = 'inheritedData';\n\t            }\n\t            optional = optional || value == '?';\n\t          }\n\t          value = null;\n\t\n\t          if (elementControllers && retrievalMethod === 'data') {\n\t            value = elementControllers[require];\n\t          }\n\t          value = value || $element[retrievalMethod]('$' + require + 'Controller');\n\t\n\t          if (!value && !optional) {\n\t            throw $compileMinErr('ctreq',\n\t                \"Controller '{0}', required by directive '{1}', can't be found!\",\n\t                require, directiveName);\n\t          }\n\t          return value;\n\t        } else if (isArray(require)) {\n\t          value = [];\n\t          forEach(require, function(require) {\n\t            value.push(getControllers(directiveName, require, $element, elementControllers));\n\t          });\n\t        }\n\t        return value;\n\t      }\n\t\n\t\n\t      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n\t        var attrs, $element, i, ii, linkFn, controller, isolateScope, elementControllers = {}, transcludeFn;\n\t\n\t        attrs = (compileNode === linkNode)\n\t          ? templateAttrs\n\t          : shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));\n\t        $element = attrs.$$element;\n\t\n\t        if (newIsolateScopeDirective) {\n\t          var LOCAL_REGEXP = /^\\s*([@=&])(\\??)\\s*(\\w*)\\s*$/;\n\t\n\t          isolateScope = scope.$new(true);\n\t\n\t          if (templateDirective && (templateDirective === newIsolateScopeDirective ||\n\t              templateDirective === newIsolateScopeDirective.$$originalDirective)) {\n\t            $element.data('$isolateScope', isolateScope);\n\t          } else {\n\t            $element.data('$isolateScopeNoTemplate', isolateScope);\n\t          }\n\t\n\t\n\t\n\t          safeAddClass($element, 'ng-isolate-scope');\n\t\n\t          forEach(newIsolateScopeDirective.scope, function(definition, scopeName) {\n\t            var match = definition.match(LOCAL_REGEXP) || [],\n\t                attrName = match[3] || scopeName,\n\t                optional = (match[2] == '?'),\n\t                mode = match[1], // @, =, or &\n\t                lastValue,\n\t                parentGet, parentSet, compare;\n\t\n\t            isolateScope.$$isolateBindings[scopeName] = mode + attrName;\n\t\n\t            switch (mode) {\n\t\n\t              case '@':\n\t                attrs.$observe(attrName, function(value) {\n\t                  isolateScope[scopeName] = value;\n\t                });\n\t                attrs.$$observers[attrName].$$scope = scope;\n\t                if( attrs[attrName] ) {\n\t                  // If the attribute has been provided then we trigger an interpolation to ensure\n\t                  // the value is there for use in the link fn\n\t                  isolateScope[scopeName] = $interpolate(attrs[attrName])(scope);\n\t                }\n\t                break;\n\t\n\t              case '=':\n\t                if (optional && !attrs[attrName]) {\n\t                  return;\n\t                }\n\t                parentGet = $parse(attrs[attrName]);\n\t                if (parentGet.literal) {\n\t                  compare = equals;\n\t                } else {\n\t                  compare = function(a,b) { return a === b || (a !== a && b !== b); };\n\t                }\n\t                parentSet = parentGet.assign || function() {\n\t                  // reset the change, or we will throw this exception on every $digest\n\t                  lastValue = isolateScope[scopeName] = parentGet(scope);\n\t                  throw $compileMinErr('nonassign',\n\t                      \"Expression '{0}' used with directive '{1}' is non-assignable!\",\n\t                      attrs[attrName], newIsolateScopeDirective.name);\n\t                };\n\t                lastValue = isolateScope[scopeName] = parentGet(scope);\n\t                isolateScope.$watch(function parentValueWatch() {\n\t                  var parentValue = parentGet(scope);\n\t                  if (!compare(parentValue, isolateScope[scopeName])) {\n\t                    // we are out of sync and need to copy\n\t                    if (!compare(parentValue, lastValue)) {\n\t                      // parent changed and it has precedence\n\t                      isolateScope[scopeName] = parentValue;\n\t                    } else {\n\t                      // if the parent can be assigned then do so\n\t                      parentSet(scope, parentValue = isolateScope[scopeName]);\n\t                    }\n\t                  }\n\t                  return lastValue = parentValue;\n\t                }, null, parentGet.literal);\n\t                break;\n\t\n\t              case '&':\n\t                parentGet = $parse(attrs[attrName]);\n\t                isolateScope[scopeName] = function(locals) {\n\t                  return parentGet(scope, locals);\n\t                };\n\t                break;\n\t\n\t              default:\n\t                throw $compileMinErr('iscp',\n\t                    \"Invalid isolate scope definition for directive '{0}'.\" +\n\t                    \" Definition: {... {1}: '{2}' ...}\",\n\t                    newIsolateScopeDirective.name, scopeName, definition);\n\t            }\n\t          });\n\t        }\n\t        transcludeFn = boundTranscludeFn && controllersBoundTransclude;\n\t        if (controllerDirectives) {\n\t          forEach(controllerDirectives, function(directive) {\n\t            var locals = {\n\t              $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,\n\t              $element: $element,\n\t              $attrs: attrs,\n\t              $transclude: transcludeFn\n\t            }, controllerInstance;\n\t\n\t            controller = directive.controller;\n\t            if (controller == '@') {\n\t              controller = attrs[directive.name];\n\t            }\n\t\n\t            controllerInstance = $controller(controller, locals);\n\t            // For directives with element transclusion the element is a comment,\n\t            // but jQuery .data doesn't support attaching data to comment nodes as it's hard to\n\t            // clean up (http://bugs.jquery.com/ticket/8335).\n\t            // Instead, we save the controllers for the element in a local hash and attach to .data\n\t            // later, once we have the actual element.\n\t            elementControllers[directive.name] = controllerInstance;\n\t            if (!hasElementTranscludeDirective) {\n\t              $element.data('$' + directive.name + 'Controller', controllerInstance);\n\t            }\n\t\n\t            if (directive.controllerAs) {\n\t              locals.$scope[directive.controllerAs] = controllerInstance;\n\t            }\n\t          });\n\t        }\n\t\n\t        // PRELINKING\n\t        for(i = 0, ii = preLinkFns.length; i < ii; i++) {\n\t          try {\n\t            linkFn = preLinkFns[i];\n\t            linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs,\n\t                linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);\n\t          } catch (e) {\n\t            $exceptionHandler(e, startingTag($element));\n\t          }\n\t        }\n\t\n\t        // RECURSION\n\t        // We only pass the isolate scope, if the isolate directive has a template,\n\t        // otherwise the child elements do not belong to the isolate directive.\n\t        var scopeToChild = scope;\n\t        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {\n\t          scopeToChild = isolateScope;\n\t        }\n\t        childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);\n\t\n\t        // POSTLINKING\n\t        for(i = postLinkFns.length - 1; i >= 0; i--) {\n\t          try {\n\t            linkFn = postLinkFns[i];\n\t            linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs,\n\t                linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);\n\t          } catch (e) {\n\t            $exceptionHandler(e, startingTag($element));\n\t          }\n\t        }\n\t\n\t        // This is the function that is injected as `$transclude`.\n\t        function controllersBoundTransclude(scope, cloneAttachFn) {\n\t          var transcludeControllers;\n\t\n\t          // no scope passed\n\t          if (arguments.length < 2) {\n\t            cloneAttachFn = scope;\n\t            scope = undefined;\n\t          }\n\t\n\t          if (hasElementTranscludeDirective) {\n\t            transcludeControllers = elementControllers;\n\t          }\n\t\n\t          return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers);\n\t        }\n\t      }\n\t    }\n\t\n\t    function markDirectivesAsIsolate(directives) {\n\t      // mark all directives as needing isolate scope.\n\t      for (var j = 0, jj = directives.length; j < jj; j++) {\n\t        directives[j] = inherit(directives[j], {$$isolateScope: true});\n\t      }\n\t    }\n\t\n\t    /**\n\t     * looks up the directive and decorates it with exception handling and proper parameters. We\n\t     * call this the boundDirective.\n\t     *\n\t     * @param {string} name name of the directive to look up.\n\t     * @param {string} location The directive must be found in specific format.\n\t     *   String containing any of theses characters:\n\t     *\n\t     *   * `E`: element name\n\t     *   * `A': attribute\n\t     *   * `C`: class\n\t     *   * `M`: comment\n\t     * @returns {boolean} true if directive was added.\n\t     */\n\t    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,\n\t                          endAttrName) {\n\t      if (name === ignoreDirective) return null;\n\t      var match = null;\n\t      if (hasDirectives.hasOwnProperty(name)) {\n\t        for(var directive, directives = $injector.get(name + Suffix),\n\t            i = 0, ii = directives.length; i<ii; i++) {\n\t          try {\n\t            directive = directives[i];\n\t            if ( (maxPriority === undefined || maxPriority > directive.priority) &&\n\t                 directive.restrict.indexOf(location) != -1) {\n\t              if (startAttrName) {\n\t                directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});\n\t              }\n\t              tDirectives.push(directive);\n\t              match = directive;\n\t            }\n\t          } catch(e) { $exceptionHandler(e); }\n\t        }\n\t      }\n\t      return match;\n\t    }\n\t\n\t\n\t    /**\n\t     * When the element is replaced with HTML template then the new attributes\n\t     * on the template need to be merged with the existing attributes in the DOM.\n\t     * The desired effect is to have both of the attributes present.\n\t     *\n\t     * @param {object} dst destination attributes (original DOM)\n\t     * @param {object} src source attributes (from the directive template)\n\t     */\n\t    function mergeTemplateAttributes(dst, src) {\n\t      var srcAttr = src.$attr,\n\t          dstAttr = dst.$attr,\n\t          $element = dst.$$element;\n\t\n\t      // reapply the old attributes to the new element\n\t      forEach(dst, function(value, key) {\n\t        if (key.charAt(0) != '$') {\n\t          if (src[key] && src[key] !== value) {\n\t            value += (key === 'style' ? ';' : ' ') + src[key];\n\t          }\n\t          dst.$set(key, value, true, srcAttr[key]);\n\t        }\n\t      });\n\t\n\t      // copy the new attributes on the old attrs object\n\t      forEach(src, function(value, key) {\n\t        if (key == 'class') {\n\t          safeAddClass($element, value);\n\t          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n\t        } else if (key == 'style') {\n\t          $element.attr('style', $element.attr('style') + ';' + value);\n\t          dst['style'] = (dst['style'] ? dst['style'] + ';' : '') + value;\n\t          // `dst` will never contain hasOwnProperty as DOM parser won't let it.\n\t          // You will get an \"InvalidCharacterError: DOM Exception 5\" error if you\n\t          // have an attribute like \"has-own-property\" or \"data-has-own-property\", etc.\n\t        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n\t          dst[key] = value;\n\t          dstAttr[key] = srcAttr[key];\n\t        }\n\t      });\n\t    }\n\t\n\t\n\t    function compileTemplateUrl(directives, $compileNode, tAttrs,\n\t        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {\n\t      var linkQueue = [],\n\t          afterTemplateNodeLinkFn,\n\t          afterTemplateChildLinkFn,\n\t          beforeTemplateCompileNode = $compileNode[0],\n\t          origAsyncDirective = directives.shift(),\n\t          // The fact that we have to copy and patch the directive seems wrong!\n\t          derivedSyncDirective = extend({}, origAsyncDirective, {\n\t            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective\n\t          }),\n\t          templateUrl = (isFunction(origAsyncDirective.templateUrl))\n\t              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\n\t              : origAsyncDirective.templateUrl;\n\t\n\t      $compileNode.empty();\n\t\n\t      $http.get($sce.getTrustedResourceUrl(templateUrl), {cache: $templateCache}).\n\t        success(function(content) {\n\t          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;\n\t\n\t          content = denormalizeTemplate(content);\n\t\n\t          if (origAsyncDirective.replace) {\n\t            if (jqLiteIsTextNode(content)) {\n\t              $template = [];\n\t            } else {\n\t              $template = jqLite(trim(content));\n\t            }\n\t            compileNode = $template[0];\n\t\n\t            if ($template.length != 1 || compileNode.nodeType !== 1) {\n\t              throw $compileMinErr('tplrt',\n\t                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n\t                  origAsyncDirective.name, templateUrl);\n\t            }\n\t\n\t            tempTemplateAttrs = {$attr: {}};\n\t            replaceWith($rootElement, $compileNode, compileNode);\n\t            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);\n\t\n\t            if (isObject(origAsyncDirective.scope)) {\n\t              markDirectivesAsIsolate(templateDirectives);\n\t            }\n\t            directives = templateDirectives.concat(directives);\n\t            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n\t          } else {\n\t            compileNode = beforeTemplateCompileNode;\n\t            $compileNode.html(content);\n\t          }\n\t\n\t          directives.unshift(derivedSyncDirective);\n\t\n\t          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,\n\t              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,\n\t              previousCompileContext);\n\t          forEach($rootElement, function(node, i) {\n\t            if (node == compileNode) {\n\t              $rootElement[i] = $compileNode[0];\n\t            }\n\t          });\n\t          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\t\n\t          while(linkQueue.length) {\n\t            var scope = linkQueue.shift(),\n\t                beforeTemplateLinkNode = linkQueue.shift(),\n\t                linkRootElement = linkQueue.shift(),\n\t                boundTranscludeFn = linkQueue.shift(),\n\t                linkNode = $compileNode[0];\n\t\n\t            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n\t              var oldClasses = beforeTemplateLinkNode.className;\n\t\n\t              if (!(previousCompileContext.hasElementTranscludeDirective &&\n\t                  origAsyncDirective.replace)) {\n\t                // it was cloned therefore we have to clone as well.\n\t                linkNode = jqLiteClone(compileNode);\n\t              }\n\t\n\t              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n\t\n\t              // Copy in CSS classes from original node\n\t              safeAddClass(jqLite(linkNode), oldClasses);\n\t            }\n\t            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n\t              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n\t            } else {\n\t              childBoundTranscludeFn = boundTranscludeFn;\n\t            }\n\t            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,\n\t              childBoundTranscludeFn);\n\t          }\n\t          linkQueue = null;\n\t        }).\n\t        error(function(response, code, headers, config) {\n\t          throw $compileMinErr('tpload', 'Failed to load template: {0}', config.url);\n\t        });\n\t\n\t      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {\n\t        var childBoundTranscludeFn = boundTranscludeFn;\n\t        if (linkQueue) {\n\t          linkQueue.push(scope);\n\t          linkQueue.push(node);\n\t          linkQueue.push(rootElement);\n\t          linkQueue.push(childBoundTranscludeFn);\n\t        } else {\n\t          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n\t            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n\t          }\n\t          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);\n\t        }\n\t      };\n\t    }\n\t\n\t\n\t    /**\n\t     * Sorting function for bound directives.\n\t     */\n\t    function byPriority(a, b) {\n\t      var diff = b.priority - a.priority;\n\t      if (diff !== 0) return diff;\n\t      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;\n\t      return a.index - b.index;\n\t    }\n\t\n\t\n\t    function assertNoDuplicate(what, previousDirective, directive, element) {\n\t      if (previousDirective) {\n\t        throw $compileMinErr('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}',\n\t            previousDirective.name, directive.name, what, startingTag(element));\n\t      }\n\t    }\n\t\n\t\n\t      function addTextInterpolateDirective(directives, text) {\n\t        var interpolateFn = $interpolate(text, true);\n\t        if (interpolateFn) {\n\t          directives.push({\n\t            priority: 0,\n\t            compile: function textInterpolateCompileFn(templateNode) {\n\t              // when transcluding a template that has bindings in the root\n\t              // then we don't have a parent and should do this in the linkFn\n\t              var parent = templateNode.parent(), hasCompileParent = parent.length;\n\t              if (hasCompileParent) safeAddClass(templateNode.parent(), 'ng-binding');\n\t\n\t              return function textInterpolateLinkFn(scope, node) {\n\t                var parent = node.parent(),\n\t                  bindings = parent.data('$binding') || [];\n\t                bindings.push(interpolateFn);\n\t                parent.data('$binding', bindings);\n\t                if (!hasCompileParent) safeAddClass(parent, 'ng-binding');\n\t                scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n\t                  node[0].nodeValue = value;\n\t                });\n\t              };\n\t            }\n\t          });\n\t        }\n\t      }\n\t\n\t\n\t    function getTrustedContext(node, attrNormalizedName) {\n\t      if (attrNormalizedName == \"srcdoc\") {\n\t        return $sce.HTML;\n\t      }\n\t      var tag = nodeName_(node);\n\t      // maction[xlink:href] can source SVG.  It's not limited to <maction>.\n\t      if (attrNormalizedName == \"xlinkHref\" ||\n\t          (tag == \"FORM\" && attrNormalizedName == \"action\") ||\n\t          (tag != \"IMG\" && (attrNormalizedName == \"src\" ||\n\t                            attrNormalizedName == \"ngSrc\"))) {\n\t        return $sce.RESOURCE_URL;\n\t      }\n\t    }\n\t\n\t\n\t    function addAttrInterpolateDirective(node, directives, value, name) {\n\t      var interpolateFn = $interpolate(value, true);\n\t\n\t      // no interpolation found -> ignore\n\t      if (!interpolateFn) return;\n\t\n\t\n\t      if (name === \"multiple\" && nodeName_(node) === \"SELECT\") {\n\t        throw $compileMinErr(\"selmulti\",\n\t            \"Binding to the 'multiple' attribute is not supported. Element: {0}\",\n\t            startingTag(node));\n\t      }\n\t\n\t      directives.push({\n\t        priority: 100,\n\t        compile: function() {\n\t            return {\n\t              pre: function attrInterpolatePreLinkFn(scope, element, attr) {\n\t                var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\t\n\t                if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {\n\t                  throw $compileMinErr('nodomevents',\n\t                      \"Interpolations for HTML DOM event attributes are disallowed.  Please use the \" +\n\t                          \"ng- versions (such as ng-click instead of onclick) instead.\");\n\t                }\n\t\n\t                // we need to interpolate again, in case the attribute value has been updated\n\t                // (e.g. by another directive's compile function)\n\t                interpolateFn = $interpolate(attr[name], true, getTrustedContext(node, name));\n\t\n\t                // if attribute was updated so that there is no interpolation going on we don't want to\n\t                // register any observers\n\t                if (!interpolateFn) return;\n\t\n\t                // TODO(i): this should likely be attr.$set(name, iterpolateFn(scope) so that we reset the\n\t                // actual attr value\n\t                attr[name] = interpolateFn(scope);\n\t                ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n\t                (attr.$$observers && attr.$$observers[name].$$scope || scope).\n\t                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {\n\t                    //special case for class attribute addition + removal\n\t                    //so that class changes can tap into the animation\n\t                    //hooks provided by the $animate service. Be sure to\n\t                    //skip animations when the first digest occurs (when\n\t                    //both the new and the old values are the same) since\n\t                    //the CSS classes are the non-interpolated values\n\t                    if(name === 'class' && newValue != oldValue) {\n\t                      attr.$updateClass(newValue, oldValue);\n\t                    } else {\n\t                      attr.$set(name, newValue);\n\t                    }\n\t                  });\n\t              }\n\t            };\n\t          }\n\t      });\n\t    }\n\t\n\t\n\t    /**\n\t     * This is a special jqLite.replaceWith, which can replace items which\n\t     * have no parents, provided that the containing jqLite collection is provided.\n\t     *\n\t     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n\t     *                               in the root of the tree.\n\t     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep\n\t     *                                  the shell, but replace its DOM node reference.\n\t     * @param {Node} newNode The new DOM node.\n\t     */\n\t    function replaceWith($rootElement, elementsToRemove, newNode) {\n\t      var firstElementToRemove = elementsToRemove[0],\n\t          removeCount = elementsToRemove.length,\n\t          parent = firstElementToRemove.parentNode,\n\t          i, ii;\n\t\n\t      if ($rootElement) {\n\t        for(i = 0, ii = $rootElement.length; i < ii; i++) {\n\t          if ($rootElement[i] == firstElementToRemove) {\n\t            $rootElement[i++] = newNode;\n\t            for (var j = i, j2 = j + removeCount - 1,\n\t                     jj = $rootElement.length;\n\t                 j < jj; j++, j2++) {\n\t              if (j2 < jj) {\n\t                $rootElement[j] = $rootElement[j2];\n\t              } else {\n\t                delete $rootElement[j];\n\t              }\n\t            }\n\t            $rootElement.length -= removeCount - 1;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (parent) {\n\t        parent.replaceChild(newNode, firstElementToRemove);\n\t      }\n\t      var fragment = document.createDocumentFragment();\n\t      fragment.appendChild(firstElementToRemove);\n\t      newNode[jqLite.expando] = firstElementToRemove[jqLite.expando];\n\t      for (var k = 1, kk = elementsToRemove.length; k < kk; k++) {\n\t        var element = elementsToRemove[k];\n\t        jqLite(element).remove(); // must do this way to clean up expando\n\t        fragment.appendChild(element);\n\t        delete elementsToRemove[k];\n\t      }\n\t\n\t      elementsToRemove[0] = newNode;\n\t      elementsToRemove.length = 1;\n\t    }\n\t\n\t\n\t    function cloneAndAnnotateFn(fn, annotation) {\n\t      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);\n\t    }\n\t  }];\n\t}\n\t\n\tvar PREFIX_REGEXP = /^(x[\\:\\-_]|data[\\:\\-_])/i;\n\t/**\n\t * Converts all accepted directives format into proper directive name.\n\t * @param name Name to normalize\n\t */\n\tfunction directiveNormalize(name) {\n\t  return camelCase(name.replace(PREFIX_REGEXP, ''));\n\t}\n\t\n\t/**\n\t * @ngdoc type\n\t * @name $compile.directive.Attributes\n\t *\n\t * @description\n\t * A shared object between directive compile / linking functions which contains normalized DOM\n\t * element attributes. The values reflect current binding state `{{ }}`. The normalization is\n\t * needed since all of these are treated as equivalent in Angular:\n\t *\n\t * ```\n\t *    <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n\t * ```\n\t */\n\t\n\t/**\n\t * @ngdoc property\n\t * @name $compile.directive.Attributes#$attr\n\t *\n\t * @description\n\t * A map of DOM element attribute names to the normalized name. This is\n\t * needed to do reverse lookup from normalized name back to actual name.\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $compile.directive.Attributes#$set\n\t * @kind function\n\t *\n\t * @description\n\t * Set DOM element attribute value.\n\t *\n\t *\n\t * @param {string} name Normalized element attribute name of the property to modify. The name is\n\t *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n\t *          property to the original name.\n\t * @param {string} value Value to set the attribute to. The value can be an interpolated string.\n\t */\n\t\n\t\n\t\n\t/**\n\t * Closure compiler type information\n\t */\n\t\n\tfunction nodesetLinkingFn(\n\t  /* angular.Scope */ scope,\n\t  /* NodeList */ nodeList,\n\t  /* Element */ rootElement,\n\t  /* function(Function) */ boundTranscludeFn\n\t){}\n\t\n\tfunction directiveLinkingFn(\n\t  /* nodesetLinkingFn */ nodesetLinkingFn,\n\t  /* angular.Scope */ scope,\n\t  /* Node */ node,\n\t  /* Element */ rootElement,\n\t  /* function(Function) */ boundTranscludeFn\n\t){}\n\t\n\tfunction tokenDifference(str1, str2) {\n\t  var values = '',\n\t      tokens1 = str1.split(/\\s+/),\n\t      tokens2 = str2.split(/\\s+/);\n\t\n\t  outer:\n\t  for(var i = 0; i < tokens1.length; i++) {\n\t    var token = tokens1[i];\n\t    for(var j = 0; j < tokens2.length; j++) {\n\t      if(token == tokens2[j]) continue outer;\n\t    }\n\t    values += (values.length > 0 ? ' ' : '') + token;\n\t  }\n\t  return values;\n\t}\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $controllerProvider\n\t * @description\n\t * The {@link ng.$controller $controller service} is used by Angular to create new\n\t * controllers.\n\t *\n\t * This provider allows controller registration via the\n\t * {@link ng.$controllerProvider#register register} method.\n\t */\n\tfunction $ControllerProvider() {\n\t  var controllers = {},\n\t      CNTRL_REG = /^(\\S+)(\\s+as\\s+(\\w+))?$/;\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $controllerProvider#register\n\t   * @param {string|Object} name Controller name, or an object map of controllers where the keys are\n\t   *    the names and the values are the constructors.\n\t   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n\t   *    annotations in the array notation).\n\t   */\n\t  this.register = function(name, constructor) {\n\t    assertNotHasOwnProperty(name, 'controller');\n\t    if (isObject(name)) {\n\t      extend(controllers, name);\n\t    } else {\n\t      controllers[name] = constructor;\n\t    }\n\t  };\n\t\n\t\n\t  this.$get = ['$injector', '$window', function($injector, $window) {\n\t\n\t    /**\n\t     * @ngdoc service\n\t     * @name $controller\n\t     * @requires $injector\n\t     *\n\t     * @param {Function|string} constructor If called with a function then it's considered to be the\n\t     *    controller constructor function. Otherwise it's considered to be a string which is used\n\t     *    to retrieve the controller constructor using the following steps:\n\t     *\n\t     *    * check if a controller with given name is registered via `$controllerProvider`\n\t     *    * check if evaluating the string on the current scope returns a constructor\n\t     *    * check `window[constructor]` on the global `window` object\n\t     *\n\t     * @param {Object} locals Injection locals for Controller.\n\t     * @return {Object} Instance of given controller.\n\t     *\n\t     * @description\n\t     * `$controller` service is responsible for instantiating controllers.\n\t     *\n\t     * It's just a simple call to {@link auto.$injector $injector}, but extracted into\n\t     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).\n\t     */\n\t    return function(expression, locals) {\n\t      var instance, match, constructor, identifier;\n\t\n\t      if(isString(expression)) {\n\t        match = expression.match(CNTRL_REG),\n\t        constructor = match[1],\n\t        identifier = match[3];\n\t        expression = controllers.hasOwnProperty(constructor)\n\t            ? controllers[constructor]\n\t            : getter(locals.$scope, constructor, true) || getter($window, constructor, true);\n\t\n\t        assertArgFn(expression, constructor, true);\n\t      }\n\t\n\t      instance = $injector.instantiate(expression, locals);\n\t\n\t      if (identifier) {\n\t        if (!(locals && typeof locals.$scope === 'object')) {\n\t          throw minErr('$controller')('noscp',\n\t              \"Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.\",\n\t              constructor || expression.name, identifier);\n\t        }\n\t\n\t        locals.$scope[identifier] = instance;\n\t      }\n\t\n\t      return instance;\n\t    };\n\t  }];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $document\n\t * @requires $window\n\t *\n\t * @description\n\t * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.\n\t *\n\t * @example\n\t   <example module=\"documentExample\">\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"ExampleController\">\n\t         <p>$document title: <b ng-bind=\"title\"></b></p>\n\t         <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n\t       </div>\n\t     </file>\n\t     <file name=\"script.js\">\n\t       angular.module('documentExample', [])\n\t         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n\t           $scope.title = $document[0].title;\n\t           $scope.windowTitle = angular.element(window.document)[0].title;\n\t         }]);\n\t     </file>\n\t   </example>\n\t */\n\tfunction $DocumentProvider(){\n\t  this.$get = ['$window', function(window){\n\t    return jqLite(window.document);\n\t  }];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $exceptionHandler\n\t * @requires ng.$log\n\t *\n\t * @description\n\t * Any uncaught exception in angular expressions is delegated to this service.\n\t * The default implementation simply delegates to `$log.error` which logs it into\n\t * the browser console.\n\t *\n\t * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n\t * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n\t *\n\t * ## Example:\n\t *\n\t * ```js\n\t *   angular.module('exceptionOverride', []).factory('$exceptionHandler', function () {\n\t *     return function (exception, cause) {\n\t *       exception.message += ' (caused by \"' + cause + '\")';\n\t *       throw exception;\n\t *     };\n\t *   });\n\t * ```\n\t *\n\t * This example will override the normal action of `$exceptionHandler`, to make angular\n\t * exceptions fail hard when they happen, instead of just logging to the console.\n\t *\n\t * @param {Error} exception Exception associated with the error.\n\t * @param {string=} cause optional information about the context in which\n\t *       the error was thrown.\n\t *\n\t */\n\tfunction $ExceptionHandlerProvider() {\n\t  this.$get = ['$log', function($log) {\n\t    return function(exception, cause) {\n\t      $log.error.apply($log, arguments);\n\t    };\n\t  }];\n\t}\n\t\n\t/**\n\t * Parse headers into key value object\n\t *\n\t * @param {string} headers Raw headers as a string\n\t * @returns {Object} Parsed headers as key value object\n\t */\n\tfunction parseHeaders(headers) {\n\t  var parsed = {}, key, val, i;\n\t\n\t  if (!headers) return parsed;\n\t\n\t  forEach(headers.split('\\n'), function(line) {\n\t    i = line.indexOf(':');\n\t    key = lowercase(trim(line.substr(0, i)));\n\t    val = trim(line.substr(i + 1));\n\t\n\t    if (key) {\n\t      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t    }\n\t  });\n\t\n\t  return parsed;\n\t}\n\t\n\t\n\t/**\n\t * Returns a function that provides access to parsed headers.\n\t *\n\t * Headers are lazy parsed when first requested.\n\t * @see parseHeaders\n\t *\n\t * @param {(string|Object)} headers Headers to provide access to.\n\t * @returns {function(string=)} Returns a getter function which if called with:\n\t *\n\t *   - if called with single an argument returns a single header value or null\n\t *   - if called with no arguments returns an object containing all headers.\n\t */\n\tfunction headersGetter(headers) {\n\t  var headersObj = isObject(headers) ? headers : undefined;\n\t\n\t  return function(name) {\n\t    if (!headersObj) headersObj =  parseHeaders(headers);\n\t\n\t    if (name) {\n\t      return headersObj[lowercase(name)] || null;\n\t    }\n\t\n\t    return headersObj;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * Chain all given functions\n\t *\n\t * This function is used for both request and response transforming\n\t *\n\t * @param {*} data Data to transform.\n\t * @param {function(string=)} headers Http headers getter fn.\n\t * @param {(Function|Array.<Function>)} fns Function or an array of functions.\n\t * @returns {*} Transformed data.\n\t */\n\tfunction transformData(data, headers, fns) {\n\t  if (isFunction(fns))\n\t    return fns(data, headers);\n\t\n\t  forEach(fns, function(fn) {\n\t    data = fn(data, headers);\n\t  });\n\t\n\t  return data;\n\t}\n\t\n\t\n\tfunction isSuccess(status) {\n\t  return 200 <= status && status < 300;\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $httpProvider\n\t * @description\n\t * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.\n\t * */\n\tfunction $HttpProvider() {\n\t  var JSON_START = /^\\s*(\\[|\\{[^\\{])/,\n\t      JSON_END = /[\\}\\]]\\s*$/,\n\t      PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/,\n\t      CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': 'application/json;charset=utf-8'};\n\t\n\t  /**\n\t   * @ngdoc property\n\t   * @name $httpProvider#defaults\n\t   * @description\n\t   *\n\t   * Object containing default values for all {@link ng.$http $http} requests.\n\t   *\n\t   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\n\t   * Defaults value is `'XSRF-TOKEN'`.\n\t   *\n\t   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\n\t   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n\t   *\n\t   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.\n\t   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on\n\t   * setting default headers.\n\t   *     - **`defaults.headers.common`**\n\t   *     - **`defaults.headers.post`**\n\t   *     - **`defaults.headers.put`**\n\t   *     - **`defaults.headers.patch`**\n\t   **/\n\t  var defaults = this.defaults = {\n\t    // transform incoming response data\n\t    transformResponse: [function(data) {\n\t      if (isString(data)) {\n\t        // strip json vulnerability protection prefix\n\t        data = data.replace(PROTECTION_PREFIX, '');\n\t        if (JSON_START.test(data) && JSON_END.test(data))\n\t          data = fromJson(data);\n\t      }\n\t      return data;\n\t    }],\n\t\n\t    // transform outgoing request data\n\t    transformRequest: [function(d) {\n\t      return isObject(d) && !isFile(d) && !isBlob(d) ? toJson(d) : d;\n\t    }],\n\t\n\t    // default headers\n\t    headers: {\n\t      common: {\n\t        'Accept': 'application/json, text/plain, */*'\n\t      },\n\t      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n\t      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n\t      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)\n\t    },\n\t\n\t    xsrfCookieName: 'XSRF-TOKEN',\n\t    xsrfHeaderName: 'X-XSRF-TOKEN'\n\t  };\n\t\n\t  /**\n\t   * @ngdoc property\n\t   * @name $httpProvider#interceptors\n\t   * @description\n\t   *\n\t   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\n\t   * pre-processing of request or postprocessing of responses.\n\t   *\n\t   * These service factories are ordered by request, i.e. they are applied in the same order as the\n\t   * array, on request, but reverse order, on response.\n\t   *\n\t   * {@link ng.$http#interceptors Interceptors detailed info}\n\t   **/\n\t  var interceptorFactories = this.interceptors = [];\n\t\n\t  /**\n\t   * For historical reasons, response interceptors are ordered by the order in which\n\t   * they are applied to the response. (This is the opposite of interceptorFactories)\n\t   */\n\t  var responseInterceptorFactories = this.responseInterceptors = [];\n\t\n\t  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n\t      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\t\n\t    var defaultCache = $cacheFactory('$http');\n\t\n\t    /**\n\t     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\n\t     * The reversal is needed so that we can build up the interception chain around the\n\t     * server request.\n\t     */\n\t    var reversedInterceptors = [];\n\t\n\t    forEach(interceptorFactories, function(interceptorFactory) {\n\t      reversedInterceptors.unshift(isString(interceptorFactory)\n\t          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\n\t    });\n\t\n\t    forEach(responseInterceptorFactories, function(interceptorFactory, index) {\n\t      var responseFn = isString(interceptorFactory)\n\t          ? $injector.get(interceptorFactory)\n\t          : $injector.invoke(interceptorFactory);\n\t\n\t      /**\n\t       * Response interceptors go before \"around\" interceptors (no real reason, just\n\t       * had to pick one.) But they are already reversed, so we can't use unshift, hence\n\t       * the splice.\n\t       */\n\t      reversedInterceptors.splice(index, 0, {\n\t        response: function(response) {\n\t          return responseFn($q.when(response));\n\t        },\n\t        responseError: function(response) {\n\t          return responseFn($q.reject(response));\n\t        }\n\t      });\n\t    });\n\t\n\t\n\t    /**\n\t     * @ngdoc service\n\t     * @kind function\n\t     * @name $http\n\t     * @requires ng.$httpBackend\n\t     * @requires $cacheFactory\n\t     * @requires $rootScope\n\t     * @requires $q\n\t     * @requires $injector\n\t     *\n\t     * @description\n\t     * The `$http` service is a core Angular service that facilitates communication with the remote\n\t     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\n\t     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n\t     *\n\t     * For unit testing applications that use `$http` service, see\n\t     * {@link ngMock.$httpBackend $httpBackend mock}.\n\t     *\n\t     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n\t     * $resource} service.\n\t     *\n\t     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n\t     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n\t     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n\t     *\n\t     *\n\t     * # General usage\n\t     * The `$http` service is a function which takes a single argument — a configuration object —\n\t     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n\t     * with two $http specific methods: `success` and `error`.\n\t     *\n\t     * ```js\n\t     *   $http({method: 'GET', url: '/someUrl'}).\n\t     *     success(function(data, status, headers, config) {\n\t     *       // this callback will be called asynchronously\n\t     *       // when the response is available\n\t     *     }).\n\t     *     error(function(data, status, headers, config) {\n\t     *       // called asynchronously if an error occurs\n\t     *       // or server returns response with an error status.\n\t     *     });\n\t     * ```\n\t     *\n\t     * Since the returned value of calling the $http function is a `promise`, you can also use\n\t     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n\t     * an object representing the response. See the API signature and type info below for more\n\t     * details.\n\t     *\n\t     * A response status code between 200 and 299 is considered a success status and\n\t     * will result in the success callback being called. Note that if the response is a redirect,\n\t     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n\t     * called for such responses.\n\t     *\n\t     * # Writing Unit Tests that use $http\n\t     * When unit testing (using {@link ngMock ngMock}), it is necessary to call\n\t     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\n\t     * request using trained responses.\n\t     *\n\t     * ```\n\t     * $httpBackend.expectGET(...);\n\t     * $http.get(...);\n\t     * $httpBackend.flush();\n\t     * ```\n\t     *\n\t     * # Shortcut methods\n\t     *\n\t     * Shortcut methods are also available. All shortcut methods require passing in the URL, and\n\t     * request data must be passed in for POST/PUT requests.\n\t     *\n\t     * ```js\n\t     *   $http.get('/someUrl').success(successCallback);\n\t     *   $http.post('/someUrl', data).success(successCallback);\n\t     * ```\n\t     *\n\t     * Complete list of shortcut methods:\n\t     *\n\t     * - {@link ng.$http#get $http.get}\n\t     * - {@link ng.$http#head $http.head}\n\t     * - {@link ng.$http#post $http.post}\n\t     * - {@link ng.$http#put $http.put}\n\t     * - {@link ng.$http#delete $http.delete}\n\t     * - {@link ng.$http#jsonp $http.jsonp}\n\t     * - {@link ng.$http#patch $http.patch}\n\t     *\n\t     *\n\t     * # Setting HTTP Headers\n\t     *\n\t     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n\t     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n\t     * object, which currently contains this default configuration:\n\t     *\n\t     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n\t     *   - `Accept: application/json, text/plain, * / *`\n\t     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n\t     *   - `Content-Type: application/json`\n\t     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n\t     *   - `Content-Type: application/json`\n\t     *\n\t     * To add or overwrite these defaults, simply add or remove a property from these configuration\n\t     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n\t     * with the lowercased HTTP method name as the key, e.g.\n\t     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.\n\t     *\n\t     * The defaults can also be set at runtime via the `$http.defaults` object in the same\n\t     * fashion. For example:\n\t     *\n\t     * ```\n\t     * module.run(function($http) {\n\t     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'\n\t     * });\n\t     * ```\n\t     *\n\t     * In addition, you can supply a `headers` property in the config object passed when\n\t     * calling `$http(config)`, which overrides the defaults without changing them globally.\n\t     *\n\t     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\n\t     * Use the `headers` property, setting the desired header to `undefined`. For example:\n\t     *\n\t     * ```js\n\t     * var req = {\n\t     *  method: 'POST',\n\t     *  url: 'http://example.com',\n\t     *  headers: {\n\t     *    'Content-Type': undefined\n\t     *  },\n\t     *  data: { test: 'test' },\n\t     * }\n\t     *\n\t     * $http(req).success(function(){...}).error(function(){...});\n\t     * ```\n\t     *\n\t     * # Transforming Requests and Responses\n\t     *\n\t     * Both requests and responses can be transformed using transform functions. By default, Angular\n\t     * applies these transformations:\n\t     *\n\t     * Request transformations:\n\t     *\n\t     * - If the `data` property of the request configuration object contains an object, serialize it\n\t     *   into JSON format.\n\t     *\n\t     * Response transformations:\n\t     *\n\t     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n\t     *  - If JSON response is detected, deserialize it using a JSON parser.\n\t     *\n\t     * To globally augment or override the default transforms, modify the\n\t     * `$httpProvider.defaults.transformRequest` and `$httpProvider.defaults.transformResponse`\n\t     * properties. These properties are by default an array of transform functions, which allows you\n\t     * to `push` or `unshift` a new transformation function into the transformation chain. You can\n\t     * also decide to completely override any default transformations by assigning your\n\t     * transformation functions to these properties directly without the array wrapper.  These defaults\n\t     * are again available on the $http factory at run-time, which may be useful if you have run-time\n\t     * services you wish to be involved in your transformations.\n\t     *\n\t     * Similarly, to locally override the request/response transforms, augment the\n\t     * `transformRequest` and/or `transformResponse` properties of the configuration object passed\n\t     * into `$http`.\n\t     *\n\t     *\n\t     * # Caching\n\t     *\n\t     * To enable caching, set the request configuration `cache` property to `true` (to use default\n\t     * cache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\n\t     * When the cache is enabled, `$http` stores the response from the server in the specified\n\t     * cache. The next time the same request is made, the response is served from the cache without\n\t     * sending a request to the server.\n\t     *\n\t     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n\t     * the same way that real requests are.\n\t     *\n\t     * If there are multiple GET requests for the same URL that should be cached using the same\n\t     * cache, but the cache is not populated yet, only one request to the server will be made and\n\t     * the remaining requests will be fulfilled using the response from the first request.\n\t     *\n\t     * You can change the default cache to a new object (built with\n\t     * {@link ng.$cacheFactory `$cacheFactory`}) by updating the\n\t     * {@link ng.$http#properties_defaults `$http.defaults.cache`} property. All requests who set\n\t     * their `cache` property to `true` will now use this cache object.\n\t     *\n\t     * If you set the default cache to `false` then only requests that specify their own custom\n\t     * cache object will be cached.\n\t     *\n\t     * # Interceptors\n\t     *\n\t     * Before you start creating interceptors, be sure to understand the\n\t     * {@link ng.$q $q and deferred/promise APIs}.\n\t     *\n\t     * For purposes of global error handling, authentication, or any kind of synchronous or\n\t     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\n\t     * able to intercept requests before they are handed to the server and\n\t     * responses before they are handed over to the application code that\n\t     * initiated these requests. The interceptors leverage the {@link ng.$q\n\t     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n\t     *\n\t     * The interceptors are service factories that are registered with the `$httpProvider` by\n\t     * adding them to the `$httpProvider.interceptors` array. The factory is called and\n\t     * injected with dependencies (if specified) and returns the interceptor.\n\t     *\n\t     * There are two kinds of interceptors (and two kinds of rejection interceptors):\n\t     *\n\t     *   * `request`: interceptors get called with a http `config` object. The function is free to\n\t     *     modify the `config` object or create a new one. The function needs to return the `config`\n\t     *     object directly, or a promise containing the `config` or a new `config` object.\n\t     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or\n\t     *     resolved with a rejection.\n\t     *   * `response`: interceptors get called with http `response` object. The function is free to\n\t     *     modify the `response` object or create a new one. The function needs to return the `response`\n\t     *     object directly, or as a promise containing the `response` or a new `response` object.\n\t     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or\n\t     *     resolved with a rejection.\n\t     *\n\t     *\n\t     * ```js\n\t     *   // register the interceptor as a service\n\t     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n\t     *     return {\n\t     *       // optional method\n\t     *       'request': function(config) {\n\t     *         // do something on success\n\t     *         return config;\n\t     *       },\n\t     *\n\t     *       // optional method\n\t     *      'requestError': function(rejection) {\n\t     *         // do something on error\n\t     *         if (canRecover(rejection)) {\n\t     *           return responseOrNewPromise\n\t     *         }\n\t     *         return $q.reject(rejection);\n\t     *       },\n\t     *\n\t     *\n\t     *\n\t     *       // optional method\n\t     *       'response': function(response) {\n\t     *         // do something on success\n\t     *         return response;\n\t     *       },\n\t     *\n\t     *       // optional method\n\t     *      'responseError': function(rejection) {\n\t     *         // do something on error\n\t     *         if (canRecover(rejection)) {\n\t     *           return responseOrNewPromise\n\t     *         }\n\t     *         return $q.reject(rejection);\n\t     *       }\n\t     *     };\n\t     *   });\n\t     *\n\t     *   $httpProvider.interceptors.push('myHttpInterceptor');\n\t     *\n\t     *\n\t     *   // alternatively, register the interceptor via an anonymous factory\n\t     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n\t     *     return {\n\t     *      'request': function(config) {\n\t     *          // same as above\n\t     *       },\n\t     *\n\t     *       'response': function(response) {\n\t     *          // same as above\n\t     *       }\n\t     *     };\n\t     *   });\n\t     * ```\n\t     *\n\t     * # Response interceptors (DEPRECATED)\n\t     *\n\t     * Before you start creating interceptors, be sure to understand the\n\t     * {@link ng.$q $q and deferred/promise APIs}.\n\t     *\n\t     * For purposes of global error handling, authentication or any kind of synchronous or\n\t     * asynchronous preprocessing of received responses, it is desirable to be able to intercept\n\t     * responses for http requests before they are handed over to the application code that\n\t     * initiated these requests. The response interceptors leverage the {@link ng.$q\n\t     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.\n\t     *\n\t     * The interceptors are service factories that are registered with the $httpProvider by\n\t     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and\n\t     * injected with dependencies (if specified) and returns the interceptor  — a function that\n\t     * takes a {@link ng.$q promise} and returns the original or a new promise.\n\t     *\n\t     * ```js\n\t     *   // register the interceptor as a service\n\t     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n\t     *     return function(promise) {\n\t     *       return promise.then(function(response) {\n\t     *         // do something on success\n\t     *         return response;\n\t     *       }, function(response) {\n\t     *         // do something on error\n\t     *         if (canRecover(response)) {\n\t     *           return responseOrNewPromise\n\t     *         }\n\t     *         return $q.reject(response);\n\t     *       });\n\t     *     }\n\t     *   });\n\t     *\n\t     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');\n\t     *\n\t     *\n\t     *   // register the interceptor via an anonymous factory\n\t     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {\n\t     *     return function(promise) {\n\t     *       // same as above\n\t     *     }\n\t     *   });\n\t     * ```\n\t     *\n\t     *\n\t     * # Security Considerations\n\t     *\n\t     * When designing web applications, consider security threats from:\n\t     *\n\t     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n\t     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\t     *\n\t     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n\t     * pre-configured with strategies that address these issues, but for this to work backend server\n\t     * cooperation is required.\n\t     *\n\t     * ## JSON Vulnerability Protection\n\t     *\n\t     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n\t     * allows third party website to turn your JSON resource URL into\n\t     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\n\t     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n\t     * Angular will automatically strip the prefix before processing it as JSON.\n\t     *\n\t     * For example if your server needs to return:\n\t     * ```js\n\t     * ['one','two']\n\t     * ```\n\t     *\n\t     * which is vulnerable to attack, your server can return:\n\t     * ```js\n\t     * )]}',\n\t     * ['one','two']\n\t     * ```\n\t     *\n\t     * Angular will strip the prefix, before processing the JSON.\n\t     *\n\t     *\n\t     * ## Cross Site Request Forgery (XSRF) Protection\n\t     *\n\t     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which\n\t     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n\t     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n\t     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\n\t     * JavaScript that runs on your domain could read the cookie, your server can be assured that\n\t     * the XHR came from JavaScript running on your domain. The header will not be set for\n\t     * cross-domain requests.\n\t     *\n\t     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n\t     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n\t     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n\t     * that only JavaScript running on your domain could have sent the request. The token must be\n\t     * unique for each user and must be verifiable by the server (to prevent the JavaScript from\n\t     * making up its own tokens). We recommend that the token is a digest of your site's\n\t     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\n\t     * for added security.\n\t     *\n\t     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\n\t     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\n\t     * or the per-request config object.\n\t     *\n\t     *\n\t     * @param {object} config Object describing the request to be made and how it should be\n\t     *    processed. The object has following properties:\n\t     *\n\t     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n\t     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n\t     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned\n\t     *      to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be\n\t     *      JSONified.\n\t     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n\t     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing\n\t     *      HTTP headers to send to the server. If the return value of a function is null, the\n\t     *      header will not be sent.\n\t     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n\t     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n\t     *    - **transformRequest** –\n\t     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n\t     *      transform function or an array of such functions. The transform function takes the http\n\t     *      request body and headers and returns its transformed (typically serialized) version.\n\t     *    - **transformResponse** –\n\t     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n\t     *      transform function or an array of such functions. The transform function takes the http\n\t     *      response body and headers and returns its transformed (typically deserialized) version.\n\t     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n\t     *      GET request, otherwise if a cache instance built with\n\t     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n\t     *      caching.\n\t     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n\t     *      that should abort the request when resolved.\n\t     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n\t     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n\t     *      for more information.\n\t     *    - **responseType** - `{string}` - see\n\t     *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n\t     *\n\t     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n\t     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n\t     *   method takes two arguments a success and an error callback which will be called with a\n\t     *   response object. The `success` and `error` methods take a single argument - a function that\n\t     *   will be called when the request succeeds or fails respectively. The arguments passed into\n\t     *   these functions are destructured representation of the response object passed into the\n\t     *   `then` method. The response object has these properties:\n\t     *\n\t     *   - **data** – `{string|Object}` – The response body transformed with the transform\n\t     *     functions.\n\t     *   - **status** – `{number}` – HTTP status code of the response.\n\t     *   - **headers** – `{function([headerName])}` – Header getter function.\n\t     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n\t     *   - **statusText** – `{string}` – HTTP status text of the response.\n\t     *\n\t     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n\t     *   requests. This is primarily meant to be used for debugging purposes.\n\t     *\n\t     *\n\t     * @example\n\t<example module=\"httpExample\">\n\t<file name=\"index.html\">\n\t  <div ng-controller=\"FetchController\">\n\t    <select ng-model=\"method\">\n\t      <option>GET</option>\n\t      <option>JSONP</option>\n\t    </select>\n\t    <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n\t    <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n\t    <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n\t    <button id=\"samplejsonpbtn\"\n\t      ng-click=\"updateModel('JSONP',\n\t                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">\n\t      Sample JSONP\n\t    </button>\n\t    <button id=\"invalidjsonpbtn\"\n\t      ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">\n\t        Invalid JSONP\n\t      </button>\n\t    <pre>http status code: {{status}}</pre>\n\t    <pre>http response data: {{data}}</pre>\n\t  </div>\n\t</file>\n\t<file name=\"script.js\">\n\t  angular.module('httpExample', [])\n\t    .controller('FetchController', ['$scope', '$http', '$templateCache',\n\t      function($scope, $http, $templateCache) {\n\t        $scope.method = 'GET';\n\t        $scope.url = 'http-hello.html';\n\t\n\t        $scope.fetch = function() {\n\t          $scope.code = null;\n\t          $scope.response = null;\n\t\n\t          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n\t            success(function(data, status) {\n\t              $scope.status = status;\n\t              $scope.data = data;\n\t            }).\n\t            error(function(data, status) {\n\t              $scope.data = data || \"Request failed\";\n\t              $scope.status = status;\n\t          });\n\t        };\n\t\n\t        $scope.updateModel = function(method, url) {\n\t          $scope.method = method;\n\t          $scope.url = url;\n\t        };\n\t      }]);\n\t</file>\n\t<file name=\"http-hello.html\">\n\t  Hello, $http!\n\t</file>\n\t<file name=\"protractor.js\" type=\"protractor\">\n\t  var status = element(by.binding('status'));\n\t  var data = element(by.binding('data'));\n\t  var fetchBtn = element(by.id('fetchbtn'));\n\t  var sampleGetBtn = element(by.id('samplegetbtn'));\n\t  var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n\t  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\t\n\t  it('should make an xhr GET request', function() {\n\t    sampleGetBtn.click();\n\t    fetchBtn.click();\n\t    expect(status.getText()).toMatch('200');\n\t    expect(data.getText()).toMatch(/Hello, \\$http!/);\n\t  });\n\t\n\t// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n\t// it('should make a JSONP request to angularjs.org', function() {\n\t//   sampleJsonpBtn.click();\n\t//   fetchBtn.click();\n\t//   expect(status.getText()).toMatch('200');\n\t//   expect(data.getText()).toMatch(/Super Hero!/);\n\t// });\n\t\n\t  it('should make JSONP request to invalid URL and invoke the error handler',\n\t      function() {\n\t    invalidJsonpBtn.click();\n\t    fetchBtn.click();\n\t    expect(status.getText()).toMatch('0');\n\t    expect(data.getText()).toMatch('Request failed');\n\t  });\n\t</file>\n\t</example>\n\t     */\n\t    function $http(requestConfig) {\n\t      var config = {\n\t        method: 'get',\n\t        transformRequest: defaults.transformRequest,\n\t        transformResponse: defaults.transformResponse\n\t      };\n\t      var headers = mergeHeaders(requestConfig);\n\t\n\t      extend(config, requestConfig);\n\t      config.headers = headers;\n\t      config.method = uppercase(config.method);\n\t\n\t      var serverRequest = function(config) {\n\t        headers = config.headers;\n\t        var reqData = transformData(config.data, headersGetter(headers), config.transformRequest);\n\t\n\t        // strip content-type if data is undefined\n\t        if (isUndefined(reqData)) {\n\t          forEach(headers, function(value, header) {\n\t            if (lowercase(header) === 'content-type') {\n\t                delete headers[header];\n\t            }\n\t          });\n\t        }\n\t\n\t        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\n\t          config.withCredentials = defaults.withCredentials;\n\t        }\n\t\n\t        // send request\n\t        return sendReq(config, reqData, headers).then(transformResponse, transformResponse);\n\t      };\n\t\n\t      var chain = [serverRequest, undefined];\n\t      var promise = $q.when(config);\n\t\n\t      // apply interceptors\n\t      forEach(reversedInterceptors, function(interceptor) {\n\t        if (interceptor.request || interceptor.requestError) {\n\t          chain.unshift(interceptor.request, interceptor.requestError);\n\t        }\n\t        if (interceptor.response || interceptor.responseError) {\n\t          chain.push(interceptor.response, interceptor.responseError);\n\t        }\n\t      });\n\t\n\t      while(chain.length) {\n\t        var thenFn = chain.shift();\n\t        var rejectFn = chain.shift();\n\t\n\t        promise = promise.then(thenFn, rejectFn);\n\t      }\n\t\n\t      promise.success = function(fn) {\n\t        promise.then(function(response) {\n\t          fn(response.data, response.status, response.headers, config);\n\t        });\n\t        return promise;\n\t      };\n\t\n\t      promise.error = function(fn) {\n\t        promise.then(null, function(response) {\n\t          fn(response.data, response.status, response.headers, config);\n\t        });\n\t        return promise;\n\t      };\n\t\n\t      return promise;\n\t\n\t      function transformResponse(response) {\n\t        // make a copy since the response must be cacheable\n\t        var resp = extend({}, response, {\n\t          data: transformData(response.data, response.headers, config.transformResponse)\n\t        });\n\t        return (isSuccess(response.status))\n\t          ? resp\n\t          : $q.reject(resp);\n\t      }\n\t\n\t      function mergeHeaders(config) {\n\t        var defHeaders = defaults.headers,\n\t            reqHeaders = extend({}, config.headers),\n\t            defHeaderName, lowercaseDefHeaderName, reqHeaderName;\n\t\n\t        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);\n\t\n\t        // using for-in instead of forEach to avoid unecessary iteration after header has been found\n\t        defaultHeadersIteration:\n\t        for (defHeaderName in defHeaders) {\n\t          lowercaseDefHeaderName = lowercase(defHeaderName);\n\t\n\t          for (reqHeaderName in reqHeaders) {\n\t            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {\n\t              continue defaultHeadersIteration;\n\t            }\n\t          }\n\t\n\t          reqHeaders[defHeaderName] = defHeaders[defHeaderName];\n\t        }\n\t\n\t        // execute if header value is a function for merged headers\n\t        execHeaders(reqHeaders);\n\t        return reqHeaders;\n\t\n\t        function execHeaders(headers) {\n\t          var headerContent;\n\t\n\t          forEach(headers, function(headerFn, header) {\n\t            if (isFunction(headerFn)) {\n\t              headerContent = headerFn();\n\t              if (headerContent != null) {\n\t                headers[header] = headerContent;\n\t              } else {\n\t                delete headers[header];\n\t              }\n\t            }\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    $http.pendingRequests = [];\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#get\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `GET` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#delete\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `DELETE` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#head\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `HEAD` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#jsonp\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `JSONP` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request.\n\t     *                     The name of the callback should be the string `JSON_CALLBACK`.\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t    createShortMethods('get', 'delete', 'head', 'jsonp');\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#post\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `POST` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {*} data Request content\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#put\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `PUT` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {*} data Request content\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $http#patch\n\t     *\n\t     * @description\n\t     * Shortcut method to perform `PATCH` request.\n\t     *\n\t     * @param {string} url Relative or absolute URL specifying the destination of the request\n\t     * @param {*} data Request content\n\t     * @param {Object=} config Optional configuration object\n\t     * @returns {HttpPromise} Future object\n\t     */\n\t    createShortMethodsWithData('post', 'put', 'patch');\n\t\n\t    /**\n\t     * @ngdoc property\n\t     * @name $http#defaults\n\t     *\n\t     * @description\n\t     * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n\t     * default headers, withCredentials as well as request and response transformations.\n\t     *\n\t     * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n\t     */\n\t    $http.defaults = defaults;\n\t\n\t\n\t    return $http;\n\t\n\t\n\t    function createShortMethods(names) {\n\t      forEach(arguments, function(name) {\n\t        $http[name] = function(url, config) {\n\t          return $http(extend(config || {}, {\n\t            method: name,\n\t            url: url\n\t          }));\n\t        };\n\t      });\n\t    }\n\t\n\t\n\t    function createShortMethodsWithData(name) {\n\t      forEach(arguments, function(name) {\n\t        $http[name] = function(url, data, config) {\n\t          return $http(extend(config || {}, {\n\t            method: name,\n\t            url: url,\n\t            data: data\n\t          }));\n\t        };\n\t      });\n\t    }\n\t\n\t\n\t    /**\n\t     * Makes the request.\n\t     *\n\t     * !!! ACCESSES CLOSURE VARS:\n\t     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\n\t     */\n\t    function sendReq(config, reqData, reqHeaders) {\n\t      var deferred = $q.defer(),\n\t          promise = deferred.promise,\n\t          cache,\n\t          cachedResp,\n\t          url = buildUrl(config.url, config.params);\n\t\n\t      $http.pendingRequests.push(config);\n\t      promise.then(removePendingReq, removePendingReq);\n\t\n\t\n\t      if ((config.cache || defaults.cache) && config.cache !== false &&\n\t          (config.method === 'GET' || config.method === 'JSONP')) {\n\t        cache = isObject(config.cache) ? config.cache\n\t              : isObject(defaults.cache) ? defaults.cache\n\t              : defaultCache;\n\t      }\n\t\n\t      if (cache) {\n\t        cachedResp = cache.get(url);\n\t        if (isDefined(cachedResp)) {\n\t          if (isPromiseLike(cachedResp)) {\n\t            // cached request has already been sent, but there is no response yet\n\t            cachedResp.then(removePendingReq, removePendingReq);\n\t            return cachedResp;\n\t          } else {\n\t            // serving from cache\n\t            if (isArray(cachedResp)) {\n\t              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);\n\t            } else {\n\t              resolvePromise(cachedResp, 200, {}, 'OK');\n\t            }\n\t          }\n\t        } else {\n\t          // put the promise for the non-transformed response into cache as a placeholder\n\t          cache.put(url, promise);\n\t        }\n\t      }\n\t\n\t\n\t      // if we won't have the response in cache, set the xsrf headers and\n\t      // send the request to the backend\n\t      if (isUndefined(cachedResp)) {\n\t        var xsrfValue = urlIsSameOrigin(config.url)\n\t            ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName]\n\t            : undefined;\n\t        if (xsrfValue) {\n\t          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\n\t        }\n\t\n\t        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n\t            config.withCredentials, config.responseType);\n\t      }\n\t\n\t      return promise;\n\t\n\t\n\t      /**\n\t       * Callback registered to $httpBackend():\n\t       *  - caches the response if desired\n\t       *  - resolves the raw $http promise\n\t       *  - calls $apply\n\t       */\n\t      function done(status, response, headersString, statusText) {\n\t        if (cache) {\n\t          if (isSuccess(status)) {\n\t            cache.put(url, [status, response, parseHeaders(headersString), statusText]);\n\t          } else {\n\t            // remove promise from the cache\n\t            cache.remove(url);\n\t          }\n\t        }\n\t\n\t        resolvePromise(response, status, headersString, statusText);\n\t        if (!$rootScope.$$phase) $rootScope.$apply();\n\t      }\n\t\n\t\n\t      /**\n\t       * Resolves the raw $http promise.\n\t       */\n\t      function resolvePromise(response, status, headers, statusText) {\n\t        // normalize internal statuses to 0\n\t        status = Math.max(status, 0);\n\t\n\t        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n\t          data: response,\n\t          status: status,\n\t          headers: headersGetter(headers),\n\t          config: config,\n\t          statusText : statusText\n\t        });\n\t      }\n\t\n\t\n\t      function removePendingReq() {\n\t        var idx = indexOf($http.pendingRequests, config);\n\t        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n\t      }\n\t    }\n\t\n\t\n\t    function buildUrl(url, params) {\n\t      if (!params) return url;\n\t      var parts = [];\n\t      forEachSorted(params, function(value, key) {\n\t        if (value === null || isUndefined(value)) return;\n\t        if (!isArray(value)) value = [value];\n\t\n\t        forEach(value, function(v) {\n\t          if (isObject(v)) {\n\t            if (isDate(v)){\n\t              v = v.toISOString();\n\t            } else {\n\t              v = toJson(v);\n\t            }\n\t          }\n\t          parts.push(encodeUriQuery(key) + '=' +\n\t                     encodeUriQuery(v));\n\t        });\n\t      });\n\t      if(parts.length > 0) {\n\t        url += ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n\t      }\n\t      return url;\n\t    }\n\t  }];\n\t}\n\t\n\tfunction createXhr(method) {\n\t    //if IE and the method is not RFC2616 compliant, or if XMLHttpRequest\n\t    //is not available, try getting an ActiveXObject. Otherwise, use XMLHttpRequest\n\t    //if it is available\n\t    if (msie <= 8 && (!method.match(/^(get|post|head|put|delete|options)$/i) ||\n\t      !window.XMLHttpRequest)) {\n\t      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n\t    } else if (window.XMLHttpRequest) {\n\t      return new window.XMLHttpRequest();\n\t    }\n\t\n\t    throw minErr('$httpBackend')('noxhr', \"This browser does not support XMLHttpRequest.\");\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $httpBackend\n\t * @requires $window\n\t * @requires $document\n\t *\n\t * @description\n\t * HTTP backend used by the {@link ng.$http service} that delegates to\n\t * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n\t *\n\t * You should never need to use this service directly, instead use the higher-level abstractions:\n\t * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n\t *\n\t * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n\t * $httpBackend} which can be trained with responses.\n\t */\n\tfunction $HttpBackendProvider() {\n\t  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n\t    return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);\n\t  }];\n\t}\n\t\n\tfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\n\t  var ABORTED = -1;\n\t\n\t  // TODO(vojta): fix the signature\n\t  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\n\t    var status;\n\t    $browser.$$incOutstandingRequestCount();\n\t    url = url || $browser.url();\n\t\n\t    if (lowercase(method) == 'jsonp') {\n\t      var callbackId = '_' + (callbacks.counter++).toString(36);\n\t      callbacks[callbackId] = function(data) {\n\t        callbacks[callbackId].data = data;\n\t        callbacks[callbackId].called = true;\n\t      };\n\t\n\t      var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n\t          callbackId, function(status, text) {\n\t        completeRequest(callback, status, callbacks[callbackId].data, \"\", text);\n\t        callbacks[callbackId] = noop;\n\t      });\n\t    } else {\n\t\n\t      var xhr = createXhr(method);\n\t\n\t      xhr.open(method, url, true);\n\t      forEach(headers, function(value, key) {\n\t        if (isDefined(value)) {\n\t            xhr.setRequestHeader(key, value);\n\t        }\n\t      });\n\t\n\t      // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\n\t      // response is in the cache. the promise api will ensure that to the app code the api is\n\t      // always async\n\t      xhr.onreadystatechange = function() {\n\t        // onreadystatechange might get called multiple times with readyState === 4 on mobile webkit caused by\n\t        // xhrs that are resolved while the app is in the background (see #5426).\n\t        // since calling completeRequest sets the `xhr` variable to null, we just check if it's not null before\n\t        // continuing\n\t        //\n\t        // we can't set xhr.onreadystatechange to undefined or delete it because that breaks IE8 (method=PATCH) and\n\t        // Safari respectively.\n\t        if (xhr && xhr.readyState == 4) {\n\t          var responseHeaders = null,\n\t              response = null,\n\t              statusText = '';\n\t\n\t          if(status !== ABORTED) {\n\t            responseHeaders = xhr.getAllResponseHeaders();\n\t\n\t            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n\t            // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\n\t            response = ('response' in xhr) ? xhr.response : xhr.responseText;\n\t          }\n\t\n\t          // Accessing statusText on an aborted xhr object will\n\t          // throw an 'c00c023f error' in IE9 and lower, don't touch it.\n\t          if (!(status === ABORTED && msie < 10)) {\n\t            statusText = xhr.statusText;\n\t          }\n\t\n\t          completeRequest(callback,\n\t              status || xhr.status,\n\t              response,\n\t              responseHeaders,\n\t              statusText);\n\t        }\n\t      };\n\t\n\t      if (withCredentials) {\n\t        xhr.withCredentials = true;\n\t      }\n\t\n\t      if (responseType) {\n\t        try {\n\t          xhr.responseType = responseType;\n\t        } catch (e) {\n\t          // WebKit added support for the json responseType value on 09/03/2013\n\t          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\n\t          // known to throw when setting the value \"json\" as the response type. Other older\n\t          // browsers implementing the responseType\n\t          //\n\t          // The json response type can be ignored if not supported, because JSON payloads are\n\t          // parsed on the client-side regardless.\n\t          if (responseType !== 'json') {\n\t            throw e;\n\t          }\n\t        }\n\t      }\n\t\n\t      xhr.send(post || null);\n\t    }\n\t\n\t    if (timeout > 0) {\n\t      var timeoutId = $browserDefer(timeoutRequest, timeout);\n\t    } else if (isPromiseLike(timeout)) {\n\t      timeout.then(timeoutRequest);\n\t    }\n\t\n\t\n\t    function timeoutRequest() {\n\t      status = ABORTED;\n\t      jsonpDone && jsonpDone();\n\t      xhr && xhr.abort();\n\t    }\n\t\n\t    function completeRequest(callback, status, response, headersString, statusText) {\n\t      // cancel timeout and subsequent timeout promise resolution\n\t      timeoutId && $browserDefer.cancel(timeoutId);\n\t      jsonpDone = xhr = null;\n\t\n\t      // fix status code when it is 0 (0 status is undocumented).\n\t      // Occurs when accessing file resources or on Android 4.1 stock browser\n\t      // while retrieving files from application cache.\n\t      if (status === 0) {\n\t        status = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;\n\t      }\n\t\n\t      // normalize IE bug (http://bugs.jquery.com/ticket/1450)\n\t      status = status === 1223 ? 204 : status;\n\t      statusText = statusText || '';\n\t\n\t      callback(status, response, headersString, statusText);\n\t      $browser.$$completeOutstandingRequest(noop);\n\t    }\n\t  };\n\t\n\t  function jsonpReq(url, callbackId, done) {\n\t    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n\t    // - fetches local scripts via XHR and evals them\n\t    // - adds and immediately removes script elements from the document\n\t    var script = rawDocument.createElement('script'), callback = null;\n\t    script.type = \"text/javascript\";\n\t    script.src = url;\n\t    script.async = true;\n\t\n\t    callback = function(event) {\n\t      removeEventListenerFn(script, \"load\", callback);\n\t      removeEventListenerFn(script, \"error\", callback);\n\t      rawDocument.body.removeChild(script);\n\t      script = null;\n\t      var status = -1;\n\t      var text = \"unknown\";\n\t\n\t      if (event) {\n\t        if (event.type === \"load\" && !callbacks[callbackId].called) {\n\t          event = { type: \"error\" };\n\t        }\n\t        text = event.type;\n\t        status = event.type === \"error\" ? 404 : 200;\n\t      }\n\t\n\t      if (done) {\n\t        done(status, text);\n\t      }\n\t    };\n\t\n\t    addEventListenerFn(script, \"load\", callback);\n\t    addEventListenerFn(script, \"error\", callback);\n\t\n\t    if (msie <= 8) {\n\t      script.onreadystatechange = function() {\n\t        if (isString(script.readyState) && /loaded|complete/.test(script.readyState)) {\n\t          script.onreadystatechange = null;\n\t          callback({\n\t            type: 'load'\n\t          });\n\t        }\n\t      };\n\t    }\n\t\n\t    rawDocument.body.appendChild(script);\n\t    return callback;\n\t  }\n\t}\n\t\n\tvar $interpolateMinErr = minErr('$interpolate');\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $interpolateProvider\n\t * @kind function\n\t *\n\t * @description\n\t *\n\t * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n\t *\n\t * @example\n\t<example module=\"customInterpolationApp\">\n\t<file name=\"index.html\">\n\t<script>\n\t  var customInterpolationApp = angular.module('customInterpolationApp', []);\n\t\n\t  customInterpolationApp.config(function($interpolateProvider) {\n\t    $interpolateProvider.startSymbol('//');\n\t    $interpolateProvider.endSymbol('//');\n\t  });\n\t\n\t\n\t  customInterpolationApp.controller('DemoController', function() {\n\t      this.label = \"This binding is brought you by // interpolation symbols.\";\n\t  });\n\t</script>\n\t<div ng-app=\"App\" ng-controller=\"DemoController as demo\">\n\t    //demo.label//\n\t</div>\n\t</file>\n\t<file name=\"protractor.js\" type=\"protractor\">\n\t  it('should interpolate binding with custom symbols', function() {\n\t    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n\t  });\n\t</file>\n\t</example>\n\t */\n\tfunction $InterpolateProvider() {\n\t  var startSymbol = '{{';\n\t  var endSymbol = '}}';\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $interpolateProvider#startSymbol\n\t   * @description\n\t   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n\t   *\n\t   * @param {string=} value new value to set the starting symbol to.\n\t   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n\t   */\n\t  this.startSymbol = function(value){\n\t    if (value) {\n\t      startSymbol = value;\n\t      return this;\n\t    } else {\n\t      return startSymbol;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $interpolateProvider#endSymbol\n\t   * @description\n\t   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\t   *\n\t   * @param {string=} value new value to set the ending symbol to.\n\t   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n\t   */\n\t  this.endSymbol = function(value){\n\t    if (value) {\n\t      endSymbol = value;\n\t      return this;\n\t    } else {\n\t      return endSymbol;\n\t    }\n\t  };\n\t\n\t\n\t  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {\n\t    var startSymbolLength = startSymbol.length,\n\t        endSymbolLength = endSymbol.length;\n\t\n\t    /**\n\t     * @ngdoc service\n\t     * @name $interpolate\n\t     * @kind function\n\t     *\n\t     * @requires $parse\n\t     * @requires $sce\n\t     *\n\t     * @description\n\t     *\n\t     * Compiles a string with markup into an interpolation function. This service is used by the\n\t     * HTML {@link ng.$compile $compile} service for data binding. See\n\t     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n\t     * interpolation markup.\n\t     *\n\t     *\n\t     * ```js\n\t     *   var $interpolate = ...; // injected\n\t     *   var exp = $interpolate('Hello {{name | uppercase}}!');\n\t     *   expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\n\t     * ```\n\t     *\n\t     *\n\t     * @param {string} text The text with markup to interpolate.\n\t     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n\t     *    embedded expression in order to return an interpolation function. Strings with no\n\t     *    embedded expression will return null for the interpolation function.\n\t     * @param {string=} trustedContext when provided, the returned function passes the interpolated\n\t     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n\t     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n\t     *    provides Strict Contextual Escaping for details.\n\t     * @returns {function(context)} an interpolation function which is used to compute the\n\t     *    interpolated string. The function has these parameters:\n\t     *\n\t     *    * `context`: an object against which any expressions embedded in the strings are evaluated\n\t     *      against.\n\t     *\n\t     */\n\t    function $interpolate(text, mustHaveExpression, trustedContext) {\n\t      var startIndex,\n\t          endIndex,\n\t          index = 0,\n\t          parts = [],\n\t          length = text.length,\n\t          hasInterpolation = false,\n\t          fn,\n\t          exp,\n\t          concat = [];\n\t\n\t      while(index < length) {\n\t        if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n\t             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {\n\t          (index != startIndex) && parts.push(text.substring(index, startIndex));\n\t          parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));\n\t          fn.exp = exp;\n\t          index = endIndex + endSymbolLength;\n\t          hasInterpolation = true;\n\t        } else {\n\t          // we did not find anything, so we have to add the remainder to the parts array\n\t          (index != length) && parts.push(text.substring(index));\n\t          index = length;\n\t        }\n\t      }\n\t\n\t      if (!(length = parts.length)) {\n\t        // we added, nothing, must have been an empty string.\n\t        parts.push('');\n\t        length = 1;\n\t      }\n\t\n\t      // Concatenating expressions makes it hard to reason about whether some combination of\n\t      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a\n\t      // single expression be used for iframe[src], object[src], etc., we ensure that the value\n\t      // that's used is assigned or constructed by some JS code somewhere that is more testable or\n\t      // make it obvious that you bound the value to some user controlled value.  This helps reduce\n\t      // the load when auditing for XSS issues.\n\t      if (trustedContext && parts.length > 1) {\n\t          throw $interpolateMinErr('noconcat',\n\t              \"Error while interpolating: {0}\\nStrict Contextual Escaping disallows \" +\n\t              \"interpolations that concatenate multiple expressions when a trusted value is \" +\n\t              \"required.  See http://docs.angularjs.org/api/ng.$sce\", text);\n\t      }\n\t\n\t      if (!mustHaveExpression  || hasInterpolation) {\n\t        concat.length = length;\n\t        fn = function(context) {\n\t          try {\n\t            for(var i = 0, ii = length, part; i<ii; i++) {\n\t              if (typeof (part = parts[i]) == 'function') {\n\t                part = part(context);\n\t                if (trustedContext) {\n\t                  part = $sce.getTrusted(trustedContext, part);\n\t                } else {\n\t                  part = $sce.valueOf(part);\n\t                }\n\t                if (part == null) { // null || undefined\n\t                  part = '';\n\t                } else {\n\t                  switch (typeof part) {\n\t                    case 'string':\n\t                    {\n\t                      break;\n\t                    }\n\t                    case 'number':\n\t                    {\n\t                      part = '' + part;\n\t                      break;\n\t                    }\n\t                    default:\n\t                    {\n\t                      part = toJson(part);\n\t                    }\n\t                  }\n\t                }\n\t              }\n\t              concat[i] = part;\n\t            }\n\t            return concat.join('');\n\t          }\n\t          catch(err) {\n\t            var newErr = $interpolateMinErr('interr', \"Can't interpolate: {0}\\n{1}\", text,\n\t                err.toString());\n\t            $exceptionHandler(newErr);\n\t          }\n\t        };\n\t        fn.exp = text;\n\t        fn.parts = parts;\n\t        return fn;\n\t      }\n\t    }\n\t\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $interpolate#startSymbol\n\t     * @description\n\t     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n\t     *\n\t     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\n\t     * the symbol.\n\t     *\n\t     * @returns {string} start symbol.\n\t     */\n\t    $interpolate.startSymbol = function() {\n\t      return startSymbol;\n\t    };\n\t\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $interpolate#endSymbol\n\t     * @description\n\t     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\t     *\n\t     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\n\t     * the symbol.\n\t     *\n\t     * @returns {string} end symbol.\n\t     */\n\t    $interpolate.endSymbol = function() {\n\t      return endSymbol;\n\t    };\n\t\n\t    return $interpolate;\n\t  }];\n\t}\n\t\n\tfunction $IntervalProvider() {\n\t  this.$get = ['$rootScope', '$window', '$q',\n\t       function($rootScope,   $window,   $q) {\n\t    var intervals = {};\n\t\n\t\n\t     /**\n\t      * @ngdoc service\n\t      * @name $interval\n\t      *\n\t      * @description\n\t      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\n\t      * milliseconds.\n\t      *\n\t      * The return value of registering an interval function is a promise. This promise will be\n\t      * notified upon each tick of the interval, and will be resolved after `count` iterations, or\n\t      * run indefinitely if `count` is not defined. The value of the notification will be the\n\t      * number of iterations that have run.\n\t      * To cancel an interval, call `$interval.cancel(promise)`.\n\t      *\n\t      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\n\t      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\n\t      * time.\n\t      *\n\t      * <div class=\"alert alert-warning\">\n\t      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished\n\t      * with them.  In particular they are not automatically destroyed when a controller's scope or a\n\t      * directive's element are destroyed.\n\t      * You should take this into consideration and make sure to always cancel the interval at the\n\t      * appropriate moment.  See the example below for more details on how and when to do this.\n\t      * </div>\n\t      *\n\t      * @param {function()} fn A function that should be called repeatedly.\n\t      * @param {number} delay Number of milliseconds between each function call.\n\t      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\n\t      *   indefinitely.\n\t      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n\t      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n\t      * @returns {promise} A promise which will be notified on each iteration.\n\t      *\n\t      * @example\n\t      * <example module=\"intervalExample\">\n\t      * <file name=\"index.html\">\n\t      *   <script>\n\t      *     angular.module('intervalExample', [])\n\t      *       .controller('ExampleController', ['$scope', '$interval',\n\t      *         function($scope, $interval) {\n\t      *           $scope.format = 'M/d/yy h:mm:ss a';\n\t      *           $scope.blood_1 = 100;\n\t      *           $scope.blood_2 = 120;\n\t      *\n\t      *           var stop;\n\t      *           $scope.fight = function() {\n\t      *             // Don't start a new fight if we are already fighting\n\t      *             if ( angular.isDefined(stop) ) return;\n\t      *\n\t      *             stop = $interval(function() {\n\t      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n\t      *                 $scope.blood_1 = $scope.blood_1 - 3;\n\t      *                 $scope.blood_2 = $scope.blood_2 - 4;\n\t      *               } else {\n\t      *                 $scope.stopFight();\n\t      *               }\n\t      *             }, 100);\n\t      *           };\n\t      *\n\t      *           $scope.stopFight = function() {\n\t      *             if (angular.isDefined(stop)) {\n\t      *               $interval.cancel(stop);\n\t      *               stop = undefined;\n\t      *             }\n\t      *           };\n\t      *\n\t      *           $scope.resetFight = function() {\n\t      *             $scope.blood_1 = 100;\n\t      *             $scope.blood_2 = 120;\n\t      *           };\n\t      *\n\t      *           $scope.$on('$destroy', function() {\n\t      *             // Make sure that the interval is destroyed too\n\t      *             $scope.stopFight();\n\t      *           });\n\t      *         }])\n\t      *       // Register the 'myCurrentTime' directive factory method.\n\t      *       // We inject $interval and dateFilter service since the factory method is DI.\n\t      *       .directive('myCurrentTime', ['$interval', 'dateFilter',\n\t      *         function($interval, dateFilter) {\n\t      *           // return the directive link function. (compile function not needed)\n\t      *           return function(scope, element, attrs) {\n\t      *             var format,  // date format\n\t      *                 stopTime; // so that we can cancel the time updates\n\t      *\n\t      *             // used to update the UI\n\t      *             function updateTime() {\n\t      *               element.text(dateFilter(new Date(), format));\n\t      *             }\n\t      *\n\t      *             // watch the expression, and update the UI on change.\n\t      *             scope.$watch(attrs.myCurrentTime, function(value) {\n\t      *               format = value;\n\t      *               updateTime();\n\t      *             });\n\t      *\n\t      *             stopTime = $interval(updateTime, 1000);\n\t      *\n\t      *             // listen on DOM destroy (removal) event, and cancel the next UI update\n\t      *             // to prevent updating time after the DOM element was removed.\n\t      *             element.bind('$destroy', function() {\n\t      *               $interval.cancel(stopTime);\n\t      *             });\n\t      *           }\n\t      *         }]);\n\t      *   </script>\n\t      *\n\t      *   <div>\n\t      *     <div ng-controller=\"ExampleController\">\n\t      *       Date format: <input ng-model=\"format\"> <hr/>\n\t      *       Current time is: <span my-current-time=\"format\"></span>\n\t      *       <hr/>\n\t      *       Blood 1 : <font color='red'>{{blood_1}}</font>\n\t      *       Blood 2 : <font color='red'>{{blood_2}}</font>\n\t      *       <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n\t      *       <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n\t      *       <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n\t      *     </div>\n\t      *   </div>\n\t      *\n\t      * </file>\n\t      * </example>\n\t      */\n\t    function interval(fn, delay, count, invokeApply) {\n\t      var setInterval = $window.setInterval,\n\t          clearInterval = $window.clearInterval,\n\t          deferred = $q.defer(),\n\t          promise = deferred.promise,\n\t          iteration = 0,\n\t          skipApply = (isDefined(invokeApply) && !invokeApply);\n\t\n\t      count = isDefined(count) ? count : 0;\n\t\n\t      promise.then(null, null, fn);\n\t\n\t      promise.$$intervalId = setInterval(function tick() {\n\t        deferred.notify(iteration++);\n\t\n\t        if (count > 0 && iteration >= count) {\n\t          deferred.resolve(iteration);\n\t          clearInterval(promise.$$intervalId);\n\t          delete intervals[promise.$$intervalId];\n\t        }\n\t\n\t        if (!skipApply) $rootScope.$apply();\n\t\n\t      }, delay);\n\t\n\t      intervals[promise.$$intervalId] = deferred;\n\t\n\t      return promise;\n\t    }\n\t\n\t\n\t     /**\n\t      * @ngdoc method\n\t      * @name $interval#cancel\n\t      *\n\t      * @description\n\t      * Cancels a task associated with the `promise`.\n\t      *\n\t      * @param {promise} promise returned by the `$interval` function.\n\t      * @returns {boolean} Returns `true` if the task was successfully canceled.\n\t      */\n\t    interval.cancel = function(promise) {\n\t      if (promise && promise.$$intervalId in intervals) {\n\t        intervals[promise.$$intervalId].reject('canceled');\n\t        $window.clearInterval(promise.$$intervalId);\n\t        delete intervals[promise.$$intervalId];\n\t        return true;\n\t      }\n\t      return false;\n\t    };\n\t\n\t    return interval;\n\t  }];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $locale\n\t *\n\t * @description\n\t * $locale service provides localization rules for various Angular components. As of right now the\n\t * only public api is:\n\t *\n\t * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n\t */\n\tfunction $LocaleProvider(){\n\t  this.$get = function() {\n\t    return {\n\t      id: 'en-us',\n\t\n\t      NUMBER_FORMATS: {\n\t        DECIMAL_SEP: '.',\n\t        GROUP_SEP: ',',\n\t        PATTERNS: [\n\t          { // Decimal Pattern\n\t            minInt: 1,\n\t            minFrac: 0,\n\t            maxFrac: 3,\n\t            posPre: '',\n\t            posSuf: '',\n\t            negPre: '-',\n\t            negSuf: '',\n\t            gSize: 3,\n\t            lgSize: 3\n\t          },{ //Currency Pattern\n\t            minInt: 1,\n\t            minFrac: 2,\n\t            maxFrac: 2,\n\t            posPre: '\\u00A4',\n\t            posSuf: '',\n\t            negPre: '(\\u00A4',\n\t            negSuf: ')',\n\t            gSize: 3,\n\t            lgSize: 3\n\t          }\n\t        ],\n\t        CURRENCY_SYM: '$'\n\t      },\n\t\n\t      DATETIME_FORMATS: {\n\t        MONTH:\n\t            'January,February,March,April,May,June,July,August,September,October,November,December'\n\t            .split(','),\n\t        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n\t        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n\t        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n\t        AMPMS: ['AM','PM'],\n\t        medium: 'MMM d, y h:mm:ss a',\n\t        short: 'M/d/yy h:mm a',\n\t        fullDate: 'EEEE, MMMM d, y',\n\t        longDate: 'MMMM d, y',\n\t        mediumDate: 'MMM d, y',\n\t        shortDate: 'M/d/yy',\n\t        mediumTime: 'h:mm:ss a',\n\t        shortTime: 'h:mm a'\n\t      },\n\t\n\t      pluralCat: function(num) {\n\t        if (num === 1) {\n\t          return 'one';\n\t        }\n\t        return 'other';\n\t      }\n\t    };\n\t  };\n\t}\n\t\n\tvar PATH_MATCH = /^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,\n\t    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\n\tvar $locationMinErr = minErr('$location');\n\t\n\t\n\t/**\n\t * Encode path using encodeUriSegment, ignoring forward slashes\n\t *\n\t * @param {string} path Path to encode\n\t * @returns {string}\n\t */\n\tfunction encodePath(path) {\n\t  var segments = path.split('/'),\n\t      i = segments.length;\n\t\n\t  while (i--) {\n\t    segments[i] = encodeUriSegment(segments[i]);\n\t  }\n\t\n\t  return segments.join('/');\n\t}\n\t\n\tfunction parseAbsoluteUrl(absoluteUrl, locationObj, appBase) {\n\t  var parsedUrl = urlResolve(absoluteUrl, appBase);\n\t\n\t  locationObj.$$protocol = parsedUrl.protocol;\n\t  locationObj.$$host = parsedUrl.hostname;\n\t  locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;\n\t}\n\t\n\t\n\tfunction parseAppUrl(relativeUrl, locationObj, appBase) {\n\t  var prefixed = (relativeUrl.charAt(0) !== '/');\n\t  if (prefixed) {\n\t    relativeUrl = '/' + relativeUrl;\n\t  }\n\t  var match = urlResolve(relativeUrl, appBase);\n\t  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?\n\t      match.pathname.substring(1) : match.pathname);\n\t  locationObj.$$search = parseKeyValue(match.search);\n\t  locationObj.$$hash = decodeURIComponent(match.hash);\n\t\n\t  // make sure path starts with '/';\n\t  if (locationObj.$$path && locationObj.$$path.charAt(0) != '/') {\n\t    locationObj.$$path = '/' + locationObj.$$path;\n\t  }\n\t}\n\t\n\t\n\t/**\n\t *\n\t * @param {string} begin\n\t * @param {string} whole\n\t * @returns {string} returns text from whole after begin or undefined if it does not begin with\n\t *                   expected string.\n\t */\n\tfunction beginsWith(begin, whole) {\n\t  if (whole.indexOf(begin) === 0) {\n\t    return whole.substr(begin.length);\n\t  }\n\t}\n\t\n\t\n\tfunction stripHash(url) {\n\t  var index = url.indexOf('#');\n\t  return index == -1 ? url : url.substr(0, index);\n\t}\n\t\n\tfunction trimEmptyHash(url) {\n\t  return url.replace(/(#.+)|#$/, '$1');\n\t}\n\t\n\t\n\tfunction stripFile(url) {\n\t  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\n\t}\n\t\n\t/* return the server only (scheme://host:port) */\n\tfunction serverBase(url) {\n\t  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\n\t}\n\t\n\t\n\t/**\n\t * LocationHtml5Url represents an url\n\t * This object is exposed as $location service when HTML5 mode is enabled and supported\n\t *\n\t * @constructor\n\t * @param {string} appBase application base URL\n\t * @param {string} basePrefix url path prefix\n\t */\n\tfunction LocationHtml5Url(appBase, basePrefix) {\n\t  this.$$html5 = true;\n\t  basePrefix = basePrefix || '';\n\t  var appBaseNoFile = stripFile(appBase);\n\t  parseAbsoluteUrl(appBase, this, appBase);\n\t\n\t\n\t  /**\n\t   * Parse given html5 (regular) url string into properties\n\t   * @param {string} newAbsoluteUrl HTML5 url\n\t   * @private\n\t   */\n\t  this.$$parse = function(url) {\n\t    var pathUrl = beginsWith(appBaseNoFile, url);\n\t    if (!isString(pathUrl)) {\n\t      throw $locationMinErr('ipthprfx', 'Invalid url \"{0}\", missing path prefix \"{1}\".', url,\n\t          appBaseNoFile);\n\t    }\n\t\n\t    parseAppUrl(pathUrl, this, appBase);\n\t\n\t    if (!this.$$path) {\n\t      this.$$path = '/';\n\t    }\n\t\n\t    this.$$compose();\n\t  };\n\t\n\t  /**\n\t   * Compose url and update `absUrl` property\n\t   * @private\n\t   */\n\t  this.$$compose = function() {\n\t    var search = toKeyValue(this.$$search),\n\t        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\t\n\t    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n\t    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\n\t  };\n\t\n\t  this.$$parseLinkUrl = function(url, relHref) {\n\t    var appUrl, prevAppUrl;\n\t    var rewrittenUrl;\n\t\n\t    if ( (appUrl = beginsWith(appBase, url)) !== undefined ) {\n\t      prevAppUrl = appUrl;\n\t      if ( (appUrl = beginsWith(basePrefix, appUrl)) !== undefined ) {\n\t        rewrittenUrl = appBaseNoFile + (beginsWith('/', appUrl) || appUrl);\n\t      } else {\n\t        rewrittenUrl = appBase + prevAppUrl;\n\t      }\n\t    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) !== undefined ) {\n\t      rewrittenUrl = appBaseNoFile + appUrl;\n\t    } else if (appBaseNoFile == url + '/') {\n\t      rewrittenUrl = appBaseNoFile;\n\t    }\n\t    if (rewrittenUrl) {\n\t      this.$$parse(rewrittenUrl);\n\t    }\n\t    return !!rewrittenUrl;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * LocationHashbangUrl represents url\n\t * This object is exposed as $location service when developer doesn't opt into html5 mode.\n\t * It also serves as the base class for html5 mode fallback on legacy browsers.\n\t *\n\t * @constructor\n\t * @param {string} appBase application base URL\n\t * @param {string} hashPrefix hashbang prefix\n\t */\n\tfunction LocationHashbangUrl(appBase, hashPrefix) {\n\t  var appBaseNoFile = stripFile(appBase);\n\t\n\t  parseAbsoluteUrl(appBase, this, appBase);\n\t\n\t\n\t  /**\n\t   * Parse given hashbang url into properties\n\t   * @param {string} url Hashbang url\n\t   * @private\n\t   */\n\t  this.$$parse = function(url) {\n\t    var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);\n\t    var withoutHashUrl = withoutBaseUrl.charAt(0) == '#'\n\t        ? beginsWith(hashPrefix, withoutBaseUrl)\n\t        : (this.$$html5)\n\t          ? withoutBaseUrl\n\t          : '';\n\t\n\t    if (!isString(withoutHashUrl)) {\n\t      throw $locationMinErr('ihshprfx', 'Invalid url \"{0}\", missing hash prefix \"{1}\".', url,\n\t          hashPrefix);\n\t    }\n\t    parseAppUrl(withoutHashUrl, this, appBase);\n\t\n\t    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);\n\t\n\t    this.$$compose();\n\t\n\t    /*\n\t     * In Windows, on an anchor node on documents loaded from\n\t     * the filesystem, the browser will return a pathname\n\t     * prefixed with the drive name ('/C:/path') when a\n\t     * pathname without a drive is set:\n\t     *  * a.setAttribute('href', '/foo')\n\t     *   * a.pathname === '/C:/foo' //true\n\t     *\n\t     * Inside of Angular, we're always using pathnames that\n\t     * do not include drive names for routing.\n\t     */\n\t    function removeWindowsDriveName (path, url, base) {\n\t      /*\n\t      Matches paths for file protocol on windows,\n\t      such as /C:/foo/bar, and captures only /foo/bar.\n\t      */\n\t      var windowsFilePathExp = /^\\/[A-Z]:(\\/.*)/;\n\t\n\t      var firstPathSegmentMatch;\n\t\n\t      //Get the relative path from the input URL.\n\t      if (url.indexOf(base) === 0) {\n\t        url = url.replace(base, '');\n\t      }\n\t\n\t      // The input URL intentionally contains a first path segment that ends with a colon.\n\t      if (windowsFilePathExp.exec(url)) {\n\t        return path;\n\t      }\n\t\n\t      firstPathSegmentMatch = windowsFilePathExp.exec(path);\n\t      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Compose hashbang url and update `absUrl` property\n\t   * @private\n\t   */\n\t  this.$$compose = function() {\n\t    var search = toKeyValue(this.$$search),\n\t        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\t\n\t    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n\t    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\n\t  };\n\t\n\t  this.$$parseLinkUrl = function(url, relHref) {\n\t    if(stripHash(appBase) == stripHash(url)) {\n\t      this.$$parse(url);\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * LocationHashbangUrl represents url\n\t * This object is exposed as $location service when html5 history api is enabled but the browser\n\t * does not support it.\n\t *\n\t * @constructor\n\t * @param {string} appBase application base URL\n\t * @param {string} hashPrefix hashbang prefix\n\t */\n\tfunction LocationHashbangInHtml5Url(appBase, hashPrefix) {\n\t  this.$$html5 = true;\n\t  LocationHashbangUrl.apply(this, arguments);\n\t\n\t  var appBaseNoFile = stripFile(appBase);\n\t\n\t  this.$$parseLinkUrl = function(url, relHref) {\n\t    var rewrittenUrl;\n\t    var appUrl;\n\t\n\t    if ( appBase == stripHash(url) ) {\n\t      rewrittenUrl = url;\n\t    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) ) {\n\t      rewrittenUrl = appBase + hashPrefix + appUrl;\n\t    } else if ( appBaseNoFile === url + '/') {\n\t      rewrittenUrl = appBaseNoFile;\n\t    }\n\t    if (rewrittenUrl) {\n\t      this.$$parse(rewrittenUrl);\n\t    }\n\t    return !!rewrittenUrl;\n\t  };\n\t\n\t  this.$$compose = function() {\n\t    var search = toKeyValue(this.$$search),\n\t        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\t\n\t    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n\t    // include hashPrefix in $$absUrl when $$url is empty so IE8 & 9 do not reload page because of removal of '#'\n\t    this.$$absUrl = appBase + hashPrefix + this.$$url;\n\t  };\n\t\n\t}\n\t\n\t\n\tLocationHashbangInHtml5Url.prototype =\n\t  LocationHashbangUrl.prototype =\n\t  LocationHtml5Url.prototype = {\n\t\n\t  /**\n\t   * Are we in html5 mode?\n\t   * @private\n\t   */\n\t  $$html5: false,\n\t\n\t  /**\n\t   * Has any change been replacing ?\n\t   * @private\n\t   */\n\t  $$replace: false,\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#absUrl\n\t   *\n\t   * @description\n\t   * This method is getter only.\n\t   *\n\t   * Return full url representation with all segments encoded according to rules specified in\n\t   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n\t   *\n\t   * @return {string} full url\n\t   */\n\t  absUrl: locationGetter('$$absUrl'),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#url\n\t   *\n\t   * @description\n\t   * This method is getter / setter.\n\t   *\n\t   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n\t   *\n\t   * Change path, search and hash, when called with parameter and return `$location`.\n\t   *\n\t   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n\t   * @return {string} url\n\t   */\n\t  url: function(url) {\n\t    if (isUndefined(url))\n\t      return this.$$url;\n\t\n\t    var match = PATH_MATCH.exec(url);\n\t    if (match[1]) this.path(decodeURIComponent(match[1]));\n\t    if (match[2] || match[1]) this.search(match[3] || '');\n\t    this.hash(match[5] || '');\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#protocol\n\t   *\n\t   * @description\n\t   * This method is getter only.\n\t   *\n\t   * Return protocol of current url.\n\t   *\n\t   * @return {string} protocol of current url\n\t   */\n\t  protocol: locationGetter('$$protocol'),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#host\n\t   *\n\t   * @description\n\t   * This method is getter only.\n\t   *\n\t   * Return host of current url.\n\t   *\n\t   * @return {string} host of current url.\n\t   */\n\t  host: locationGetter('$$host'),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#port\n\t   *\n\t   * @description\n\t   * This method is getter only.\n\t   *\n\t   * Return port of current url.\n\t   *\n\t   * @return {Number} port\n\t   */\n\t  port: locationGetter('$$port'),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#path\n\t   *\n\t   * @description\n\t   * This method is getter / setter.\n\t   *\n\t   * Return path of current url when called without any parameter.\n\t   *\n\t   * Change path when called with parameter and return `$location`.\n\t   *\n\t   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n\t   * if it is missing.\n\t   *\n\t   * @param {(string|number)=} path New path\n\t   * @return {string} path\n\t   */\n\t  path: locationGetterSetter('$$path', function(path) {\n\t    path = path !== null ? path.toString() : '';\n\t    return path.charAt(0) == '/' ? path : '/' + path;\n\t  }),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#search\n\t   *\n\t   * @description\n\t   * This method is getter / setter.\n\t   *\n\t   * Return search part (as object) of current url when called without any parameter.\n\t   *\n\t   * Change search part when called with parameter and return `$location`.\n\t   *\n\t   *\n\t   * ```js\n\t   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n\t   * var searchObject = $location.search();\n\t   * // => {foo: 'bar', baz: 'xoxo'}\n\t   *\n\t   *\n\t   * // set foo to 'yipee'\n\t   * $location.search('foo', 'yipee');\n\t   * // => $location\n\t   * ```\n\t   *\n\t   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or\n\t   * hash object.\n\t   *\n\t   * When called with a single argument the method acts as a setter, setting the `search` component\n\t   * of `$location` to the specified value.\n\t   *\n\t   * If the argument is a hash object containing an array of values, these values will be encoded\n\t   * as duplicate search parameters in the url.\n\t   *\n\t   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`\n\t   * will override only a single search property.\n\t   *\n\t   * If `paramValue` is an array, it will override the property of the `search` component of\n\t   * `$location` specified via the first argument.\n\t   *\n\t   * If `paramValue` is `null`, the property specified via the first argument will be deleted.\n\t   *\n\t   * If `paramValue` is `true`, the property specified via the first argument will be added with no\n\t   * value nor trailing equal sign.\n\t   *\n\t   * @return {Object} If called with no arguments returns the parsed `search` object. If called with\n\t   * one or more arguments returns `$location` object itself.\n\t   */\n\t  search: function(search, paramValue) {\n\t    switch (arguments.length) {\n\t      case 0:\n\t        return this.$$search;\n\t      case 1:\n\t        if (isString(search) || isNumber(search)) {\n\t          search = search.toString();\n\t          this.$$search = parseKeyValue(search);\n\t        } else if (isObject(search)) {\n\t          // remove object undefined or null properties\n\t          forEach(search, function(value, key) {\n\t            if (value == null) delete search[key];\n\t          });\n\t\n\t          this.$$search = search;\n\t        } else {\n\t          throw $locationMinErr('isrcharg',\n\t              'The first argument of the `$location#search()` call must be a string or an object.');\n\t        }\n\t        break;\n\t      default:\n\t        if (isUndefined(paramValue) || paramValue === null) {\n\t          delete this.$$search[search];\n\t        } else {\n\t          this.$$search[search] = paramValue;\n\t        }\n\t    }\n\t\n\t    this.$$compose();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#hash\n\t   *\n\t   * @description\n\t   * This method is getter / setter.\n\t   *\n\t   * Return hash fragment when called without any parameter.\n\t   *\n\t   * Change hash fragment when called with parameter and return `$location`.\n\t   *\n\t   * @param {(string|number)=} hash New hash fragment\n\t   * @return {string} hash\n\t   */\n\t  hash: locationGetterSetter('$$hash', function(hash) {\n\t    return hash !== null ? hash.toString() : '';\n\t  }),\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $location#replace\n\t   *\n\t   * @description\n\t   * If called, all changes to $location during current `$digest` will be replacing current history\n\t   * record, instead of adding new one.\n\t   */\n\t  replace: function() {\n\t    this.$$replace = true;\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction locationGetter(property) {\n\t  return function() {\n\t    return this[property];\n\t  };\n\t}\n\t\n\t\n\tfunction locationGetterSetter(property, preprocess) {\n\t  return function(value) {\n\t    if (isUndefined(value))\n\t      return this[property];\n\t\n\t    this[property] = preprocess(value);\n\t    this.$$compose();\n\t\n\t    return this;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $location\n\t *\n\t * @requires $rootElement\n\t *\n\t * @description\n\t * The $location service parses the URL in the browser address bar (based on the\n\t * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\n\t * available to your application. Changes to the URL in the address bar are reflected into\n\t * $location service and changes to $location are reflected into the browser address bar.\n\t *\n\t * **The $location service:**\n\t *\n\t * - Exposes the current URL in the browser address bar, so you can\n\t *   - Watch and observe the URL.\n\t *   - Change the URL.\n\t * - Synchronizes the URL with the browser when the user\n\t *   - Changes the address bar.\n\t *   - Clicks the back or forward button (or clicks a History link).\n\t *   - Clicks on a link.\n\t * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n\t *\n\t * For more information see {@link guide/$location Developer Guide: Using $location}\n\t */\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $locationProvider\n\t * @description\n\t * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n\t */\n\tfunction $LocationProvider(){\n\t  var hashPrefix = '',\n\t      html5Mode = false;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $locationProvider#hashPrefix\n\t   * @description\n\t   * @param {string=} prefix Prefix for hash part (containing path and search)\n\t   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n\t   */\n\t  this.hashPrefix = function(prefix) {\n\t    if (isDefined(prefix)) {\n\t      hashPrefix = prefix;\n\t      return this;\n\t    } else {\n\t      return hashPrefix;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $locationProvider#html5Mode\n\t   * @description\n\t   * @param {boolean=} mode Use HTML5 strategy if available.\n\t   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n\t   */\n\t  this.html5Mode = function(mode) {\n\t    if (isDefined(mode)) {\n\t      html5Mode = mode;\n\t      return this;\n\t    } else {\n\t      return html5Mode;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc event\n\t   * @name $location#$locationChangeStart\n\t   * @eventType broadcast on root scope\n\t   * @description\n\t   * Broadcasted before a URL will change. This change can be prevented by calling\n\t   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\n\t   * details about event object. Upon successful change\n\t   * {@link ng.$location#events_$locationChangeSuccess $locationChangeSuccess} is fired.\n\t   *\n\t   * @param {Object} angularEvent Synthetic event object.\n\t   * @param {string} newUrl New URL\n\t   * @param {string=} oldUrl URL that was before it was changed.\n\t   */\n\t\n\t  /**\n\t   * @ngdoc event\n\t   * @name $location#$locationChangeSuccess\n\t   * @eventType broadcast on root scope\n\t   * @description\n\t   * Broadcasted after a URL was changed.\n\t   *\n\t   * @param {Object} angularEvent Synthetic event object.\n\t   * @param {string} newUrl New URL\n\t   * @param {string=} oldUrl URL that was before it was changed.\n\t   */\n\t\n\t  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement',\n\t      function( $rootScope,   $browser,   $sniffer,   $rootElement) {\n\t    var $location,\n\t        LocationMode,\n\t        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''\n\t        initialUrl = $browser.url(),\n\t        appBase;\n\t\n\t    if (html5Mode) {\n\t      appBase = serverBase(initialUrl) + (baseHref || '/');\n\t      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\n\t    } else {\n\t      appBase = stripHash(initialUrl);\n\t      LocationMode = LocationHashbangUrl;\n\t    }\n\t    $location = new LocationMode(appBase, '#' + hashPrefix);\n\t    $location.$$parseLinkUrl(initialUrl, initialUrl);\n\t\n\t    var IGNORE_URI_REGEXP = /^\\s*(javascript|mailto):/i;\n\t\n\t    $rootElement.on('click', function(event) {\n\t      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n\t      // currently we open nice url link and redirect then\n\t\n\t      if (event.ctrlKey || event.metaKey || event.which == 2) return;\n\t\n\t      var elm = jqLite(event.target);\n\t\n\t      // traverse the DOM up to find first A tag\n\t      while (lowercase(elm[0].nodeName) !== 'a') {\n\t        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n\t        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n\t      }\n\t\n\t      var absHref = elm.prop('href');\n\t      // get the actual href attribute - see\n\t      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx\n\t      var relHref = elm.attr('href') || elm.attr('xlink:href');\n\t\n\t      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {\n\t        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during\n\t        // an animation.\n\t        absHref = urlResolve(absHref.animVal).href;\n\t      }\n\t\n\t      // Ignore when url is started with javascript: or mailto:\n\t      if (IGNORE_URI_REGEXP.test(absHref)) return;\n\t\n\t      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {\n\t        if ($location.$$parseLinkUrl(absHref, relHref)) {\n\t          // We do a preventDefault for all urls that are part of the angular application,\n\t          // in html5mode and also without, so that we are able to abort navigation without\n\t          // getting double entries in the location history.\n\t          event.preventDefault();\n\t          // update location manually\n\t          if ($location.absUrl() != $browser.url()) {\n\t            $rootScope.$apply();\n\t            // hack to work around FF6 bug 684208 when scenario runner clicks on links\n\t            window.angular['ff-684208-preventDefault'] = true;\n\t          }\n\t        }\n\t      }\n\t    });\n\t\n\t\n\t    // rewrite hashbang url <> html5 url\n\t    if ($location.absUrl() != initialUrl) {\n\t      $browser.url($location.absUrl(), true);\n\t    }\n\t\n\t    // update $location when $browser url changes\n\t    $browser.onUrlChange(function(newUrl) {\n\t      if ($location.absUrl() != newUrl) {\n\t        $rootScope.$evalAsync(function() {\n\t          var oldUrl = $location.absUrl();\n\t\n\t          $location.$$parse(newUrl);\n\t          if ($rootScope.$broadcast('$locationChangeStart', newUrl,\n\t                                    oldUrl).defaultPrevented) {\n\t            $location.$$parse(oldUrl);\n\t            $browser.url(oldUrl);\n\t          } else {\n\t            afterLocationChange(oldUrl);\n\t          }\n\t        });\n\t        if (!$rootScope.$$phase) $rootScope.$digest();\n\t      }\n\t    });\n\t\n\t    // update browser\n\t    var changeCounter = 0;\n\t    $rootScope.$watch(function $locationWatch() {\n\t      var oldUrl = trimEmptyHash($browser.url());\n\t      var newUrl = trimEmptyHash($location.absUrl());\n\t      var currentReplace = $location.$$replace;\n\t\n\t      if (!changeCounter || oldUrl != newUrl) {\n\t        changeCounter++;\n\t        $rootScope.$evalAsync(function() {\n\t          if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).\n\t              defaultPrevented) {\n\t            $location.$$parse(oldUrl);\n\t          } else {\n\t            $browser.url($location.absUrl(), currentReplace);\n\t            afterLocationChange(oldUrl);\n\t          }\n\t        });\n\t      }\n\t      $location.$$replace = false;\n\t\n\t      return changeCounter;\n\t    });\n\t\n\t    return $location;\n\t\n\t    function afterLocationChange(oldUrl) {\n\t      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);\n\t    }\n\t}];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $log\n\t * @requires $window\n\t *\n\t * @description\n\t * Simple service for logging. Default implementation safely writes the message\n\t * into the browser's console (if present).\n\t *\n\t * The main purpose of this service is to simplify debugging and troubleshooting.\n\t *\n\t * The default is to log `debug` messages. You can use\n\t * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.\n\t *\n\t * @example\n\t   <example module=\"logExample\">\n\t     <file name=\"script.js\">\n\t       angular.module('logExample', [])\n\t         .controller('LogController', ['$scope', '$log', function($scope, $log) {\n\t           $scope.$log = $log;\n\t           $scope.message = 'Hello World!';\n\t         }]);\n\t     </file>\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"LogController\">\n\t         <p>Reload this page with open console, enter text and hit the log button...</p>\n\t         Message:\n\t         <input type=\"text\" ng-model=\"message\"/>\n\t         <button ng-click=\"$log.log(message)\">log</button>\n\t         <button ng-click=\"$log.warn(message)\">warn</button>\n\t         <button ng-click=\"$log.info(message)\">info</button>\n\t         <button ng-click=\"$log.error(message)\">error</button>\n\t       </div>\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $logProvider\n\t * @description\n\t * Use the `$logProvider` to configure how the application logs messages\n\t */\n\tfunction $LogProvider(){\n\t  var debug = true,\n\t      self = this;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $logProvider#debugEnabled\n\t   * @description\n\t   * @param {boolean=} flag enable or disable debug level messages\n\t   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n\t   */\n\t  this.debugEnabled = function(flag) {\n\t    if (isDefined(flag)) {\n\t      debug = flag;\n\t    return this;\n\t    } else {\n\t      return debug;\n\t    }\n\t  };\n\t\n\t  this.$get = ['$window', function($window){\n\t    return {\n\t      /**\n\t       * @ngdoc method\n\t       * @name $log#log\n\t       *\n\t       * @description\n\t       * Write a log message\n\t       */\n\t      log: consoleLog('log'),\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $log#info\n\t       *\n\t       * @description\n\t       * Write an information message\n\t       */\n\t      info: consoleLog('info'),\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $log#warn\n\t       *\n\t       * @description\n\t       * Write a warning message\n\t       */\n\t      warn: consoleLog('warn'),\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $log#error\n\t       *\n\t       * @description\n\t       * Write an error message\n\t       */\n\t      error: consoleLog('error'),\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $log#debug\n\t       *\n\t       * @description\n\t       * Write a debug message\n\t       */\n\t      debug: (function () {\n\t        var fn = consoleLog('debug');\n\t\n\t        return function() {\n\t          if (debug) {\n\t            fn.apply(self, arguments);\n\t          }\n\t        };\n\t      }())\n\t    };\n\t\n\t    function formatError(arg) {\n\t      if (arg instanceof Error) {\n\t        if (arg.stack) {\n\t          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n\t              ? 'Error: ' + arg.message + '\\n' + arg.stack\n\t              : arg.stack;\n\t        } else if (arg.sourceURL) {\n\t          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n\t        }\n\t      }\n\t      return arg;\n\t    }\n\t\n\t    function consoleLog(type) {\n\t      var console = $window.console || {},\n\t          logFn = console[type] || console.log || noop,\n\t          hasApply = false;\n\t\n\t      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.\n\t      // The reason behind this is that console.log has type \"object\" in IE8...\n\t      try {\n\t        hasApply = !!logFn.apply;\n\t      } catch (e) {}\n\t\n\t      if (hasApply) {\n\t        return function() {\n\t          var args = [];\n\t          forEach(arguments, function(arg) {\n\t            args.push(formatError(arg));\n\t          });\n\t          return logFn.apply(console, args);\n\t        };\n\t      }\n\t\n\t      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n\t      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n\t      return function(arg1, arg2) {\n\t        logFn(arg1, arg2 == null ? '' : arg2);\n\t      };\n\t    }\n\t  }];\n\t}\n\t\n\tvar $parseMinErr = minErr('$parse');\n\tvar promiseWarningCache = {};\n\tvar promiseWarning;\n\t\n\t// Sandboxing Angular Expressions\n\t// ------------------------------\n\t// Angular expressions are generally considered safe because these expressions only have direct\n\t// access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by\n\t// obtaining a reference to native JS functions such as the Function constructor.\n\t//\n\t// As an example, consider the following Angular expression:\n\t//\n\t//   {}.toString.constructor('alert(\"evil JS code\")')\n\t//\n\t// This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits\n\t// against the expression language, but not to prevent exploits that were enabled by exposing\n\t// sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good\n\t// practice and therefore we are not even trying to protect against interaction with an object\n\t// explicitly exposed in this way.\n\t//\n\t// In general, it is not possible to access a Window object from an angular expression unless a\n\t// window or some DOM object that has a reference to window is published onto a Scope.\n\t// Similarly we prevent invocations of function known to be dangerous, as well as assignments to\n\t// native objects.\n\t//\n\t// See https://docs.angularjs.org/guide/security\n\t\n\t\n\tfunction ensureSafeMemberName(name, fullExpression) {\n\t  if (name === \"__defineGetter__\" || name === \"__defineSetter__\"\n\t      || name === \"__lookupGetter__\" || name === \"__lookupSetter__\"\n\t      || name === \"__proto__\") {\n\t    throw $parseMinErr('isecfld',\n\t        'Attempting to access a disallowed field in Angular expressions! '\n\t        + 'Expression: {0}', fullExpression);\n\t  }\n\t  return name;\n\t}\n\t\n\tfunction getStringValue(name, fullExpression) {\n\t  // From the JavaScript docs:\n\t  // Property names must be strings. This means that non-string objects cannot be used\n\t  // as keys in an object. Any non-string object, including a number, is typecasted\n\t  // into a string via the toString method.\n\t  //\n\t  // So, to ensure that we are checking the same `name` that JavaScript would use,\n\t  // we cast it to a string, if possible.\n\t  // Doing `name + ''` can cause a repl error if the result to `toString` is not a string,\n\t  // this is, this will handle objects that misbehave.\n\t  name = name + '';\n\t  if (!isString(name)) {\n\t    throw $parseMinErr('iseccst',\n\t        'Cannot convert object to primitive value! '\n\t        + 'Expression: {0}', fullExpression);\n\t  }\n\t  return name;\n\t}\n\t\n\tfunction ensureSafeObject(obj, fullExpression) {\n\t  // nifty check if obj is Function that is fast and works across iframes and other contexts\n\t  if (obj) {\n\t    if (obj.constructor === obj) {\n\t      throw $parseMinErr('isecfn',\n\t          'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n\t          fullExpression);\n\t    } else if (// isWindow(obj)\n\t        obj.document && obj.location && obj.alert && obj.setInterval) {\n\t      throw $parseMinErr('isecwindow',\n\t          'Referencing the Window in Angular expressions is disallowed! Expression: {0}',\n\t          fullExpression);\n\t    } else if (// isElement(obj)\n\t        obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {\n\t      throw $parseMinErr('isecdom',\n\t          'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',\n\t          fullExpression);\n\t    } else if (// block Object so that we can't get hold of dangerous Object.* methods\n\t        obj === Object) {\n\t      throw $parseMinErr('isecobj',\n\t          'Referencing Object in Angular expressions is disallowed! Expression: {0}',\n\t          fullExpression);\n\t    }\n\t  }\n\t  return obj;\n\t}\n\t\n\tvar CALL = Function.prototype.call;\n\tvar APPLY = Function.prototype.apply;\n\tvar BIND = Function.prototype.bind;\n\t\n\tfunction ensureSafeFunction(obj, fullExpression) {\n\t  if (obj) {\n\t    if (obj.constructor === obj) {\n\t      throw $parseMinErr('isecfn',\n\t        'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n\t        fullExpression);\n\t    } else if (obj === CALL || obj === APPLY || (BIND && obj === BIND)) {\n\t      throw $parseMinErr('isecff',\n\t        'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',\n\t        fullExpression);\n\t    }\n\t  }\n\t}\n\t\n\tvar OPERATORS = {\n\t    /* jshint bitwise : false */\n\t    'null':function(){return null;},\n\t    'true':function(){return true;},\n\t    'false':function(){return false;},\n\t    undefined:noop,\n\t    '+':function(self, locals, a,b){\n\t      a=a(self, locals); b=b(self, locals);\n\t      if (isDefined(a)) {\n\t        if (isDefined(b)) {\n\t          return a + b;\n\t        }\n\t        return a;\n\t      }\n\t      return isDefined(b)?b:undefined;},\n\t    '-':function(self, locals, a,b){\n\t          a=a(self, locals); b=b(self, locals);\n\t          return (isDefined(a)?a:0)-(isDefined(b)?b:0);\n\t        },\n\t    '*':function(self, locals, a,b){return a(self, locals)*b(self, locals);},\n\t    '/':function(self, locals, a,b){return a(self, locals)/b(self, locals);},\n\t    '%':function(self, locals, a,b){return a(self, locals)%b(self, locals);},\n\t    '^':function(self, locals, a,b){return a(self, locals)^b(self, locals);},\n\t    '=':noop,\n\t    '===':function(self, locals, a, b){return a(self, locals)===b(self, locals);},\n\t    '!==':function(self, locals, a, b){return a(self, locals)!==b(self, locals);},\n\t    '==':function(self, locals, a,b){return a(self, locals)==b(self, locals);},\n\t    '!=':function(self, locals, a,b){return a(self, locals)!=b(self, locals);},\n\t    '<':function(self, locals, a,b){return a(self, locals)<b(self, locals);},\n\t    '>':function(self, locals, a,b){return a(self, locals)>b(self, locals);},\n\t    '<=':function(self, locals, a,b){return a(self, locals)<=b(self, locals);},\n\t    '>=':function(self, locals, a,b){return a(self, locals)>=b(self, locals);},\n\t    '&&':function(self, locals, a,b){return a(self, locals)&&b(self, locals);},\n\t    '||':function(self, locals, a,b){return a(self, locals)||b(self, locals);},\n\t    '&':function(self, locals, a,b){return a(self, locals)&b(self, locals);},\n\t//    '|':function(self, locals, a,b){return a|b;},\n\t    '|':function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},\n\t    '!':function(self, locals, a){return !a(self, locals);}\n\t};\n\t/* jshint bitwise: true */\n\tvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\t\n\t\n\t/////////////////////////////////////////\n\t\n\t\n\t/**\n\t * @constructor\n\t */\n\tvar Lexer = function (options) {\n\t  this.options = options;\n\t};\n\t\n\tLexer.prototype = {\n\t  constructor: Lexer,\n\t\n\t  lex: function (text) {\n\t    this.text = text;\n\t\n\t    this.index = 0;\n\t    this.ch = undefined;\n\t    this.lastCh = ':'; // can start regexp\n\t\n\t    this.tokens = [];\n\t\n\t    while (this.index < this.text.length) {\n\t      this.ch = this.text.charAt(this.index);\n\t      if (this.is('\"\\'')) {\n\t        this.readString(this.ch);\n\t      } else if (this.isNumber(this.ch) || this.is('.') && this.isNumber(this.peek())) {\n\t        this.readNumber();\n\t      } else if (this.isIdent(this.ch)) {\n\t        this.readIdent();\n\t      } else if (this.is('(){}[].,;:?')) {\n\t        this.tokens.push({\n\t          index: this.index,\n\t          text: this.ch\n\t        });\n\t        this.index++;\n\t      } else if (this.isWhitespace(this.ch)) {\n\t        this.index++;\n\t        continue;\n\t      } else {\n\t        var ch2 = this.ch + this.peek();\n\t        var ch3 = ch2 + this.peek(2);\n\t        var fn = OPERATORS[this.ch];\n\t        var fn2 = OPERATORS[ch2];\n\t        var fn3 = OPERATORS[ch3];\n\t        if (fn3) {\n\t          this.tokens.push({index: this.index, text: ch3, fn: fn3});\n\t          this.index += 3;\n\t        } else if (fn2) {\n\t          this.tokens.push({index: this.index, text: ch2, fn: fn2});\n\t          this.index += 2;\n\t        } else if (fn) {\n\t          this.tokens.push({\n\t            index: this.index,\n\t            text: this.ch,\n\t            fn: fn\n\t          });\n\t          this.index += 1;\n\t        } else {\n\t          this.throwError('Unexpected next character ', this.index, this.index + 1);\n\t        }\n\t      }\n\t      this.lastCh = this.ch;\n\t    }\n\t    return this.tokens;\n\t  },\n\t\n\t  is: function(chars) {\n\t    return chars.indexOf(this.ch) !== -1;\n\t  },\n\t\n\t  was: function(chars) {\n\t    return chars.indexOf(this.lastCh) !== -1;\n\t  },\n\t\n\t  peek: function(i) {\n\t    var num = i || 1;\n\t    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\n\t  },\n\t\n\t  isNumber: function(ch) {\n\t    return ('0' <= ch && ch <= '9');\n\t  },\n\t\n\t  isWhitespace: function(ch) {\n\t    // IE treats non-breaking space as \\u00A0\n\t    return (ch === ' ' || ch === '\\r' || ch === '\\t' ||\n\t            ch === '\\n' || ch === '\\v' || ch === '\\u00A0');\n\t  },\n\t\n\t  isIdent: function(ch) {\n\t    return ('a' <= ch && ch <= 'z' ||\n\t            'A' <= ch && ch <= 'Z' ||\n\t            '_' === ch || ch === '$');\n\t  },\n\t\n\t  isExpOperator: function(ch) {\n\t    return (ch === '-' || ch === '+' || this.isNumber(ch));\n\t  },\n\t\n\t  throwError: function(error, start, end) {\n\t    end = end || this.index;\n\t    var colStr = (isDefined(start)\n\t            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\n\t            : ' ' + end);\n\t    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\n\t        error, colStr, this.text);\n\t  },\n\t\n\t  readNumber: function() {\n\t    var number = '';\n\t    var start = this.index;\n\t    while (this.index < this.text.length) {\n\t      var ch = lowercase(this.text.charAt(this.index));\n\t      if (ch == '.' || this.isNumber(ch)) {\n\t        number += ch;\n\t      } else {\n\t        var peekCh = this.peek();\n\t        if (ch == 'e' && this.isExpOperator(peekCh)) {\n\t          number += ch;\n\t        } else if (this.isExpOperator(ch) &&\n\t            peekCh && this.isNumber(peekCh) &&\n\t            number.charAt(number.length - 1) == 'e') {\n\t          number += ch;\n\t        } else if (this.isExpOperator(ch) &&\n\t            (!peekCh || !this.isNumber(peekCh)) &&\n\t            number.charAt(number.length - 1) == 'e') {\n\t          this.throwError('Invalid exponent');\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      this.index++;\n\t    }\n\t    number = 1 * number;\n\t    this.tokens.push({\n\t      index: start,\n\t      text: number,\n\t      literal: true,\n\t      constant: true,\n\t      fn: function() { return number; }\n\t    });\n\t  },\n\t\n\t  readIdent: function() {\n\t    var parser = this;\n\t\n\t    var ident = '';\n\t    var start = this.index;\n\t\n\t    var lastDot, peekIndex, methodName, ch;\n\t\n\t    while (this.index < this.text.length) {\n\t      ch = this.text.charAt(this.index);\n\t      if (ch === '.' || this.isIdent(ch) || this.isNumber(ch)) {\n\t        if (ch === '.') lastDot = this.index;\n\t        ident += ch;\n\t      } else {\n\t        break;\n\t      }\n\t      this.index++;\n\t    }\n\t\n\t    //check if this is not a method invocation and if it is back out to last dot\n\t    if (lastDot) {\n\t      peekIndex = this.index;\n\t      while (peekIndex < this.text.length) {\n\t        ch = this.text.charAt(peekIndex);\n\t        if (ch === '(') {\n\t          methodName = ident.substr(lastDot - start + 1);\n\t          ident = ident.substr(0, lastDot - start);\n\t          this.index = peekIndex;\n\t          break;\n\t        }\n\t        if (this.isWhitespace(ch)) {\n\t          peekIndex++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t\n\t    var token = {\n\t      index: start,\n\t      text: ident\n\t    };\n\t\n\t    // OPERATORS is our own object so we don't need to use special hasOwnPropertyFn\n\t    if (OPERATORS.hasOwnProperty(ident)) {\n\t      token.fn = OPERATORS[ident];\n\t      token.literal = true;\n\t      token.constant = true;\n\t    } else {\n\t      var getter = getterFn(ident, this.options, this.text);\n\t      token.fn = extend(function(self, locals) {\n\t        return (getter(self, locals));\n\t      }, {\n\t        assign: function(self, value) {\n\t          return setter(self, ident, value, parser.text, parser.options);\n\t        }\n\t      });\n\t    }\n\t\n\t    this.tokens.push(token);\n\t\n\t    if (methodName) {\n\t      this.tokens.push({\n\t        index:lastDot,\n\t        text: '.'\n\t      });\n\t      this.tokens.push({\n\t        index: lastDot + 1,\n\t        text: methodName\n\t      });\n\t    }\n\t  },\n\t\n\t  readString: function(quote) {\n\t    var start = this.index;\n\t    this.index++;\n\t    var string = '';\n\t    var rawString = quote;\n\t    var escape = false;\n\t    while (this.index < this.text.length) {\n\t      var ch = this.text.charAt(this.index);\n\t      rawString += ch;\n\t      if (escape) {\n\t        if (ch === 'u') {\n\t          var hex = this.text.substring(this.index + 1, this.index + 5);\n\t          if (!hex.match(/[\\da-f]{4}/i))\n\t            this.throwError('Invalid unicode escape [\\\\u' + hex + ']');\n\t          this.index += 4;\n\t          string += String.fromCharCode(parseInt(hex, 16));\n\t        } else {\n\t          var rep = ESCAPE[ch];\n\t          string = string + (rep || ch);\n\t        }\n\t        escape = false;\n\t      } else if (ch === '\\\\') {\n\t        escape = true;\n\t      } else if (ch === quote) {\n\t        this.index++;\n\t        this.tokens.push({\n\t          index: start,\n\t          text: rawString,\n\t          string: string,\n\t          literal: true,\n\t          constant: true,\n\t          fn: function() { return string; }\n\t        });\n\t        return;\n\t      } else {\n\t        string += ch;\n\t      }\n\t      this.index++;\n\t    }\n\t    this.throwError('Unterminated quote', start);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * @constructor\n\t */\n\tvar Parser = function (lexer, $filter, options) {\n\t  this.lexer = lexer;\n\t  this.$filter = $filter;\n\t  this.options = options;\n\t};\n\t\n\tParser.ZERO = extend(function () {\n\t  return 0;\n\t}, {\n\t  constant: true\n\t});\n\t\n\tParser.prototype = {\n\t  constructor: Parser,\n\t\n\t  parse: function (text) {\n\t    this.text = text;\n\t\n\t    this.tokens = this.lexer.lex(text);\n\t\n\t    var value = this.statements();\n\t\n\t    if (this.tokens.length !== 0) {\n\t      this.throwError('is an unexpected token', this.tokens[0]);\n\t    }\n\t\n\t    value.literal = !!value.literal;\n\t    value.constant = !!value.constant;\n\t\n\t    return value;\n\t  },\n\t\n\t  primary: function () {\n\t    var primary;\n\t    if (this.expect('(')) {\n\t      primary = this.filterChain();\n\t      this.consume(')');\n\t    } else if (this.expect('[')) {\n\t      primary = this.arrayDeclaration();\n\t    } else if (this.expect('{')) {\n\t      primary = this.object();\n\t    } else {\n\t      var token = this.expect();\n\t      primary = token.fn;\n\t      if (!primary) {\n\t        this.throwError('not a primary expression', token);\n\t      }\n\t      primary.literal = !!token.literal;\n\t      primary.constant = !!token.constant;\n\t    }\n\t\n\t    var next, context;\n\t    while ((next = this.expect('(', '[', '.'))) {\n\t      if (next.text === '(') {\n\t        primary = this.functionCall(primary, context);\n\t        context = null;\n\t      } else if (next.text === '[') {\n\t        context = primary;\n\t        primary = this.objectIndex(primary);\n\t      } else if (next.text === '.') {\n\t        context = primary;\n\t        primary = this.fieldAccess(primary);\n\t      } else {\n\t        this.throwError('IMPOSSIBLE');\n\t      }\n\t    }\n\t    return primary;\n\t  },\n\t\n\t  throwError: function(msg, token) {\n\t    throw $parseMinErr('syntax',\n\t        'Syntax Error: Token \\'{0}\\' {1} at column {2} of the expression [{3}] starting at [{4}].',\n\t          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));\n\t  },\n\t\n\t  peekToken: function() {\n\t    if (this.tokens.length === 0)\n\t      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n\t    return this.tokens[0];\n\t  },\n\t\n\t  peek: function(e1, e2, e3, e4) {\n\t    if (this.tokens.length > 0) {\n\t      var token = this.tokens[0];\n\t      var t = token.text;\n\t      if (t === e1 || t === e2 || t === e3 || t === e4 ||\n\t          (!e1 && !e2 && !e3 && !e4)) {\n\t        return token;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  expect: function(e1, e2, e3, e4){\n\t    var token = this.peek(e1, e2, e3, e4);\n\t    if (token) {\n\t      this.tokens.shift();\n\t      return token;\n\t    }\n\t    return false;\n\t  },\n\t\n\t  consume: function(e1){\n\t    if (!this.expect(e1)) {\n\t      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());\n\t    }\n\t  },\n\t\n\t  unaryFn: function(fn, right) {\n\t    return extend(function(self, locals) {\n\t      return fn(self, locals, right);\n\t    }, {\n\t      constant:right.constant\n\t    });\n\t  },\n\t\n\t  ternaryFn: function(left, middle, right){\n\t    return extend(function(self, locals){\n\t      return left(self, locals) ? middle(self, locals) : right(self, locals);\n\t    }, {\n\t      constant: left.constant && middle.constant && right.constant\n\t    });\n\t  },\n\t\n\t  binaryFn: function(left, fn, right) {\n\t    return extend(function(self, locals) {\n\t      return fn(self, locals, left, right);\n\t    }, {\n\t      constant:left.constant && right.constant\n\t    });\n\t  },\n\t\n\t  statements: function() {\n\t    var statements = [];\n\t    while (true) {\n\t      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))\n\t        statements.push(this.filterChain());\n\t      if (!this.expect(';')) {\n\t        // optimize for the common case where there is only one statement.\n\t        // TODO(size): maybe we should not support multiple statements?\n\t        return (statements.length === 1)\n\t            ? statements[0]\n\t            : function(self, locals) {\n\t                var value;\n\t                for (var i = 0; i < statements.length; i++) {\n\t                  var statement = statements[i];\n\t                  if (statement) {\n\t                    value = statement(self, locals);\n\t                  }\n\t                }\n\t                return value;\n\t              };\n\t      }\n\t    }\n\t  },\n\t\n\t  filterChain: function() {\n\t    var left = this.expression();\n\t    var token;\n\t    while (true) {\n\t      if ((token = this.expect('|'))) {\n\t        left = this.binaryFn(left, token.fn, this.filter());\n\t      } else {\n\t        return left;\n\t      }\n\t    }\n\t  },\n\t\n\t  filter: function() {\n\t    var token = this.expect();\n\t    var fn = this.$filter(token.text);\n\t    var argsFn = [];\n\t    while (true) {\n\t      if ((token = this.expect(':'))) {\n\t        argsFn.push(this.expression());\n\t      } else {\n\t        var fnInvoke = function(self, locals, input) {\n\t          var args = [input];\n\t          for (var i = 0; i < argsFn.length; i++) {\n\t            args.push(argsFn[i](self, locals));\n\t          }\n\t          return fn.apply(self, args);\n\t        };\n\t        return function() {\n\t          return fnInvoke;\n\t        };\n\t      }\n\t    }\n\t  },\n\t\n\t  expression: function() {\n\t    return this.assignment();\n\t  },\n\t\n\t  assignment: function() {\n\t    var left = this.ternary();\n\t    var right;\n\t    var token;\n\t    if ((token = this.expect('='))) {\n\t      if (!left.assign) {\n\t        this.throwError('implies assignment but [' +\n\t            this.text.substring(0, token.index) + '] can not be assigned to', token);\n\t      }\n\t      right = this.ternary();\n\t      return function(scope, locals) {\n\t        return left.assign(scope, right(scope, locals), locals);\n\t      };\n\t    }\n\t    return left;\n\t  },\n\t\n\t  ternary: function() {\n\t    var left = this.logicalOR();\n\t    var middle;\n\t    var token;\n\t    if ((token = this.expect('?'))) {\n\t      middle = this.assignment();\n\t      if ((token = this.expect(':'))) {\n\t        return this.ternaryFn(left, middle, this.assignment());\n\t      } else {\n\t        this.throwError('expected :', token);\n\t      }\n\t    } else {\n\t      return left;\n\t    }\n\t  },\n\t\n\t  logicalOR: function() {\n\t    var left = this.logicalAND();\n\t    var token;\n\t    while (true) {\n\t      if ((token = this.expect('||'))) {\n\t        left = this.binaryFn(left, token.fn, this.logicalAND());\n\t      } else {\n\t        return left;\n\t      }\n\t    }\n\t  },\n\t\n\t  logicalAND: function() {\n\t    var left = this.equality();\n\t    var token;\n\t    if ((token = this.expect('&&'))) {\n\t      left = this.binaryFn(left, token.fn, this.logicalAND());\n\t    }\n\t    return left;\n\t  },\n\t\n\t  equality: function() {\n\t    var left = this.relational();\n\t    var token;\n\t    if ((token = this.expect('==','!=','===','!=='))) {\n\t      left = this.binaryFn(left, token.fn, this.equality());\n\t    }\n\t    return left;\n\t  },\n\t\n\t  relational: function() {\n\t    var left = this.additive();\n\t    var token;\n\t    if ((token = this.expect('<', '>', '<=', '>='))) {\n\t      left = this.binaryFn(left, token.fn, this.relational());\n\t    }\n\t    return left;\n\t  },\n\t\n\t  additive: function() {\n\t    var left = this.multiplicative();\n\t    var token;\n\t    while ((token = this.expect('+','-'))) {\n\t      left = this.binaryFn(left, token.fn, this.multiplicative());\n\t    }\n\t    return left;\n\t  },\n\t\n\t  multiplicative: function() {\n\t    var left = this.unary();\n\t    var token;\n\t    while ((token = this.expect('*','/','%'))) {\n\t      left = this.binaryFn(left, token.fn, this.unary());\n\t    }\n\t    return left;\n\t  },\n\t\n\t  unary: function() {\n\t    var token;\n\t    if (this.expect('+')) {\n\t      return this.primary();\n\t    } else if ((token = this.expect('-'))) {\n\t      return this.binaryFn(Parser.ZERO, token.fn, this.unary());\n\t    } else if ((token = this.expect('!'))) {\n\t      return this.unaryFn(token.fn, this.unary());\n\t    } else {\n\t      return this.primary();\n\t    }\n\t  },\n\t\n\t  fieldAccess: function(object) {\n\t    var parser = this;\n\t    var field = this.expect().text;\n\t    var getter = getterFn(field, this.options, this.text);\n\t\n\t    return extend(function(scope, locals, self) {\n\t      return getter(self || object(scope, locals));\n\t    }, {\n\t      assign: function(scope, value, locals) {\n\t        var o = object(scope, locals);\n\t        if (!o) object.assign(scope, o = {});\n\t        return setter(o, field, value, parser.text, parser.options);\n\t      }\n\t    });\n\t  },\n\t\n\t  objectIndex: function(obj) {\n\t    var parser = this;\n\t\n\t    var indexFn = this.expression();\n\t    this.consume(']');\n\t\n\t    return extend(function(self, locals) {\n\t      var o = obj(self, locals),\n\t          i = getStringValue(indexFn(self, locals), parser.text),\n\t          v, p;\n\t\n\t      ensureSafeMemberName(i, parser.text);\n\t      if (!o) return undefined;\n\t      v = ensureSafeObject(o[i], parser.text);\n\t      if (v && v.then && parser.options.unwrapPromises) {\n\t        p = v;\n\t        if (!('$$v' in v)) {\n\t          p.$$v = undefined;\n\t          p.then(function(val) { p.$$v = val; });\n\t        }\n\t        v = v.$$v;\n\t      }\n\t      return v;\n\t    }, {\n\t      assign: function(self, value, locals) {\n\t        var key = ensureSafeMemberName(getStringValue(indexFn(self, locals), parser.text), parser.text);\n\t        // prevent overwriting of Function.constructor which would break ensureSafeObject check\n\t        var o = ensureSafeObject(obj(self, locals), parser.text);\n\t        if (!o) obj.assign(self, o = {});\n\t        return o[key] = value;\n\t      }\n\t    });\n\t  },\n\t\n\t  functionCall: function(fn, contextGetter) {\n\t    var argsFn = [];\n\t    if (this.peekToken().text !== ')') {\n\t      do {\n\t        argsFn.push(this.expression());\n\t      } while (this.expect(','));\n\t    }\n\t    this.consume(')');\n\t\n\t    var parser = this;\n\t\n\t    return function(scope, locals) {\n\t      var args = [];\n\t      var context = contextGetter ? contextGetter(scope, locals) : scope;\n\t\n\t      for (var i = 0; i < argsFn.length; i++) {\n\t        args.push(ensureSafeObject(argsFn[i](scope, locals), parser.text));\n\t      }\n\t      var fnPtr = fn(scope, locals, context) || noop;\n\t\n\t      ensureSafeObject(context, parser.text);\n\t      ensureSafeFunction(fnPtr, parser.text);\n\t\n\t      // IE doesn't have apply for some native functions\n\t      var v = fnPtr.apply\n\t            ? fnPtr.apply(context, args)\n\t            : fnPtr(args[0], args[1], args[2], args[3], args[4]);\n\t\n\t      return ensureSafeObject(v, parser.text);\n\t    };\n\t  },\n\t\n\t  // This is used with json array declaration\n\t  arrayDeclaration: function () {\n\t    var elementFns = [];\n\t    var allConstant = true;\n\t    if (this.peekToken().text !== ']') {\n\t      do {\n\t        if (this.peek(']')) {\n\t          // Support trailing commas per ES5.1.\n\t          break;\n\t        }\n\t        var elementFn = this.expression();\n\t        elementFns.push(elementFn);\n\t        if (!elementFn.constant) {\n\t          allConstant = false;\n\t        }\n\t      } while (this.expect(','));\n\t    }\n\t    this.consume(']');\n\t\n\t    return extend(function(self, locals) {\n\t      var array = [];\n\t      for (var i = 0; i < elementFns.length; i++) {\n\t        array.push(elementFns[i](self, locals));\n\t      }\n\t      return array;\n\t    }, {\n\t      literal: true,\n\t      constant: allConstant\n\t    });\n\t  },\n\t\n\t  object: function () {\n\t    var keyValues = [];\n\t    var allConstant = true;\n\t    if (this.peekToken().text !== '}') {\n\t      do {\n\t        if (this.peek('}')) {\n\t          // Support trailing commas per ES5.1.\n\t          break;\n\t        }\n\t        var token = this.expect(),\n\t        key = token.string || token.text;\n\t        this.consume(':');\n\t        var value = this.expression();\n\t        keyValues.push({key: key, value: value});\n\t        if (!value.constant) {\n\t          allConstant = false;\n\t        }\n\t      } while (this.expect(','));\n\t    }\n\t    this.consume('}');\n\t\n\t    return extend(function(self, locals) {\n\t      var object = {};\n\t      for (var i = 0; i < keyValues.length; i++) {\n\t        var keyValue = keyValues[i];\n\t        object[keyValue.key] = keyValue.value(self, locals);\n\t      }\n\t      return object;\n\t    }, {\n\t      literal: true,\n\t      constant: allConstant\n\t    });\n\t  }\n\t};\n\t\n\t\n\t//////////////////////////////////////////////////\n\t// Parser helper functions\n\t//////////////////////////////////////////////////\n\t\n\tfunction setter(obj, path, setValue, fullExp, options) {\n\t  ensureSafeObject(obj, fullExp);\n\t\n\t  //needed?\n\t  options = options || {};\n\t\n\t  var element = path.split('.'), key;\n\t  for (var i = 0; element.length > 1; i++) {\n\t    key = ensureSafeMemberName(element.shift(), fullExp);\n\t    var propertyObj = ensureSafeObject(obj[key], fullExp);\n\t    if (!propertyObj) {\n\t      propertyObj = {};\n\t      obj[key] = propertyObj;\n\t    }\n\t    obj = propertyObj;\n\t    if (obj.then && options.unwrapPromises) {\n\t      promiseWarning(fullExp);\n\t      if (!(\"$$v\" in obj)) {\n\t        (function(promise) {\n\t          promise.then(function(val) { promise.$$v = val; }); }\n\t        )(obj);\n\t      }\n\t      if (obj.$$v === undefined) {\n\t        obj.$$v = {};\n\t      }\n\t      obj = obj.$$v;\n\t    }\n\t  }\n\t  key = ensureSafeMemberName(element.shift(), fullExp);\n\t  ensureSafeObject(obj[key], fullExp);\n\t  obj[key] = setValue;\n\t  return setValue;\n\t}\n\t\n\tvar getterFnCacheDefault = {};\n\tvar getterFnCacheExpensive = {};\n\t\n\tfunction isPossiblyDangerousMemberName(name) {\n\t  return name == 'constructor';\n\t}\n\t\n\t/**\n\t * Implementation of the \"Black Hole\" variant from:\n\t * - http://jsperf.com/angularjs-parse-getter/4\n\t * - http://jsperf.com/path-evaluation-simplified/7\n\t */\n\tfunction cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, options) {\n\t  ensureSafeMemberName(key0, fullExp);\n\t  ensureSafeMemberName(key1, fullExp);\n\t  ensureSafeMemberName(key2, fullExp);\n\t  ensureSafeMemberName(key3, fullExp);\n\t  ensureSafeMemberName(key4, fullExp);\n\t  var eso = function(o) {\n\t    return ensureSafeObject(o, fullExp);\n\t  };\n\t  var expensiveChecks = options.expensiveChecks;\n\t  var eso0 = (expensiveChecks || isPossiblyDangerousMemberName(key0)) ? eso : identity;\n\t  var eso1 = (expensiveChecks || isPossiblyDangerousMemberName(key1)) ? eso : identity;\n\t  var eso2 = (expensiveChecks || isPossiblyDangerousMemberName(key2)) ? eso : identity;\n\t  var eso3 = (expensiveChecks || isPossiblyDangerousMemberName(key3)) ? eso : identity;\n\t  var eso4 = (expensiveChecks || isPossiblyDangerousMemberName(key4)) ? eso : identity;\n\t\n\t  return !options.unwrapPromises\n\t      ? function cspSafeGetter(scope, locals) {\n\t          var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope;\n\t\n\t          if (pathVal == null) return pathVal;\n\t          pathVal = eso0(pathVal[key0]);\n\t\n\t          if (!key1) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso1(pathVal[key1]);\n\t\n\t          if (!key2) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso2(pathVal[key2]);\n\t\n\t          if (!key3) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso3(pathVal[key3]);\n\t\n\t          if (!key4) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso4(pathVal[key4]);\n\t\n\t          return pathVal;\n\t        }\n\t      : function cspSafePromiseEnabledGetter(scope, locals) {\n\t          var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope,\n\t              promise;\n\t\n\t          if (pathVal == null) return pathVal;\n\t\n\t          pathVal = eso0(pathVal[key0]);\n\t          if (pathVal && pathVal.then) {\n\t            promiseWarning(fullExp);\n\t            if (!(\"$$v\" in pathVal)) {\n\t              promise = pathVal;\n\t              promise.$$v = undefined;\n\t              promise.then(function(val) { promise.$$v = eso0(val); });\n\t            }\n\t            pathVal = eso0(pathVal.$$v);\n\t          }\n\t\n\t          if (!key1) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso1(pathVal[key1]);\n\t          if (pathVal && pathVal.then) {\n\t            promiseWarning(fullExp);\n\t            if (!(\"$$v\" in pathVal)) {\n\t              promise = pathVal;\n\t              promise.$$v = undefined;\n\t              promise.then(function(val) { promise.$$v = eso1(val); });\n\t            }\n\t            pathVal = eso1(pathVal.$$v);\n\t          }\n\t\n\t          if (!key2) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso2(pathVal[key2]);\n\t          if (pathVal && pathVal.then) {\n\t            promiseWarning(fullExp);\n\t            if (!(\"$$v\" in pathVal)) {\n\t              promise = pathVal;\n\t              promise.$$v = undefined;\n\t              promise.then(function(val) { promise.$$v = eso2(val); });\n\t            }\n\t            pathVal = eso2(pathVal.$$v);\n\t          }\n\t\n\t          if (!key3) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso3(pathVal[key3]);\n\t          if (pathVal && pathVal.then) {\n\t            promiseWarning(fullExp);\n\t            if (!(\"$$v\" in pathVal)) {\n\t              promise = pathVal;\n\t              promise.$$v = undefined;\n\t              promise.then(function(val) { promise.$$v = eso3(val); });\n\t            }\n\t            pathVal = eso3(pathVal.$$v);\n\t          }\n\t\n\t          if (!key4) return pathVal;\n\t          if (pathVal == null) return undefined;\n\t          pathVal = eso4(pathVal[key4]);\n\t          if (pathVal && pathVal.then) {\n\t            promiseWarning(fullExp);\n\t            if (!(\"$$v\" in pathVal)) {\n\t              promise = pathVal;\n\t              promise.$$v = undefined;\n\t              promise.then(function(val) { promise.$$v = eso4(val); });\n\t            }\n\t            pathVal = eso4(pathVal.$$v);\n\t          }\n\t          return pathVal;\n\t        };\n\t}\n\t\n\tfunction getterFnWithExtraArgs(fn, fullExpression) {\n\t  return function(s, l) {\n\t    return fn(s, l, promiseWarning, ensureSafeObject, fullExpression);\n\t  };\n\t}\n\t\n\tfunction getterFn(path, options, fullExp) {\n\t  var expensiveChecks = options.expensiveChecks;\n\t  var getterFnCache = (expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault);\n\t  // Check whether the cache has this getter already.\n\t  // We can use hasOwnProperty directly on the cache because we ensure,\n\t  // see below, that the cache never stores a path called 'hasOwnProperty'\n\t  if (getterFnCache.hasOwnProperty(path)) {\n\t    return getterFnCache[path];\n\t  }\n\t\n\t  var pathKeys = path.split('.'),\n\t      pathKeysLength = pathKeys.length,\n\t      fn;\n\t\n\t  // http://jsperf.com/angularjs-parse-getter/6\n\t  if (options.csp) {\n\t    if (pathKeysLength < 6) {\n\t      fn = cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp,\n\t                          options);\n\t    } else {\n\t      fn = function(scope, locals) {\n\t        var i = 0, val;\n\t        do {\n\t          val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++],\n\t                                pathKeys[i++], fullExp, options)(scope, locals);\n\t\n\t          locals = undefined; // clear after first iteration\n\t          scope = val;\n\t        } while (i < pathKeysLength);\n\t        return val;\n\t      };\n\t    }\n\t  } else {\n\t    var code = 'var p;\\n';\n\t    if (expensiveChecks) {\n\t      code += 's = eso(s, fe);\\nl = eso(l, fe);\\n';\n\t    }\n\t    var needsEnsureSafeObject = expensiveChecks;\n\t    forEach(pathKeys, function(key, index) {\n\t      ensureSafeMemberName(key, fullExp);\n\t      var lookupJs = (index\n\t                      // we simply dereference 's' on any .dot notation\n\t                      ? 's'\n\t                      // but if we are first then we check locals first, and if so read it first\n\t                      : '((l&&l.hasOwnProperty(\"' + key + '\"))?l:s)') + '[\"' + key + '\"]';\n\t      var wrapWithEso = expensiveChecks || isPossiblyDangerousMemberName(key);\n\t      if (wrapWithEso) {\n\t        lookupJs = 'eso(' + lookupJs + ', fe)';\n\t        needsEnsureSafeObject = true;\n\t      }\n\t      code += 'if(s == null) return undefined;\\n' +\n\t              's=' + lookupJs + ';\\n';\n\t      if (options.unwrapPromises) {\n\t        code += 'if (s && s.then) {\\n' +\n\t                  ' pw(\"' + fullExp.replace(/([\"\\r\\n])/g, '\\\\$1') + '\");\\n' +\n\t                  ' if (!(\"$$v\" in s)) {\\n' +\n\t                    ' p=s;\\n' +\n\t                    ' p.$$v = undefined;\\n' +\n\t                    ' p.then(function(v) {p.$$v=' + (wrapWithEso ? 'eso(v)' : 'v') + ';});\\n' +\n\t                    '}\\n' +\n\t                  ' s=' + (wrapWithEso ? 'eso(s.$$v)' : 's.$$v') + '\\n' +\n\t                '}\\n';\n\t\n\t      }\n\t    });\n\t    code += 'return s;';\n\t\n\t    /* jshint -W054 */\n\t    // s=scope, l=locals, pw=promiseWarning, eso=ensureSafeObject, fe=fullExpression\n\t    var evaledFnGetter = new Function('s', 'l', 'pw', 'eso', 'fe', code);\n\t    /* jshint +W054 */\n\t    evaledFnGetter.toString = valueFn(code);\n\t    if (needsEnsureSafeObject || options.unwrapPromises) {\n\t      evaledFnGetter = getterFnWithExtraArgs(evaledFnGetter, fullExp);\n\t    }\n\t    fn = evaledFnGetter;\n\t  }\n\t\n\t  // Only cache the value if it's not going to mess up the cache object\n\t  // This is more performant that using Object.prototype.hasOwnProperty.call\n\t  if (path !== 'hasOwnProperty') {\n\t    getterFnCache[path] = fn;\n\t  }\n\t  return fn;\n\t}\n\t\n\t///////////////////////////////////\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $parse\n\t * @kind function\n\t *\n\t * @description\n\t *\n\t * Converts Angular {@link guide/expression expression} into a function.\n\t *\n\t * ```js\n\t *   var getter = $parse('user.name');\n\t *   var setter = getter.assign;\n\t *   var context = {user:{name:'angular'}};\n\t *   var locals = {user:{name:'local'}};\n\t *\n\t *   expect(getter(context)).toEqual('angular');\n\t *   setter(context, 'newValue');\n\t *   expect(context.user.name).toEqual('newValue');\n\t *   expect(getter(context, locals)).toEqual('local');\n\t * ```\n\t *\n\t *\n\t * @param {string} expression String expression to compile.\n\t * @returns {function(context, locals)} a function which represents the compiled expression:\n\t *\n\t *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t *      are evaluated against (typically a scope object).\n\t *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t *      `context`.\n\t *\n\t *    The returned function also has the following properties:\n\t *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n\t *        literal.\n\t *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n\t *        constant literals.\n\t *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n\t *        set to a function to change its value on the given context.\n\t *\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $parseProvider\n\t * @kind function\n\t *\n\t * @description\n\t * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n\t *  service.\n\t */\n\tfunction $ParseProvider() {\n\t  var cacheDefault = {};\n\t  var cacheExpensive = {};\n\t\n\t  var $parseOptions = {\n\t    csp: false,\n\t    unwrapPromises: false,\n\t    logPromiseWarnings: true,\n\t    expensiveChecks: false\n\t  };\n\t\n\t\n\t  /**\n\t   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.\n\t   *\n\t   * @ngdoc method\n\t   * @name $parseProvider#unwrapPromises\n\t   * @description\n\t   *\n\t   * **This feature is deprecated, see deprecation notes below for more info**\n\t   *\n\t   * If set to true (default is false), $parse will unwrap promises automatically when a promise is\n\t   * found at any part of the expression. In other words, if set to true, the expression will always\n\t   * result in a non-promise value.\n\t   *\n\t   * While the promise is unresolved, it's treated as undefined, but once resolved and fulfilled,\n\t   * the fulfillment value is used in place of the promise while evaluating the expression.\n\t   *\n\t   * **Deprecation notice**\n\t   *\n\t   * This is a feature that didn't prove to be wildly useful or popular, primarily because of the\n\t   * dichotomy between data access in templates (accessed as raw values) and controller code\n\t   * (accessed as promises).\n\t   *\n\t   * In most code we ended up resolving promises manually in controllers anyway and thus unifying\n\t   * the model access there.\n\t   *\n\t   * Other downsides of automatic promise unwrapping:\n\t   *\n\t   * - when building components it's often desirable to receive the raw promises\n\t   * - adds complexity and slows down expression evaluation\n\t   * - makes expression code pre-generation unattractive due to the amount of code that needs to be\n\t   *   generated\n\t   * - makes IDE auto-completion and tool support hard\n\t   *\n\t   * **Warning Logs**\n\t   *\n\t   * If the unwrapping is enabled, Angular will log a warning about each expression that unwraps a\n\t   * promise (to reduce the noise, each expression is logged only once). To disable this logging use\n\t   * `$parseProvider.logPromiseWarnings(false)` api.\n\t   *\n\t   *\n\t   * @param {boolean=} value New value.\n\t   * @returns {boolean|self} Returns the current setting when used as getter and self if used as\n\t   *                         setter.\n\t   */\n\t  this.unwrapPromises = function(value) {\n\t    if (isDefined(value)) {\n\t      $parseOptions.unwrapPromises = !!value;\n\t      return this;\n\t    } else {\n\t      return $parseOptions.unwrapPromises;\n\t    }\n\t  };\n\t\n\t\n\t  /**\n\t   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.\n\t   *\n\t   * @ngdoc method\n\t   * @name $parseProvider#logPromiseWarnings\n\t   * @description\n\t   *\n\t   * Controls whether Angular should log a warning on any encounter of a promise in an expression.\n\t   *\n\t   * The default is set to `true`.\n\t   *\n\t   * This setting applies only if `$parseProvider.unwrapPromises` setting is set to true as well.\n\t   *\n\t   * @param {boolean=} value New value.\n\t   * @returns {boolean|self} Returns the current setting when used as getter and self if used as\n\t   *                         setter.\n\t   */\n\t this.logPromiseWarnings = function(value) {\n\t    if (isDefined(value)) {\n\t      $parseOptions.logPromiseWarnings = value;\n\t      return this;\n\t    } else {\n\t      return $parseOptions.logPromiseWarnings;\n\t    }\n\t  };\n\t\n\t\n\t  this.$get = ['$filter', '$sniffer', '$log', function($filter, $sniffer, $log) {\n\t    $parseOptions.csp = $sniffer.csp;\n\t    var $parseOptionsExpensive = {\n\t      csp: $parseOptions.csp,\n\t      unwrapPromises: $parseOptions.unwrapPromises,\n\t      logPromiseWarnings: $parseOptions.logPromiseWarnings,\n\t      expensiveChecks: true\n\t    };\n\t\n\t    promiseWarning = function promiseWarningFn(fullExp) {\n\t      if (!$parseOptions.logPromiseWarnings || promiseWarningCache.hasOwnProperty(fullExp)) return;\n\t      promiseWarningCache[fullExp] = true;\n\t      $log.warn('[$parse] Promise found in the expression `' + fullExp + '`. ' +\n\t          'Automatic unwrapping of promises in Angular expressions is deprecated.');\n\t    };\n\t\n\t    return function(exp, expensiveChecks) {\n\t      var parsedExpression;\n\t\n\t      switch (typeof exp) {\n\t        case 'string':\n\t\n\t          var cache = (expensiveChecks ? cacheExpensive : cacheDefault);\n\t          if (cache.hasOwnProperty(exp)) {\n\t            return cache[exp];\n\t          }\n\t\n\t          var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;\n\t          var lexer = new Lexer(parseOptions);\n\t          var parser = new Parser(lexer, $filter, parseOptions);\n\t          parsedExpression = parser.parse(exp);\n\t\n\t          if (exp !== 'hasOwnProperty') {\n\t            // Only cache the value if it's not going to mess up the cache object\n\t            // This is more performant that using Object.prototype.hasOwnProperty.call\n\t            cache[exp] = parsedExpression;\n\t          }\n\t\n\t          return parsedExpression;\n\t\n\t        case 'function':\n\t          return exp;\n\t\n\t        default:\n\t          return noop;\n\t      }\n\t    };\n\t  }];\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $q\n\t * @requires $rootScope\n\t *\n\t * @description\n\t * A service that helps you run functions asynchronously, and use their return values (or exceptions)\n\t * when they are done processing.\n\t *\n\t * This is an implementation of promises/deferred objects inspired by\n\t * [Kris Kowal's Q](https://github.com/kriskowal/q).\n\t *\n\t * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n\t * interface for interacting with an object that represents the result of an action that is\n\t * performed asynchronously, and may or may not be finished at any given point in time.\n\t *\n\t * From the perspective of dealing with error handling, deferred and promise APIs are to\n\t * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n\t *\n\t * ```js\n\t *   // for the purpose of this example let's assume that variables `$q`, `scope` and `okToGreet`\n\t *   // are available in the current lexical scope (they could have been injected or passed in).\n\t *\n\t *   function asyncGreet(name) {\n\t *     var deferred = $q.defer();\n\t *\n\t *     setTimeout(function() {\n\t *       deferred.notify('About to greet ' + name + '.');\n\t *\n\t *       if (okToGreet(name)) {\n\t *         deferred.resolve('Hello, ' + name + '!');\n\t *       } else {\n\t *         deferred.reject('Greeting ' + name + ' is not allowed.');\n\t *       }\n\t *     }, 1000);\n\t *\n\t *     return deferred.promise;\n\t *   }\n\t *\n\t *   var promise = asyncGreet('Robin Hood');\n\t *   promise.then(function(greeting) {\n\t *     alert('Success: ' + greeting);\n\t *   }, function(reason) {\n\t *     alert('Failed: ' + reason);\n\t *   }, function(update) {\n\t *     alert('Got notification: ' + update);\n\t *   });\n\t * ```\n\t *\n\t * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n\t * comes in the way of guarantees that promise and deferred APIs make, see\n\t * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n\t *\n\t * Additionally the promise api allows for composition that is very hard to do with the\n\t * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n\t * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n\t * section on serial or parallel joining of promises.\n\t *\n\t *\n\t * # The Deferred API\n\t *\n\t * A new instance of deferred is constructed by calling `$q.defer()`.\n\t *\n\t * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n\t * that can be used for signaling the successful or unsuccessful completion, as well as the status\n\t * of the task.\n\t *\n\t * **Methods**\n\t *\n\t * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n\t *   constructed via `$q.reject`, the promise will be rejected instead.\n\t * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n\t *   resolving it with a rejection constructed via `$q.reject`.\n\t * - `notify(value)` - provides updates on the status of the promise's execution. This may be called\n\t *   multiple times before the promise is either resolved or rejected.\n\t *\n\t * **Properties**\n\t *\n\t * - promise – `{Promise}` – promise object associated with this deferred.\n\t *\n\t *\n\t * # The Promise API\n\t *\n\t * A new promise instance is created when a deferred instance is created and can be retrieved by\n\t * calling `deferred.promise`.\n\t *\n\t * The purpose of the promise object is to allow for interested parties to get access to the result\n\t * of the deferred task when it completes.\n\t *\n\t * **Methods**\n\t *\n\t * - `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n\t *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n\t *   as soon as the result is available. The callbacks are called with a single argument: the result\n\t *   or rejection reason. Additionally, the notify callback may be called zero or more times to\n\t *   provide a progress indication, before the promise is resolved or rejected.\n\t *\n\t *   This method *returns a new promise* which is resolved or rejected via the return value of the\n\t *   `successCallback`, `errorCallback`. It also notifies via the return value of the\n\t *   `notifyCallback` method. The promise can not be resolved or rejected from the notifyCallback\n\t *   method.\n\t *\n\t * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n\t *\n\t *   Because `catch` is a reserved word in JavaScript and reserved keywords are not supported as\n\t *   property names by ES3, you'll need to invoke the method like `promise['catch'](callback)` or\n\t *  `promise.then(null, errorCallback)` to make your code IE8 and Android 2.x compatible.\n\t *\n\t * - `finally(callback)` – allows you to observe either the fulfillment or rejection of a promise,\n\t *   but to do so without modifying the final value. This is useful to release resources or do some\n\t *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n\t *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n\t *   more information.\n\t *\n\t *   Because `finally` is a reserved word in JavaScript and reserved keywords are not supported as\n\t *   property names by ES3, you'll need to invoke the method like `promise['finally'](callback)` to\n\t *   make your code IE8 and Android 2.x compatible.\n\t *\n\t * # Chaining promises\n\t *\n\t * Because calling the `then` method of a promise returns a new derived promise, it is easily\n\t * possible to create a chain of promises:\n\t *\n\t * ```js\n\t *   promiseB = promiseA.then(function(result) {\n\t *     return result + 1;\n\t *   });\n\t *\n\t *   // promiseB will be resolved immediately after promiseA is resolved and its value\n\t *   // will be the result of promiseA incremented by 1\n\t * ```\n\t *\n\t * It is possible to create chains of any length and since a promise can be resolved with another\n\t * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n\t * the promises at any point in the chain. This makes it possible to implement powerful APIs like\n\t * $http's response interceptors.\n\t *\n\t *\n\t * # Differences between Kris Kowal's Q and $q\n\t *\n\t *  There are two main differences:\n\t *\n\t * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n\t *   mechanism in angular, which means faster propagation of resolution or rejection into your\n\t *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n\t * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n\t *   all the important functionality needed for common async tasks.\n\t *\n\t *  # Testing\n\t *\n\t *  ```js\n\t *    it('should simulate promise', inject(function($q, $rootScope) {\n\t *      var deferred = $q.defer();\n\t *      var promise = deferred.promise;\n\t *      var resolvedValue;\n\t *\n\t *      promise.then(function(value) { resolvedValue = value; });\n\t *      expect(resolvedValue).toBeUndefined();\n\t *\n\t *      // Simulate resolving of promise\n\t *      deferred.resolve(123);\n\t *      // Note that the 'then' function does not get called synchronously.\n\t *      // This is because we want the promise API to always be async, whether or not\n\t *      // it got called synchronously or asynchronously.\n\t *      expect(resolvedValue).toBeUndefined();\n\t *\n\t *      // Propagate promise resolution to 'then' functions using $apply().\n\t *      $rootScope.$apply();\n\t *      expect(resolvedValue).toEqual(123);\n\t *    }));\n\t *  ```\n\t */\n\tfunction $QProvider() {\n\t\n\t  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n\t    return qFactory(function(callback) {\n\t      $rootScope.$evalAsync(callback);\n\t    }, $exceptionHandler);\n\t  }];\n\t}\n\t\n\t\n\t/**\n\t * Constructs a promise manager.\n\t *\n\t * @param {function(Function)} nextTick Function for executing functions in the next turn.\n\t * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n\t *     debugging purposes.\n\t * @returns {object} Promise manager.\n\t */\n\tfunction qFactory(nextTick, exceptionHandler) {\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $q#defer\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Creates a `Deferred` object which represents a task which will finish in the future.\n\t   *\n\t   * @returns {Deferred} Returns a new instance of deferred.\n\t   */\n\t  var defer = function() {\n\t    var pending = [],\n\t        value, deferred;\n\t\n\t    deferred = {\n\t\n\t      resolve: function(val) {\n\t        if (pending) {\n\t          var callbacks = pending;\n\t          pending = undefined;\n\t          value = ref(val);\n\t\n\t          if (callbacks.length) {\n\t            nextTick(function() {\n\t              var callback;\n\t              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n\t                callback = callbacks[i];\n\t                value.then(callback[0], callback[1], callback[2]);\n\t              }\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t\n\t      reject: function(reason) {\n\t        deferred.resolve(createInternalRejectedPromise(reason));\n\t      },\n\t\n\t\n\t      notify: function(progress) {\n\t        if (pending) {\n\t          var callbacks = pending;\n\t\n\t          if (pending.length) {\n\t            nextTick(function() {\n\t              var callback;\n\t              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n\t                callback = callbacks[i];\n\t                callback[2](progress);\n\t              }\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t\n\t      promise: {\n\t        then: function(callback, errback, progressback) {\n\t          var result = defer();\n\t\n\t          var wrappedCallback = function(value) {\n\t            try {\n\t              result.resolve((isFunction(callback) ? callback : defaultCallback)(value));\n\t            } catch(e) {\n\t              result.reject(e);\n\t              exceptionHandler(e);\n\t            }\n\t          };\n\t\n\t          var wrappedErrback = function(reason) {\n\t            try {\n\t              result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));\n\t            } catch(e) {\n\t              result.reject(e);\n\t              exceptionHandler(e);\n\t            }\n\t          };\n\t\n\t          var wrappedProgressback = function(progress) {\n\t            try {\n\t              result.notify((isFunction(progressback) ? progressback : defaultCallback)(progress));\n\t            } catch(e) {\n\t              exceptionHandler(e);\n\t            }\n\t          };\n\t\n\t          if (pending) {\n\t            pending.push([wrappedCallback, wrappedErrback, wrappedProgressback]);\n\t          } else {\n\t            value.then(wrappedCallback, wrappedErrback, wrappedProgressback);\n\t          }\n\t\n\t          return result.promise;\n\t        },\n\t\n\t        \"catch\": function(callback) {\n\t          return this.then(null, callback);\n\t        },\n\t\n\t        \"finally\": function(callback) {\n\t\n\t          function makePromise(value, resolved) {\n\t            var result = defer();\n\t            if (resolved) {\n\t              result.resolve(value);\n\t            } else {\n\t              result.reject(value);\n\t            }\n\t            return result.promise;\n\t          }\n\t\n\t          function handleCallback(value, isResolved) {\n\t            var callbackOutput = null;\n\t            try {\n\t              callbackOutput = (callback ||defaultCallback)();\n\t            } catch(e) {\n\t              return makePromise(e, false);\n\t            }\n\t            if (isPromiseLike(callbackOutput)) {\n\t              return callbackOutput.then(function() {\n\t                return makePromise(value, isResolved);\n\t              }, function(error) {\n\t                return makePromise(error, false);\n\t              });\n\t            } else {\n\t              return makePromise(value, isResolved);\n\t            }\n\t          }\n\t\n\t          return this.then(function(value) {\n\t            return handleCallback(value, true);\n\t          }, function(error) {\n\t            return handleCallback(error, false);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    return deferred;\n\t  };\n\t\n\t\n\t  var ref = function(value) {\n\t    if (isPromiseLike(value)) return value;\n\t    return {\n\t      then: function(callback) {\n\t        var result = defer();\n\t        nextTick(function() {\n\t          result.resolve(callback(value));\n\t        });\n\t        return result.promise;\n\t      }\n\t    };\n\t  };\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $q#reject\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n\t   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n\t   * a promise chain, you don't need to worry about it.\n\t   *\n\t   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n\t   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n\t   * a promise error callback and you want to forward the error to the promise derived from the\n\t   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n\t   * `reject`.\n\t   *\n\t   * ```js\n\t   *   promiseB = promiseA.then(function(result) {\n\t   *     // success: do something and resolve promiseB\n\t   *     //          with the old or a new result\n\t   *     return result;\n\t   *   }, function(reason) {\n\t   *     // error: handle the error if possible and\n\t   *     //        resolve promiseB with newPromiseOrValue,\n\t   *     //        otherwise forward the rejection to promiseB\n\t   *     if (canHandle(reason)) {\n\t   *      // handle the error and recover\n\t   *      return newPromiseOrValue;\n\t   *     }\n\t   *     return $q.reject(reason);\n\t   *   });\n\t   * ```\n\t   *\n\t   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n\t   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n\t   */\n\t  var reject = function(reason) {\n\t    var result = defer();\n\t    result.reject(reason);\n\t    return result.promise;\n\t  };\n\t\n\t  var createInternalRejectedPromise = function(reason) {\n\t    return {\n\t      then: function(callback, errback) {\n\t        var result = defer();\n\t        nextTick(function() {\n\t          try {\n\t            result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));\n\t          } catch(e) {\n\t            result.reject(e);\n\t            exceptionHandler(e);\n\t          }\n\t        });\n\t        return result.promise;\n\t      }\n\t    };\n\t  };\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $q#when\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n\t   * This is useful when you are dealing with an object that might or might not be a promise, or if\n\t   * the promise comes from a source that can't be trusted.\n\t   *\n\t   * @param {*} value Value or a promise\n\t   * @returns {Promise} Returns a promise of the passed value or promise\n\t   */\n\t  var when = function(value, callback, errback, progressback) {\n\t    var result = defer(),\n\t        done;\n\t\n\t    var wrappedCallback = function(value) {\n\t      try {\n\t        return (isFunction(callback) ? callback : defaultCallback)(value);\n\t      } catch (e) {\n\t        exceptionHandler(e);\n\t        return reject(e);\n\t      }\n\t    };\n\t\n\t    var wrappedErrback = function(reason) {\n\t      try {\n\t        return (isFunction(errback) ? errback : defaultErrback)(reason);\n\t      } catch (e) {\n\t        exceptionHandler(e);\n\t        return reject(e);\n\t      }\n\t    };\n\t\n\t    var wrappedProgressback = function(progress) {\n\t      try {\n\t        return (isFunction(progressback) ? progressback : defaultCallback)(progress);\n\t      } catch (e) {\n\t        exceptionHandler(e);\n\t      }\n\t    };\n\t\n\t    nextTick(function() {\n\t      ref(value).then(function(value) {\n\t        if (done) return;\n\t        done = true;\n\t        result.resolve(ref(value).then(wrappedCallback, wrappedErrback, wrappedProgressback));\n\t      }, function(reason) {\n\t        if (done) return;\n\t        done = true;\n\t        result.resolve(wrappedErrback(reason));\n\t      }, function(progress) {\n\t        if (done) return;\n\t        result.notify(wrappedProgressback(progress));\n\t      });\n\t    });\n\t\n\t    return result.promise;\n\t  };\n\t\n\t\n\t  function defaultCallback(value) {\n\t    return value;\n\t  }\n\t\n\t\n\t  function defaultErrback(reason) {\n\t    return reject(reason);\n\t  }\n\t\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $q#all\n\t   * @kind function\n\t   *\n\t   * @description\n\t   * Combines multiple promises into a single promise that is resolved when all of the input\n\t   * promises are resolved.\n\t   *\n\t   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n\t   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\n\t   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.\n\t   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected\n\t   *   with the same rejection value.\n\t   */\n\t  function all(promises) {\n\t    var deferred = defer(),\n\t        counter = 0,\n\t        results = isArray(promises) ? [] : {};\n\t\n\t    forEach(promises, function(promise, key) {\n\t      counter++;\n\t      ref(promise).then(function(value) {\n\t        if (results.hasOwnProperty(key)) return;\n\t        results[key] = value;\n\t        if (!(--counter)) deferred.resolve(results);\n\t      }, function(reason) {\n\t        if (results.hasOwnProperty(key)) return;\n\t        deferred.reject(reason);\n\t      });\n\t    });\n\t\n\t    if (counter === 0) {\n\t      deferred.resolve(results);\n\t    }\n\t\n\t    return deferred.promise;\n\t  }\n\t\n\t  return {\n\t    defer: defer,\n\t    reject: reject,\n\t    when: when,\n\t    all: all\n\t  };\n\t}\n\t\n\tfunction $$RAFProvider(){ //rAF\n\t  this.$get = ['$window', '$timeout', function($window, $timeout) {\n\t    var requestAnimationFrame = $window.requestAnimationFrame ||\n\t                                $window.webkitRequestAnimationFrame ||\n\t                                $window.mozRequestAnimationFrame;\n\t\n\t    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n\t                               $window.webkitCancelAnimationFrame ||\n\t                               $window.mozCancelAnimationFrame ||\n\t                               $window.webkitCancelRequestAnimationFrame;\n\t\n\t    var rafSupported = !!requestAnimationFrame;\n\t    var raf = rafSupported\n\t      ? function(fn) {\n\t          var id = requestAnimationFrame(fn);\n\t          return function() {\n\t            cancelAnimationFrame(id);\n\t          };\n\t        }\n\t      : function(fn) {\n\t          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n\t          return function() {\n\t            $timeout.cancel(timer);\n\t          };\n\t        };\n\t\n\t    raf.supported = rafSupported;\n\t\n\t    return raf;\n\t  }];\n\t}\n\t\n\t/**\n\t * DESIGN NOTES\n\t *\n\t * The design decisions behind the scope are heavily favored for speed and memory consumption.\n\t *\n\t * The typical use of scope is to watch the expressions, which most of the time return the same\n\t * value as last time so we optimize the operation.\n\t *\n\t * Closures construction is expensive in terms of speed as well as memory:\n\t *   - No closures, instead use prototypical inheritance for API\n\t *   - Internal state needs to be stored on scope directly, which means that private state is\n\t *     exposed as $$____ properties\n\t *\n\t * Loop operations are optimized by using while(count--) { ... }\n\t *   - this means that in order to keep the same order of execution as addition we have to add\n\t *     items to the array at the beginning (unshift) instead of at the end (push)\n\t *\n\t * Child scopes are created and removed often\n\t *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n\t *\n\t * There are few watches then a lot of observers. This is why you don't want the observer to be\n\t * implemented in the same way as watch. Watch requires return of initialization function which\n\t * are expensive to construct.\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $rootScopeProvider\n\t * @description\n\t *\n\t * Provider for the $rootScope service.\n\t */\n\t\n\t/**\n\t * @ngdoc method\n\t * @name $rootScopeProvider#digestTtl\n\t * @description\n\t *\n\t * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\n\t * assuming that the model is unstable.\n\t *\n\t * The current default is 10 iterations.\n\t *\n\t * In complex applications it's possible that the dependencies between `$watch`s will result in\n\t * several digest iterations. However if an application needs more than the default 10 digest\n\t * iterations for its model to stabilize then you should investigate what is causing the model to\n\t * continuously change during the digest.\n\t *\n\t * Increasing the TTL could have performance implications, so you should not change it without\n\t * proper justification.\n\t *\n\t * @param {number} limit The number of digest iterations.\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $rootScope\n\t * @description\n\t *\n\t * Every application has a single root {@link ng.$rootScope.Scope scope}.\n\t * All other scopes are descendant scopes of the root scope. Scopes provide separation\n\t * between the model and the view, via a mechanism for watching the model for changes.\n\t * They also provide an event emission/broadcast and subscription facility. See the\n\t * {@link guide/scope developer guide on scopes}.\n\t */\n\tfunction $RootScopeProvider(){\n\t  var TTL = 10;\n\t  var $rootScopeMinErr = minErr('$rootScope');\n\t  var lastDirtyWatch = null;\n\t\n\t  this.digestTtl = function(value) {\n\t    if (arguments.length) {\n\t      TTL = value;\n\t    }\n\t    return TTL;\n\t  };\n\t\n\t  this.$get = ['$injector', '$exceptionHandler', '$parse', '$browser',\n\t      function( $injector,   $exceptionHandler,   $parse,   $browser) {\n\t\n\t    /**\n\t     * @ngdoc type\n\t     * @name $rootScope.Scope\n\t     *\n\t     * @description\n\t     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n\t     * {@link auto.$injector $injector}. Child scopes are created using the\n\t     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n\t     * compiled HTML template is executed.)\n\t     *\n\t     * Here is a simple scope snippet to show how you can interact with the scope.\n\t     * ```html\n\t     * <file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n\t     * ```\n\t     *\n\t     * # Inheritance\n\t     * A scope can inherit from a parent scope, as in this example:\n\t     * ```js\n\t         var parent = $rootScope;\n\t         var child = parent.$new();\n\t\n\t         parent.salutation = \"Hello\";\n\t         child.name = \"World\";\n\t         expect(child.salutation).toEqual('Hello');\n\t\n\t         child.salutation = \"Welcome\";\n\t         expect(child.salutation).toEqual('Welcome');\n\t         expect(parent.salutation).toEqual('Hello');\n\t     * ```\n\t     *\n\t     *\n\t     * @param {Object.<string, function()>=} providers Map of service factory which need to be\n\t     *                                       provided for the current scope. Defaults to {@link ng}.\n\t     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n\t     *                              append/override services provided by `providers`. This is handy\n\t     *                              when unit-testing and having the need to override a default\n\t     *                              service.\n\t     * @returns {Object} Newly created scope.\n\t     *\n\t     */\n\t    function Scope() {\n\t      this.$id = nextUid();\n\t      this.$$phase = this.$parent = this.$$watchers =\n\t                     this.$$nextSibling = this.$$prevSibling =\n\t                     this.$$childHead = this.$$childTail = null;\n\t      this['this'] = this.$root =  this;\n\t      this.$$destroyed = false;\n\t      this.$$asyncQueue = [];\n\t      this.$$postDigestQueue = [];\n\t      this.$$listeners = {};\n\t      this.$$listenerCount = {};\n\t      this.$$isolateBindings = {};\n\t    }\n\t\n\t    /**\n\t     * @ngdoc property\n\t     * @name $rootScope.Scope#$id\n\t     *\n\t     * @description\n\t     * Unique scope ID (monotonically increasing) useful for debugging.\n\t     */\n\t\n\t     /**\n\t      * @ngdoc property\n\t      * @name $rootScope.Scope#$parent\n\t      *\n\t      * @description\n\t      * Reference to the parent scope.\n\t      */\n\t\n\t      /**\n\t       * @ngdoc property\n\t       * @name $rootScope.Scope#$root\n\t       *\n\t       * @description\n\t       * Reference to the root scope.\n\t       */\n\t\n\t    Scope.prototype = {\n\t      constructor: Scope,\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$new\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Creates a new child {@link ng.$rootScope.Scope scope}.\n\t       *\n\t       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\n\t       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n\t       *\n\t       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\n\t       * desired for the scope and its child scopes to be permanently detached from the parent and\n\t       * thus stop participating in model change detection and listener notification by invoking.\n\t       *\n\t       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the\n\t       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n\t       *         When creating widgets, it is useful for the widget to not accidentally read parent\n\t       *         state.\n\t       *\n\t       * @returns {Object} The newly created child scope.\n\t       *\n\t       */\n\t      $new: function(isolate) {\n\t        var ChildScope,\n\t            child;\n\t\n\t        if (isolate) {\n\t          child = new Scope();\n\t          child.$root = this.$root;\n\t          // ensure that there is just one async queue per $rootScope and its children\n\t          child.$$asyncQueue = this.$$asyncQueue;\n\t          child.$$postDigestQueue = this.$$postDigestQueue;\n\t        } else {\n\t          // Only create a child scope class if somebody asks for one,\n\t          // but cache it to allow the VM to optimize lookups.\n\t          if (!this.$$childScopeClass) {\n\t            this.$$childScopeClass = function() {\n\t              this.$$watchers = this.$$nextSibling =\n\t                  this.$$childHead = this.$$childTail = null;\n\t              this.$$listeners = {};\n\t              this.$$listenerCount = {};\n\t              this.$id = nextUid();\n\t              this.$$childScopeClass = null;\n\t            };\n\t            this.$$childScopeClass.prototype = this;\n\t          }\n\t          child = new this.$$childScopeClass();\n\t        }\n\t        child['this'] = child;\n\t        child.$parent = this;\n\t        child.$$prevSibling = this.$$childTail;\n\t        if (this.$$childHead) {\n\t          this.$$childTail.$$nextSibling = child;\n\t          this.$$childTail = child;\n\t        } else {\n\t          this.$$childHead = this.$$childTail = child;\n\t        }\n\t        return child;\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$watch\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n\t       *\n\t       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n\t       *   $digest()} and should return the value that will be watched. (Since\n\t       *   {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\n\t       *   `watchExpression` can execute multiple times per\n\t       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n\t       * - The `listener` is called only when the value from the current `watchExpression` and the\n\t       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n\t       *   see below). Inequality is determined according to reference inequality,\n\t       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n\t       *    via the `!==` Javascript operator, unless `objectEquality == true`\n\t       *   (see next point)\n\t       * - When `objectEquality == true`, inequality of the `watchExpression` is determined\n\t       *   according to the {@link angular.equals} function. To save the value of the object for\n\t       *   later comparison, the {@link angular.copy} function is used. This therefore means that\n\t       *   watching complex objects will have adverse memory and performance implications.\n\t       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.\n\t       *   This is achieved by rerunning the watchers until no changes are detected. The rerun\n\t       *   iteration limit is 10 to prevent an infinite loop deadlock.\n\t       *\n\t       *\n\t       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n\t       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n\t       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\n\t       * change is detected, be prepared for multiple calls to your listener.)\n\t       *\n\t       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n\t       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n\t       * watcher. In rare cases, this is undesirable because the listener is called when the result\n\t       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n\t       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n\t       * listener was called due to initialization.\n\t       *\n\t       * The example below contains an illustration of using a function as your $watch listener\n\t       *\n\t       *\n\t       * # Example\n\t       * ```js\n\t           // let's assume that scope was dependency injected as the $rootScope\n\t           var scope = $rootScope;\n\t           scope.name = 'misko';\n\t           scope.counter = 0;\n\t\n\t           expect(scope.counter).toEqual(0);\n\t           scope.$watch('name', function(newValue, oldValue) {\n\t             scope.counter = scope.counter + 1;\n\t           });\n\t           expect(scope.counter).toEqual(0);\n\t\n\t           scope.$digest();\n\t           // the listener is always called during the first $digest loop after it was registered\n\t           expect(scope.counter).toEqual(1);\n\t\n\t           scope.$digest();\n\t           // but now it will not be called unless the value changes\n\t           expect(scope.counter).toEqual(1);\n\t\n\t           scope.name = 'adam';\n\t           scope.$digest();\n\t           expect(scope.counter).toEqual(2);\n\t\n\t\n\t\n\t           // Using a listener function\n\t           var food;\n\t           scope.foodCounter = 0;\n\t           expect(scope.foodCounter).toEqual(0);\n\t           scope.$watch(\n\t             // This is the listener function\n\t             function() { return food; },\n\t             // This is the change handler\n\t             function(newValue, oldValue) {\n\t               if ( newValue !== oldValue ) {\n\t                 // Only increment the counter if the value changed\n\t                 scope.foodCounter = scope.foodCounter + 1;\n\t               }\n\t             }\n\t           );\n\t           // No digest has been run so the counter will be zero\n\t           expect(scope.foodCounter).toEqual(0);\n\t\n\t           // Run the digest but since food has not changed count will still be zero\n\t           scope.$digest();\n\t           expect(scope.foodCounter).toEqual(0);\n\t\n\t           // Update food and run digest.  Now the counter will increment\n\t           food = 'cheeseburger';\n\t           scope.$digest();\n\t           expect(scope.foodCounter).toEqual(1);\n\t\n\t       * ```\n\t       *\n\t       *\n\t       *\n\t       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n\t       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n\t       *    a call to the `listener`.\n\t       *\n\t       *    - `string`: Evaluated as {@link guide/expression expression}\n\t       *    - `function(scope)`: called with current `scope` as a parameter.\n\t       * @param {(function()|string)=} listener Callback called whenever the return value of\n\t       *   the `watchExpression` changes.\n\t       *\n\t       *    - `string`: Evaluated as {@link guide/expression expression}\n\t       *    - `function(newValue, oldValue, scope)`: called with current and previous values as\n\t       *      parameters.\n\t       *\n\t       * @param {boolean=} objectEquality Compare for object equality using {@link angular.equals} instead of\n\t       *     comparing for reference equality.\n\t       * @returns {function()} Returns a deregistration function for this listener.\n\t       */\n\t      $watch: function(watchExp, listener, objectEquality) {\n\t        var scope = this,\n\t            get = compileToFn(watchExp, 'watch'),\n\t            array = scope.$$watchers,\n\t            watcher = {\n\t              fn: listener,\n\t              last: initWatchVal,\n\t              get: get,\n\t              exp: watchExp,\n\t              eq: !!objectEquality\n\t            };\n\t\n\t        lastDirtyWatch = null;\n\t\n\t        // in the case user pass string, we need to compile it, do we really need this ?\n\t        if (!isFunction(listener)) {\n\t          var listenFn = compileToFn(listener || noop, 'listener');\n\t          watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};\n\t        }\n\t\n\t        if (typeof watchExp == 'string' && get.constant) {\n\t          var originalFn = watcher.fn;\n\t          watcher.fn = function(newVal, oldVal, scope) {\n\t            originalFn.call(this, newVal, oldVal, scope);\n\t            arrayRemove(array, watcher);\n\t          };\n\t        }\n\t\n\t        if (!array) {\n\t          array = scope.$$watchers = [];\n\t        }\n\t        // we use unshift since we use a while loop in $digest for speed.\n\t        // the while loop reads in reverse order.\n\t        array.unshift(watcher);\n\t\n\t        return function deregisterWatch() {\n\t          arrayRemove(array, watcher);\n\t          lastDirtyWatch = null;\n\t        };\n\t      },\n\t\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$watchCollection\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Shallow watches the properties of an object and fires whenever any of the properties change\n\t       * (for arrays, this implies watching the array items; for object maps, this implies watching\n\t       * the properties). If a change is detected, the `listener` callback is fired.\n\t       *\n\t       * - The `obj` collection is observed via standard $watch operation and is examined on every\n\t       *   call to $digest() to see if any items have been added, removed, or moved.\n\t       * - The `listener` is called whenever anything within the `obj` has changed. Examples include\n\t       *   adding, removing, and moving items belonging to an object or array.\n\t       *\n\t       *\n\t       * # Example\n\t       * ```js\n\t          $scope.names = ['igor', 'matias', 'misko', 'james'];\n\t          $scope.dataCount = 4;\n\t\n\t          $scope.$watchCollection('names', function(newNames, oldNames) {\n\t            $scope.dataCount = newNames.length;\n\t          });\n\t\n\t          expect($scope.dataCount).toEqual(4);\n\t          $scope.$digest();\n\t\n\t          //still at 4 ... no changes\n\t          expect($scope.dataCount).toEqual(4);\n\t\n\t          $scope.names.pop();\n\t          $scope.$digest();\n\t\n\t          //now there's been a change\n\t          expect($scope.dataCount).toEqual(3);\n\t       * ```\n\t       *\n\t       *\n\t       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The\n\t       *    expression value should evaluate to an object or an array which is observed on each\n\t       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n\t       *    collection will trigger a call to the `listener`.\n\t       *\n\t       * @param {function(newCollection, oldCollection, scope)} listener a callback function called\n\t       *    when a change is detected.\n\t       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression\n\t       *    - The `oldCollection` object is a copy of the former collection data.\n\t       *      Due to performance considerations, the`oldCollection` value is computed only if the\n\t       *      `listener` function declares two or more arguments.\n\t       *    - The `scope` argument refers to the current scope.\n\t       *\n\t       * @returns {function()} Returns a de-registration function for this listener. When the\n\t       *    de-registration function is executed, the internal watch operation is terminated.\n\t       */\n\t      $watchCollection: function(obj, listener) {\n\t        var self = this;\n\t        // the current value, updated on each dirty-check run\n\t        var newValue;\n\t        // a shallow copy of the newValue from the last dirty-check run,\n\t        // updated to match newValue during dirty-check run\n\t        var oldValue;\n\t        // a shallow copy of the newValue from when the last change happened\n\t        var veryOldValue;\n\t        // only track veryOldValue if the listener is asking for it\n\t        var trackVeryOldValue = (listener.length > 1);\n\t        var changeDetected = 0;\n\t        var objGetter = $parse(obj);\n\t        var internalArray = [];\n\t        var internalObject = {};\n\t        var initRun = true;\n\t        var oldLength = 0;\n\t\n\t        function $watchCollectionWatch() {\n\t          newValue = objGetter(self);\n\t          var newLength, key, bothNaN;\n\t\n\t          if (!isObject(newValue)) { // if primitive\n\t            if (oldValue !== newValue) {\n\t              oldValue = newValue;\n\t              changeDetected++;\n\t            }\n\t          } else if (isArrayLike(newValue)) {\n\t            if (oldValue !== internalArray) {\n\t              // we are transitioning from something which was not an array into array.\n\t              oldValue = internalArray;\n\t              oldLength = oldValue.length = 0;\n\t              changeDetected++;\n\t            }\n\t\n\t            newLength = newValue.length;\n\t\n\t            if (oldLength !== newLength) {\n\t              // if lengths do not match we need to trigger change notification\n\t              changeDetected++;\n\t              oldValue.length = oldLength = newLength;\n\t            }\n\t            // copy the items to oldValue and look for changes.\n\t            for (var i = 0; i < newLength; i++) {\n\t              bothNaN = (oldValue[i] !== oldValue[i]) &&\n\t                  (newValue[i] !== newValue[i]);\n\t              if (!bothNaN && (oldValue[i] !== newValue[i])) {\n\t                changeDetected++;\n\t                oldValue[i] = newValue[i];\n\t              }\n\t            }\n\t          } else {\n\t            if (oldValue !== internalObject) {\n\t              // we are transitioning from something which was not an object into object.\n\t              oldValue = internalObject = {};\n\t              oldLength = 0;\n\t              changeDetected++;\n\t            }\n\t            // copy the items to oldValue and look for changes.\n\t            newLength = 0;\n\t            for (key in newValue) {\n\t              if (newValue.hasOwnProperty(key)) {\n\t                newLength++;\n\t                if (oldValue.hasOwnProperty(key)) {\n\t                  bothNaN = (oldValue[key] !== oldValue[key]) &&\n\t                      (newValue[key] !== newValue[key]);\n\t                  if (!bothNaN && (oldValue[key] !== newValue[key])) {\n\t                    changeDetected++;\n\t                    oldValue[key] = newValue[key];\n\t                  }\n\t                } else {\n\t                  oldLength++;\n\t                  oldValue[key] = newValue[key];\n\t                  changeDetected++;\n\t                }\n\t              }\n\t            }\n\t            if (oldLength > newLength) {\n\t              // we used to have more keys, need to find them and destroy them.\n\t              changeDetected++;\n\t              for(key in oldValue) {\n\t                if (oldValue.hasOwnProperty(key) && !newValue.hasOwnProperty(key)) {\n\t                  oldLength--;\n\t                  delete oldValue[key];\n\t                }\n\t              }\n\t            }\n\t          }\n\t          return changeDetected;\n\t        }\n\t\n\t        function $watchCollectionAction() {\n\t          if (initRun) {\n\t            initRun = false;\n\t            listener(newValue, newValue, self);\n\t          } else {\n\t            listener(newValue, veryOldValue, self);\n\t          }\n\t\n\t          // make a copy for the next time a collection is changed\n\t          if (trackVeryOldValue) {\n\t            if (!isObject(newValue)) {\n\t              //primitive\n\t              veryOldValue = newValue;\n\t            } else if (isArrayLike(newValue)) {\n\t              veryOldValue = new Array(newValue.length);\n\t              for (var i = 0; i < newValue.length; i++) {\n\t                veryOldValue[i] = newValue[i];\n\t              }\n\t            } else { // if object\n\t              veryOldValue = {};\n\t              for (var key in newValue) {\n\t                if (hasOwnProperty.call(newValue, key)) {\n\t                  veryOldValue[key] = newValue[key];\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        return this.$watch($watchCollectionWatch, $watchCollectionAction);\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$digest\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\n\t       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\n\t       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\n\t       * until no more listeners are firing. This means that it is possible to get into an infinite\n\t       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\n\t       * iterations exceeds 10.\n\t       *\n\t       * Usually, you don't call `$digest()` directly in\n\t       * {@link ng.directive:ngController controllers} or in\n\t       * {@link ng.$compileProvider#directive directives}.\n\t       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\n\t       * a {@link ng.$compileProvider#directive directives}), which will force a `$digest()`.\n\t       *\n\t       * If you want to be notified whenever `$digest()` is called,\n\t       * you can register a `watchExpression` function with\n\t       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n\t       *\n\t       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n\t       *\n\t       * # Example\n\t       * ```js\n\t           var scope = ...;\n\t           scope.name = 'misko';\n\t           scope.counter = 0;\n\t\n\t           expect(scope.counter).toEqual(0);\n\t           scope.$watch('name', function(newValue, oldValue) {\n\t             scope.counter = scope.counter + 1;\n\t           });\n\t           expect(scope.counter).toEqual(0);\n\t\n\t           scope.$digest();\n\t           // the listener is always called during the first $digest loop after it was registered\n\t           expect(scope.counter).toEqual(1);\n\t\n\t           scope.$digest();\n\t           // but now it will not be called unless the value changes\n\t           expect(scope.counter).toEqual(1);\n\t\n\t           scope.name = 'adam';\n\t           scope.$digest();\n\t           expect(scope.counter).toEqual(2);\n\t       * ```\n\t       *\n\t       */\n\t      $digest: function() {\n\t        var watch, value, last,\n\t            watchers,\n\t            asyncQueue = this.$$asyncQueue,\n\t            postDigestQueue = this.$$postDigestQueue,\n\t            length,\n\t            dirty, ttl = TTL,\n\t            next, current, target = this,\n\t            watchLog = [],\n\t            logIdx, logMsg, asyncTask;\n\t\n\t        beginPhase('$digest');\n\t        // Check for changes to browser url that happened in sync before the call to $digest\n\t        $browser.$$checkUrlChange();\n\t\n\t        lastDirtyWatch = null;\n\t\n\t        do { // \"while dirty\" loop\n\t          dirty = false;\n\t          current = target;\n\t\n\t          while(asyncQueue.length) {\n\t            try {\n\t              asyncTask = asyncQueue.shift();\n\t              asyncTask.scope.$eval(asyncTask.expression);\n\t            } catch (e) {\n\t              clearPhase();\n\t              $exceptionHandler(e);\n\t            }\n\t            lastDirtyWatch = null;\n\t          }\n\t\n\t          traverseScopesLoop:\n\t          do { // \"traverse the scopes\" loop\n\t            if ((watchers = current.$$watchers)) {\n\t              // process our watches\n\t              length = watchers.length;\n\t              while (length--) {\n\t                try {\n\t                  watch = watchers[length];\n\t                  // Most common watches are on primitives, in which case we can short\n\t                  // circuit it with === operator, only when === fails do we use .equals\n\t                  if (watch) {\n\t                    if ((value = watch.get(current)) !== (last = watch.last) &&\n\t                        !(watch.eq\n\t                            ? equals(value, last)\n\t                            : (typeof value === 'number' && typeof last === 'number'\n\t                               && isNaN(value) && isNaN(last)))) {\n\t                      dirty = true;\n\t                      lastDirtyWatch = watch;\n\t                      watch.last = watch.eq ? copy(value, null) : value;\n\t                      watch.fn(value, ((last === initWatchVal) ? value : last), current);\n\t                      if (ttl < 5) {\n\t                        logIdx = 4 - ttl;\n\t                        if (!watchLog[logIdx]) watchLog[logIdx] = [];\n\t                        logMsg = (isFunction(watch.exp))\n\t                            ? 'fn: ' + (watch.exp.name || watch.exp.toString())\n\t                            : watch.exp;\n\t                        logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);\n\t                        watchLog[logIdx].push(logMsg);\n\t                      }\n\t                    } else if (watch === lastDirtyWatch) {\n\t                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers\n\t                      // have already been tested.\n\t                      dirty = false;\n\t                      break traverseScopesLoop;\n\t                    }\n\t                  }\n\t                } catch (e) {\n\t                  clearPhase();\n\t                  $exceptionHandler(e);\n\t                }\n\t              }\n\t            }\n\t\n\t            // Insanity Warning: scope depth-first traversal\n\t            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n\t            // this piece should be kept in sync with the traversal in $broadcast\n\t            if (!(next = (current.$$childHead ||\n\t                (current !== target && current.$$nextSibling)))) {\n\t              while(current !== target && !(next = current.$$nextSibling)) {\n\t                current = current.$parent;\n\t              }\n\t            }\n\t          } while ((current = next));\n\t\n\t          // `break traverseScopesLoop;` takes us to here\n\t\n\t          if((dirty || asyncQueue.length) && !(ttl--)) {\n\t            clearPhase();\n\t            throw $rootScopeMinErr('infdig',\n\t                '{0} $digest() iterations reached. Aborting!\\n' +\n\t                'Watchers fired in the last 5 iterations: {1}',\n\t                TTL, toJson(watchLog));\n\t          }\n\t\n\t        } while (dirty || asyncQueue.length);\n\t\n\t        clearPhase();\n\t\n\t        while(postDigestQueue.length) {\n\t          try {\n\t            postDigestQueue.shift()();\n\t          } catch (e) {\n\t            $exceptionHandler(e);\n\t          }\n\t        }\n\t      },\n\t\n\t\n\t      /**\n\t       * @ngdoc event\n\t       * @name $rootScope.Scope#$destroy\n\t       * @eventType broadcast on scope being destroyed\n\t       *\n\t       * @description\n\t       * Broadcasted when a scope and its children are being destroyed.\n\t       *\n\t       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n\t       * clean up DOM bindings before an element is removed from the DOM.\n\t       */\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$destroy\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n\t       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n\t       * propagate to the current scope and its children. Removal also implies that the current\n\t       * scope is eligible for garbage collection.\n\t       *\n\t       * The `$destroy()` is usually used by directives such as\n\t       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n\t       * unrolling of the loop.\n\t       *\n\t       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\n\t       * Application code can register a `$destroy` event handler that will give it a chance to\n\t       * perform any necessary cleanup.\n\t       *\n\t       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n\t       * clean up DOM bindings before an element is removed from the DOM.\n\t       */\n\t      $destroy: function() {\n\t        // we can't destroy the root scope or a scope that has been already destroyed\n\t        if (this.$$destroyed) return;\n\t        var parent = this.$parent;\n\t\n\t        this.$broadcast('$destroy');\n\t        this.$$destroyed = true;\n\t        if (this === $rootScope) return;\n\t\n\t        forEach(this.$$listenerCount, bind(null, decrementListenerCount, this));\n\t\n\t        // sever all the references to parent scopes (after this cleanup, the current scope should\n\t        // not be retained by any of our references and should be eligible for garbage collection)\n\t        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n\t        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n\t        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n\t        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\t\n\t\n\t        // All of the code below is bogus code that works around V8's memory leak via optimized code\n\t        // and inline caches.\n\t        //\n\t        // see:\n\t        // - https://code.google.com/p/v8/issues/detail?id=2073#c26\n\t        // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909\n\t        // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n\t\n\t        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n\t            this.$$childTail = this.$root = null;\n\t\n\t        // don't reset these to null in case some async task tries to register a listener/watch/task\n\t        this.$$listeners = {};\n\t        this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [];\n\t\n\t        // prevent NPEs since these methods have references to properties we nulled out\n\t        this.$destroy = this.$digest = this.$apply = noop;\n\t        this.$on = this.$watch = function() { return noop; };\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$eval\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Executes the `expression` on the current scope and returns the result. Any exceptions in\n\t       * the expression are propagated (uncaught). This is useful when evaluating Angular\n\t       * expressions.\n\t       *\n\t       * # Example\n\t       * ```js\n\t           var scope = ng.$rootScope.Scope();\n\t           scope.a = 1;\n\t           scope.b = 2;\n\t\n\t           expect(scope.$eval('a+b')).toEqual(3);\n\t           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n\t       * ```\n\t       *\n\t       * @param {(string|function())=} expression An angular expression to be executed.\n\t       *\n\t       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n\t       *    - `function(scope)`: execute the function with the current `scope` parameter.\n\t       *\n\t       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n\t       * @returns {*} The result of evaluating the expression.\n\t       */\n\t      $eval: function(expr, locals) {\n\t        return $parse(expr)(this, locals);\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$evalAsync\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Executes the expression on the current scope at a later point in time.\n\t       *\n\t       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\n\t       * that:\n\t       *\n\t       *   - it will execute after the function that scheduled the evaluation (preferably before DOM\n\t       *     rendering).\n\t       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n\t       *     `expression` execution.\n\t       *\n\t       * Any exceptions from the execution of the expression are forwarded to the\n\t       * {@link ng.$exceptionHandler $exceptionHandler} service.\n\t       *\n\t       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\n\t       * will be scheduled. However, it is encouraged to always call code that changes the model\n\t       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.\n\t       *\n\t       * @param {(string|function())=} expression An angular expression to be executed.\n\t       *\n\t       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n\t       *    - `function(scope)`: execute the function with the current `scope` parameter.\n\t       *\n\t       */\n\t      $evalAsync: function(expr) {\n\t        // if we are outside of an $digest loop and this is the first time we are scheduling async\n\t        // task also schedule async auto-flush\n\t        if (!$rootScope.$$phase && !$rootScope.$$asyncQueue.length) {\n\t          $browser.defer(function() {\n\t            if ($rootScope.$$asyncQueue.length) {\n\t              $rootScope.$digest();\n\t            }\n\t          });\n\t        }\n\t\n\t        this.$$asyncQueue.push({scope: this, expression: expr});\n\t      },\n\t\n\t      $$postDigest : function(fn) {\n\t        this.$$postDigestQueue.push(fn);\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$apply\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * `$apply()` is used to execute an expression in angular from outside of the angular\n\t       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\n\t       * Because we are calling into the angular framework we need to perform proper scope life\n\t       * cycle of {@link ng.$exceptionHandler exception handling},\n\t       * {@link ng.$rootScope.Scope#$digest executing watches}.\n\t       *\n\t       * ## Life cycle\n\t       *\n\t       * # Pseudo-Code of `$apply()`\n\t       * ```js\n\t           function $apply(expr) {\n\t             try {\n\t               return $eval(expr);\n\t             } catch (e) {\n\t               $exceptionHandler(e);\n\t             } finally {\n\t               $root.$digest();\n\t             }\n\t           }\n\t       * ```\n\t       *\n\t       *\n\t       * Scope's `$apply()` method transitions through the following stages:\n\t       *\n\t       * 1. The {@link guide/expression expression} is executed using the\n\t       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n\t       * 2. Any exceptions from the execution of the expression are forwarded to the\n\t       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n\t       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n\t       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n\t       *\n\t       *\n\t       * @param {(string|function())=} exp An angular expression to be executed.\n\t       *\n\t       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n\t       *    - `function(scope)`: execute the function with current `scope` parameter.\n\t       *\n\t       * @returns {*} The result of evaluating the expression.\n\t       */\n\t      $apply: function(expr) {\n\t        try {\n\t          beginPhase('$apply');\n\t          return this.$eval(expr);\n\t        } catch (e) {\n\t          $exceptionHandler(e);\n\t        } finally {\n\t          clearPhase();\n\t          try {\n\t            $rootScope.$digest();\n\t          } catch (e) {\n\t            $exceptionHandler(e);\n\t            throw e;\n\t          }\n\t        }\n\t      },\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$on\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\n\t       * discussion of event life cycle.\n\t       *\n\t       * The event listener function format is: `function(event, args...)`. The `event` object\n\t       * passed into the listener has the following attributes:\n\t       *\n\t       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n\t       *     `$broadcast`-ed.\n\t       *   - `currentScope` - `{Scope}`: the current scope which is handling the event.\n\t       *   - `name` - `{string}`: name of the event.\n\t       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n\t       *     further event propagation (available only for events that were `$emit`-ed).\n\t       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n\t       *     to true.\n\t       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n\t       *\n\t       * @param {string} name Event name to listen on.\n\t       * @param {function(event, ...args)} listener Function to call when the event is emitted.\n\t       * @returns {function()} Returns a deregistration function for this listener.\n\t       */\n\t      $on: function(name, listener) {\n\t        var namedListeners = this.$$listeners[name];\n\t        if (!namedListeners) {\n\t          this.$$listeners[name] = namedListeners = [];\n\t        }\n\t        namedListeners.push(listener);\n\t\n\t        var current = this;\n\t        do {\n\t          if (!current.$$listenerCount[name]) {\n\t            current.$$listenerCount[name] = 0;\n\t          }\n\t          current.$$listenerCount[name]++;\n\t        } while ((current = current.$parent));\n\t\n\t        var self = this;\n\t        return function() {\n\t          var indexOfListener = indexOf(namedListeners, listener);\n\t          if (indexOfListener !== -1) {\n\t            namedListeners[indexOfListener] = null;\n\t            decrementListenerCount(self, 1, name);\n\t          }\n\t        };\n\t      },\n\t\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$emit\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n\t       * registered {@link ng.$rootScope.Scope#$on} listeners.\n\t       *\n\t       * The event life cycle starts at the scope on which `$emit` was called. All\n\t       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n\t       * notified. Afterwards, the event traverses upwards toward the root scope and calls all\n\t       * registered listeners along the way. The event will stop propagating if one of the listeners\n\t       * cancels it.\n\t       *\n\t       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n\t       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n\t       *\n\t       * @param {string} name Event name to emit.\n\t       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n\t       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).\n\t       */\n\t      $emit: function(name, args) {\n\t        var empty = [],\n\t            namedListeners,\n\t            scope = this,\n\t            stopPropagation = false,\n\t            event = {\n\t              name: name,\n\t              targetScope: scope,\n\t              stopPropagation: function() {stopPropagation = true;},\n\t              preventDefault: function() {\n\t                event.defaultPrevented = true;\n\t              },\n\t              defaultPrevented: false\n\t            },\n\t            listenerArgs = concat([event], arguments, 1),\n\t            i, length;\n\t\n\t        do {\n\t          namedListeners = scope.$$listeners[name] || empty;\n\t          event.currentScope = scope;\n\t          for (i=0, length=namedListeners.length; i<length; i++) {\n\t\n\t            // if listeners were deregistered, defragment the array\n\t            if (!namedListeners[i]) {\n\t              namedListeners.splice(i, 1);\n\t              i--;\n\t              length--;\n\t              continue;\n\t            }\n\t            try {\n\t              //allow all listeners attached to the current scope to run\n\t              namedListeners[i].apply(null, listenerArgs);\n\t            } catch (e) {\n\t              $exceptionHandler(e);\n\t            }\n\t          }\n\t          //if any listener on the current scope stops propagation, prevent bubbling\n\t          if (stopPropagation) return event;\n\t          //traverse upwards\n\t          scope = scope.$parent;\n\t        } while (scope);\n\t\n\t        return event;\n\t      },\n\t\n\t\n\t      /**\n\t       * @ngdoc method\n\t       * @name $rootScope.Scope#$broadcast\n\t       * @kind function\n\t       *\n\t       * @description\n\t       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n\t       * registered {@link ng.$rootScope.Scope#$on} listeners.\n\t       *\n\t       * The event life cycle starts at the scope on which `$broadcast` was called. All\n\t       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n\t       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current\n\t       * scope and calls all registered listeners along the way. The event cannot be canceled.\n\t       *\n\t       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n\t       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n\t       *\n\t       * @param {string} name Event name to broadcast.\n\t       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n\t       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n\t       */\n\t      $broadcast: function(name, args) {\n\t        var target = this,\n\t            current = target,\n\t            next = target,\n\t            event = {\n\t              name: name,\n\t              targetScope: target,\n\t              preventDefault: function() {\n\t                event.defaultPrevented = true;\n\t              },\n\t              defaultPrevented: false\n\t            },\n\t            listenerArgs = concat([event], arguments, 1),\n\t            listeners, i, length;\n\t\n\t        //down while you can, then up and next sibling or up and next sibling until back at root\n\t        while ((current = next)) {\n\t          event.currentScope = current;\n\t          listeners = current.$$listeners[name] || [];\n\t          for (i=0, length = listeners.length; i<length; i++) {\n\t            // if listeners were deregistered, defragment the array\n\t            if (!listeners[i]) {\n\t              listeners.splice(i, 1);\n\t              i--;\n\t              length--;\n\t              continue;\n\t            }\n\t\n\t            try {\n\t              listeners[i].apply(null, listenerArgs);\n\t            } catch(e) {\n\t              $exceptionHandler(e);\n\t            }\n\t          }\n\t\n\t          // Insanity Warning: scope depth-first traversal\n\t          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n\t          // this piece should be kept in sync with the traversal in $digest\n\t          // (though it differs due to having the extra check for $$listenerCount)\n\t          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||\n\t              (current !== target && current.$$nextSibling)))) {\n\t            while(current !== target && !(next = current.$$nextSibling)) {\n\t              current = current.$parent;\n\t            }\n\t          }\n\t        }\n\t\n\t        return event;\n\t      }\n\t    };\n\t\n\t    var $rootScope = new Scope();\n\t\n\t    return $rootScope;\n\t\n\t\n\t    function beginPhase(phase) {\n\t      if ($rootScope.$$phase) {\n\t        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);\n\t      }\n\t\n\t      $rootScope.$$phase = phase;\n\t    }\n\t\n\t    function clearPhase() {\n\t      $rootScope.$$phase = null;\n\t    }\n\t\n\t    function compileToFn(exp, name) {\n\t      var fn = $parse(exp);\n\t      assertArgFn(fn, name);\n\t      return fn;\n\t    }\n\t\n\t    function decrementListenerCount(current, count, name) {\n\t      do {\n\t        current.$$listenerCount[name] -= count;\n\t\n\t        if (current.$$listenerCount[name] === 0) {\n\t          delete current.$$listenerCount[name];\n\t        }\n\t      } while ((current = current.$parent));\n\t    }\n\t\n\t    /**\n\t     * function used as an initial value for watchers.\n\t     * because it's unique we can easily tell it apart from other values\n\t     */\n\t    function initWatchVal() {}\n\t  }];\n\t}\n\t\n\t/**\n\t * @description\n\t * Private service to sanitize uris for links and images. Used by $compile and $sanitize.\n\t */\n\tfunction $$SanitizeUriProvider() {\n\t  var aHrefSanitizationWhitelist = /^\\s*(https?|ftp|mailto|tel|file):/,\n\t    imgSrcSanitizationWhitelist = /^\\s*((https?|ftp|file):|data:image\\/)/;\n\t\n\t  /**\n\t   * @description\n\t   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n\t   * urls during a[href] sanitization.\n\t   *\n\t   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n\t   *\n\t   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n\t   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n\t   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n\t   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n\t   *\n\t   * @param {RegExp=} regexp New regexp to whitelist urls with.\n\t   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n\t   *    chaining otherwise.\n\t   */\n\t  this.aHrefSanitizationWhitelist = function(regexp) {\n\t    if (isDefined(regexp)) {\n\t      aHrefSanitizationWhitelist = regexp;\n\t      return this;\n\t    }\n\t    return aHrefSanitizationWhitelist;\n\t  };\n\t\n\t\n\t  /**\n\t   * @description\n\t   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n\t   * urls during img[src] sanitization.\n\t   *\n\t   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n\t   *\n\t   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n\t   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n\t   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n\t   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n\t   *\n\t   * @param {RegExp=} regexp New regexp to whitelist urls with.\n\t   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n\t   *    chaining otherwise.\n\t   */\n\t  this.imgSrcSanitizationWhitelist = function(regexp) {\n\t    if (isDefined(regexp)) {\n\t      imgSrcSanitizationWhitelist = regexp;\n\t      return this;\n\t    }\n\t    return imgSrcSanitizationWhitelist;\n\t  };\n\t\n\t  this.$get = function() {\n\t    return function sanitizeUri(uri, isImage) {\n\t      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\n\t      var normalizedVal;\n\t      // NOTE: urlResolve() doesn't support IE < 8 so we don't sanitize for that case.\n\t      if (!msie || msie >= 8 ) {\n\t        normalizedVal = urlResolve(uri).href;\n\t        if (normalizedVal !== '' && !normalizedVal.match(regex)) {\n\t          return 'unsafe:'+normalizedVal;\n\t        }\n\t      }\n\t      return uri;\n\t    };\n\t  };\n\t}\n\t\n\tvar $sceMinErr = minErr('$sce');\n\t\n\tvar SCE_CONTEXTS = {\n\t  HTML: 'html',\n\t  CSS: 'css',\n\t  URL: 'url',\n\t  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a\n\t  // url.  (e.g. ng-include, script src, templateUrl)\n\t  RESOURCE_URL: 'resourceUrl',\n\t  JS: 'js'\n\t};\n\t\n\t// Helper functions follow.\n\t\n\t// Copied from:\n\t// http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962\n\t// Prereq: s is a string.\n\tfunction escapeForRegexp(s) {\n\t  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').\n\t           replace(/\\x08/g, '\\\\x08');\n\t}\n\t\n\t\n\tfunction adjustMatcher(matcher) {\n\t  if (matcher === 'self') {\n\t    return matcher;\n\t  } else if (isString(matcher)) {\n\t    // Strings match exactly except for 2 wildcards - '*' and '**'.\n\t    // '*' matches any character except those from the set ':/.?&'.\n\t    // '**' matches any character (like .* in a RegExp).\n\t    // More than 2 *'s raises an error as it's ill defined.\n\t    if (matcher.indexOf('***') > -1) {\n\t      throw $sceMinErr('iwcard',\n\t          'Illegal sequence *** in string matcher.  String: {0}', matcher);\n\t    }\n\t    matcher = escapeForRegexp(matcher).\n\t                  replace('\\\\*\\\\*', '.*').\n\t                  replace('\\\\*', '[^:/.?&;]*');\n\t    return new RegExp('^' + matcher + '$');\n\t  } else if (isRegExp(matcher)) {\n\t    // The only other type of matcher allowed is a Regexp.\n\t    // Match entire URL / disallow partial matches.\n\t    // Flags are reset (i.e. no global, ignoreCase or multiline)\n\t    return new RegExp('^' + matcher.source + '$');\n\t  } else {\n\t    throw $sceMinErr('imatcher',\n\t        'Matchers may only be \"self\", string patterns or RegExp objects');\n\t  }\n\t}\n\t\n\t\n\tfunction adjustMatchers(matchers) {\n\t  var adjustedMatchers = [];\n\t  if (isDefined(matchers)) {\n\t    forEach(matchers, function(matcher) {\n\t      adjustedMatchers.push(adjustMatcher(matcher));\n\t    });\n\t  }\n\t  return adjustedMatchers;\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $sceDelegate\n\t * @kind function\n\t *\n\t * @description\n\t *\n\t * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\n\t * Contextual Escaping (SCE)} services to AngularJS.\n\t *\n\t * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\n\t * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\n\t * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to\n\t * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\n\t * work because `$sce` delegates to `$sceDelegate` for these operations.\n\t *\n\t * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n\t *\n\t * The default instance of `$sceDelegate` should work out of the box with little pain.  While you\n\t * can override it completely to change the behavior of `$sce`, the common case would\n\t * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\n\t * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\n\t * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n\t * $sceDelegateProvider.resourceUrlWhitelist} and {@link\n\t * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\t */\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $sceDelegateProvider\n\t * @description\n\t *\n\t * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n\t * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\n\t * that the URLs used for sourcing Angular templates are safe.  Refer {@link\n\t * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n\t * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\t *\n\t * For the general details about this service in Angular, read the main page for {@link ng.$sce\n\t * Strict Contextual Escaping (SCE)}.\n\t *\n\t * **Example**:  Consider the following case. <a name=\"example\"></a>\n\t *\n\t * - your app is hosted at url `http://myapp.example.com/`\n\t * - but some of your templates are hosted on other domains you control such as\n\t *   `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n\t * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n\t *\n\t * Here is what a secure configuration for this scenario might look like:\n\t *\n\t * ```\n\t *  angular.module('myApp', []).config(function($sceDelegateProvider) {\n\t *    $sceDelegateProvider.resourceUrlWhitelist([\n\t *      // Allow same origin resource loads.\n\t *      'self',\n\t *      // Allow loading from our assets domain.  Notice the difference between * and **.\n\t *      'http://srv*.assets.example.com/**'\n\t *    ]);\n\t *\n\t *    // The blacklist overrides the whitelist so the open redirect here is blocked.\n\t *    $sceDelegateProvider.resourceUrlBlacklist([\n\t *      'http://myapp.example.com/clickThru**'\n\t *    ]);\n\t *  });\n\t * ```\n\t */\n\t\n\tfunction $SceDelegateProvider() {\n\t  this.SCE_CONTEXTS = SCE_CONTEXTS;\n\t\n\t  // Resource URLs can also be trusted by policy.\n\t  var resourceUrlWhitelist = ['self'],\n\t      resourceUrlBlacklist = [];\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $sceDelegateProvider#resourceUrlWhitelist\n\t   * @kind function\n\t   *\n\t   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value\n\t   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n\t   *     changes to the array are ignored.\n\t   *\n\t   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n\t   *     allowed in this array.\n\t   *\n\t   *     Note: **an empty whitelist array will block all URLs**!\n\t   *\n\t   * @return {Array} the currently set whitelist array.\n\t   *\n\t   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only\n\t   * same origin resource requests.\n\t   *\n\t   * @description\n\t   * Sets/Gets the whitelist of trusted resource URLs.\n\t   */\n\t  this.resourceUrlWhitelist = function (value) {\n\t    if (arguments.length) {\n\t      resourceUrlWhitelist = adjustMatchers(value);\n\t    }\n\t    return resourceUrlWhitelist;\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $sceDelegateProvider#resourceUrlBlacklist\n\t   * @kind function\n\t   *\n\t   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value\n\t   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n\t   *     changes to the array are ignored.\n\t   *\n\t   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n\t   *     allowed in this array.\n\t   *\n\t   *     The typical usage for the blacklist is to **block\n\t   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n\t   *     these would otherwise be trusted but actually return content from the redirected domain.\n\t   *\n\t   *     Finally, **the blacklist overrides the whitelist** and has the final say.\n\t   *\n\t   * @return {Array} the currently set blacklist array.\n\t   *\n\t   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there\n\t   * is no blacklist.)\n\t   *\n\t   * @description\n\t   * Sets/Gets the blacklist of trusted resource URLs.\n\t   */\n\t\n\t  this.resourceUrlBlacklist = function (value) {\n\t    if (arguments.length) {\n\t      resourceUrlBlacklist = adjustMatchers(value);\n\t    }\n\t    return resourceUrlBlacklist;\n\t  };\n\t\n\t  this.$get = ['$injector', function($injector) {\n\t\n\t    var htmlSanitizer = function htmlSanitizer(html) {\n\t      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n\t    };\n\t\n\t    if ($injector.has('$sanitize')) {\n\t      htmlSanitizer = $injector.get('$sanitize');\n\t    }\n\t\n\t\n\t    function matchUrl(matcher, parsedUrl) {\n\t      if (matcher === 'self') {\n\t        return urlIsSameOrigin(parsedUrl);\n\t      } else {\n\t        // definitely a regex.  See adjustMatchers()\n\t        return !!matcher.exec(parsedUrl.href);\n\t      }\n\t    }\n\t\n\t    function isResourceUrlAllowedByPolicy(url) {\n\t      var parsedUrl = urlResolve(url.toString());\n\t      var i, n, allowed = false;\n\t      // Ensure that at least one item from the whitelist allows this url.\n\t      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {\n\t        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {\n\t          allowed = true;\n\t          break;\n\t        }\n\t      }\n\t      if (allowed) {\n\t        // Ensure that no item from the blacklist blocked this url.\n\t        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {\n\t          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {\n\t            allowed = false;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      return allowed;\n\t    }\n\t\n\t    function generateHolderType(Base) {\n\t      var holderType = function TrustedValueHolderType(trustedValue) {\n\t        this.$$unwrapTrustedValue = function() {\n\t          return trustedValue;\n\t        };\n\t      };\n\t      if (Base) {\n\t        holderType.prototype = new Base();\n\t      }\n\t      holderType.prototype.valueOf = function sceValueOf() {\n\t        return this.$$unwrapTrustedValue();\n\t      };\n\t      holderType.prototype.toString = function sceToString() {\n\t        return this.$$unwrapTrustedValue().toString();\n\t      };\n\t      return holderType;\n\t    }\n\t\n\t    var trustedValueHolderBase = generateHolderType(),\n\t        byType = {};\n\t\n\t    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);\n\t    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);\n\t    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);\n\t    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);\n\t    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sceDelegate#trustAs\n\t     *\n\t     * @description\n\t     * Returns an object that is trusted by angular for use in specified strict\n\t     * contextual escaping contexts (such as ng-bind-html, ng-include, any src\n\t     * attribute interpolation, any dom event binding attribute interpolation\n\t     * such as for onclick,  etc.) that uses the provided value.\n\t     * See {@link ng.$sce $sce} for enabling strict contextual escaping.\n\t     *\n\t     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n\t     *   resourceUrl, html, js and css.\n\t     * @param {*} value The value that that should be considered trusted/safe.\n\t     * @returns {*} A value that can be used to stand in for the provided `value` in places\n\t     * where Angular expects a $sce.trustAs() return value.\n\t     */\n\t    function trustAs(type, trustedValue) {\n\t      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n\t      if (!Constructor) {\n\t        throw $sceMinErr('icontext',\n\t            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',\n\t            type, trustedValue);\n\t      }\n\t      if (trustedValue === null || trustedValue === undefined || trustedValue === '') {\n\t        return trustedValue;\n\t      }\n\t      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting\n\t      // mutable objects, we ensure here that the value passed in is actually a string.\n\t      if (typeof trustedValue !== 'string') {\n\t        throw $sceMinErr('itype',\n\t            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',\n\t            type);\n\t      }\n\t      return new Constructor(trustedValue);\n\t    }\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sceDelegate#valueOf\n\t     *\n\t     * @description\n\t     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n\t     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link\n\t     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n\t     *\n\t     * If the passed parameter is not a value that had been returned by {@link\n\t     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.\n\t     *\n\t     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n\t     *      call or anything else.\n\t     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n\t     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n\t     *     `value` unchanged.\n\t     */\n\t    function valueOf(maybeTrusted) {\n\t      if (maybeTrusted instanceof trustedValueHolderBase) {\n\t        return maybeTrusted.$$unwrapTrustedValue();\n\t      } else {\n\t        return maybeTrusted;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sceDelegate#getTrusted\n\t     *\n\t     * @description\n\t     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\n\t     * returns the originally supplied value if the queried context type is a supertype of the\n\t     * created type.  If this condition isn't satisfied, throws an exception.\n\t     *\n\t     * @param {string} type The kind of context in which this value is to be used.\n\t     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs\n\t     *     `$sceDelegate.trustAs`} call.\n\t     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs\n\t     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.\n\t     */\n\t    function getTrusted(type, maybeTrusted) {\n\t      if (maybeTrusted === null || maybeTrusted === undefined || maybeTrusted === '') {\n\t        return maybeTrusted;\n\t      }\n\t      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n\t      if (constructor && maybeTrusted instanceof constructor) {\n\t        return maybeTrusted.$$unwrapTrustedValue();\n\t      }\n\t      // If we get here, then we may only take one of two actions.\n\t      // 1. sanitize the value for the requested type, or\n\t      // 2. throw an exception.\n\t      if (type === SCE_CONTEXTS.RESOURCE_URL) {\n\t        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {\n\t          return maybeTrusted;\n\t        } else {\n\t          throw $sceMinErr('insecurl',\n\t              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',\n\t              maybeTrusted.toString());\n\t        }\n\t      } else if (type === SCE_CONTEXTS.HTML) {\n\t        return htmlSanitizer(maybeTrusted);\n\t      }\n\t      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n\t    }\n\t\n\t    return { trustAs: trustAs,\n\t             getTrusted: getTrusted,\n\t             valueOf: valueOf };\n\t  }];\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $sceProvider\n\t * @description\n\t *\n\t * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n\t * -   enable/disable Strict Contextual Escaping (SCE) in a module\n\t * -   override the default implementation with a custom delegate\n\t *\n\t * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.\n\t */\n\t\n\t/* jshint maxlen: false*/\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $sce\n\t * @kind function\n\t *\n\t * @description\n\t *\n\t * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n\t *\n\t * # Strict Contextual Escaping\n\t *\n\t * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\n\t * contexts to result in a value that is marked as safe to use for that context.  One example of\n\t * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\n\t * to these contexts as privileged or SCE contexts.\n\t *\n\t * As of version 1.2, Angular ships with SCE enabled by default.\n\t *\n\t * Note:  When enabled (the default), IE8 in quirks mode is not supported.  In this mode, IE8 allows\n\t * one to execute arbitrary javascript by the use of the expression() syntax.  Refer\n\t * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\n\t * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\n\t * to the top of your HTML document.\n\t *\n\t * SCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\n\t * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n\t *\n\t * Here's an example of a binding in a privileged context:\n\t *\n\t * ```\n\t * <input ng-model=\"userHtml\">\n\t * <div ng-bind-html=\"userHtml\"></div>\n\t * ```\n\t *\n\t * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\n\t * disabled, this application allows the user to render arbitrary HTML into the DIV.\n\t * In a more realistic example, one may be rendering user comments, blog articles, etc. via\n\t * bindings.  (HTML is just one example of a context where rendering user controlled input creates\n\t * security vulnerabilities.)\n\t *\n\t * For the case of HTML, you might use a library, either on the client side, or on the server side,\n\t * to sanitize unsafe HTML before binding to the value and rendering it in the document.\n\t *\n\t * How would you ensure that every place that used these types of bindings was bound to a value that\n\t * was sanitized by your library (or returned as safe for rendering by your server?)  How can you\n\t * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some\n\t * properties/fields and forgot to update the binding to the sanitized value?\n\t *\n\t * To be secure by default, you want to ensure that any such bindings are disallowed unless you can\n\t * determine that something explicitly says it's safe to use a value for binding in that\n\t * context.  You can then audit your code (a simple grep would do) to ensure that this is only done\n\t * for those values that you can easily tell are safe - because they were received from your server,\n\t * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps\n\t * allowing only the files in a specific directory to do this.  Ensuring that the internal API\n\t * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n\t *\n\t * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n\t * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\n\t * obtain values that will be accepted by SCE / privileged contexts.\n\t *\n\t *\n\t * ## How does it work?\n\t *\n\t * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n\t * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\n\t * ng.$sce#parse $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n\t * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n\t *\n\t * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\n\t * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\n\t * simplified):\n\t *\n\t * ```\n\t * var ngBindHtmlDirective = ['$sce', function($sce) {\n\t *   return function(scope, element, attr) {\n\t *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n\t *       element.html(value || '');\n\t *     });\n\t *   };\n\t * }];\n\t * ```\n\t *\n\t * ## Impact on loading templates\n\t *\n\t * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n\t * `templateUrl`'s specified by {@link guide/directive directives}.\n\t *\n\t * By default, Angular only loads templates from the same domain and protocol as the application\n\t * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n\t * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\n\t * protocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\n\t * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n\t *\n\t * *Please note*:\n\t * The browser's\n\t * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n\t * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n\t * policy apply in addition to this and may further restrict whether the template is successfully\n\t * loaded.  This means that without the right CORS policy, loading templates from a different domain\n\t * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some\n\t * browsers.\n\t *\n\t * ## This feels like too much overhead for the developer?\n\t *\n\t * It's important to remember that SCE only applies to interpolation expressions.\n\t *\n\t * If your expressions are constant literals, they're automatically trusted and you don't need to\n\t * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n\t * `<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n\t *\n\t * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\n\t * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n\t *\n\t * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\n\t * templates in `ng-include` from your application's domain without having to even know about SCE.\n\t * It blocks loading templates from other domains or loading templates over http from an https\n\t * served document.  You can change these by setting your own custom {@link\n\t * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\n\t * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n\t *\n\t * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an\n\t * application that's secure and can be audited to verify that with much more ease than bolting\n\t * security onto an application later.\n\t *\n\t * <a name=\"contexts\"></a>\n\t * ## What trusted context types are supported?\n\t *\n\t * | Context             | Notes          |\n\t * |---------------------|----------------|\n\t * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n\t * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n\t * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n\t * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n\t * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n\t *\n\t * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n\t *\n\t *  Each element in these arrays must be one of the following:\n\t *\n\t *  - **'self'**\n\t *    - The special **string**, `'self'`, can be used to match against all URLs of the **same\n\t *      domain** as the application document using the **same protocol**.\n\t *  - **String** (except the special value `'self'`)\n\t *    - The string is matched against the full *normalized / absolute URL* of the resource\n\t *      being tested (substring matches are not good enough.)\n\t *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n\t *      match themselves.\n\t *    - `*`: matches zero or more occurrences of any character other than one of the following 6\n\t *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\n\t *      in a whitelist.\n\t *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n\t *      not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\n\t *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n\t *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n\t *      http://foo.example.com/templates/**).\n\t *  - **RegExp** (*see caveat below*)\n\t *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n\t *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n\t *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n\t *      have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\n\t *      small number of cases.  A `.` character in the regex used when matching the scheme or a\n\t *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n\t *      is highly recommended to use the string patterns and only fall back to regular expressions\n\t *      if they as a last resort.\n\t *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n\t *      matched against the **entire** *normalized / absolute URL* of the resource being tested\n\t *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n\t *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n\t *    - If you are generating your JavaScript from some other templating engine (not\n\t *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n\t *      remember to escape your regular expression (and be aware that you might need more than\n\t *      one level of escaping depending on your templating engine and the way you interpolated\n\t *      the value.)  Do make use of your platform's escaping mechanism as it might be good\n\t *      enough before coding your own.  e.g. Ruby has\n\t *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n\t *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n\t *      Javascript lacks a similar built in function for escaping.  Take a look at Google\n\t *      Closure library's [goog.string.regExpEscape(s)](\n\t *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n\t *\n\t * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n\t *\n\t * ## Show me an example using SCE.\n\t *\n\t * <example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n\t * <file name=\"index.html\">\n\t *   <div ng-controller=\"myAppController as myCtrl\">\n\t *     <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n\t *     <b>User comments</b><br>\n\t *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n\t *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n\t *     exploit.\n\t *     <div class=\"well\">\n\t *       <div ng-repeat=\"userComment in myCtrl.userComments\">\n\t *         <b>{{userComment.name}}</b>:\n\t *         <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n\t *         <br>\n\t *       </div>\n\t *     </div>\n\t *   </div>\n\t * </file>\n\t *\n\t * <file name=\"script.js\">\n\t *   var mySceApp = angular.module('mySceApp', ['ngSanitize']);\n\t *\n\t *   mySceApp.controller(\"myAppController\", function myAppController($http, $templateCache, $sce) {\n\t *     var self = this;\n\t *     $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n\t *       self.userComments = userComments;\n\t *     });\n\t *     self.explicitlyTrustedHtml = $sce.trustAsHtml(\n\t *         '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n\t *         'sanitization.&quot;\">Hover over this text.</span>');\n\t *   });\n\t * </file>\n\t *\n\t * <file name=\"test_data.json\">\n\t * [\n\t *   { \"name\": \"Alice\",\n\t *     \"htmlComment\":\n\t *         \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n\t *   },\n\t *   { \"name\": \"Bob\",\n\t *     \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n\t *   }\n\t * ]\n\t * </file>\n\t *\n\t * <file name=\"protractor.js\" type=\"protractor\">\n\t *   describe('SCE doc demo', function() {\n\t *     it('should sanitize untrusted values', function() {\n\t *       expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n\t *           .toBe('<span>Is <i>anyone</i> reading this?</span>');\n\t *     });\n\t *\n\t *     it('should NOT sanitize explicitly trusted values', function() {\n\t *       expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n\t *           '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n\t *           'sanitization.&quot;\">Hover over this text.</span>');\n\t *     });\n\t *   });\n\t * </file>\n\t * </example>\n\t *\n\t *\n\t *\n\t * ## Can I disable SCE completely?\n\t *\n\t * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\n\t * for little coding overhead.  It will be much harder to take an SCE disabled application and\n\t * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\n\t * for cases where you have a lot of existing code that was written before SCE was introduced and\n\t * you're migrating them a module at a time.\n\t *\n\t * That said, here's how you can completely disable SCE:\n\t *\n\t * ```\n\t * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n\t *   // Completely disable SCE.  For demonstration purposes only!\n\t *   // Do not use in new projects.\n\t *   $sceProvider.enabled(false);\n\t * });\n\t * ```\n\t *\n\t */\n\t/* jshint maxlen: 100 */\n\t\n\tfunction $SceProvider() {\n\t  var enabled = true;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $sceProvider#enabled\n\t   * @kind function\n\t   *\n\t   * @param {boolean=} value If provided, then enables/disables SCE.\n\t   * @return {boolean} true if SCE is enabled, false otherwise.\n\t   *\n\t   * @description\n\t   * Enables/disables SCE and returns the current value.\n\t   */\n\t  this.enabled = function (value) {\n\t    if (arguments.length) {\n\t      enabled = !!value;\n\t    }\n\t    return enabled;\n\t  };\n\t\n\t\n\t  /* Design notes on the default implementation for SCE.\n\t   *\n\t   * The API contract for the SCE delegate\n\t   * -------------------------------------\n\t   * The SCE delegate object must provide the following 3 methods:\n\t   *\n\t   * - trustAs(contextEnum, value)\n\t   *     This method is used to tell the SCE service that the provided value is OK to use in the\n\t   *     contexts specified by contextEnum.  It must return an object that will be accepted by\n\t   *     getTrusted() for a compatible contextEnum and return this value.\n\t   *\n\t   * - valueOf(value)\n\t   *     For values that were not produced by trustAs(), return them as is.  For values that were\n\t   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if\n\t   *     trustAs is wrapping the given values into some type, this operation unwraps it when given\n\t   *     such a value.\n\t   *\n\t   * - getTrusted(contextEnum, value)\n\t   *     This function should return the a value that is safe to use in the context specified by\n\t   *     contextEnum or throw and exception otherwise.\n\t   *\n\t   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be\n\t   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For\n\t   * instance, an implementation could maintain a registry of all trusted objects by context.  In\n\t   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would\n\t   * return the same object passed in if it was found in the registry under a compatible context or\n\t   * throw an exception otherwise.  An implementation might only wrap values some of the time based\n\t   * on some criteria.  getTrusted() might return a value and not throw an exception for special\n\t   * constants or objects even if not wrapped.  All such implementations fulfill this contract.\n\t   *\n\t   *\n\t   * A note on the inheritance model for SCE contexts\n\t   * ------------------------------------------------\n\t   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This\n\t   * is purely an implementation details.\n\t   *\n\t   * The contract is simply this:\n\t   *\n\t   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)\n\t   *     will also succeed.\n\t   *\n\t   * Inheritance happens to capture this in a natural way.  In some future, we\n\t   * may not use inheritance anymore.  That is OK because no code outside of\n\t   * sce.js and sceSpecs.js would need to be aware of this detail.\n\t   */\n\t\n\t  this.$get = ['$parse', '$sniffer', '$sceDelegate', function(\n\t                $parse,   $sniffer,   $sceDelegate) {\n\t    // Prereq: Ensure that we're not running in IE8 quirks mode.  In that mode, IE allows\n\t    // the \"expression(javascript expression)\" syntax which is insecure.\n\t    if (enabled && $sniffer.msie && $sniffer.msieDocumentMode < 8) {\n\t      throw $sceMinErr('iequirks',\n\t        'Strict Contextual Escaping does not support Internet Explorer version < 9 in quirks ' +\n\t        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +\n\t        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');\n\t    }\n\t\n\t    var sce = shallowCopy(SCE_CONTEXTS);\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#isEnabled\n\t     * @kind function\n\t     *\n\t     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you\n\t     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.\n\t     *\n\t     * @description\n\t     * Returns a boolean indicating if SCE is enabled.\n\t     */\n\t    sce.isEnabled = function () {\n\t      return enabled;\n\t    };\n\t    sce.trustAs = $sceDelegate.trustAs;\n\t    sce.getTrusted = $sceDelegate.getTrusted;\n\t    sce.valueOf = $sceDelegate.valueOf;\n\t\n\t    if (!enabled) {\n\t      sce.trustAs = sce.getTrusted = function(type, value) { return value; };\n\t      sce.valueOf = identity;\n\t    }\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAs\n\t     *\n\t     * @description\n\t     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link\n\t     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\n\t     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n\t     * *result*)}\n\t     *\n\t     * @param {string} type The kind of SCE context in which this result will be used.\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t    sce.parseAs = function sceParseAs(type, expr) {\n\t      var parsed = $parse(expr);\n\t      if (parsed.literal && parsed.constant) {\n\t        return parsed;\n\t      } else {\n\t        return function sceParseAsTrusted(self, locals) {\n\t          return sce.getTrusted(type, parsed(self, locals));\n\t        };\n\t      }\n\t    };\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#trustAs\n\t     *\n\t     * @description\n\t     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\n\t     * returns an object that is trusted by angular for use in specified strict contextual\n\t     * escaping contexts (such as ng-bind-html, ng-include, any src attribute\n\t     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\n\t     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\n\t     * escaping.\n\t     *\n\t     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n\t     *   resource_url, html, js and css.\n\t     * @param {*} value The value that that should be considered trusted/safe.\n\t     * @returns {*} A value that can be used to stand in for the provided `value` in places\n\t     * where Angular expects a $sce.trustAs() return value.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#trustAsHtml\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.trustAsHtml(value)` →\n\t     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}\n\t     *\n\t     * @param {*} value The value to trustAs.\n\t     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml\n\t     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n\t     *     only accept expressions that are either literal constants or are the\n\t     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#trustAsUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.trustAsUrl(value)` →\n\t     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}\n\t     *\n\t     * @param {*} value The value to trustAs.\n\t     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl\n\t     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n\t     *     only accept expressions that are either literal constants or are the\n\t     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#trustAsResourceUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n\t     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}\n\t     *\n\t     * @param {*} value The value to trustAs.\n\t     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n\t     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n\t     *     only accept expressions that are either literal constants or are the return\n\t     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#trustAsJs\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.trustAsJs(value)` →\n\t     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}\n\t     *\n\t     * @param {*} value The value to trustAs.\n\t     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs\n\t     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n\t     *     only accept expressions that are either literal constants or are the\n\t     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrusted\n\t     *\n\t     * @description\n\t     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\n\t     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\n\t     * originally supplied value if the queried context type is a supertype of the created type.\n\t     * If this condition isn't satisfied, throws an exception.\n\t     *\n\t     * @param {string} type The kind of context in which this value is to be used.\n\t     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n\t     *                         call.\n\t     * @returns {*} The value the was originally provided to\n\t     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n\t     *              Otherwise, throws an exception.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrustedHtml\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.getTrustedHtml(value)` →\n\t     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}\n\t     *\n\t     * @param {*} value The value to pass to `$sce.getTrusted`.\n\t     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrustedCss\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.getTrustedCss(value)` →\n\t     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}\n\t     *\n\t     * @param {*} value The value to pass to `$sce.getTrusted`.\n\t     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrustedUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.getTrustedUrl(value)` →\n\t     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}\n\t     *\n\t     * @param {*} value The value to pass to `$sce.getTrusted`.\n\t     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrustedResourceUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n\t     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}\n\t     *\n\t     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.\n\t     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#getTrustedJs\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.getTrustedJs(value)` →\n\t     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}\n\t     *\n\t     * @param {*} value The value to pass to `$sce.getTrusted`.\n\t     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAsHtml\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.parseAsHtml(expression string)` →\n\t     *     {@link ng.$sce#parse `$sce.parseAs($sce.HTML, value)`}\n\t     *\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAsCss\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.parseAsCss(value)` →\n\t     *     {@link ng.$sce#parse `$sce.parseAs($sce.CSS, value)`}\n\t     *\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAsUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.parseAsUrl(value)` →\n\t     *     {@link ng.$sce#parse `$sce.parseAs($sce.URL, value)`}\n\t     *\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAsResourceUrl\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n\t     *     {@link ng.$sce#parse `$sce.parseAs($sce.RESOURCE_URL, value)`}\n\t     *\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t\n\t    /**\n\t     * @ngdoc method\n\t     * @name $sce#parseAsJs\n\t     *\n\t     * @description\n\t     * Shorthand method.  `$sce.parseAsJs(value)` →\n\t     *     {@link ng.$sce#parse `$sce.parseAs($sce.JS, value)`}\n\t     *\n\t     * @param {string} expression String expression to compile.\n\t     * @returns {function(context, locals)} a function which represents the compiled expression:\n\t     *\n\t     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n\t     *      are evaluated against (typically a scope object).\n\t     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n\t     *      `context`.\n\t     */\n\t\n\t    // Shorthand delegations.\n\t    var parse = sce.parseAs,\n\t        getTrusted = sce.getTrusted,\n\t        trustAs = sce.trustAs;\n\t\n\t    forEach(SCE_CONTEXTS, function (enumValue, name) {\n\t      var lName = lowercase(name);\n\t      sce[camelCase(\"parse_as_\" + lName)] = function (expr) {\n\t        return parse(enumValue, expr);\n\t      };\n\t      sce[camelCase(\"get_trusted_\" + lName)] = function (value) {\n\t        return getTrusted(enumValue, value);\n\t      };\n\t      sce[camelCase(\"trust_as_\" + lName)] = function (value) {\n\t        return trustAs(enumValue, value);\n\t      };\n\t    });\n\t\n\t    return sce;\n\t  }];\n\t}\n\t\n\t/**\n\t * !!! This is an undocumented \"private\" service !!!\n\t *\n\t * @name $sniffer\n\t * @requires $window\n\t * @requires $document\n\t *\n\t * @property {boolean} history Does the browser support html5 history api ?\n\t * @property {boolean} hashchange Does the browser support hashchange event ?\n\t * @property {boolean} transitions Does the browser support CSS transition events ?\n\t * @property {boolean} animations Does the browser support CSS animation events ?\n\t *\n\t * @description\n\t * This is very simple implementation of testing browser's features.\n\t */\n\tfunction $SnifferProvider() {\n\t  this.$get = ['$window', '$document', function($window, $document) {\n\t    var eventSupport = {},\n\t        android =\n\t          int((/android (\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\n\t        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),\n\t        document = $document[0] || {},\n\t        documentMode = document.documentMode,\n\t        vendorPrefix,\n\t        vendorRegex = /^(Moz|webkit|O|ms)(?=[A-Z])/,\n\t        bodyStyle = document.body && document.body.style,\n\t        transitions = false,\n\t        animations = false,\n\t        match;\n\t\n\t    if (bodyStyle) {\n\t      for(var prop in bodyStyle) {\n\t        if(match = vendorRegex.exec(prop)) {\n\t          vendorPrefix = match[0];\n\t          vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);\n\t          break;\n\t        }\n\t      }\n\t\n\t      if(!vendorPrefix) {\n\t        vendorPrefix = ('WebkitOpacity' in bodyStyle) && 'webkit';\n\t      }\n\t\n\t      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));\n\t      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));\n\t\n\t      if (android && (!transitions||!animations)) {\n\t        transitions = isString(document.body.style.webkitTransition);\n\t        animations = isString(document.body.style.webkitAnimation);\n\t      }\n\t    }\n\t\n\t\n\t    return {\n\t      // Android has history.pushState, but it does not update location correctly\n\t      // so let's not use the history API at all.\n\t      // http://code.google.com/p/android/issues/detail?id=17471\n\t      // https://github.com/angular/angular.js/issues/904\n\t\n\t      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has\n\t      // so let's not use the history API also\n\t      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined\n\t      // jshint -W018\n\t      history: !!($window.history && $window.history.pushState && !(android < 4) && !boxee),\n\t      // jshint +W018\n\t      hashchange: 'onhashchange' in $window &&\n\t                  // IE8 compatible mode lies\n\t                  (!documentMode || documentMode > 7),\n\t      hasEvent: function(event) {\n\t        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n\t        // it. In particular the event is not fired when backspace or delete key are pressed or\n\t        // when cut operation is performed.\n\t        if (event == 'input' && msie == 9) return false;\n\t\n\t        if (isUndefined(eventSupport[event])) {\n\t          var divElm = document.createElement('div');\n\t          eventSupport[event] = 'on' + event in divElm;\n\t        }\n\t\n\t        return eventSupport[event];\n\t      },\n\t      csp: csp(),\n\t      vendorPrefix: vendorPrefix,\n\t      transitions : transitions,\n\t      animations : animations,\n\t      android: android,\n\t      msie : msie,\n\t      msieDocumentMode: documentMode\n\t    };\n\t  }];\n\t}\n\t\n\tfunction $TimeoutProvider() {\n\t  this.$get = ['$rootScope', '$browser', '$q', '$exceptionHandler',\n\t       function($rootScope,   $browser,   $q,   $exceptionHandler) {\n\t    var deferreds = {};\n\t\n\t\n\t     /**\n\t      * @ngdoc service\n\t      * @name $timeout\n\t      *\n\t      * @description\n\t      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n\t      * block and delegates any exceptions to\n\t      * {@link ng.$exceptionHandler $exceptionHandler} service.\n\t      *\n\t      * The return value of registering a timeout function is a promise, which will be resolved when\n\t      * the timeout is reached and the timeout function is executed.\n\t      *\n\t      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n\t      *\n\t      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n\t      * synchronously flush the queue of deferred functions.\n\t      *\n\t      * @param {function()} fn A function, whose execution should be delayed.\n\t      * @param {number=} [delay=0] Delay in milliseconds.\n\t      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n\t      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n\t      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n\t      *   promise will be resolved with is the return value of the `fn` function.\n\t      *\n\t      */\n\t    function timeout(fn, delay, invokeApply) {\n\t      var deferred = $q.defer(),\n\t          promise = deferred.promise,\n\t          skipApply = (isDefined(invokeApply) && !invokeApply),\n\t          timeoutId;\n\t\n\t      timeoutId = $browser.defer(function() {\n\t        try {\n\t          deferred.resolve(fn());\n\t        } catch(e) {\n\t          deferred.reject(e);\n\t          $exceptionHandler(e);\n\t        }\n\t        finally {\n\t          delete deferreds[promise.$$timeoutId];\n\t        }\n\t\n\t        if (!skipApply) $rootScope.$apply();\n\t      }, delay);\n\t\n\t      promise.$$timeoutId = timeoutId;\n\t      deferreds[timeoutId] = deferred;\n\t\n\t      return promise;\n\t    }\n\t\n\t\n\t     /**\n\t      * @ngdoc method\n\t      * @name $timeout#cancel\n\t      *\n\t      * @description\n\t      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n\t      * resolved with a rejection.\n\t      *\n\t      * @param {Promise=} promise Promise returned by the `$timeout` function.\n\t      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n\t      *   canceled.\n\t      */\n\t    timeout.cancel = function(promise) {\n\t      if (promise && promise.$$timeoutId in deferreds) {\n\t        deferreds[promise.$$timeoutId].reject('canceled');\n\t        delete deferreds[promise.$$timeoutId];\n\t        return $browser.defer.cancel(promise.$$timeoutId);\n\t      }\n\t      return false;\n\t    };\n\t\n\t    return timeout;\n\t  }];\n\t}\n\t\n\t// NOTE:  The usage of window and document instead of $window and $document here is\n\t// deliberate.  This service depends on the specific behavior of anchor nodes created by the\n\t// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and\n\t// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it\n\t// doesn't know about mocked locations and resolves URLs to the real document - which is\n\t// exactly the behavior needed here.  There is little value is mocking these out for this\n\t// service.\n\tvar urlParsingNode = document.createElement(\"a\");\n\tvar originUrl = urlResolve(window.location.href, true);\n\t\n\t\n\t/**\n\t *\n\t * Implementation Notes for non-IE browsers\n\t * ----------------------------------------\n\t * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,\n\t * results both in the normalizing and parsing of the URL.  Normalizing means that a relative\n\t * URL will be resolved into an absolute URL in the context of the application document.\n\t * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related\n\t * properties are all populated to reflect the normalized URL.  This approach has wide\n\t * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See\n\t * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n\t *\n\t * Implementation Notes for IE\n\t * ---------------------------\n\t * IE >= 8 and <= 10 normalizes the URL when assigned to the anchor node similar to the other\n\t * browsers.  However, the parsed components will not be set if the URL assigned did not specify\n\t * them.  (e.g. if you assign a.href = \"foo\", then a.protocol, a.host, etc. will be empty.)  We\n\t * work around that by performing the parsing in a 2nd step by taking a previously normalized\n\t * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the\n\t * properties such as protocol, hostname, port, etc.\n\t *\n\t * IE7 does not normalize the URL when assigned to an anchor node.  (Apparently, it does, if one\n\t * uses the inner HTML approach to assign the URL as part of an HTML snippet -\n\t * http://stackoverflow.com/a/472729)  However, setting img[src] does normalize the URL.\n\t * Unfortunately, setting img[src] to something like \"javascript:foo\" on IE throws an exception.\n\t * Since the primary usage for normalizing URLs is to sanitize such URLs, we can't use that\n\t * method and IE < 8 is unsupported.\n\t *\n\t * References:\n\t *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n\t *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n\t *   http://url.spec.whatwg.org/#urlutils\n\t *   https://github.com/angular/angular.js/pull/2902\n\t *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n\t *\n\t * @kind function\n\t * @param {string} url The URL to be parsed.\n\t * @description Normalizes and parses a URL.\n\t * @returns {object} Returns the normalized URL as a dictionary.\n\t *\n\t *   | member name   | Description    |\n\t *   |---------------|----------------|\n\t *   | href          | A normalized version of the provided URL if it was not an absolute URL |\n\t *   | protocol      | The protocol including the trailing colon                              |\n\t *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n\t *   | search        | The search params, minus the question mark                             |\n\t *   | hash          | The hash string, minus the hash symbol\n\t *   | hostname      | The hostname\n\t *   | port          | The port, without \":\"\n\t *   | pathname      | The pathname, beginning with \"/\"\n\t *\n\t */\n\tfunction urlResolve(url, base) {\n\t  var href = url;\n\t\n\t  if (msie) {\n\t    // Normalize before parse.  Refer Implementation Notes on why this is\n\t    // done in two steps on IE.\n\t    urlParsingNode.setAttribute(\"href\", href);\n\t    href = urlParsingNode.href;\n\t  }\n\t\n\t  urlParsingNode.setAttribute('href', href);\n\t\n\t  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\t  return {\n\t    href: urlParsingNode.href,\n\t    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n\t    host: urlParsingNode.host,\n\t    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n\t    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n\t    hostname: urlParsingNode.hostname,\n\t    port: urlParsingNode.port,\n\t    pathname: (urlParsingNode.pathname.charAt(0) === '/')\n\t      ? urlParsingNode.pathname\n\t      : '/' + urlParsingNode.pathname\n\t  };\n\t}\n\t\n\t/**\n\t * Parse a request URL and determine whether this is a same-origin request as the application document.\n\t *\n\t * @param {string|object} requestUrl The url of the request as a string that will be resolved\n\t * or a parsed URL object.\n\t * @returns {boolean} Whether the request is for the same origin as the application document.\n\t */\n\tfunction urlIsSameOrigin(requestUrl) {\n\t  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\n\t  return (parsed.protocol === originUrl.protocol &&\n\t          parsed.host === originUrl.host);\n\t}\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $window\n\t *\n\t * @description\n\t * A reference to the browser's `window` object. While `window`\n\t * is globally available in JavaScript, it causes testability problems, because\n\t * it is a global variable. In angular we always refer to it through the\n\t * `$window` service, so it may be overridden, removed or mocked for testing.\n\t *\n\t * Expressions, like the one defined for the `ngClick` directive in the example\n\t * below, are evaluated with respect to the current scope.  Therefore, there is\n\t * no risk of inadvertently coding in a dependency on a global value in such an\n\t * expression.\n\t *\n\t * @example\n\t   <example module=\"windowExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('windowExample', [])\n\t           .controller('ExampleController', ['$scope', '$window', function ($scope, $window) {\n\t             $scope.greeting = 'Hello, World!';\n\t             $scope.doGreeting = function(greeting) {\n\t               $window.alert(greeting);\n\t             };\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         <input type=\"text\" ng-model=\"greeting\" />\n\t         <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t      it('should display the greeting in the input box', function() {\n\t       element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n\t       // If we click the button it will block the test runner\n\t       // element(':button').click();\n\t      });\n\t     </file>\n\t   </example>\n\t */\n\tfunction $WindowProvider(){\n\t  this.$get = valueFn(window);\n\t}\n\t\n\t/* global currencyFilter: true,\n\t dateFilter: true,\n\t filterFilter: true,\n\t jsonFilter: true,\n\t limitToFilter: true,\n\t lowercaseFilter: true,\n\t numberFilter: true,\n\t orderByFilter: true,\n\t uppercaseFilter: true,\n\t */\n\t\n\t/**\n\t * @ngdoc provider\n\t * @name $filterProvider\n\t * @description\n\t *\n\t * Filters are just functions which transform input to an output. However filters need to be\n\t * Dependency Injected. To achieve this a filter definition consists of a factory function which is\n\t * annotated with dependencies and is responsible for creating a filter function.\n\t *\n\t * ```js\n\t *   // Filter registration\n\t *   function MyModule($provide, $filterProvider) {\n\t *     // create a service to demonstrate injection (not always needed)\n\t *     $provide.value('greet', function(name){\n\t *       return 'Hello ' + name + '!';\n\t *     });\n\t *\n\t *     // register a filter factory which uses the\n\t *     // greet service to demonstrate DI.\n\t *     $filterProvider.register('greet', function(greet){\n\t *       // return the filter function which uses the greet service\n\t *       // to generate salutation\n\t *       return function(text) {\n\t *         // filters need to be forgiving so check input validity\n\t *         return text && greet(text) || text;\n\t *       };\n\t *     });\n\t *   }\n\t * ```\n\t *\n\t * The filter function is registered with the `$injector` under the filter name suffix with\n\t * `Filter`.\n\t *\n\t * ```js\n\t *   it('should be the same instance', inject(\n\t *     function($filterProvider) {\n\t *       $filterProvider.register('reverse', function(){\n\t *         return ...;\n\t *       });\n\t *     },\n\t *     function($filter, reverseFilter) {\n\t *       expect($filter('reverse')).toBe(reverseFilter);\n\t *     });\n\t * ```\n\t *\n\t *\n\t * For more information about how angular filters work, and how to create your own filters, see\n\t * {@link guide/filter Filters} in the Angular Developer Guide.\n\t */\n\t\n\t/**\n\t * @ngdoc service\n\t * @name $filter\n\t * @kind function\n\t * @description\n\t * Filters are used for formatting data displayed to the user.\n\t *\n\t * The general syntax in templates is as follows:\n\t *\n\t *         {{ expression [| filter_name[:parameter_value] ... ] }}\n\t *\n\t * @param {String} name Name of the filter function to retrieve\n\t * @return {Function} the filter function\n\t * @example\n\t   <example name=\"$filter\" module=\"filterExample\">\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"MainCtrl\">\n\t        <h3>{{ originalText }}</h3>\n\t        <h3>{{ filteredText }}</h3>\n\t       </div>\n\t     </file>\n\t\n\t     <file name=\"script.js\">\n\t      angular.module('filterExample', [])\n\t      .controller('MainCtrl', function($scope, $filter) {\n\t        $scope.originalText = 'hello';\n\t        $scope.filteredText = $filter('uppercase')($scope.originalText);\n\t      });\n\t     </file>\n\t   </example>\n\t  */\n\t$FilterProvider.$inject = ['$provide'];\n\tfunction $FilterProvider($provide) {\n\t  var suffix = 'Filter';\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name $filterProvider#register\n\t   * @param {string|Object} name Name of the filter function, or an object map of filters where\n\t   *    the keys are the filter names and the values are the filter factories.\n\t   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map\n\t   *    of the registered filter instances.\n\t   */\n\t  function register(name, factory) {\n\t    if(isObject(name)) {\n\t      var filters = {};\n\t      forEach(name, function(filter, key) {\n\t        filters[key] = register(key, filter);\n\t      });\n\t      return filters;\n\t    } else {\n\t      return $provide.factory(name + suffix, factory);\n\t    }\n\t  }\n\t  this.register = register;\n\t\n\t  this.$get = ['$injector', function($injector) {\n\t    return function(name) {\n\t      return $injector.get(name + suffix);\n\t    };\n\t  }];\n\t\n\t  ////////////////////////////////////////\n\t\n\t  /* global\n\t    currencyFilter: false,\n\t    dateFilter: false,\n\t    filterFilter: false,\n\t    jsonFilter: false,\n\t    limitToFilter: false,\n\t    lowercaseFilter: false,\n\t    numberFilter: false,\n\t    orderByFilter: false,\n\t    uppercaseFilter: false,\n\t  */\n\t\n\t  register('currency', currencyFilter);\n\t  register('date', dateFilter);\n\t  register('filter', filterFilter);\n\t  register('json', jsonFilter);\n\t  register('limitTo', limitToFilter);\n\t  register('lowercase', lowercaseFilter);\n\t  register('number', numberFilter);\n\t  register('orderBy', orderByFilter);\n\t  register('uppercase', uppercaseFilter);\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name filter\n\t * @kind function\n\t *\n\t * @description\n\t * Selects a subset of items from `array` and returns it as a new array.\n\t *\n\t * @param {Array} array The source array.\n\t * @param {string|Object|function()} expression The predicate to be used for selecting items from\n\t *   `array`.\n\t *\n\t *   Can be one of:\n\t *\n\t *   - `string`: The string is evaluated as an expression and the resulting value is used for substring match against\n\t *     the contents of the `array`. All strings or objects with string properties in `array` that contain this string\n\t *     will be returned. The predicate can be negated by prefixing the string with `!`.\n\t *\n\t *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n\t *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n\t *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n\t *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n\t *     property of the object. That's equivalent to the simple substring match with a `string`\n\t *     as described above. The predicate can be negated by prefixing the string with `!`.\n\t *     For Example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n\t *     not containing \"M\".\n\t *\n\t *   - `function(value)`: A predicate function can be used to write arbitrary filters. The function is\n\t *     called for each element of `array`. The final result is an array of those elements that\n\t *     the predicate returned true for.\n\t *\n\t * @param {function(actual, expected)|true|undefined} comparator Comparator which is used in\n\t *     determining if the expected value (from the filter expression) and actual value (from\n\t *     the object in the array) should be considered a match.\n\t *\n\t *   Can be one of:\n\t *\n\t *   - `function(actual, expected)`:\n\t *     The function will be given the object value and the predicate value to compare and\n\t *     should return true if the item should be included in filtered result.\n\t *\n\t *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(expected, actual)}`.\n\t *     this is essentially strict comparison of expected and actual.\n\t *\n\t *   - `false|undefined`: A short hand for a function which will look for a substring match in case\n\t *     insensitive way.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n\t                                {name:'Mary', phone:'800-BIG-MARY'},\n\t                                {name:'Mike', phone:'555-4321'},\n\t                                {name:'Adam', phone:'555-5678'},\n\t                                {name:'Julie', phone:'555-8765'},\n\t                                {name:'Juliette', phone:'555-5678'}]\"></div>\n\t\n\t       Search: <input ng-model=\"searchText\">\n\t       <table id=\"searchTextResults\">\n\t         <tr><th>Name</th><th>Phone</th></tr>\n\t         <tr ng-repeat=\"friend in friends | filter:searchText\">\n\t           <td>{{friend.name}}</td>\n\t           <td>{{friend.phone}}</td>\n\t         </tr>\n\t       </table>\n\t       <hr>\n\t       Any: <input ng-model=\"search.$\"> <br>\n\t       Name only <input ng-model=\"search.name\"><br>\n\t       Phone only <input ng-model=\"search.phone\"><br>\n\t       Equality <input type=\"checkbox\" ng-model=\"strict\"><br>\n\t       <table id=\"searchObjResults\">\n\t         <tr><th>Name</th><th>Phone</th></tr>\n\t         <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n\t           <td>{{friendObj.name}}</td>\n\t           <td>{{friendObj.phone}}</td>\n\t         </tr>\n\t       </table>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       var expectFriendNames = function(expectedNames, key) {\n\t         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n\t           arr.forEach(function(wd, i) {\n\t             expect(wd.getText()).toMatch(expectedNames[i]);\n\t           });\n\t         });\n\t       };\n\t\n\t       it('should search across all fields when filtering with a string', function() {\n\t         var searchText = element(by.model('searchText'));\n\t         searchText.clear();\n\t         searchText.sendKeys('m');\n\t         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\t\n\t         searchText.clear();\n\t         searchText.sendKeys('76');\n\t         expectFriendNames(['John', 'Julie'], 'friend');\n\t       });\n\t\n\t       it('should search in specific fields when filtering with a predicate object', function() {\n\t         var searchAny = element(by.model('search.$'));\n\t         searchAny.clear();\n\t         searchAny.sendKeys('i');\n\t         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n\t       });\n\t       it('should use a equal comparison when comparator is true', function() {\n\t         var searchName = element(by.model('search.name'));\n\t         var strict = element(by.model('strict'));\n\t         searchName.clear();\n\t         searchName.sendKeys('Julie');\n\t         strict.click();\n\t         expectFriendNames(['Julie'], 'friendObj');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tfunction filterFilter() {\n\t  return function(array, expression, comparator) {\n\t    if (!isArray(array)) return array;\n\t\n\t    var comparatorType = typeof(comparator),\n\t        predicates = [];\n\t\n\t    predicates.check = function(value) {\n\t      for (var j = 0; j < predicates.length; j++) {\n\t        if(!predicates[j](value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t\n\t    if (comparatorType !== 'function') {\n\t      if (comparatorType === 'boolean' && comparator) {\n\t        comparator = function(obj, text) {\n\t          return angular.equals(obj, text);\n\t        };\n\t      } else {\n\t        comparator = function(obj, text) {\n\t          if (obj && text && typeof obj === 'object' && typeof text === 'object') {\n\t            for (var objKey in obj) {\n\t              if (objKey.charAt(0) !== '$' && hasOwnProperty.call(obj, objKey) &&\n\t                  comparator(obj[objKey], text[objKey])) {\n\t                return true;\n\t              }\n\t            }\n\t            return false;\n\t          }\n\t          text = (''+text).toLowerCase();\n\t          return (''+obj).toLowerCase().indexOf(text) > -1;\n\t        };\n\t      }\n\t    }\n\t\n\t    var search = function(obj, text){\n\t      if (typeof text === 'string' && text.charAt(0) === '!') {\n\t        return !search(obj, text.substr(1));\n\t      }\n\t      switch (typeof obj) {\n\t        case 'boolean':\n\t        case 'number':\n\t        case 'string':\n\t          return comparator(obj, text);\n\t        case 'object':\n\t          switch (typeof text) {\n\t            case 'object':\n\t              return comparator(obj, text);\n\t            default:\n\t              for ( var objKey in obj) {\n\t                if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {\n\t                  return true;\n\t                }\n\t              }\n\t              break;\n\t          }\n\t          return false;\n\t        case 'array':\n\t          for ( var i = 0; i < obj.length; i++) {\n\t            if (search(obj[i], text)) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        default:\n\t          return false;\n\t      }\n\t    };\n\t    switch (typeof expression) {\n\t      case 'boolean':\n\t      case 'number':\n\t      case 'string':\n\t        // Set up expression object and fall through\n\t        expression = {$:expression};\n\t        // jshint -W086\n\t      case 'object':\n\t        // jshint +W086\n\t        for (var key in expression) {\n\t          (function(path) {\n\t            if (typeof expression[path] === 'undefined') return;\n\t            predicates.push(function(value) {\n\t              return search(path == '$' ? value : (value && value[path]), expression[path]);\n\t            });\n\t          })(key);\n\t        }\n\t        break;\n\t      case 'function':\n\t        predicates.push(expression);\n\t        break;\n\t      default:\n\t        return array;\n\t    }\n\t    var filtered = [];\n\t    for ( var j = 0; j < array.length; j++) {\n\t      var value = array[j];\n\t      if (predicates.check(value)) {\n\t        filtered.push(value);\n\t      }\n\t    }\n\t    return filtered;\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name currency\n\t * @kind function\n\t *\n\t * @description\n\t * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n\t * symbol for current locale is used.\n\t *\n\t * @param {number} amount Input to filter.\n\t * @param {string=} symbol Currency symbol or identifier to be displayed.\n\t * @returns {string} Formatted number.\n\t *\n\t *\n\t * @example\n\t   <example module=\"currencyExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('currencyExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.amount = 1234.56;\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         <input type=\"number\" ng-model=\"amount\"> <br>\n\t         default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n\t         custom currency identifier (USD$): <span>{{amount | currency:\"USD$\"}}</span>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should init with 1234.56', function() {\n\t         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n\t         expect(element(by.binding('amount | currency:\"USD$\"')).getText()).toBe('USD$1,234.56');\n\t       });\n\t       it('should update', function() {\n\t         if (browser.params.browser == 'safari') {\n\t           // Safari does not understand the minus key. See\n\t           // https://github.com/angular/protractor/issues/481\n\t           return;\n\t         }\n\t         element(by.model('amount')).clear();\n\t         element(by.model('amount')).sendKeys('-1234');\n\t         expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');\n\t         expect(element(by.binding('amount | currency:\"USD$\"')).getText()).toBe('(USD$1,234.00)');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tcurrencyFilter.$inject = ['$locale'];\n\tfunction currencyFilter($locale) {\n\t  var formats = $locale.NUMBER_FORMATS;\n\t  return function(amount, currencySymbol){\n\t    if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;\n\t    return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).\n\t                replace(/\\u00A4/g, currencySymbol);\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name number\n\t * @kind function\n\t *\n\t * @description\n\t * Formats a number as text.\n\t *\n\t * If the input is not a number an empty string is returned.\n\t *\n\t * @param {number|string} number Number to format.\n\t * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\n\t * If this is not provided then the fraction size is computed from the current locale's number\n\t * formatting pattern. In the case of the default locale, it will be 3.\n\t * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n\t *\n\t * @example\n\t   <example module=\"numberFilterExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('numberFilterExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.val = 1234.56789;\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         Enter number: <input ng-model='val'><br>\n\t         Default formatting: <span id='number-default'>{{val | number}}</span><br>\n\t         No fractions: <span>{{val | number:0}}</span><br>\n\t         Negative number: <span>{{-val | number:4}}</span>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should format numbers', function() {\n\t         expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n\t         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n\t         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n\t       });\n\t\n\t       it('should update', function() {\n\t         element(by.model('val')).clear();\n\t         element(by.model('val')).sendKeys('3374.333');\n\t         expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n\t         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n\t         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n\t      });\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\tnumberFilter.$inject = ['$locale'];\n\tfunction numberFilter($locale) {\n\t  var formats = $locale.NUMBER_FORMATS;\n\t  return function(number, fractionSize) {\n\t    return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n\t      fractionSize);\n\t  };\n\t}\n\t\n\tvar DECIMAL_SEP = '.';\n\tfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n\t  if (number == null || !isFinite(number) || isObject(number)) return '';\n\t\n\t  var isNegative = number < 0;\n\t  number = Math.abs(number);\n\t  var numStr = number + '',\n\t      formatedText = '',\n\t      parts = [];\n\t\n\t  var hasExponent = false;\n\t  if (numStr.indexOf('e') !== -1) {\n\t    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n\t    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n\t      numStr = '0';\n\t      number = 0;\n\t    } else {\n\t      formatedText = numStr;\n\t      hasExponent = true;\n\t    }\n\t  }\n\t\n\t  if (!hasExponent) {\n\t    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\t\n\t    // determine fractionSize if it is not specified\n\t    if (isUndefined(fractionSize)) {\n\t      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n\t    }\n\t\n\t    // safely round numbers in JS without hitting imprecisions of floating-point arithmetics\n\t    // inspired by:\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n\t    number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);\n\t\n\t    if (number === 0) {\n\t      isNegative = false;\n\t    }\n\t\n\t    var fraction = ('' + number).split(DECIMAL_SEP);\n\t    var whole = fraction[0];\n\t    fraction = fraction[1] || '';\n\t\n\t    var i, pos = 0,\n\t        lgroup = pattern.lgSize,\n\t        group = pattern.gSize;\n\t\n\t    if (whole.length >= (lgroup + group)) {\n\t      pos = whole.length - lgroup;\n\t      for (i = 0; i < pos; i++) {\n\t        if ((pos - i)%group === 0 && i !== 0) {\n\t          formatedText += groupSep;\n\t        }\n\t        formatedText += whole.charAt(i);\n\t      }\n\t    }\n\t\n\t    for (i = pos; i < whole.length; i++) {\n\t      if ((whole.length - i)%lgroup === 0 && i !== 0) {\n\t        formatedText += groupSep;\n\t      }\n\t      formatedText += whole.charAt(i);\n\t    }\n\t\n\t    // format fraction part.\n\t    while(fraction.length < fractionSize) {\n\t      fraction += '0';\n\t    }\n\t\n\t    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n\t  } else {\n\t\n\t    if (fractionSize > 0 && number > -1 && number < 1) {\n\t      formatedText = number.toFixed(fractionSize);\n\t    }\n\t  }\n\t\n\t  parts.push(isNegative ? pattern.negPre : pattern.posPre);\n\t  parts.push(formatedText);\n\t  parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n\t  return parts.join('');\n\t}\n\t\n\tfunction padNumber(num, digits, trim) {\n\t  var neg = '';\n\t  if (num < 0) {\n\t    neg =  '-';\n\t    num = -num;\n\t  }\n\t  num = '' + num;\n\t  while(num.length < digits) num = '0' + num;\n\t  if (trim)\n\t    num = num.substr(num.length - digits);\n\t  return neg + num;\n\t}\n\t\n\t\n\tfunction dateGetter(name, size, offset, trim) {\n\t  offset = offset || 0;\n\t  return function(date) {\n\t    var value = date['get' + name]();\n\t    if (offset > 0 || value > -offset)\n\t      value += offset;\n\t    if (value === 0 && offset == -12 ) value = 12;\n\t    return padNumber(value, size, trim);\n\t  };\n\t}\n\t\n\tfunction dateStrGetter(name, shortForm) {\n\t  return function(date, formats) {\n\t    var value = date['get' + name]();\n\t    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\t\n\t    return formats[get][value];\n\t  };\n\t}\n\t\n\tfunction timeZoneGetter(date) {\n\t  var zone = -1 * date.getTimezoneOffset();\n\t  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\t\n\t  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n\t                padNumber(Math.abs(zone % 60), 2);\n\t\n\t  return paddedZone;\n\t}\n\t\n\tfunction ampmGetter(date, formats) {\n\t  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n\t}\n\t\n\tvar DATE_FORMATS = {\n\t  yyyy: dateGetter('FullYear', 4),\n\t    yy: dateGetter('FullYear', 2, 0, true),\n\t     y: dateGetter('FullYear', 1),\n\t  MMMM: dateStrGetter('Month'),\n\t   MMM: dateStrGetter('Month', true),\n\t    MM: dateGetter('Month', 2, 1),\n\t     M: dateGetter('Month', 1, 1),\n\t    dd: dateGetter('Date', 2),\n\t     d: dateGetter('Date', 1),\n\t    HH: dateGetter('Hours', 2),\n\t     H: dateGetter('Hours', 1),\n\t    hh: dateGetter('Hours', 2, -12),\n\t     h: dateGetter('Hours', 1, -12),\n\t    mm: dateGetter('Minutes', 2),\n\t     m: dateGetter('Minutes', 1),\n\t    ss: dateGetter('Seconds', 2),\n\t     s: dateGetter('Seconds', 1),\n\t     // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n\t     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n\t   sss: dateGetter('Milliseconds', 3),\n\t  EEEE: dateStrGetter('Day'),\n\t   EEE: dateStrGetter('Day', true),\n\t     a: ampmGetter,\n\t     Z: timeZoneGetter\n\t};\n\t\n\tvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n\t    NUMBER_STRING = /^\\-?\\d+$/;\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name date\n\t * @kind function\n\t *\n\t * @description\n\t *   Formats `date` to a string based on the requested `format`.\n\t *\n\t *   `format` string can be composed of the following elements:\n\t *\n\t *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n\t *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n\t *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n\t *   * `'MMMM'`: Month in year (January-December)\n\t *   * `'MMM'`: Month in year (Jan-Dec)\n\t *   * `'MM'`: Month in year, padded (01-12)\n\t *   * `'M'`: Month in year (1-12)\n\t *   * `'dd'`: Day in month, padded (01-31)\n\t *   * `'d'`: Day in month (1-31)\n\t *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n\t *   * `'EEE'`: Day in Week, (Sun-Sat)\n\t *   * `'HH'`: Hour in day, padded (00-23)\n\t *   * `'H'`: Hour in day (0-23)\n\t *   * `'hh'`: Hour in am/pm, padded (01-12)\n\t *   * `'h'`: Hour in am/pm, (1-12)\n\t *   * `'mm'`: Minute in hour, padded (00-59)\n\t *   * `'m'`: Minute in hour (0-59)\n\t *   * `'ss'`: Second in minute, padded (00-59)\n\t *   * `'s'`: Second in minute (0-59)\n\t *   * `'.sss' or ',sss'`: Millisecond in second, padded (000-999)\n\t *   * `'a'`: am/pm marker\n\t *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n\t *\n\t *   `format` string can also be one of the following predefined\n\t *   {@link guide/i18n localizable formats}:\n\t *\n\t *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n\t *     (e.g. Sep 3, 2010 12:05:08 pm)\n\t *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n\t *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n\t *     (e.g. Friday, September 3, 2010)\n\t *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n\t *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n\t *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n\t *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n\t *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n\t *\n\t *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n\t *   `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n\t *   (e.g. `\"h 'o''clock'\"`).\n\t *\n\t * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n\t *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n\t *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n\t *    specified in the string input, the time is considered to be in the local timezone.\n\t * @param {string=} format Formatting rules (see Description). If not specified,\n\t *    `mediumDate` is used.\n\t * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n\t           <span>{{1288323623006 | date:'medium'}}</span><br>\n\t       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n\t          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n\t       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n\t          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n\t       <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n\t          <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should format date', function() {\n\t         expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n\t            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n\t         expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n\t            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n\t         expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n\t            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n\t         expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n\t            toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tdateFilter.$inject = ['$locale'];\n\tfunction dateFilter($locale) {\n\t\n\t\n\t  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n\t                     // 1        2       3         4          5          6          7          8  9     10      11\n\t  function jsonStringToDate(string) {\n\t    var match;\n\t    if (match = string.match(R_ISO8601_STR)) {\n\t      var date = new Date(0),\n\t          tzHour = 0,\n\t          tzMin  = 0,\n\t          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n\t          timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\t\n\t      if (match[9]) {\n\t        tzHour = int(match[9] + match[10]);\n\t        tzMin = int(match[9] + match[11]);\n\t      }\n\t      dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\n\t      var h = int(match[4]||0) - tzHour;\n\t      var m = int(match[5]||0) - tzMin;\n\t      var s = int(match[6]||0);\n\t      var ms = Math.round(parseFloat('0.' + (match[7]||0)) * 1000);\n\t      timeSetter.call(date, h, m, s, ms);\n\t      return date;\n\t    }\n\t    return string;\n\t  }\n\t\n\t\n\t  return function(date, format) {\n\t    var text = '',\n\t        parts = [],\n\t        fn, match;\n\t\n\t    format = format || 'mediumDate';\n\t    format = $locale.DATETIME_FORMATS[format] || format;\n\t    if (isString(date)) {\n\t      date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);\n\t    }\n\t\n\t    if (isNumber(date)) {\n\t      date = new Date(date);\n\t    }\n\t\n\t    if (!isDate(date)) {\n\t      return date;\n\t    }\n\t\n\t    while(format) {\n\t      match = DATE_FORMATS_SPLIT.exec(format);\n\t      if (match) {\n\t        parts = concat(parts, match, 1);\n\t        format = parts.pop();\n\t      } else {\n\t        parts.push(format);\n\t        format = null;\n\t      }\n\t    }\n\t\n\t    forEach(parts, function(value){\n\t      fn = DATE_FORMATS[value];\n\t      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n\t                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n\t    });\n\t\n\t    return text;\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name json\n\t * @kind function\n\t *\n\t * @description\n\t *   Allows you to convert a JavaScript object into JSON string.\n\t *\n\t *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n\t *   the binding is automatically converted to JSON.\n\t *\n\t * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n\t * @returns {string} JSON string.\n\t *\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <pre>{{ {'name':'value'} | json }}</pre>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should jsonify filtered objects', function() {\n\t         expect(element(by.binding(\"{'name':'value'}\")).getText()).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n\t       });\n\t     </file>\n\t   </example>\n\t *\n\t */\n\tfunction jsonFilter() {\n\t  return function(object) {\n\t    return toJson(object, true);\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name lowercase\n\t * @kind function\n\t * @description\n\t * Converts string to lowercase.\n\t * @see angular.lowercase\n\t */\n\tvar lowercaseFilter = valueFn(lowercase);\n\t\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name uppercase\n\t * @kind function\n\t * @description\n\t * Converts string to uppercase.\n\t * @see angular.uppercase\n\t */\n\tvar uppercaseFilter = valueFn(uppercase);\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name limitTo\n\t * @kind function\n\t *\n\t * @description\n\t * Creates a new array or string containing only a specified number of elements. The elements\n\t * are taken from either the beginning or the end of the source array or string, as specified by\n\t * the value and sign (positive or negative) of `limit`.\n\t *\n\t * @param {Array|string} input Source array or string to be limited.\n\t * @param {string|number} limit The length of the returned array or string. If the `limit` number\n\t *     is positive, `limit` number of items from the beginning of the source array/string are copied.\n\t *     If the number is negative, `limit` number  of items from the end of the source array/string\n\t *     are copied. The `limit` will be trimmed if it exceeds `array.length`\n\t * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array\n\t *     had less than `limit` elements.\n\t *\n\t * @example\n\t   <example module=\"limitToExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('limitToExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.numbers = [1,2,3,4,5,6,7,8,9];\n\t             $scope.letters = \"abcdefghi\";\n\t             $scope.numLimit = 3;\n\t             $scope.letterLimit = 3;\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         Limit {{numbers}} to: <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n\t         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n\t         Limit {{letters}} to: <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n\t         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       var numLimitInput = element(by.model('numLimit'));\n\t       var letterLimitInput = element(by.model('letterLimit'));\n\t       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n\t       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n\t\n\t       it('should limit the number array to first three items', function() {\n\t         expect(numLimitInput.getAttribute('value')).toBe('3');\n\t         expect(letterLimitInput.getAttribute('value')).toBe('3');\n\t         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n\t         expect(limitedLetters.getText()).toEqual('Output letters: abc');\n\t       });\n\t\n\t       // There is a bug in safari and protractor that doesn't like the minus key\n\t       // it('should update the output when -3 is entered', function() {\n\t       //   numLimitInput.clear();\n\t       //   numLimitInput.sendKeys('-3');\n\t       //   letterLimitInput.clear();\n\t       //   letterLimitInput.sendKeys('-3');\n\t       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n\t       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n\t       // });\n\t\n\t       it('should not exceed the maximum size of input array', function() {\n\t         numLimitInput.clear();\n\t         numLimitInput.sendKeys('100');\n\t         letterLimitInput.clear();\n\t         letterLimitInput.sendKeys('100');\n\t         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n\t         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tfunction limitToFilter(){\n\t  return function(input, limit) {\n\t    if (!isArray(input) && !isString(input)) return input;\n\t\n\t    if (Math.abs(Number(limit)) === Infinity) {\n\t      limit = Number(limit);\n\t    } else {\n\t      limit = int(limit);\n\t    }\n\t\n\t    //NaN check on limit\n\t    if (limit) {\n\t      return limit > 0 ? input.slice(0, limit) : input.slice(limit);\n\t    } else {\n\t      return isString(input) ? \"\" : [];\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * @ngdoc filter\n\t * @name orderBy\n\t * @kind function\n\t *\n\t * @description\n\t * Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\n\t * for strings and numerically for numbers. Note: if you notice numbers are not being sorted\n\t * correctly, make sure they are actually being saved as numbers and not strings.\n\t *\n\t * @param {Array} array The array to sort.\n\t * @param {function(*)|string|Array.<(function(*)|string)>=} expression A predicate to be\n\t *    used by the comparator to determine the order of elements.\n\t *\n\t *    Can be one of:\n\t *\n\t *    - `function`: Getter function. The result of this function will be sorted using the\n\t *      `<`, `=`, `>` operator.\n\t *    - `string`: An Angular expression. The result of this expression is used to compare elements\n\t *      (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\n\t *      3 first characters of a property called `name`). The result of a constant expression\n\t *      is interpreted as a property name to be used in comparisons (for example `\"special name\"`\n\t *      to sort object by the value of their `special name` property). An expression can be\n\t *      optionally prefixed with `+` or `-` to control ascending or descending sort order\n\t *      (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\n\t *      element itself is used to compare where sorting.\n\t *    - `Array`: An array of function or string predicates. The first predicate in the array\n\t *      is used for sorting, but when two items are equivalent, the next predicate is used.\n\t *\n\t *    If the predicate is missing or empty then it defaults to `'+'`.\n\t *\n\t * @param {boolean=} reverse Reverse the order of the array.\n\t * @returns {Array} Sorted copy of the source array.\n\t *\n\t * @example\n\t   <example module=\"orderByExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('orderByExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.friends =\n\t                 [{name:'John', phone:'555-1212', age:10},\n\t                  {name:'Mary', phone:'555-9876', age:19},\n\t                  {name:'Mike', phone:'555-4321', age:21},\n\t                  {name:'Adam', phone:'555-5678', age:35},\n\t                  {name:'Julie', phone:'555-8765', age:29}];\n\t             $scope.predicate = '-age';\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n\t         <hr/>\n\t         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n\t         <table class=\"friend\">\n\t           <tr>\n\t             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n\t                 (<a href=\"\" ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n\t             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n\t             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n\t           </tr>\n\t           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n\t             <td>{{friend.name}}</td>\n\t             <td>{{friend.phone}}</td>\n\t             <td>{{friend.age}}</td>\n\t           </tr>\n\t         </table>\n\t       </div>\n\t     </file>\n\t   </example>\n\t *\n\t * It's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\n\t * filter routine with `$filter('orderBy')`, and calling the returned filter routine with the\n\t * desired parameters.\n\t *\n\t * Example:\n\t *\n\t * @example\n\t  <example module=\"orderByExample\">\n\t    <file name=\"index.html\">\n\t      <div ng-controller=\"ExampleController\">\n\t        <table class=\"friend\">\n\t          <tr>\n\t            <th><a href=\"\" ng-click=\"reverse=false;order('name', false)\">Name</a>\n\t              (<a href=\"\" ng-click=\"order('-name',false)\">^</a>)</th>\n\t            <th><a href=\"\" ng-click=\"reverse=!reverse;order('phone', reverse)\">Phone Number</a></th>\n\t            <th><a href=\"\" ng-click=\"reverse=!reverse;order('age',reverse)\">Age</a></th>\n\t          </tr>\n\t          <tr ng-repeat=\"friend in friends\">\n\t            <td>{{friend.name}}</td>\n\t            <td>{{friend.phone}}</td>\n\t            <td>{{friend.age}}</td>\n\t          </tr>\n\t        </table>\n\t      </div>\n\t    </file>\n\t\n\t    <file name=\"script.js\">\n\t      angular.module('orderByExample', [])\n\t        .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\n\t          var orderBy = $filter('orderBy');\n\t          $scope.friends = [\n\t            { name: 'John',    phone: '555-1212',    age: 10 },\n\t            { name: 'Mary',    phone: '555-9876',    age: 19 },\n\t            { name: 'Mike',    phone: '555-4321',    age: 21 },\n\t            { name: 'Adam',    phone: '555-5678',    age: 35 },\n\t            { name: 'Julie',   phone: '555-8765',    age: 29 }\n\t          ];\n\t          $scope.order = function(predicate, reverse) {\n\t            $scope.friends = orderBy($scope.friends, predicate, reverse);\n\t          };\n\t          $scope.order('-age',false);\n\t        }]);\n\t    </file>\n\t</example>\n\t */\n\torderByFilter.$inject = ['$parse'];\n\tfunction orderByFilter($parse){\n\t  return function(array, sortPredicate, reverseOrder) {\n\t    if (!(isArrayLike(array))) return array;\n\t    sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];\n\t    if (sortPredicate.length === 0) { sortPredicate = ['+']; }\n\t    sortPredicate = map(sortPredicate, function(predicate){\n\t      var descending = false, get = predicate || identity;\n\t      if (isString(predicate)) {\n\t        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n\t          descending = predicate.charAt(0) == '-';\n\t          predicate = predicate.substring(1);\n\t        }\n\t        if ( predicate === '' ) {\n\t          // Effectively no predicate was passed so we compare identity\n\t          return reverseComparator(function(a,b) {\n\t            return compare(a, b);\n\t          }, descending);\n\t        }\n\t        get = $parse(predicate);\n\t        if (get.constant) {\n\t          var key = get();\n\t          return reverseComparator(function(a,b) {\n\t            return compare(a[key], b[key]);\n\t          }, descending);\n\t        }\n\t      }\n\t      return reverseComparator(function(a,b){\n\t        return compare(get(a),get(b));\n\t      }, descending);\n\t    });\n\t    return slice.call(array).sort(reverseComparator(comparator, reverseOrder));\n\t\n\t    function comparator(o1, o2){\n\t      for ( var i = 0; i < sortPredicate.length; i++) {\n\t        var comp = sortPredicate[i](o1, o2);\n\t        if (comp !== 0) return comp;\n\t      }\n\t      return 0;\n\t    }\n\t    function reverseComparator(comp, descending) {\n\t      return toBoolean(descending)\n\t          ? function(a,b){return comp(b,a);}\n\t          : comp;\n\t    }\n\t    function compare(v1, v2){\n\t      var t1 = typeof v1;\n\t      var t2 = typeof v2;\n\t      if (t1 == t2) {\n\t        if (isDate(v1) && isDate(v2)) {\n\t          v1 = v1.valueOf();\n\t          v2 = v2.valueOf();\n\t        }\n\t        if (t1 == \"string\") {\n\t           v1 = v1.toLowerCase();\n\t           v2 = v2.toLowerCase();\n\t        }\n\t        if (v1 === v2) return 0;\n\t        return v1 < v2 ? -1 : 1;\n\t      } else {\n\t        return t1 < t2 ? -1 : 1;\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction ngDirective(directive) {\n\t  if (isFunction(directive)) {\n\t    directive = {\n\t      link: directive\n\t    };\n\t  }\n\t  directive.restrict = directive.restrict || 'AC';\n\t  return valueFn(directive);\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name a\n\t * @restrict E\n\t *\n\t * @description\n\t * Modifies the default behavior of the html A tag so that the default action is prevented when\n\t * the href attribute is empty.\n\t *\n\t * This change permits the easy creation of action links with the `ngClick` directive\n\t * without changing the location or causing page reloads, e.g.:\n\t * `<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`\n\t */\n\tvar htmlAnchorDirective = valueFn({\n\t  restrict: 'E',\n\t  compile: function(element, attr) {\n\t\n\t    if (msie <= 8) {\n\t\n\t      // turn <a href ng-click=\"..\">link</a> into a stylable link in IE\n\t      // but only if it doesn't have name attribute, in which case it's an anchor\n\t      if (!attr.href && !attr.name) {\n\t        attr.$set('href', '');\n\t      }\n\t\n\t      // add a comment node to anchors to workaround IE bug that causes element content to be reset\n\t      // to new attribute content if attribute is updated with value containing @ and element also\n\t      // contains value with @\n\t      // see issue #1949\n\t      element.append(document.createComment('IE fix'));\n\t    }\n\t\n\t    if (!attr.href && !attr.xlinkHref && !attr.name) {\n\t      return function(scope, element) {\n\t        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n\t        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\n\t                   'xlink:href' : 'href';\n\t        element.on('click', function(event){\n\t          // if we have no href url, then don't navigate anywhere.\n\t          if (!element.attr(href)) {\n\t            event.preventDefault();\n\t          }\n\t        });\n\t      };\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngHref\n\t * @restrict A\n\t * @priority 99\n\t *\n\t * @description\n\t * Using Angular markup like `{{hash}}` in an href attribute will\n\t * make the link go to the wrong URL if the user clicks it before\n\t * Angular has a chance to replace the `{{hash}}` markup with its\n\t * value. Until Angular replaces the markup the link will be broken\n\t * and will most likely return a 404 error. The `ngHref` directive\n\t * solves this problem.\n\t *\n\t * The wrong way to write it:\n\t * ```html\n\t * <a href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n\t * ```\n\t *\n\t * The correct way to write it:\n\t * ```html\n\t * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n\t * ```\n\t *\n\t * @element A\n\t * @param {template} ngHref any string which can contain `{{}}` markup.\n\t *\n\t * @example\n\t * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes\n\t * in links and their different behaviors:\n\t    <example>\n\t      <file name=\"index.html\">\n\t        <input ng-model=\"value\" /><br />\n\t        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n\t        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n\t        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n\t        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n\t        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n\t        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should execute ng-click but not reload when href without value', function() {\n\t          element(by.id('link-1')).click();\n\t          expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n\t          expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n\t        });\n\t\n\t        it('should execute ng-click but not reload when href empty string', function() {\n\t          element(by.id('link-2')).click();\n\t          expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n\t          expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n\t        });\n\t\n\t        it('should execute ng-click and change url when ng-href specified', function() {\n\t          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\t\n\t          element(by.id('link-3')).click();\n\t\n\t          // At this point, we navigate away from an Angular page, so we need\n\t          // to use browser.driver to get the base webdriver.\n\t\n\t          browser.wait(function() {\n\t            return browser.driver.getCurrentUrl().then(function(url) {\n\t              return url.match(/\\/123$/);\n\t            });\n\t          }, 5000, 'page should navigate to /123');\n\t        });\n\t\n\t        xit('should execute ng-click but not reload when href empty string and name specified', function() {\n\t          element(by.id('link-4')).click();\n\t          expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n\t          expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n\t        });\n\t\n\t        it('should execute ng-click but not reload when no href but name specified', function() {\n\t          element(by.id('link-5')).click();\n\t          expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n\t          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n\t        });\n\t\n\t        it('should only change url when only ng-href', function() {\n\t          element(by.model('value')).clear();\n\t          element(by.model('value')).sendKeys('6');\n\t          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\t\n\t          element(by.id('link-6')).click();\n\t\n\t          // At this point, we navigate away from an Angular page, so we need\n\t          // to use browser.driver to get the base webdriver.\n\t          browser.wait(function() {\n\t            return browser.driver.getCurrentUrl().then(function(url) {\n\t              return url.match(/\\/6$/);\n\t            });\n\t          }, 5000, 'page should navigate to /6');\n\t        });\n\t      </file>\n\t    </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngSrc\n\t * @restrict A\n\t * @priority 99\n\t *\n\t * @description\n\t * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n\t * work right: The browser will fetch from the URL with the literal\n\t * text `{{hash}}` until Angular replaces the expression inside\n\t * `{{hash}}`. The `ngSrc` directive solves this problem.\n\t *\n\t * The buggy way to write it:\n\t * ```html\n\t * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n\t * ```\n\t *\n\t * The correct way to write it:\n\t * ```html\n\t * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n\t * ```\n\t *\n\t * @element IMG\n\t * @param {template} ngSrc any string which can contain `{{}}` markup.\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngSrcset\n\t * @restrict A\n\t * @priority 99\n\t *\n\t * @description\n\t * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\n\t * work right: The browser will fetch from the URL with the literal\n\t * text `{{hash}}` until Angular replaces the expression inside\n\t * `{{hash}}`. The `ngSrcset` directive solves this problem.\n\t *\n\t * The buggy way to write it:\n\t * ```html\n\t * <img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n\t * ```\n\t *\n\t * The correct way to write it:\n\t * ```html\n\t * <img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n\t * ```\n\t *\n\t * @element IMG\n\t * @param {template} ngSrcset any string which can contain `{{}}` markup.\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngDisabled\n\t * @restrict A\n\t * @priority 100\n\t *\n\t * @description\n\t *\n\t * We shouldn't do this, because it will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\n\t * ```html\n\t * <div ng-init=\"scope = { isDisabled: false }\">\n\t *  <button disabled=\"{{scope.isDisabled}}\">Disabled</button>\n\t * </div>\n\t * ```\n\t *\n\t * The HTML specification does not require browsers to preserve the values of boolean attributes\n\t * such as disabled. (Their presence means true and their absence means false.)\n\t * If we put an Angular interpolation expression into such an attribute then the\n\t * binding information would be lost when the browser removes the attribute.\n\t * The `ngDisabled` directive solves this problem for the `disabled` attribute.\n\t * This complementary directive is not removed by the browser and so provides\n\t * a permanent reliable place to store the binding information.\n\t *\n\t * @example\n\t    <example>\n\t      <file name=\"index.html\">\n\t        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\t        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should toggle button', function() {\n\t          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n\t          element(by.model('checked')).click();\n\t          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n\t        });\n\t      </file>\n\t    </example>\n\t *\n\t * @element INPUT\n\t * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,\n\t *     then special attribute \"disabled\" will be set on the element\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngChecked\n\t * @restrict A\n\t * @priority 100\n\t *\n\t * @description\n\t * The HTML specification does not require browsers to preserve the values of boolean attributes\n\t * such as checked. (Their presence means true and their absence means false.)\n\t * If we put an Angular interpolation expression into such an attribute then the\n\t * binding information would be lost when the browser removes the attribute.\n\t * The `ngChecked` directive solves this problem for the `checked` attribute.\n\t * This complementary directive is not removed by the browser and so provides\n\t * a permanent reliable place to store the binding information.\n\t * @example\n\t    <example>\n\t      <file name=\"index.html\">\n\t        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n\t        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should check both checkBoxes', function() {\n\t          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\n\t          element(by.model('master')).click();\n\t          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\n\t        });\n\t      </file>\n\t    </example>\n\t *\n\t * @element INPUT\n\t * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,\n\t *     then special attribute \"checked\" will be set on the element\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngReadonly\n\t * @restrict A\n\t * @priority 100\n\t *\n\t * @description\n\t * The HTML specification does not require browsers to preserve the values of boolean attributes\n\t * such as readonly. (Their presence means true and their absence means false.)\n\t * If we put an Angular interpolation expression into such an attribute then the\n\t * binding information would be lost when the browser removes the attribute.\n\t * The `ngReadonly` directive solves this problem for the `readonly` attribute.\n\t * This complementary directive is not removed by the browser and so provides\n\t * a permanent reliable place to store the binding information.\n\t * @example\n\t    <example>\n\t      <file name=\"index.html\">\n\t        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\t        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should toggle readonly attr', function() {\n\t          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeFalsy();\n\t          element(by.model('checked')).click();\n\t          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeTruthy();\n\t        });\n\t      </file>\n\t    </example>\n\t *\n\t * @element INPUT\n\t * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,\n\t *     then special attribute \"readonly\" will be set on the element\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngSelected\n\t * @restrict A\n\t * @priority 100\n\t *\n\t * @description\n\t * The HTML specification does not require browsers to preserve the values of boolean attributes\n\t * such as selected. (Their presence means true and their absence means false.)\n\t * If we put an Angular interpolation expression into such an attribute then the\n\t * binding information would be lost when the browser removes the attribute.\n\t * The `ngSelected` directive solves this problem for the `selected` attribute.\n\t * This complementary directive is not removed by the browser and so provides\n\t * a permanent reliable place to store the binding information.\n\t *\n\t * @example\n\t    <example>\n\t      <file name=\"index.html\">\n\t        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n\t        <select>\n\t          <option>Hello!</option>\n\t          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n\t        </select>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should select Greetings!', function() {\n\t          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n\t          element(by.model('selected')).click();\n\t          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n\t        });\n\t      </file>\n\t    </example>\n\t *\n\t * @element OPTION\n\t * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,\n\t *     then special attribute \"selected\" will be set on the element\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngOpen\n\t * @restrict A\n\t * @priority 100\n\t *\n\t * @description\n\t * The HTML specification does not require browsers to preserve the values of boolean attributes\n\t * such as open. (Their presence means true and their absence means false.)\n\t * If we put an Angular interpolation expression into such an attribute then the\n\t * binding information would be lost when the browser removes the attribute.\n\t * The `ngOpen` directive solves this problem for the `open` attribute.\n\t * This complementary directive is not removed by the browser and so provides\n\t * a permanent reliable place to store the binding information.\n\t * @example\n\t     <example>\n\t       <file name=\"index.html\">\n\t         Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"><br/>\n\t         <details id=\"details\" ng-open=\"open\">\n\t            <summary>Show/Hide me</summary>\n\t         </details>\n\t       </file>\n\t       <file name=\"protractor.js\" type=\"protractor\">\n\t         it('should toggle open', function() {\n\t           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n\t           element(by.model('open')).click();\n\t           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n\t         });\n\t       </file>\n\t     </example>\n\t *\n\t * @element DETAILS\n\t * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,\n\t *     then special attribute \"open\" will be set on the element\n\t */\n\t\n\tvar ngAttributeAliasDirectives = {};\n\t\n\t\n\t// boolean attrs are evaluated\n\tforEach(BOOLEAN_ATTR, function(propName, attrName) {\n\t  // binding to multiple is not supported\n\t  if (propName == \"multiple\") return;\n\t\n\t  var normalized = directiveNormalize('ng-' + attrName);\n\t  ngAttributeAliasDirectives[normalized] = function() {\n\t    return {\n\t      priority: 100,\n\t      link: function(scope, element, attr) {\n\t        scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n\t          attr.$set(attrName, !!value);\n\t        });\n\t      }\n\t    };\n\t  };\n\t});\n\t\n\t\n\t// ng-src, ng-srcset, ng-href are interpolated\n\tforEach(['src', 'srcset', 'href'], function(attrName) {\n\t  var normalized = directiveNormalize('ng-' + attrName);\n\t  ngAttributeAliasDirectives[normalized] = function() {\n\t    return {\n\t      priority: 99, // it needs to run after the attributes are interpolated\n\t      link: function(scope, element, attr) {\n\t        var propName = attrName,\n\t            name = attrName;\n\t\n\t        if (attrName === 'href' &&\n\t            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {\n\t          name = 'xlinkHref';\n\t          attr.$attr[name] = 'xlink:href';\n\t          propName = null;\n\t        }\n\t\n\t        attr.$observe(normalized, function(value) {\n\t          if (!value) {\n\t            if (attrName === 'href') {\n\t              attr.$set(name, null);\n\t            }\n\t            return;\n\t          }\n\t\n\t          attr.$set(name, value);\n\t\n\t          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n\t          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n\t          // to set the property as well to achieve the desired effect.\n\t          // we use attr[attrName] value since $set can sanitize the url.\n\t          if (msie && propName) element.prop(propName, attr[name]);\n\t        });\n\t      }\n\t    };\n\t  };\n\t});\n\t\n\t/* global -nullFormCtrl */\n\tvar nullFormCtrl = {\n\t  $addControl: noop,\n\t  $removeControl: noop,\n\t  $setValidity: noop,\n\t  $setDirty: noop,\n\t  $setPristine: noop\n\t};\n\t\n\t/**\n\t * @ngdoc type\n\t * @name form.FormController\n\t *\n\t * @property {boolean} $pristine True if user has not interacted with the form yet.\n\t * @property {boolean} $dirty True if user has already interacted with the form.\n\t * @property {boolean} $valid True if all of the containing forms and controls are valid.\n\t * @property {boolean} $invalid True if at least one containing control or form is invalid.\n\t *\n\t * @property {Object} $error Is an object hash, containing references to all invalid controls or\n\t *  forms, where:\n\t *\n\t *  - keys are validation tokens (error names),\n\t *  - values are arrays of controls or forms that are invalid for given error name.\n\t *\n\t *\n\t *  Built-in validation tokens:\n\t *\n\t *  - `email`\n\t *  - `max`\n\t *  - `maxlength`\n\t *  - `min`\n\t *  - `minlength`\n\t *  - `number`\n\t *  - `pattern`\n\t *  - `required`\n\t *  - `url`\n\t *\n\t * @description\n\t * `FormController` keeps track of all its controls and nested forms as well as the state of them,\n\t * such as being valid/invalid or dirty/pristine.\n\t *\n\t * Each {@link ng.directive:form form} directive creates an instance\n\t * of `FormController`.\n\t *\n\t */\n\t//asks for $scope to fool the BC controller module\n\tFormController.$inject = ['$element', '$attrs', '$scope', '$animate'];\n\tfunction FormController(element, attrs, $scope, $animate) {\n\t  var form = this,\n\t      parentForm = element.parent().controller('form') || nullFormCtrl,\n\t      invalidCount = 0, // used to easily determine if we are valid\n\t      errors = form.$error = {},\n\t      controls = [];\n\t\n\t  // init state\n\t  form.$name = attrs.name || attrs.ngForm;\n\t  form.$dirty = false;\n\t  form.$pristine = true;\n\t  form.$valid = true;\n\t  form.$invalid = false;\n\t\n\t  parentForm.$addControl(form);\n\t\n\t  // Setup initial state of the control\n\t  element.addClass(PRISTINE_CLASS);\n\t  toggleValidCss(true);\n\t\n\t  // convenience method for easy toggling of classes\n\t  function toggleValidCss(isValid, validationErrorKey) {\n\t    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n\t    $animate.setClass(element,\n\t      (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey,\n\t      (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);\n\t  }\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name form.FormController#$addControl\n\t   *\n\t   * @description\n\t   * Register a control with the form.\n\t   *\n\t   * Input elements using ngModelController do this automatically when they are linked.\n\t   */\n\t  form.$addControl = function(control) {\n\t    // Breaking change - before, inputs whose name was \"hasOwnProperty\" were quietly ignored\n\t    // and not added to the scope.  Now we throw an error.\n\t    assertNotHasOwnProperty(control.$name, 'input');\n\t    controls.push(control);\n\t\n\t    if (control.$name) {\n\t      form[control.$name] = control;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name form.FormController#$removeControl\n\t   *\n\t   * @description\n\t   * Deregister a control from the form.\n\t   *\n\t   * Input elements using ngModelController do this automatically when they are destroyed.\n\t   */\n\t  form.$removeControl = function(control) {\n\t    if (control.$name && form[control.$name] === control) {\n\t      delete form[control.$name];\n\t    }\n\t    forEach(errors, function(queue, validationToken) {\n\t      form.$setValidity(validationToken, true, control);\n\t    });\n\t\n\t    arrayRemove(controls, control);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name form.FormController#$setValidity\n\t   *\n\t   * @description\n\t   * Sets the validity of a form control.\n\t   *\n\t   * This method will also propagate to parent forms.\n\t   */\n\t  form.$setValidity = function(validationToken, isValid, control) {\n\t    var queue = errors[validationToken];\n\t\n\t    if (isValid) {\n\t      if (queue) {\n\t        arrayRemove(queue, control);\n\t        if (!queue.length) {\n\t          invalidCount--;\n\t          if (!invalidCount) {\n\t            toggleValidCss(isValid);\n\t            form.$valid = true;\n\t            form.$invalid = false;\n\t          }\n\t          errors[validationToken] = false;\n\t          toggleValidCss(true, validationToken);\n\t          parentForm.$setValidity(validationToken, true, form);\n\t        }\n\t      }\n\t\n\t    } else {\n\t      if (!invalidCount) {\n\t        toggleValidCss(isValid);\n\t      }\n\t      if (queue) {\n\t        if (includes(queue, control)) return;\n\t      } else {\n\t        errors[validationToken] = queue = [];\n\t        invalidCount++;\n\t        toggleValidCss(false, validationToken);\n\t        parentForm.$setValidity(validationToken, false, form);\n\t      }\n\t      queue.push(control);\n\t\n\t      form.$valid = false;\n\t      form.$invalid = true;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name form.FormController#$setDirty\n\t   *\n\t   * @description\n\t   * Sets the form to a dirty state.\n\t   *\n\t   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\n\t   * state (ng-dirty class). This method will also propagate to parent forms.\n\t   */\n\t  form.$setDirty = function() {\n\t    $animate.removeClass(element, PRISTINE_CLASS);\n\t    $animate.addClass(element, DIRTY_CLASS);\n\t    form.$dirty = true;\n\t    form.$pristine = false;\n\t    parentForm.$setDirty();\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name form.FormController#$setPristine\n\t   *\n\t   * @description\n\t   * Sets the form to its pristine state.\n\t   *\n\t   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine\n\t   * state (ng-pristine class). This method will also propagate to all the controls contained\n\t   * in this form.\n\t   *\n\t   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\n\t   * saving or resetting it.\n\t   */\n\t  form.$setPristine = function () {\n\t    $animate.removeClass(element, DIRTY_CLASS);\n\t    $animate.addClass(element, PRISTINE_CLASS);\n\t    form.$dirty = false;\n\t    form.$pristine = true;\n\t    forEach(controls, function(control) {\n\t      control.$setPristine();\n\t    });\n\t  };\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngForm\n\t * @restrict EAC\n\t *\n\t * @description\n\t * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n\t * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n\t * sub-group of controls needs to be determined.\n\t *\n\t * Note: the purpose of `ngForm` is to group controls,\n\t * but not to be a replacement for the `<form>` tag with all of its capabilities\n\t * (e.g. posting to the server, ...).\n\t *\n\t * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into\n\t *                       related scope, under this name.\n\t *\n\t */\n\t\n\t /**\n\t * @ngdoc directive\n\t * @name form\n\t * @restrict E\n\t *\n\t * @description\n\t * Directive that instantiates\n\t * {@link form.FormController FormController}.\n\t *\n\t * If the `name` attribute is specified, the form controller is published onto the current scope under\n\t * this name.\n\t *\n\t * # Alias: {@link ng.directive:ngForm `ngForm`}\n\t *\n\t * In Angular forms can be nested. This means that the outer form is valid when all of the child\n\t * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\n\t * Angular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\n\t * `<form>` but can be nested.  This allows you to have nested forms, which is very useful when\n\t * using Angular validation directives in forms that are dynamically generated using the\n\t * {@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\n\t * attribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\n\t * `ngForm` directive and nest these in an outer `form` element.\n\t *\n\t *\n\t * # CSS classes\n\t *  - `ng-valid` is set if the form is valid.\n\t *  - `ng-invalid` is set if the form is invalid.\n\t *  - `ng-pristine` is set if the form is pristine.\n\t *  - `ng-dirty` is set if the form is dirty.\n\t *\n\t * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n\t *\n\t *\n\t * # Submitting a form and preventing the default action\n\t *\n\t * Since the role of forms in client-side Angular applications is different than in classical\n\t * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n\t * page reload that sends the data to the server. Instead some javascript logic should be triggered\n\t * to handle the form submission in an application-specific way.\n\t *\n\t * For this reason, Angular prevents the default action (form submission to the server) unless the\n\t * `<form>` element has an `action` attribute specified.\n\t *\n\t * You can use one of the following two ways to specify what javascript method should be called when\n\t * a form is submitted:\n\t *\n\t * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n\t * - {@link ng.directive:ngClick ngClick} directive on the first\n\t  *  button or input field of type submit (input[type=submit])\n\t *\n\t * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\n\t * or {@link ng.directive:ngClick ngClick} directives.\n\t * This is because of the following form submission rules in the HTML specification:\n\t *\n\t * - If a form has only one input field then hitting enter in this field triggers form submit\n\t * (`ngSubmit`)\n\t * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\n\t * doesn't trigger submit\n\t * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n\t * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n\t * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n\t *\n\t *\n\t * ## Animation Hooks\n\t *\n\t * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.\n\t * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\n\t * other validations that are performed within the form. Animations in ngForm are similar to how\n\t * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\n\t * as JS animations.\n\t *\n\t * The following example shows a simple way to utilize CSS transitions to style a form element\n\t * that has been rendered as invalid after it has been validated:\n\t *\n\t * <pre>\n\t * //be sure to include ngAnimate as a module to hook into more\n\t * //advanced animations\n\t * .my-form {\n\t *   transition:0.5s linear all;\n\t *   background: white;\n\t * }\n\t * .my-form.ng-invalid {\n\t *   background: red;\n\t *   color:white;\n\t * }\n\t * </pre>\n\t *\n\t * @example\n\t    <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n\t      <file name=\"index.html\">\n\t       <script>\n\t         angular.module('formExample', [])\n\t           .controller('FormController', ['$scope', function($scope) {\n\t             $scope.userType = 'guest';\n\t           }]);\n\t       </script>\n\t       <style>\n\t        .my-form {\n\t          -webkit-transition:all linear 0.5s;\n\t          transition:all linear 0.5s;\n\t          background: transparent;\n\t        }\n\t        .my-form.ng-invalid {\n\t          background: red;\n\t        }\n\t       </style>\n\t       <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n\t         userType: <input name=\"input\" ng-model=\"userType\" required>\n\t         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n\t         <tt>userType = {{userType}}</tt><br>\n\t         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n\t         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n\t         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n\t         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n\t        </form>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should initialize to model', function() {\n\t          var userType = element(by.binding('userType'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t\n\t          expect(userType.getText()).toContain('guest');\n\t          expect(valid.getText()).toContain('true');\n\t        });\n\t\n\t        it('should be invalid if empty', function() {\n\t          var userType = element(by.binding('userType'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t          var userInput = element(by.model('userType'));\n\t\n\t          userInput.clear();\n\t          userInput.sendKeys('');\n\t\n\t          expect(userType.getText()).toEqual('userType =');\n\t          expect(valid.getText()).toContain('false');\n\t        });\n\t      </file>\n\t    </example>\n\t *\n\t * @param {string=} name Name of the form. If specified, the form controller will be published into\n\t *                       related scope, under this name.\n\t */\n\tvar formDirectiveFactory = function(isNgForm) {\n\t  return ['$timeout', function($timeout) {\n\t    var formDirective = {\n\t      name: 'form',\n\t      restrict: isNgForm ? 'EAC' : 'E',\n\t      controller: FormController,\n\t      compile: function() {\n\t        return {\n\t          pre: function(scope, formElement, attr, controller) {\n\t            if (!attr.action) {\n\t              // we can't use jq events because if a form is destroyed during submission the default\n\t              // action is not prevented. see #1238\n\t              //\n\t              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n\t              // page reload if the form was destroyed by submission of the form via a click handler\n\t              // on a button in the form. Looks like an IE9 specific bug.\n\t              var preventDefaultListener = function(event) {\n\t                event.preventDefault\n\t                  ? event.preventDefault()\n\t                  : event.returnValue = false; // IE\n\t              };\n\t\n\t              addEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\t\n\t              // unregister the preventDefault listener so that we don't not leak memory but in a\n\t              // way that will achieve the prevention of the default action.\n\t              formElement.on('$destroy', function() {\n\t                $timeout(function() {\n\t                  removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\t                }, 0, false);\n\t              });\n\t            }\n\t\n\t            var parentFormCtrl = formElement.parent().controller('form'),\n\t                alias = attr.name || attr.ngForm;\n\t\n\t            if (alias) {\n\t              setter(scope, alias, controller, alias);\n\t            }\n\t            if (parentFormCtrl) {\n\t              formElement.on('$destroy', function() {\n\t                parentFormCtrl.$removeControl(controller);\n\t                if (alias) {\n\t                  setter(scope, alias, undefined, alias);\n\t                }\n\t                extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n\t              });\n\t            }\n\t          }\n\t        };\n\t      }\n\t    };\n\t\n\t    return formDirective;\n\t  }];\n\t};\n\t\n\tvar formDirective = formDirectiveFactory();\n\tvar ngFormDirective = formDirectiveFactory(true);\n\t\n\t/* global VALID_CLASS: true,\n\t    INVALID_CLASS: true,\n\t    PRISTINE_CLASS: true,\n\t    DIRTY_CLASS: true\n\t*/\n\t\n\tvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\n\tvar EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\tvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\n\t\n\tvar inputType = {\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[text]\n\t   *\n\t   * @description\n\t   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.\n\t   *\n\t   * *NOTE* Not every feature offered is available for all input types.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} required Adds `required` validation error key if the value is not entered.\n\t   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t   *    `required` when you want to data-bind to the `required` attribute.\n\t   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t   *    minlength.\n\t   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t   *    maxlength.\n\t   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t   *    patterns defined as scope expressions.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n\t   *    This parameter is ignored for input[type=password] controls, which will never trim the\n\t   *    input.\n\t   *\n\t   * @example\n\t      <example name=\"text-input-directive\" module=\"textInputExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('textInputExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.text = 'guest';\n\t               $scope.word = /^\\s*\\w*\\s*$/;\n\t             }]);\n\t         </script>\n\t         <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t           Single word: <input type=\"text\" name=\"input\" ng-model=\"text\"\n\t                               ng-pattern=\"word\" required ng-trim=\"false\">\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n\t             Required!</span>\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n\t             Single word only!</span>\n\t\n\t           <tt>text = {{text}}</tt><br/>\n\t           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n\t           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n\t           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n\t           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n\t          </form>\n\t        </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          var text = element(by.binding('text'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t          var input = element(by.model('text'));\n\t\n\t          it('should initialize to model', function() {\n\t            expect(text.getText()).toContain('guest');\n\t            expect(valid.getText()).toContain('true');\n\t          });\n\t\n\t          it('should be invalid if empty', function() {\n\t            input.clear();\n\t            input.sendKeys('');\n\t\n\t            expect(text.getText()).toEqual('text =');\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t\n\t          it('should be invalid if multi word', function() {\n\t            input.clear();\n\t            input.sendKeys('hello world');\n\t\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'text': textInputType,\n\t\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[number]\n\t   *\n\t   * @description\n\t   * Text input with number validation and transformation. Sets the `number` validation\n\t   * error if not a valid number.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n\t   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n\t   * @param {string=} required Sets `required` validation error key if the value is not entered.\n\t   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t   *    `required` when you want to data-bind to the `required` attribute.\n\t   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t   *    minlength.\n\t   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t   *    maxlength.\n\t   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t   *    patterns defined as scope expressions.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   *\n\t   * @example\n\t      <example name=\"number-input-directive\" module=\"numberExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('numberExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.value = 12;\n\t             }]);\n\t         </script>\n\t         <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t           Number: <input type=\"number\" name=\"input\" ng-model=\"value\"\n\t                          min=\"0\" max=\"99\" required>\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n\t             Required!</span>\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n\t             Not valid number!</span>\n\t           <tt>value = {{value}}</tt><br/>\n\t           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n\t           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n\t           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n\t           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n\t          </form>\n\t        </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          var value = element(by.binding('value'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t          var input = element(by.model('value'));\n\t\n\t          it('should initialize to model', function() {\n\t            expect(value.getText()).toContain('12');\n\t            expect(valid.getText()).toContain('true');\n\t          });\n\t\n\t          it('should be invalid if empty', function() {\n\t            input.clear();\n\t            input.sendKeys('');\n\t            expect(value.getText()).toEqual('value =');\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t\n\t          it('should be invalid if over max', function() {\n\t            input.clear();\n\t            input.sendKeys('123');\n\t            expect(value.getText()).toEqual('value =');\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'number': numberInputType,\n\t\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[url]\n\t   *\n\t   * @description\n\t   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n\t   * valid URL.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} required Sets `required` validation error key if the value is not entered.\n\t   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t   *    `required` when you want to data-bind to the `required` attribute.\n\t   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t   *    minlength.\n\t   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t   *    maxlength.\n\t   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t   *    patterns defined as scope expressions.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   *\n\t   * @example\n\t      <example name=\"url-input-directive\" module=\"urlExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('urlExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.text = 'http://google.com';\n\t             }]);\n\t         </script>\n\t         <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t           URL: <input type=\"url\" name=\"input\" ng-model=\"text\" required>\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n\t             Required!</span>\n\t           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n\t             Not valid url!</span>\n\t           <tt>text = {{text}}</tt><br/>\n\t           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n\t           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n\t           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n\t           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n\t           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n\t          </form>\n\t        </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          var text = element(by.binding('text'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t          var input = element(by.model('text'));\n\t\n\t          it('should initialize to model', function() {\n\t            expect(text.getText()).toContain('http://google.com');\n\t            expect(valid.getText()).toContain('true');\n\t          });\n\t\n\t          it('should be invalid if empty', function() {\n\t            input.clear();\n\t            input.sendKeys('');\n\t\n\t            expect(text.getText()).toEqual('text =');\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t\n\t          it('should be invalid if not url', function() {\n\t            input.clear();\n\t            input.sendKeys('box');\n\t\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'url': urlInputType,\n\t\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[email]\n\t   *\n\t   * @description\n\t   * Text input with email validation. Sets the `email` validation error key if not a valid email\n\t   * address.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} required Sets `required` validation error key if the value is not entered.\n\t   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t   *    `required` when you want to data-bind to the `required` attribute.\n\t   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t   *    minlength.\n\t   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t   *    maxlength.\n\t   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t   *    patterns defined as scope expressions.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   *\n\t   * @example\n\t      <example name=\"email-input-directive\" module=\"emailExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('emailExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.text = 'me@example.com';\n\t             }]);\n\t         </script>\n\t           <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t             Email: <input type=\"email\" name=\"input\" ng-model=\"text\" required>\n\t             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n\t               Required!</span>\n\t             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n\t               Not valid email!</span>\n\t             <tt>text = {{text}}</tt><br/>\n\t             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n\t             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n\t             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n\t             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n\t             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n\t           </form>\n\t         </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          var text = element(by.binding('text'));\n\t          var valid = element(by.binding('myForm.input.$valid'));\n\t          var input = element(by.model('text'));\n\t\n\t          it('should initialize to model', function() {\n\t            expect(text.getText()).toContain('me@example.com');\n\t            expect(valid.getText()).toContain('true');\n\t          });\n\t\n\t          it('should be invalid if empty', function() {\n\t            input.clear();\n\t            input.sendKeys('');\n\t            expect(text.getText()).toEqual('text =');\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t\n\t          it('should be invalid if not email', function() {\n\t            input.clear();\n\t            input.sendKeys('xxx');\n\t\n\t            expect(valid.getText()).toContain('false');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'email': emailInputType,\n\t\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[radio]\n\t   *\n\t   * @description\n\t   * HTML radio button.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string} value The value to which the expression should be set when selected.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   * @param {string} ngValue Angular expression which sets the value to which the expression should\n\t   *    be set when selected.\n\t   *\n\t   * @example\n\t      <example name=\"radio-input-directive\" module=\"radioExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('radioExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.color = 'blue';\n\t               $scope.specialValue = {\n\t                 \"id\": \"12345\",\n\t                 \"value\": \"green\"\n\t               };\n\t             }]);\n\t         </script>\n\t         <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t           <input type=\"radio\" ng-model=\"color\" value=\"red\">  Red <br/>\n\t           <input type=\"radio\" ng-model=\"color\" ng-value=\"specialValue\"> Green <br/>\n\t           <input type=\"radio\" ng-model=\"color\" value=\"blue\"> Blue <br/>\n\t           <tt>color = {{color | json}}</tt><br/>\n\t          </form>\n\t          Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n\t        </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          it('should change state', function() {\n\t            var color = element(by.binding('color'));\n\t\n\t            expect(color.getText()).toContain('blue');\n\t\n\t            element.all(by.model('color')).get(0).click();\n\t\n\t            expect(color.getText()).toContain('red');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'radio': radioInputType,\n\t\n\t\n\t  /**\n\t   * @ngdoc input\n\t   * @name input[checkbox]\n\t   *\n\t   * @description\n\t   * HTML checkbox.\n\t   *\n\t   * @param {string} ngModel Assignable angular expression to data-bind to.\n\t   * @param {string=} name Property name of the form under which the control is published.\n\t   * @param {string=} ngTrueValue The value to which the expression should be set when selected.\n\t   * @param {string=} ngFalseValue The value to which the expression should be set when not selected.\n\t   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t   *    interaction with the input element.\n\t   *\n\t   * @example\n\t      <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n\t        <file name=\"index.html\">\n\t         <script>\n\t           angular.module('checkboxExample', [])\n\t             .controller('ExampleController', ['$scope', function($scope) {\n\t               $scope.value1 = true;\n\t               $scope.value2 = 'YES'\n\t             }]);\n\t         </script>\n\t         <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t           Value1: <input type=\"checkbox\" ng-model=\"value1\"> <br/>\n\t           Value2: <input type=\"checkbox\" ng-model=\"value2\"\n\t                          ng-true-value=\"YES\" ng-false-value=\"NO\"> <br/>\n\t           <tt>value1 = {{value1}}</tt><br/>\n\t           <tt>value2 = {{value2}}</tt><br/>\n\t          </form>\n\t        </file>\n\t        <file name=\"protractor.js\" type=\"protractor\">\n\t          it('should change state', function() {\n\t            var value1 = element(by.binding('value1'));\n\t            var value2 = element(by.binding('value2'));\n\t\n\t            expect(value1.getText()).toContain('true');\n\t            expect(value2.getText()).toContain('YES');\n\t\n\t            element(by.model('value1')).click();\n\t            element(by.model('value2')).click();\n\t\n\t            expect(value1.getText()).toContain('false');\n\t            expect(value2.getText()).toContain('NO');\n\t          });\n\t        </file>\n\t      </example>\n\t   */\n\t  'checkbox': checkboxInputType,\n\t\n\t  'hidden': noop,\n\t  'button': noop,\n\t  'submit': noop,\n\t  'reset': noop,\n\t  'file': noop\n\t};\n\t\n\t// A helper function to call $setValidity and return the value / undefined,\n\t// a pattern that is repeated a lot in the input validation logic.\n\tfunction validate(ctrl, validatorName, validity, value){\n\t  ctrl.$setValidity(validatorName, validity);\n\t  return validity ? value : undefined;\n\t}\n\t\n\tfunction testFlags(validity, flags) {\n\t  var i, flag;\n\t  if (flags) {\n\t    for (i=0; i<flags.length; ++i) {\n\t      flag = flags[i];\n\t      if (validity[flag]) {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t// Pass validity so that behaviour can be mocked easier.\n\tfunction addNativeHtml5Validators(ctrl, validatorName, badFlags, ignoreFlags, validity) {\n\t  if (isObject(validity)) {\n\t    ctrl.$$hasNativeValidators = true;\n\t    var validator = function(value) {\n\t      // Don't overwrite previous validation, don't consider valueMissing to apply (ng-required can\n\t      // perform the required validation)\n\t      if (!ctrl.$error[validatorName] &&\n\t          !testFlags(validity, ignoreFlags) &&\n\t          testFlags(validity, badFlags)) {\n\t        ctrl.$setValidity(validatorName, false);\n\t        return;\n\t      }\n\t      return value;\n\t    };\n\t    ctrl.$parsers.push(validator);\n\t  }\n\t}\n\t\n\tfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\t  var validity = element.prop(VALIDITY_STATE_PROPERTY);\n\t  var placeholder = element[0].placeholder, noevent = {};\n\t  var type = lowercase(element[0].type);\n\t  ctrl.$$validityState = validity;\n\t\n\t  // In composition mode, users are still inputing intermediate text buffer,\n\t  // hold the listener until composition is done.\n\t  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent\n\t  if (!$sniffer.android) {\n\t    var composing = false;\n\t\n\t    element.on('compositionstart', function(data) {\n\t      composing = true;\n\t    });\n\t\n\t    element.on('compositionend', function() {\n\t      composing = false;\n\t      listener();\n\t    });\n\t  }\n\t\n\t  var listener = function(ev) {\n\t    if (composing) return;\n\t    var value = element.val();\n\t\n\t    // IE (11 and under) seem to emit an 'input' event if the placeholder value changes.\n\t    // We don't want to dirty the value when this happens, so we abort here. Unfortunately,\n\t    // IE also sends input events for other non-input-related things, (such as focusing on a\n\t    // form control), so this change is not entirely enough to solve this.\n\t    if (msie && (ev || noevent).type === 'input' && element[0].placeholder !== placeholder) {\n\t      placeholder = element[0].placeholder;\n\t      return;\n\t    }\n\t\n\t    // By default we will trim the value\n\t    // If the attribute ng-trim exists we will avoid trimming\n\t    // If input type is 'password', the value is never trimmed\n\t    if (type !== 'password' && (toBoolean(attr.ngTrim || 'T'))) {\n\t      value = trim(value);\n\t    }\n\t\n\t    // If a control is suffering from bad input, browsers discard its value, so it may be\n\t    // necessary to revalidate even if the control's value is the same empty value twice in\n\t    // a row.\n\t    var revalidate = validity && ctrl.$$hasNativeValidators;\n\t    if (ctrl.$viewValue !== value || (value === '' && revalidate)) {\n\t      if (scope.$root.$$phase) {\n\t        ctrl.$setViewValue(value);\n\t      } else {\n\t        scope.$apply(function() {\n\t          ctrl.$setViewValue(value);\n\t        });\n\t      }\n\t    }\n\t  };\n\t\n\t  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n\t  // input event on backspace, delete or cut\n\t  if ($sniffer.hasEvent('input')) {\n\t    element.on('input', listener);\n\t  } else {\n\t    var timeout;\n\t\n\t    var deferListener = function() {\n\t      if (!timeout) {\n\t        timeout = $browser.defer(function() {\n\t          listener();\n\t          timeout = null;\n\t        });\n\t      }\n\t    };\n\t\n\t    element.on('keydown', function(event) {\n\t      var key = event.keyCode;\n\t\n\t      // ignore\n\t      //    command            modifiers                   arrows\n\t      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\t\n\t      deferListener();\n\t    });\n\t\n\t    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n\t    if ($sniffer.hasEvent('paste')) {\n\t      element.on('paste cut', deferListener);\n\t    }\n\t  }\n\t\n\t  // if user paste into input using mouse on older browser\n\t  // or form autocomplete on newer browser, we need \"change\" event to catch it\n\t  element.on('change', listener);\n\t\n\t  ctrl.$render = function() {\n\t    element.val(ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n\t  };\n\t\n\t  // pattern validator\n\t  var pattern = attr.ngPattern,\n\t      patternValidator,\n\t      match;\n\t\n\t  if (pattern) {\n\t    var validateRegex = function(regexp, value) {\n\t      return validate(ctrl, 'pattern', ctrl.$isEmpty(value) || regexp.test(value), value);\n\t    };\n\t    match = pattern.match(/^\\/(.*)\\/([gim]*)$/);\n\t    if (match) {\n\t      pattern = new RegExp(match[1], match[2]);\n\t      patternValidator = function(value) {\n\t        return validateRegex(pattern, value);\n\t      };\n\t    } else {\n\t      patternValidator = function(value) {\n\t        var patternObj = scope.$eval(pattern);\n\t\n\t        if (!patternObj || !patternObj.test) {\n\t          throw minErr('ngPattern')('noregexp',\n\t            'Expected {0} to be a RegExp but was {1}. Element: {2}', pattern,\n\t            patternObj, startingTag(element));\n\t        }\n\t        return validateRegex(patternObj, value);\n\t      };\n\t    }\n\t\n\t    ctrl.$formatters.push(patternValidator);\n\t    ctrl.$parsers.push(patternValidator);\n\t  }\n\t\n\t  // min length validator\n\t  if (attr.ngMinlength) {\n\t    var minlength = int(attr.ngMinlength);\n\t    var minLengthValidator = function(value) {\n\t      return validate(ctrl, 'minlength', ctrl.$isEmpty(value) || value.length >= minlength, value);\n\t    };\n\t\n\t    ctrl.$parsers.push(minLengthValidator);\n\t    ctrl.$formatters.push(minLengthValidator);\n\t  }\n\t\n\t  // max length validator\n\t  if (attr.ngMaxlength) {\n\t    var maxlength = int(attr.ngMaxlength);\n\t    var maxLengthValidator = function(value) {\n\t      return validate(ctrl, 'maxlength', ctrl.$isEmpty(value) || value.length <= maxlength, value);\n\t    };\n\t\n\t    ctrl.$parsers.push(maxLengthValidator);\n\t    ctrl.$formatters.push(maxLengthValidator);\n\t  }\n\t}\n\t\n\tvar numberBadFlags = ['badInput'];\n\t\n\tfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\t  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\t\n\t  ctrl.$parsers.push(function(value) {\n\t    var empty = ctrl.$isEmpty(value);\n\t    if (empty || NUMBER_REGEXP.test(value)) {\n\t      ctrl.$setValidity('number', true);\n\t      return value === '' ? null : (empty ? value : parseFloat(value));\n\t    } else {\n\t      ctrl.$setValidity('number', false);\n\t      return undefined;\n\t    }\n\t  });\n\t\n\t  addNativeHtml5Validators(ctrl, 'number', numberBadFlags, null, ctrl.$$validityState);\n\t\n\t  ctrl.$formatters.push(function(value) {\n\t    return ctrl.$isEmpty(value) ? '' : '' + value;\n\t  });\n\t\n\t  if (attr.min) {\n\t    var minValidator = function(value) {\n\t      var min = parseFloat(attr.min);\n\t      return validate(ctrl, 'min', ctrl.$isEmpty(value) || value >= min, value);\n\t    };\n\t\n\t    ctrl.$parsers.push(minValidator);\n\t    ctrl.$formatters.push(minValidator);\n\t  }\n\t\n\t  if (attr.max) {\n\t    var maxValidator = function(value) {\n\t      var max = parseFloat(attr.max);\n\t      return validate(ctrl, 'max', ctrl.$isEmpty(value) || value <= max, value);\n\t    };\n\t\n\t    ctrl.$parsers.push(maxValidator);\n\t    ctrl.$formatters.push(maxValidator);\n\t  }\n\t\n\t  ctrl.$formatters.push(function(value) {\n\t    return validate(ctrl, 'number', ctrl.$isEmpty(value) || isNumber(value), value);\n\t  });\n\t}\n\t\n\tfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\t  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\t\n\t  var urlValidator = function(value) {\n\t    return validate(ctrl, 'url', ctrl.$isEmpty(value) || URL_REGEXP.test(value), value);\n\t  };\n\t\n\t  ctrl.$formatters.push(urlValidator);\n\t  ctrl.$parsers.push(urlValidator);\n\t}\n\t\n\tfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\t  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\t\n\t  var emailValidator = function(value) {\n\t    return validate(ctrl, 'email', ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value), value);\n\t  };\n\t\n\t  ctrl.$formatters.push(emailValidator);\n\t  ctrl.$parsers.push(emailValidator);\n\t}\n\t\n\tfunction radioInputType(scope, element, attr, ctrl) {\n\t  // make the name unique, if not defined\n\t  if (isUndefined(attr.name)) {\n\t    element.attr('name', nextUid());\n\t  }\n\t\n\t  element.on('click', function() {\n\t    if (element[0].checked) {\n\t      scope.$apply(function() {\n\t        ctrl.$setViewValue(attr.value);\n\t      });\n\t    }\n\t  });\n\t\n\t  ctrl.$render = function() {\n\t    var value = attr.value;\n\t    element[0].checked = (value == ctrl.$viewValue);\n\t  };\n\t\n\t  attr.$observe('value', ctrl.$render);\n\t}\n\t\n\tfunction checkboxInputType(scope, element, attr, ctrl) {\n\t  var trueValue = attr.ngTrueValue,\n\t      falseValue = attr.ngFalseValue;\n\t\n\t  if (!isString(trueValue)) trueValue = true;\n\t  if (!isString(falseValue)) falseValue = false;\n\t\n\t  element.on('click', function() {\n\t    scope.$apply(function() {\n\t      ctrl.$setViewValue(element[0].checked);\n\t    });\n\t  });\n\t\n\t  ctrl.$render = function() {\n\t    element[0].checked = ctrl.$viewValue;\n\t  };\n\t\n\t  // Override the standard `$isEmpty` because a value of `false` means empty in a checkbox.\n\t  ctrl.$isEmpty = function(value) {\n\t    return value !== trueValue;\n\t  };\n\t\n\t  ctrl.$formatters.push(function(value) {\n\t    return value === trueValue;\n\t  });\n\t\n\t  ctrl.$parsers.push(function(value) {\n\t    return value ? trueValue : falseValue;\n\t  });\n\t}\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name textarea\n\t * @restrict E\n\t *\n\t * @description\n\t * HTML textarea element control with angular data-binding. The data-binding and validation\n\t * properties of this element are exactly the same as those of the\n\t * {@link ng.directive:input input element}.\n\t *\n\t * @param {string} ngModel Assignable angular expression to data-bind to.\n\t * @param {string=} name Property name of the form under which the control is published.\n\t * @param {string=} required Sets `required` validation error key if the value is not entered.\n\t * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t *    `required` when you want to data-bind to the `required` attribute.\n\t * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t *    minlength.\n\t * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t *    maxlength.\n\t * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t *    patterns defined as scope expressions.\n\t * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t *    interaction with the input element.\n\t * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name input\n\t * @restrict E\n\t *\n\t * @description\n\t * HTML input element control with angular data-binding. Input control follows HTML5 input types\n\t * and polyfills the HTML5 validation behavior for older browsers.\n\t *\n\t * *NOTE* Not every feature offered is available for all input types.\n\t *\n\t * @param {string} ngModel Assignable angular expression to data-bind to.\n\t * @param {string=} name Property name of the form under which the control is published.\n\t * @param {string=} required Sets `required` validation error key if the value is not entered.\n\t * @param {boolean=} ngRequired Sets `required` attribute if set to true\n\t * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n\t *    minlength.\n\t * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n\t *    maxlength.\n\t * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n\t *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n\t *    patterns defined as scope expressions.\n\t * @param {string=} ngChange Angular expression to be executed when input changes due to user\n\t *    interaction with the input element.\n\t * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n\t *    This parameter is ignored for input[type=password] controls, which will never trim the\n\t *    input.\n\t *\n\t * @example\n\t    <example name=\"input-directive\" module=\"inputExample\">\n\t      <file name=\"index.html\">\n\t       <script>\n\t          angular.module('inputExample', [])\n\t            .controller('ExampleController', ['$scope', function($scope) {\n\t              $scope.user = {name: 'guest', last: 'visitor'};\n\t            }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         <form name=\"myForm\">\n\t           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n\t           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n\t             Required!</span><br>\n\t           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n\t             ng-minlength=\"3\" ng-maxlength=\"10\">\n\t           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n\t             Too short!</span>\n\t           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n\t             Too long!</span><br>\n\t         </form>\n\t         <hr>\n\t         <tt>user = {{user}}</tt><br/>\n\t         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n\t         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n\t         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n\t         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n\t         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n\t         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n\t         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n\t         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n\t       </div>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        var user = element(by.binding('{{user}}'));\n\t        var userNameValid = element(by.binding('myForm.userName.$valid'));\n\t        var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n\t        var lastNameError = element(by.binding('myForm.lastName.$error'));\n\t        var formValid = element(by.binding('myForm.$valid'));\n\t        var userNameInput = element(by.model('user.name'));\n\t        var userLastInput = element(by.model('user.last'));\n\t\n\t        it('should initialize to model', function() {\n\t          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n\t          expect(userNameValid.getText()).toContain('true');\n\t          expect(formValid.getText()).toContain('true');\n\t        });\n\t\n\t        it('should be invalid if empty when required', function() {\n\t          userNameInput.clear();\n\t          userNameInput.sendKeys('');\n\t\n\t          expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n\t          expect(userNameValid.getText()).toContain('false');\n\t          expect(formValid.getText()).toContain('false');\n\t        });\n\t\n\t        it('should be valid if empty when min length is set', function() {\n\t          userLastInput.clear();\n\t          userLastInput.sendKeys('');\n\t\n\t          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n\t          expect(lastNameValid.getText()).toContain('true');\n\t          expect(formValid.getText()).toContain('true');\n\t        });\n\t\n\t        it('should be invalid if less than required min length', function() {\n\t          userLastInput.clear();\n\t          userLastInput.sendKeys('xx');\n\t\n\t          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n\t          expect(lastNameValid.getText()).toContain('false');\n\t          expect(lastNameError.getText()).toContain('minlength');\n\t          expect(formValid.getText()).toContain('false');\n\t        });\n\t\n\t        it('should be invalid if longer than max length', function() {\n\t          userLastInput.clear();\n\t          userLastInput.sendKeys('some ridiculously long name');\n\t\n\t          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n\t          expect(lastNameValid.getText()).toContain('false');\n\t          expect(lastNameError.getText()).toContain('maxlength');\n\t          expect(formValid.getText()).toContain('false');\n\t        });\n\t      </file>\n\t    </example>\n\t */\n\tvar inputDirective = ['$browser', '$sniffer', function($browser, $sniffer) {\n\t  return {\n\t    restrict: 'E',\n\t    require: '?ngModel',\n\t    link: function(scope, element, attr, ctrl) {\n\t      if (ctrl) {\n\t        (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,\n\t                                                            $browser);\n\t      }\n\t    }\n\t  };\n\t}];\n\t\n\tvar VALID_CLASS = 'ng-valid',\n\t    INVALID_CLASS = 'ng-invalid',\n\t    PRISTINE_CLASS = 'ng-pristine',\n\t    DIRTY_CLASS = 'ng-dirty';\n\t\n\t/**\n\t * @ngdoc type\n\t * @name ngModel.NgModelController\n\t *\n\t * @property {string} $viewValue Actual string value in the view.\n\t * @property {*} $modelValue The value in the model, that the control is bound to.\n\t * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\n\t       the control reads value from the DOM.  Each function is called, in turn, passing the value\n\t       through to the next. The last return value is used to populate the model.\n\t       Used to sanitize / convert the value as well as validation. For validation,\n\t       the parsers should update the validity state using\n\t       {@link ngModel.NgModelController#$setValidity $setValidity()},\n\t       and return `undefined` for invalid values.\n\t\n\t *\n\t * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\n\t       the model value changes. Each function is called, in turn, passing the value through to the\n\t       next. Used to format / convert values for display in the control and validation.\n\t * ```js\n\t * function formatter(value) {\n\t *   if (value) {\n\t *     return value.toUpperCase();\n\t *   }\n\t * }\n\t * ngModel.$formatters.push(formatter);\n\t * ```\n\t *\n\t * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the\n\t *     view value has changed. It is called with no arguments, and its return value is ignored.\n\t *     This can be used in place of additional $watches against the model value.\n\t *\n\t * @property {Object} $error An object hash with all errors as keys.\n\t *\n\t * @property {boolean} $pristine True if user has not interacted with the control yet.\n\t * @property {boolean} $dirty True if user has already interacted with the control.\n\t * @property {boolean} $valid True if there is no error.\n\t * @property {boolean} $invalid True if at least one error on the control.\n\t *\n\t * @description\n\t *\n\t * `NgModelController` provides API for the `ng-model` directive. The controller contains\n\t * services for data-binding, validation, CSS updates, and value formatting and parsing. It\n\t * purposefully does not contain any logic which deals with DOM rendering or listening to\n\t * DOM events. Such DOM related logic should be provided by other directives which make use of\n\t * `NgModelController` for data-binding.\n\t *\n\t * ## Custom Control Example\n\t * This example shows how to use `NgModelController` with a custom control to achieve\n\t * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n\t * collaborate together to achieve the desired result.\n\t *\n\t * Note that `contenteditable` is an HTML5 attribute, which tells the browser to let the element\n\t * contents be edited in place by the user.  This will not work on older browsers.\n\t *\n\t * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\n\t * module to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\n\t * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks\n\t * that content using the `$sce` service.\n\t *\n\t * <example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n\t    <file name=\"style.css\">\n\t      [contenteditable] {\n\t        border: 1px solid black;\n\t        background-color: white;\n\t        min-height: 20px;\n\t      }\n\t\n\t      .ng-invalid {\n\t        border: 1px solid red;\n\t      }\n\t\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('customControl', ['ngSanitize']).\n\t        directive('contenteditable', ['$sce', function($sce) {\n\t          return {\n\t            restrict: 'A', // only activate on element attribute\n\t            require: '?ngModel', // get a hold of NgModelController\n\t            link: function(scope, element, attrs, ngModel) {\n\t              if(!ngModel) return; // do nothing if no ng-model\n\t\n\t              // Specify how UI should be updated\n\t              ngModel.$render = function() {\n\t                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n\t              };\n\t\n\t              // Listen for change events to enable binding\n\t              element.on('blur keyup change', function() {\n\t                scope.$evalAsync(read);\n\t              });\n\t              read(); // initialize\n\t\n\t              // Write data to the model\n\t              function read() {\n\t                var html = element.html();\n\t                // When we clear the content editable the browser leaves a <br> behind\n\t                // If strip-br attribute is provided then we strip this out\n\t                if( attrs.stripBr && html == '<br>' ) {\n\t                  html = '';\n\t                }\n\t                ngModel.$setViewValue(html);\n\t              }\n\t            }\n\t          };\n\t        }]);\n\t    </file>\n\t    <file name=\"index.html\">\n\t      <form name=\"myForm\">\n\t       <div contenteditable\n\t            name=\"myWidget\" ng-model=\"userContent\"\n\t            strip-br=\"true\"\n\t            required>Change me!</div>\n\t        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n\t       <hr>\n\t       <textarea ng-model=\"userContent\"></textarea>\n\t      </form>\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t    it('should data-bind and become invalid', function() {\n\t      if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\n\t        // SafariDriver can't handle contenteditable\n\t        // and Firefox driver can't clear contenteditables very well\n\t        return;\n\t      }\n\t      var contentEditable = element(by.css('[contenteditable]'));\n\t      var content = 'Change me!';\n\t\n\t      expect(contentEditable.getText()).toEqual(content);\n\t\n\t      contentEditable.clear();\n\t      contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n\t      expect(contentEditable.getText()).toEqual('');\n\t      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n\t    });\n\t    </file>\n\t * </example>\n\t *\n\t *\n\t */\n\tvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate',\n\t    function($scope, $exceptionHandler, $attr, $element, $parse, $animate) {\n\t  this.$viewValue = Number.NaN;\n\t  this.$modelValue = Number.NaN;\n\t  this.$parsers = [];\n\t  this.$formatters = [];\n\t  this.$viewChangeListeners = [];\n\t  this.$pristine = true;\n\t  this.$dirty = false;\n\t  this.$valid = true;\n\t  this.$invalid = false;\n\t  this.$name = $attr.name;\n\t\n\t  var ngModelGet = $parse($attr.ngModel),\n\t      ngModelSet = ngModelGet.assign;\n\t\n\t  if (!ngModelSet) {\n\t    throw minErr('ngModel')('nonassign', \"Expression '{0}' is non-assignable. Element: {1}\",\n\t        $attr.ngModel, startingTag($element));\n\t  }\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name ngModel.NgModelController#$render\n\t   *\n\t   * @description\n\t   * Called when the view needs to be updated. It is expected that the user of the ng-model\n\t   * directive will implement this method.\n\t   */\n\t  this.$render = noop;\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name ngModel.NgModelController#$isEmpty\n\t   *\n\t   * @description\n\t   * This is called when we need to determine if the value of the input is empty.\n\t   *\n\t   * For instance, the required directive does this to work out if the input has data or not.\n\t   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n\t   *\n\t   * You can override this for input directives whose concept of being empty is different to the\n\t   * default. The `checkboxInputType` directive does this because in its case a value of `false`\n\t   * implies empty.\n\t   *\n\t   * @param {*} value Reference to check.\n\t   * @returns {boolean} True if `value` is empty.\n\t   */\n\t  this.$isEmpty = function(value) {\n\t    return isUndefined(value) || value === '' || value === null || value !== value;\n\t  };\n\t\n\t  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n\t      invalidCount = 0, // used to easily determine if we are valid\n\t      $error = this.$error = {}; // keep invalid keys here\n\t\n\t\n\t  // Setup initial state of the control\n\t  $element.addClass(PRISTINE_CLASS);\n\t  toggleValidCss(true);\n\t\n\t  // convenience method for easy toggling of classes\n\t  function toggleValidCss(isValid, validationErrorKey) {\n\t    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n\t    $animate.removeClass($element, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);\n\t    $animate.addClass($element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n\t  }\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name ngModel.NgModelController#$setValidity\n\t   *\n\t   * @description\n\t   * Change the validity state, and notifies the form when the control changes validity. (i.e. it\n\t   * does not notify form if given validator is already marked as invalid).\n\t   *\n\t   * This method should be called by validators - i.e. the parser or formatter functions.\n\t   *\n\t   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign\n\t   *        to `$error[validationErrorKey]=!isValid` so that it is available for data-binding.\n\t   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n\t   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n\t   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n\t   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).\n\t   */\n\t  this.$setValidity = function(validationErrorKey, isValid) {\n\t    // Purposeful use of ! here to cast isValid to boolean in case it is undefined\n\t    // jshint -W018\n\t    if ($error[validationErrorKey] === !isValid) return;\n\t    // jshint +W018\n\t\n\t    if (isValid) {\n\t      if ($error[validationErrorKey]) invalidCount--;\n\t      if (!invalidCount) {\n\t        toggleValidCss(true);\n\t        this.$valid = true;\n\t        this.$invalid = false;\n\t      }\n\t    } else {\n\t      toggleValidCss(false);\n\t      this.$invalid = true;\n\t      this.$valid = false;\n\t      invalidCount++;\n\t    }\n\t\n\t    $error[validationErrorKey] = !isValid;\n\t    toggleValidCss(isValid, validationErrorKey);\n\t\n\t    parentForm.$setValidity(validationErrorKey, isValid, this);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name ngModel.NgModelController#$setPristine\n\t   *\n\t   * @description\n\t   * Sets the control to its pristine state.\n\t   *\n\t   * This method can be called to remove the 'ng-dirty' class and set the control to its pristine\n\t   * state (ng-pristine class).\n\t   */\n\t  this.$setPristine = function () {\n\t    this.$dirty = false;\n\t    this.$pristine = true;\n\t    $animate.removeClass($element, DIRTY_CLASS);\n\t    $animate.addClass($element, PRISTINE_CLASS);\n\t  };\n\t\n\t  /**\n\t   * @ngdoc method\n\t   * @name ngModel.NgModelController#$setViewValue\n\t   *\n\t   * @description\n\t   * Update the view value.\n\t   *\n\t   * This method should be called when the view value changes, typically from within a DOM event handler.\n\t   * For example {@link ng.directive:input input} and\n\t   * {@link ng.directive:select select} directives call it.\n\t   *\n\t   * It will update the $viewValue, then pass this value through each of the functions in `$parsers`,\n\t   * which includes any validators. The value that comes out of this `$parsers` pipeline, be applied to\n\t   * `$modelValue` and the **expression** specified in the `ng-model` attribute.\n\t   *\n\t   * Lastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\n\t   *\n\t   * Note that calling this function does not trigger a `$digest`.\n\t   *\n\t   * @param {string} value Value from the view.\n\t   */\n\t  this.$setViewValue = function(value) {\n\t    this.$viewValue = value;\n\t\n\t    // change to dirty\n\t    if (this.$pristine) {\n\t      this.$dirty = true;\n\t      this.$pristine = false;\n\t      $animate.removeClass($element, PRISTINE_CLASS);\n\t      $animate.addClass($element, DIRTY_CLASS);\n\t      parentForm.$setDirty();\n\t    }\n\t\n\t    forEach(this.$parsers, function(fn) {\n\t      value = fn(value);\n\t    });\n\t\n\t    if (this.$modelValue !== value) {\n\t      this.$modelValue = value;\n\t      ngModelSet($scope, value);\n\t      forEach(this.$viewChangeListeners, function(listener) {\n\t        try {\n\t          listener();\n\t        } catch(e) {\n\t          $exceptionHandler(e);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  // model -> value\n\t  var ctrl = this;\n\t\n\t  $scope.$watch(function ngModelWatch() {\n\t    var value = ngModelGet($scope);\n\t\n\t    // if scope model value and ngModel value are out of sync\n\t    if (ctrl.$modelValue !== value) {\n\t\n\t      var formatters = ctrl.$formatters,\n\t          idx = formatters.length;\n\t\n\t      ctrl.$modelValue = value;\n\t      while(idx--) {\n\t        value = formatters[idx](value);\n\t      }\n\t\n\t      if (ctrl.$viewValue !== value) {\n\t        ctrl.$viewValue = value;\n\t        ctrl.$render();\n\t      }\n\t    }\n\t\n\t    return value;\n\t  });\n\t}];\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngModel\n\t *\n\t * @element input\n\t *\n\t * @description\n\t * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\n\t * property on the scope using {@link ngModel.NgModelController NgModelController},\n\t * which is created and exposed by this directive.\n\t *\n\t * `ngModel` is responsible for:\n\t *\n\t * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n\t *   require.\n\t * - Providing validation behavior (i.e. required, number, email, url).\n\t * - Keeping the state of the control (valid/invalid, dirty/pristine, validation errors).\n\t * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`) including animations.\n\t * - Registering the control with its parent {@link ng.directive:form form}.\n\t *\n\t * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\n\t * current scope. If the property doesn't already exist on this scope, it will be created\n\t * implicitly and added to the scope.\n\t *\n\t * For best practices on using `ngModel`, see:\n\t *\n\t *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n\t *\n\t * For basic examples, how to use `ngModel`, see:\n\t *\n\t *  - {@link ng.directive:input input}\n\t *    - {@link input[text] text}\n\t *    - {@link input[checkbox] checkbox}\n\t *    - {@link input[radio] radio}\n\t *    - {@link input[number] number}\n\t *    - {@link input[email] email}\n\t *    - {@link input[url] url}\n\t *  - {@link ng.directive:select select}\n\t *  - {@link ng.directive:textarea textarea}\n\t *\n\t * # CSS classes\n\t * The following CSS classes are added and removed on the associated input/select/textarea element\n\t * depending on the validity of the model.\n\t *\n\t *  - `ng-valid` is set if the model is valid.\n\t *  - `ng-invalid` is set if the model is invalid.\n\t *  - `ng-pristine` is set if the model is pristine.\n\t *  - `ng-dirty` is set if the model is dirty.\n\t *\n\t * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n\t *\n\t * ## Animation Hooks\n\t *\n\t * Animations within models are triggered when any of the associated CSS classes are added and removed\n\t * on the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\n\t * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\n\t * The animations that are triggered within ngModel are similar to how they work in ngClass and\n\t * animations can be hooked into using CSS transitions, keyframes as well as JS animations.\n\t *\n\t * The following example shows a simple way to utilize CSS transitions to style an input element\n\t * that has been rendered as invalid after it has been validated:\n\t *\n\t * <pre>\n\t * //be sure to include ngAnimate as a module to hook into more\n\t * //advanced animations\n\t * .my-input {\n\t *   transition:0.5s linear all;\n\t *   background: white;\n\t * }\n\t * .my-input.ng-invalid {\n\t *   background: red;\n\t *   color:white;\n\t * }\n\t * </pre>\n\t *\n\t * @example\n\t * <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"inputExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t        angular.module('inputExample', [])\n\t          .controller('ExampleController', ['$scope', function($scope) {\n\t            $scope.val = '1';\n\t          }]);\n\t       </script>\n\t       <style>\n\t         .my-input {\n\t           -webkit-transition:all linear 0.5s;\n\t           transition:all linear 0.5s;\n\t           background: transparent;\n\t         }\n\t         .my-input.ng-invalid {\n\t           color:white;\n\t           background: red;\n\t         }\n\t       </style>\n\t       Update input to see transitions when valid/invalid.\n\t       Integer is a valid value.\n\t       <form name=\"testForm\" ng-controller=\"ExampleController\">\n\t         <input ng-model=\"val\" ng-pattern=\"/^\\d+$/\" name=\"anim\" class=\"my-input\" />\n\t       </form>\n\t     </file>\n\t * </example>\n\t */\n\tvar ngModelDirective = function() {\n\t  return {\n\t    require: ['ngModel', '^?form'],\n\t    controller: NgModelController,\n\t    link: function(scope, element, attr, ctrls) {\n\t      // notify others, especially parent forms\n\t\n\t      var modelCtrl = ctrls[0],\n\t          formCtrl = ctrls[1] || nullFormCtrl;\n\t\n\t      formCtrl.$addControl(modelCtrl);\n\t\n\t      scope.$on('$destroy', function() {\n\t        formCtrl.$removeControl(modelCtrl);\n\t      });\n\t    }\n\t  };\n\t};\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngChange\n\t *\n\t * @description\n\t * Evaluate the given expression when the user changes the input.\n\t * The expression is evaluated immediately, unlike the JavaScript onchange event\n\t * which only triggers at the end of a change (usually, when the user leaves the\n\t * form element or presses the return key).\n\t * The expression is not evaluated when the value change is coming from the model.\n\t *\n\t * Note, this directive requires `ngModel` to be present.\n\t *\n\t * @element input\n\t * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change\n\t * in input value.\n\t *\n\t * @example\n\t * <example name=\"ngChange-directive\" module=\"changeExample\">\n\t *   <file name=\"index.html\">\n\t *     <script>\n\t *       angular.module('changeExample', [])\n\t *         .controller('ExampleController', ['$scope', function($scope) {\n\t *           $scope.counter = 0;\n\t *           $scope.change = function() {\n\t *             $scope.counter++;\n\t *           };\n\t *         }]);\n\t *     </script>\n\t *     <div ng-controller=\"ExampleController\">\n\t *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n\t *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n\t *       <label for=\"ng-change-example2\">Confirmed</label><br />\n\t *       <tt>debug = {{confirmed}}</tt><br/>\n\t *       <tt>counter = {{counter}}</tt><br/>\n\t *     </div>\n\t *   </file>\n\t *   <file name=\"protractor.js\" type=\"protractor\">\n\t *     var counter = element(by.binding('counter'));\n\t *     var debug = element(by.binding('confirmed'));\n\t *\n\t *     it('should evaluate the expression if changing from view', function() {\n\t *       expect(counter.getText()).toContain('0');\n\t *\n\t *       element(by.id('ng-change-example1')).click();\n\t *\n\t *       expect(counter.getText()).toContain('1');\n\t *       expect(debug.getText()).toContain('true');\n\t *     });\n\t *\n\t *     it('should not evaluate the expression if changing from model', function() {\n\t *       element(by.id('ng-change-example2')).click();\n\t\n\t *       expect(counter.getText()).toContain('0');\n\t *       expect(debug.getText()).toContain('true');\n\t *     });\n\t *   </file>\n\t * </example>\n\t */\n\tvar ngChangeDirective = valueFn({\n\t  require: 'ngModel',\n\t  link: function(scope, element, attr, ctrl) {\n\t    ctrl.$viewChangeListeners.push(function() {\n\t      scope.$eval(attr.ngChange);\n\t    });\n\t  }\n\t});\n\t\n\t\n\tvar requiredDirective = function() {\n\t  return {\n\t    require: '?ngModel',\n\t    link: function(scope, elm, attr, ctrl) {\n\t      if (!ctrl) return;\n\t      attr.required = true; // force truthy in case we are on non input element\n\t\n\t      var validator = function(value) {\n\t        if (attr.required && ctrl.$isEmpty(value)) {\n\t          ctrl.$setValidity('required', false);\n\t          return;\n\t        } else {\n\t          ctrl.$setValidity('required', true);\n\t          return value;\n\t        }\n\t      };\n\t\n\t      ctrl.$formatters.push(validator);\n\t      ctrl.$parsers.unshift(validator);\n\t\n\t      attr.$observe('required', function() {\n\t        validator(ctrl.$viewValue);\n\t      });\n\t    }\n\t  };\n\t};\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngList\n\t *\n\t * @description\n\t * Text input that converts between a delimited string and an array of strings. The delimiter\n\t * can be a fixed string (by default a comma) or a regular expression.\n\t *\n\t * @element input\n\t * @param {string=} ngList optional delimiter that should be used to split the value. If\n\t *   specified in form `/something/` then the value will be converted into a regular expression.\n\t *\n\t * @example\n\t    <example name=\"ngList-directive\" module=\"listExample\">\n\t      <file name=\"index.html\">\n\t       <script>\n\t         angular.module('listExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.names = ['igor', 'misko', 'vojta'];\n\t           }]);\n\t       </script>\n\t       <form name=\"myForm\" ng-controller=\"ExampleController\">\n\t         List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n\t         <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n\t           Required!</span>\n\t         <br>\n\t         <tt>names = {{names}}</tt><br/>\n\t         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n\t         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n\t         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n\t         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n\t        </form>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        var listInput = element(by.model('names'));\n\t        var names = element(by.binding('{{names}}'));\n\t        var valid = element(by.binding('myForm.namesInput.$valid'));\n\t        var error = element(by.css('span.error'));\n\t\n\t        it('should initialize to model', function() {\n\t          expect(names.getText()).toContain('[\"igor\",\"misko\",\"vojta\"]');\n\t          expect(valid.getText()).toContain('true');\n\t          expect(error.getCssValue('display')).toBe('none');\n\t        });\n\t\n\t        it('should be invalid if empty', function() {\n\t          listInput.clear();\n\t          listInput.sendKeys('');\n\t\n\t          expect(names.getText()).toContain('');\n\t          expect(valid.getText()).toContain('false');\n\t          expect(error.getCssValue('display')).not.toBe('none');        });\n\t      </file>\n\t    </example>\n\t */\n\tvar ngListDirective = function() {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function(scope, element, attr, ctrl) {\n\t      var match = /\\/(.*)\\//.exec(attr.ngList),\n\t          separator = match && new RegExp(match[1]) || attr.ngList || ',';\n\t\n\t      var parse = function(viewValue) {\n\t        // If the viewValue is invalid (say required but empty) it will be `undefined`\n\t        if (isUndefined(viewValue)) return;\n\t\n\t        var list = [];\n\t\n\t        if (viewValue) {\n\t          forEach(viewValue.split(separator), function(value) {\n\t            if (value) list.push(trim(value));\n\t          });\n\t        }\n\t\n\t        return list;\n\t      };\n\t\n\t      ctrl.$parsers.push(parse);\n\t      ctrl.$formatters.push(function(value) {\n\t        if (isArray(value)) {\n\t          return value.join(', ');\n\t        }\n\t\n\t        return undefined;\n\t      });\n\t\n\t      // Override the standard $isEmpty because an empty array means the input is empty.\n\t      ctrl.$isEmpty = function(value) {\n\t        return !value || !value.length;\n\t      };\n\t    }\n\t  };\n\t};\n\t\n\t\n\tvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n\t/**\n\t * @ngdoc directive\n\t * @name ngValue\n\t *\n\t * @description\n\t * Binds the given expression to the value of `input[select]` or `input[radio]`, so\n\t * that when the element is selected, the `ngModel` of that element is set to the\n\t * bound value.\n\t *\n\t * `ngValue` is useful when dynamically generating lists of radio buttons using `ng-repeat`, as\n\t * shown below.\n\t *\n\t * @element input\n\t * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute\n\t *   of the `input` element\n\t *\n\t * @example\n\t    <example name=\"ngValue-directive\" module=\"valueExample\">\n\t      <file name=\"index.html\">\n\t       <script>\n\t          angular.module('valueExample', [])\n\t            .controller('ExampleController', ['$scope', function($scope) {\n\t              $scope.names = ['pizza', 'unicorns', 'robots'];\n\t              $scope.my = { favorite: 'unicorns' };\n\t            }]);\n\t       </script>\n\t        <form ng-controller=\"ExampleController\">\n\t          <h2>Which is your favorite?</h2>\n\t            <label ng-repeat=\"name in names\" for=\"{{name}}\">\n\t              {{name}}\n\t              <input type=\"radio\"\n\t                     ng-model=\"my.favorite\"\n\t                     ng-value=\"name\"\n\t                     id=\"{{name}}\"\n\t                     name=\"favorite\">\n\t            </label>\n\t          <div>You chose {{my.favorite}}</div>\n\t        </form>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        var favorite = element(by.binding('my.favorite'));\n\t\n\t        it('should initialize to model', function() {\n\t          expect(favorite.getText()).toContain('unicorns');\n\t        });\n\t        it('should bind the values to the inputs', function() {\n\t          element.all(by.model('my.favorite')).get(0).click();\n\t          expect(favorite.getText()).toContain('pizza');\n\t        });\n\t      </file>\n\t    </example>\n\t */\n\tvar ngValueDirective = function() {\n\t  return {\n\t    priority: 100,\n\t    compile: function(tpl, tplAttr) {\n\t      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n\t        return function ngValueConstantLink(scope, elm, attr) {\n\t          attr.$set('value', scope.$eval(attr.ngValue));\n\t        };\n\t      } else {\n\t        return function ngValueLink(scope, elm, attr) {\n\t          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n\t            attr.$set('value', value);\n\t          });\n\t        };\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngBind\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n\t * with the value of a given expression, and to update the text content when the value of that\n\t * expression changes.\n\t *\n\t * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n\t * `{{ expression }}` which is similar but less verbose.\n\t *\n\t * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\n\t * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\n\t * element attribute, it makes the bindings invisible to the user while the page is loading.\n\t *\n\t * An alternative solution to this problem would be using the\n\t * {@link ng.directive:ngCloak ngCloak} directive.\n\t *\n\t *\n\t * @element ANY\n\t * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n\t *\n\t * @example\n\t * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n\t   <example module=\"bindExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('bindExample', [])\n\t           .controller('ExampleController', ['$scope', function($scope) {\n\t             $scope.name = 'Whirled';\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n\t         Hello <span ng-bind=\"name\"></span>!\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-bind', function() {\n\t         var nameInput = element(by.model('name'));\n\t\n\t         expect(element(by.binding('name')).getText()).toBe('Whirled');\n\t         nameInput.clear();\n\t         nameInput.sendKeys('world');\n\t         expect(element(by.binding('name')).getText()).toBe('world');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngBindDirective = ngDirective({\n\t  compile: function(templateElement) {\n\t    templateElement.addClass('ng-binding');\n\t    return function (scope, element, attr) {\n\t      element.data('$binding', attr.ngBind);\n\t      scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n\t        // We are purposefully using == here rather than === because we want to\n\t        // catch when value is \"null or undefined\"\n\t        // jshint -W041\n\t        element.text(value == undefined ? '' : value);\n\t      });\n\t    };\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngBindTemplate\n\t *\n\t * @description\n\t * The `ngBindTemplate` directive specifies that the element\n\t * text content should be replaced with the interpolation of the template\n\t * in the `ngBindTemplate` attribute.\n\t * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\n\t * expressions. This directive is needed since some HTML elements\n\t * (such as TITLE and OPTION) cannot contain SPAN elements.\n\t *\n\t * @element ANY\n\t * @param {string} ngBindTemplate template of form\n\t *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n\t *\n\t * @example\n\t * Try it here: enter text in text box and watch the greeting change.\n\t   <example module=\"bindExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('bindExample', [])\n\t           .controller('ExampleController', ['$scope', function ($scope) {\n\t             $scope.salutation = 'Hello';\n\t             $scope.name = 'World';\n\t           }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n\t        Name: <input type=\"text\" ng-model=\"name\"><br>\n\t        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-bind', function() {\n\t         var salutationElem = element(by.binding('salutation'));\n\t         var salutationInput = element(by.model('salutation'));\n\t         var nameInput = element(by.model('name'));\n\t\n\t         expect(salutationElem.getText()).toBe('Hello World!');\n\t\n\t         salutationInput.clear();\n\t         salutationInput.sendKeys('Greetings');\n\t         nameInput.clear();\n\t         nameInput.sendKeys('user');\n\t\n\t         expect(salutationElem.getText()).toBe('Greetings user!');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngBindTemplateDirective = ['$interpolate', function($interpolate) {\n\t  return function(scope, element, attr) {\n\t    // TODO: move this to scenario runner\n\t    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n\t    element.addClass('ng-binding').data('$binding', interpolateFn);\n\t    attr.$observe('ngBindTemplate', function(value) {\n\t      element.text(value);\n\t    });\n\t  };\n\t}];\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngBindHtml\n\t *\n\t * @description\n\t * Creates a binding that will innerHTML the result of evaluating the `expression` into the current\n\t * element in a secure way.  By default, the innerHTML-ed content will be sanitized using the {@link\n\t * ngSanitize.$sanitize $sanitize} service.  To utilize this functionality, ensure that `$sanitize`\n\t * is available, for example, by including {@link ngSanitize} in your module's dependencies (not in\n\t * core Angular). In order to use {@link ngSanitize} in your module's dependencies, you need to\n\t * include \"angular-sanitize.js\" in your application.\n\t *\n\t * You may also bypass sanitization for values you know are safe. To do so, bind to\n\t * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\n\t * under {@link ng.$sce#Example Strict Contextual Escaping (SCE)}.\n\t *\n\t * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\n\t * will have an exception (instead of an exploit.)\n\t *\n\t * @element ANY\n\t * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n\t *\n\t * @example\n\t\n\t   <example module=\"bindHtmlExample\" deps=\"angular-sanitize.js\">\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"ExampleController\">\n\t        <p ng-bind-html=\"myHTML\"></p>\n\t       </div>\n\t     </file>\n\t\n\t     <file name=\"script.js\">\n\t       angular.module('bindHtmlExample', ['ngSanitize'])\n\t         .controller('ExampleController', ['$scope', function($scope) {\n\t           $scope.myHTML =\n\t              'I am an <code>HTML</code>string with ' +\n\t              '<a href=\"#\">links!</a> and other <em>stuff</em>';\n\t         }]);\n\t     </file>\n\t\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-bind-html', function() {\n\t         expect(element(by.binding('myHTML')).getText()).toBe(\n\t             'I am an HTMLstring with links! and other stuff');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngBindHtmlDirective = ['$sce', '$parse', function($sce, $parse) {\n\t  return {\n\t    compile: function (tElement) {\n\t      tElement.addClass('ng-binding');\n\t\n\t      return function (scope, element, attr) {\n\t        element.data('$binding', attr.ngBindHtml);\n\t\n\t        var parsed = $parse(attr.ngBindHtml);\n\t\n\t        function getStringValue() {\n\t          return (parsed(scope) || '').toString();\n\t        }\n\t\n\t        scope.$watch(getStringValue, function ngBindHtmlWatchAction(value) {\n\t          element.html($sce.getTrustedHtml(parsed(scope)) || '');\n\t        });\n\t      };\n\t    }\n\t  };\n\t}];\n\t\n\tfunction classDirective(name, selector) {\n\t  name = 'ngClass' + name;\n\t  return ['$animate', function($animate) {\n\t    return {\n\t      restrict: 'AC',\n\t      link: function(scope, element, attr) {\n\t        var oldVal;\n\t\n\t        scope.$watch(attr[name], ngClassWatchAction, true);\n\t\n\t        attr.$observe('class', function(value) {\n\t          ngClassWatchAction(scope.$eval(attr[name]));\n\t        });\n\t\n\t\n\t        if (name !== 'ngClass') {\n\t          scope.$watch('$index', function($index, old$index) {\n\t            // jshint bitwise: false\n\t            var mod = $index & 1;\n\t            if (mod !== (old$index & 1)) {\n\t              var classes = arrayClasses(scope.$eval(attr[name]));\n\t              mod === selector ?\n\t                addClasses(classes) :\n\t                removeClasses(classes);\n\t            }\n\t          });\n\t        }\n\t\n\t        function addClasses(classes) {\n\t          var newClasses = digestClassCounts(classes, 1);\n\t          attr.$addClass(newClasses);\n\t        }\n\t\n\t        function removeClasses(classes) {\n\t          var newClasses = digestClassCounts(classes, -1);\n\t          attr.$removeClass(newClasses);\n\t        }\n\t\n\t        function digestClassCounts (classes, count) {\n\t          var classCounts = element.data('$classCounts') || {};\n\t          var classesToUpdate = [];\n\t          forEach(classes, function (className) {\n\t            if (count > 0 || classCounts[className]) {\n\t              classCounts[className] = (classCounts[className] || 0) + count;\n\t              if (classCounts[className] === +(count > 0)) {\n\t                classesToUpdate.push(className);\n\t              }\n\t            }\n\t          });\n\t          element.data('$classCounts', classCounts);\n\t          return classesToUpdate.join(' ');\n\t        }\n\t\n\t        function updateClasses (oldClasses, newClasses) {\n\t          var toAdd = arrayDifference(newClasses, oldClasses);\n\t          var toRemove = arrayDifference(oldClasses, newClasses);\n\t          toRemove = digestClassCounts(toRemove, -1);\n\t          toAdd = digestClassCounts(toAdd, 1);\n\t\n\t          if (toAdd.length === 0) {\n\t            $animate.removeClass(element, toRemove);\n\t          } else if (toRemove.length === 0) {\n\t            $animate.addClass(element, toAdd);\n\t          } else {\n\t            $animate.setClass(element, toAdd, toRemove);\n\t          }\n\t        }\n\t\n\t        function ngClassWatchAction(newVal) {\n\t          if (selector === true || scope.$index % 2 === selector) {\n\t            var newClasses = arrayClasses(newVal || []);\n\t            if (!oldVal) {\n\t              addClasses(newClasses);\n\t            } else if (!equals(newVal,oldVal)) {\n\t              var oldClasses = arrayClasses(oldVal);\n\t              updateClasses(oldClasses, newClasses);\n\t            }\n\t          }\n\t          oldVal = shallowCopy(newVal);\n\t        }\n\t      }\n\t    };\n\t\n\t    function arrayDifference(tokens1, tokens2) {\n\t      var values = [];\n\t\n\t      outer:\n\t      for(var i = 0; i < tokens1.length; i++) {\n\t        var token = tokens1[i];\n\t        for(var j = 0; j < tokens2.length; j++) {\n\t          if(token == tokens2[j]) continue outer;\n\t        }\n\t        values.push(token);\n\t      }\n\t      return values;\n\t    }\n\t\n\t    function arrayClasses (classVal) {\n\t      if (isArray(classVal)) {\n\t        return classVal;\n\t      } else if (isString(classVal)) {\n\t        return classVal.split(' ');\n\t      } else if (isObject(classVal)) {\n\t        var classes = [], i = 0;\n\t        forEach(classVal, function(v, k) {\n\t          if (v) {\n\t            classes = classes.concat(k.split(' '));\n\t          }\n\t        });\n\t        return classes;\n\t      }\n\t      return classVal;\n\t    }\n\t  }];\n\t}\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngClass\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\n\t * an expression that represents all classes to be added.\n\t *\n\t * The directive operates in three different ways, depending on which of three types the expression\n\t * evaluates to:\n\t *\n\t * 1. If the expression evaluates to a string, the string should be one or more space-delimited class\n\t * names.\n\t *\n\t * 2. If the expression evaluates to an array, each element of the array should be a string that is\n\t * one or more space-delimited class names.\n\t *\n\t * 3. If the expression evaluates to an object, then for each key-value pair of the\n\t * object with a truthy value the corresponding key is used as a class name.\n\t *\n\t * The directive won't add duplicate classes if a particular class was already set.\n\t *\n\t * When the expression changes, the previously added classes are removed and only then the\n\t * new classes are added.\n\t *\n\t * @animations\n\t * add - happens just before the class is applied to the element\n\t * remove - happens just before the class is removed from the element\n\t *\n\t * @element ANY\n\t * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n\t *   of the evaluation can be a string representing space delimited class\n\t *   names, an array, or a map of class names to boolean values. In the case of a map, the\n\t *   names of the properties whose values are truthy will be added as css classes to the\n\t *   element.\n\t *\n\t * @example Example that demonstrates basic bindings via ngClass directive.\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <p ng-class=\"{strike: deleted, bold: important, red: error}\">Map Syntax Example</p>\n\t       <input type=\"checkbox\" ng-model=\"deleted\"> deleted (apply \"strike\" class)<br>\n\t       <input type=\"checkbox\" ng-model=\"important\"> important (apply \"bold\" class)<br>\n\t       <input type=\"checkbox\" ng-model=\"error\"> error (apply \"red\" class)\n\t       <hr>\n\t       <p ng-class=\"style\">Using String Syntax</p>\n\t       <input type=\"text\" ng-model=\"style\" placeholder=\"Type: bold strike red\">\n\t       <hr>\n\t       <p ng-class=\"[style1, style2, style3]\">Using Array Syntax</p>\n\t       <input ng-model=\"style1\" placeholder=\"Type: bold, strike or red\"><br>\n\t       <input ng-model=\"style2\" placeholder=\"Type: bold, strike or red\"><br>\n\t       <input ng-model=\"style3\" placeholder=\"Type: bold, strike or red\"><br>\n\t     </file>\n\t     <file name=\"style.css\">\n\t       .strike {\n\t         text-decoration: line-through;\n\t       }\n\t       .bold {\n\t           font-weight: bold;\n\t       }\n\t       .red {\n\t           color: red;\n\t       }\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       var ps = element.all(by.css('p'));\n\t\n\t       it('should let you toggle the class', function() {\n\t\n\t         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\n\t         expect(ps.first().getAttribute('class')).not.toMatch(/red/);\n\t\n\t         element(by.model('important')).click();\n\t         expect(ps.first().getAttribute('class')).toMatch(/bold/);\n\t\n\t         element(by.model('error')).click();\n\t         expect(ps.first().getAttribute('class')).toMatch(/red/);\n\t       });\n\t\n\t       it('should let you toggle string example', function() {\n\t         expect(ps.get(1).getAttribute('class')).toBe('');\n\t         element(by.model('style')).clear();\n\t         element(by.model('style')).sendKeys('red');\n\t         expect(ps.get(1).getAttribute('class')).toBe('red');\n\t       });\n\t\n\t       it('array example should have 3 classes', function() {\n\t         expect(ps.last().getAttribute('class')).toBe('');\n\t         element(by.model('style1')).sendKeys('bold');\n\t         element(by.model('style2')).sendKeys('strike');\n\t         element(by.model('style3')).sendKeys('red');\n\t         expect(ps.last().getAttribute('class')).toBe('bold strike red');\n\t       });\n\t     </file>\n\t   </example>\n\t\n\t   ## Animations\n\t\n\t   The example below demonstrates how to perform animations using ngClass.\n\t\n\t   <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n\t     <file name=\"index.html\">\n\t      <input id=\"setbtn\" type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n\t      <input id=\"clearbtn\" type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n\t      <br>\n\t      <span class=\"base-class\" ng-class=\"myVar\">Sample Text</span>\n\t     </file>\n\t     <file name=\"style.css\">\n\t       .base-class {\n\t         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t       }\n\t\n\t       .base-class.my-class {\n\t         color: red;\n\t         font-size:3em;\n\t       }\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-class', function() {\n\t         expect(element(by.css('.base-class')).getAttribute('class')).not.\n\t           toMatch(/my-class/);\n\t\n\t         element(by.id('setbtn')).click();\n\t\n\t         expect(element(by.css('.base-class')).getAttribute('class')).\n\t           toMatch(/my-class/);\n\t\n\t         element(by.id('clearbtn')).click();\n\t\n\t         expect(element(by.css('.base-class')).getAttribute('class')).not.\n\t           toMatch(/my-class/);\n\t       });\n\t     </file>\n\t   </example>\n\t\n\t\n\t   ## ngClass and pre-existing CSS3 Transitions/Animations\n\t   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\n\t   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\n\t   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\n\t   to view the step by step details of {@link ngAnimate.$animate#addclass $animate.addClass} and\n\t   {@link ngAnimate.$animate#removeclass $animate.removeClass}.\n\t */\n\tvar ngClassDirective = classDirective('', true);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngClassOdd\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngClassOdd` and `ngClassEven` directives work exactly as\n\t * {@link ng.directive:ngClass ngClass}, except they work in\n\t * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n\t *\n\t * This directive can be applied only within the scope of an\n\t * {@link ng.directive:ngRepeat ngRepeat}.\n\t *\n\t * @element ANY\n\t * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n\t *   of the evaluation can be a string representing space delimited class names or an array.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n\t          <li ng-repeat=\"name in names\">\n\t           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n\t             {{name}}\n\t           </span>\n\t          </li>\n\t        </ol>\n\t     </file>\n\t     <file name=\"style.css\">\n\t       .odd {\n\t         color: red;\n\t       }\n\t       .even {\n\t         color: blue;\n\t       }\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-class-odd and ng-class-even', function() {\n\t         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n\t           toMatch(/odd/);\n\t         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n\t           toMatch(/even/);\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngClassOddDirective = classDirective('Odd', 0);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngClassEven\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngClassOdd` and `ngClassEven` directives work exactly as\n\t * {@link ng.directive:ngClass ngClass}, except they work in\n\t * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n\t *\n\t * This directive can be applied only within the scope of an\n\t * {@link ng.directive:ngRepeat ngRepeat}.\n\t *\n\t * @element ANY\n\t * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n\t *   result of the evaluation can be a string representing space delimited class names or an array.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n\t          <li ng-repeat=\"name in names\">\n\t           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n\t             {{name}} &nbsp; &nbsp; &nbsp;\n\t           </span>\n\t          </li>\n\t        </ol>\n\t     </file>\n\t     <file name=\"style.css\">\n\t       .odd {\n\t         color: red;\n\t       }\n\t       .even {\n\t         color: blue;\n\t       }\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-class-odd and ng-class-even', function() {\n\t         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n\t           toMatch(/odd/);\n\t         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n\t           toMatch(/even/);\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngClassEvenDirective = classDirective('Even', 1);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngCloak\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n\t * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n\t * directive to avoid the undesirable flicker effect caused by the html template display.\n\t *\n\t * The directive can be applied to the `<body>` element, but the preferred usage is to apply\n\t * multiple `ngCloak` directives to small portions of the page to permit progressive rendering\n\t * of the browser view.\n\t *\n\t * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n\t * `angular.min.js`.\n\t * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\t *\n\t * ```css\n\t * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n\t *   display: none !important;\n\t * }\n\t * ```\n\t *\n\t * When this css rule is loaded by the browser, all html elements (including their children) that\n\t * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\n\t * during the compilation of the template it deletes the `ngCloak` element attribute, making\n\t * the compiled element visible.\n\t *\n\t * For the best result, the `angular.js` script must be loaded in the head section of the html\n\t * document; alternatively, the css rule above must be included in the external stylesheet of the\n\t * application.\n\t *\n\t * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n\t * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n\t * class `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.\n\t *\n\t * @element ANY\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n\t        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should remove the template directive and css class', function() {\n\t         expect($('#template1').getAttribute('ng-cloak')).\n\t           toBeNull();\n\t         expect($('#template2').getAttribute('ng-cloak')).\n\t           toBeNull();\n\t       });\n\t     </file>\n\t   </example>\n\t *\n\t */\n\tvar ngCloakDirective = ngDirective({\n\t  compile: function(element, attr) {\n\t    attr.$set('ngCloak', undefined);\n\t    element.removeClass('ng-cloak');\n\t  }\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngController\n\t *\n\t * @description\n\t * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\n\t * supports the principles behind the Model-View-Controller design pattern.\n\t *\n\t * MVC components in angular:\n\t *\n\t * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n\t *   are accessed through bindings.\n\t * * View — The template (HTML with data bindings) that is rendered into the View.\n\t * * Controller — The `ngController` directive specifies a Controller class; the class contains business\n\t *   logic behind the application to decorate the scope with functions and values\n\t *\n\t * Note that you can also attach controllers to the DOM by declaring it in a route definition\n\t * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\n\t * again using `ng-controller` in the template itself.  This will cause the controller to be attached\n\t * and executed twice.\n\t *\n\t * @element ANY\n\t * @scope\n\t * @priority 500\n\t * @param {expression} ngController Name of a globally accessible constructor function or an\n\t *     {@link guide/expression expression} that on the current scope evaluates to a\n\t *     constructor function. The controller instance can be published into a scope property\n\t *     by specifying `as propertyName`.\n\t *\n\t * @example\n\t * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n\t * greeting are methods declared on the controller (see source tab). These methods can\n\t * easily be called from the angular markup. Any changes to the data are automatically reflected\n\t * in the View without the need for a manual update.\n\t *\n\t * Two different declaration styles are included below:\n\t *\n\t * * one binds methods and properties directly onto the controller using `this`:\n\t * `ng-controller=\"SettingsController1 as settings\"`\n\t * * one injects `$scope` into the controller:\n\t * `ng-controller=\"SettingsController2\"`\n\t *\n\t * The second option is more common in the Angular community, and is generally used in boilerplates\n\t * and in this guide. However, there are advantages to binding properties directly to the controller\n\t * and avoiding scope.\n\t *\n\t * * Using `controller as` makes it obvious which controller you are accessing in the template when\n\t * multiple controllers apply to an element.\n\t * * If you are writing your controllers as classes you have easier access to the properties and\n\t * methods, which will appear on the scope, from inside the controller code.\n\t * * Since there is always a `.` in the bindings, you don't have to worry about prototypal\n\t * inheritance masking primitives.\n\t *\n\t * This example demonstrates the `controller as` syntax.\n\t *\n\t * <example name=\"ngControllerAs\" module=\"controllerAsExample\">\n\t *   <file name=\"index.html\">\n\t *    <div id=\"ctrl-as-exmpl\" ng-controller=\"SettingsController1 as settings\">\n\t *      Name: <input type=\"text\" ng-model=\"settings.name\"/>\n\t *      [ <a href=\"\" ng-click=\"settings.greet()\">greet</a> ]<br/>\n\t *      Contact:\n\t *      <ul>\n\t *        <li ng-repeat=\"contact in settings.contacts\">\n\t *          <select ng-model=\"contact.type\">\n\t *             <option>phone</option>\n\t *             <option>email</option>\n\t *          </select>\n\t *          <input type=\"text\" ng-model=\"contact.value\"/>\n\t *          [ <a href=\"\" ng-click=\"settings.clearContact(contact)\">clear</a>\n\t *          | <a href=\"\" ng-click=\"settings.removeContact(contact)\">X</a> ]\n\t *        </li>\n\t *        <li>[ <a href=\"\" ng-click=\"settings.addContact()\">add</a> ]</li>\n\t *     </ul>\n\t *    </div>\n\t *   </file>\n\t *   <file name=\"app.js\">\n\t *    angular.module('controllerAsExample', [])\n\t *      .controller('SettingsController1', SettingsController1);\n\t *\n\t *    function SettingsController1() {\n\t *      this.name = \"John Smith\";\n\t *      this.contacts = [\n\t *        {type: 'phone', value: '408 555 1212'},\n\t *        {type: 'email', value: 'john.smith@example.org'} ];\n\t *    }\n\t *\n\t *    SettingsController1.prototype.greet = function() {\n\t *      alert(this.name);\n\t *    };\n\t *\n\t *    SettingsController1.prototype.addContact = function() {\n\t *      this.contacts.push({type: 'email', value: 'yourname@example.org'});\n\t *    };\n\t *\n\t *    SettingsController1.prototype.removeContact = function(contactToRemove) {\n\t *     var index = this.contacts.indexOf(contactToRemove);\n\t *      this.contacts.splice(index, 1);\n\t *    };\n\t *\n\t *    SettingsController1.prototype.clearContact = function(contact) {\n\t *      contact.type = 'phone';\n\t *      contact.value = '';\n\t *    };\n\t *   </file>\n\t *   <file name=\"protractor.js\" type=\"protractor\">\n\t *     it('should check controller as', function() {\n\t *       var container = element(by.id('ctrl-as-exmpl'));\n\t *         expect(container.element(by.model('settings.name'))\n\t *           .getAttribute('value')).toBe('John Smith');\n\t *\n\t *       var firstRepeat =\n\t *           container.element(by.repeater('contact in settings.contacts').row(0));\n\t *       var secondRepeat =\n\t *           container.element(by.repeater('contact in settings.contacts').row(1));\n\t *\n\t *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *           .toBe('408 555 1212');\n\t *\n\t *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *           .toBe('john.smith@example.org');\n\t *\n\t *       firstRepeat.element(by.linkText('clear')).click();\n\t *\n\t *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *           .toBe('');\n\t *\n\t *       container.element(by.linkText('add')).click();\n\t *\n\t *       expect(container.element(by.repeater('contact in settings.contacts').row(2))\n\t *           .element(by.model('contact.value'))\n\t *           .getAttribute('value'))\n\t *           .toBe('yourname@example.org');\n\t *     });\n\t *   </file>\n\t * </example>\n\t *\n\t * This example demonstrates the \"attach to `$scope`\" style of controller.\n\t *\n\t * <example name=\"ngController\" module=\"controllerExample\">\n\t *  <file name=\"index.html\">\n\t *   <div id=\"ctrl-exmpl\" ng-controller=\"SettingsController2\">\n\t *     Name: <input type=\"text\" ng-model=\"name\"/>\n\t *     [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n\t *     Contact:\n\t *     <ul>\n\t *       <li ng-repeat=\"contact in contacts\">\n\t *         <select ng-model=\"contact.type\">\n\t *            <option>phone</option>\n\t *            <option>email</option>\n\t *         </select>\n\t *         <input type=\"text\" ng-model=\"contact.value\"/>\n\t *         [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n\t *         | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n\t *       </li>\n\t *       <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n\t *    </ul>\n\t *   </div>\n\t *  </file>\n\t *  <file name=\"app.js\">\n\t *   angular.module('controllerExample', [])\n\t *     .controller('SettingsController2', ['$scope', SettingsController2]);\n\t *\n\t *   function SettingsController2($scope) {\n\t *     $scope.name = \"John Smith\";\n\t *     $scope.contacts = [\n\t *       {type:'phone', value:'408 555 1212'},\n\t *       {type:'email', value:'john.smith@example.org'} ];\n\t *\n\t *     $scope.greet = function() {\n\t *       alert($scope.name);\n\t *     };\n\t *\n\t *     $scope.addContact = function() {\n\t *       $scope.contacts.push({type:'email', value:'yourname@example.org'});\n\t *     };\n\t *\n\t *     $scope.removeContact = function(contactToRemove) {\n\t *       var index = $scope.contacts.indexOf(contactToRemove);\n\t *       $scope.contacts.splice(index, 1);\n\t *     };\n\t *\n\t *     $scope.clearContact = function(contact) {\n\t *       contact.type = 'phone';\n\t *       contact.value = '';\n\t *     };\n\t *   }\n\t *  </file>\n\t *  <file name=\"protractor.js\" type=\"protractor\">\n\t *    it('should check controller', function() {\n\t *      var container = element(by.id('ctrl-exmpl'));\n\t *\n\t *      expect(container.element(by.model('name'))\n\t *          .getAttribute('value')).toBe('John Smith');\n\t *\n\t *      var firstRepeat =\n\t *          container.element(by.repeater('contact in contacts').row(0));\n\t *      var secondRepeat =\n\t *          container.element(by.repeater('contact in contacts').row(1));\n\t *\n\t *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *          .toBe('408 555 1212');\n\t *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *          .toBe('john.smith@example.org');\n\t *\n\t *      firstRepeat.element(by.linkText('clear')).click();\n\t *\n\t *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n\t *          .toBe('');\n\t *\n\t *      container.element(by.linkText('add')).click();\n\t *\n\t *      expect(container.element(by.repeater('contact in contacts').row(2))\n\t *          .element(by.model('contact.value'))\n\t *          .getAttribute('value'))\n\t *          .toBe('yourname@example.org');\n\t *    });\n\t *  </file>\n\t *</example>\n\t\n\t */\n\tvar ngControllerDirective = [function() {\n\t  return {\n\t    scope: true,\n\t    controller: '@',\n\t    priority: 500\n\t  };\n\t}];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngCsp\n\t *\n\t * @element html\n\t * @description\n\t * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n\t *\n\t * This is necessary when developing things like Google Chrome Extensions.\n\t *\n\t * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n\t * For Angular to be CSP compatible there are only two things that we need to do differently:\n\t *\n\t * - don't use `Function` constructor to generate optimized value getters\n\t * - don't inject custom stylesheet into the document\n\t *\n\t * AngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\n\t * directive will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\n\t * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n\t * be raised.\n\t *\n\t * CSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\n\t * includes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\n\t * To make those directives work in CSP mode, include the `angular-csp.css` manually.\n\t *\n\t * Angular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\n\t * autodetection however triggers a CSP error to be logged in the console:\n\t *\n\t * ```\n\t * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\n\t * script in the following Content Security Policy directive: \"default-src 'self'\". Note that\n\t * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n\t * ```\n\t *\n\t * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\n\t * directive on the root element of the application or on the `angular.js` script tag, whichever\n\t * appears first in the html document.\n\t *\n\t * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\n\t *\n\t * @example\n\t * This example shows how to apply the `ngCsp` directive to the `html` tag.\n\t   ```html\n\t     <!doctype html>\n\t     <html ng-app ng-csp>\n\t     ...\n\t     ...\n\t     </html>\n\t   ```\n\t */\n\t\n\t// ngCsp is not implemented as a proper directive any more, because we need it be processed while we\n\t// bootstrap the system (before $parse is instantiated), for this reason we just have\n\t// the csp.isActive() fn that looks for ng-csp attribute anywhere in the current doc\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngClick\n\t *\n\t * @description\n\t * The ngClick directive allows you to specify custom behavior when\n\t * an element is clicked.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n\t * click. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment\n\t      </button>\n\t      <span>\n\t        count: {{count}}\n\t      <span>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-click', function() {\n\t         expect(element(by.binding('count')).getText()).toMatch('0');\n\t         element(by.css('button')).click();\n\t         expect(element(by.binding('count')).getText()).toMatch('1');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\t/*\n\t * A collection of directives that allows creation of custom event handlers that are defined as\n\t * angular expressions and are compiled and executed within the current scope.\n\t */\n\tvar ngEventDirectives = {};\n\t\n\t// For events that might fire synchronously during DOM manipulation\n\t// we need to execute their event handlers asynchronously using $evalAsync,\n\t// so that they are not executed in an inconsistent state.\n\tvar forceAsyncEvents = {\n\t  'blur': true,\n\t  'focus': true\n\t};\n\tforEach(\n\t  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),\n\t  function(eventName) {\n\t    var directiveName = directiveNormalize('ng-' + eventName);\n\t    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {\n\t      return {\n\t        compile: function($element, attr) {\n\t          // We expose the powerful $event object on the scope that provides access to the Window,\n\t          // etc. that isn't protected by the fast paths in $parse.  We explicitly request better\n\t          // checks at the cost of speed since event handler expressions are not executed as\n\t          // frequently as regular change detection.\n\t          var fn = $parse(attr[directiveName], /* expensiveChecks */ true);\n\t          return function ngEventHandler(scope, element) {\n\t            element.on(eventName, function(event) {\n\t              var callback = function() {\n\t                fn(scope, {$event:event});\n\t              };\n\t              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {\n\t                scope.$evalAsync(callback);\n\t              } else {\n\t                scope.$apply(callback);\n\t              }\n\t            });\n\t          };\n\t        }\n\t      };\n\t    }];\n\t  }\n\t);\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngDblclick\n\t *\n\t * @description\n\t * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n\t * a dblclick. (The Event object is available as `$event`)\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-dblclick=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (on double click)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMousedown\n\t *\n\t * @description\n\t * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n\t * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mousedown=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (on mouse down)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMouseup\n\t *\n\t * @description\n\t * Specify custom behavior on mouseup event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n\t * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mouseup=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (on mouse up)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMouseover\n\t *\n\t * @description\n\t * Specify custom behavior on mouseover event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n\t * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mouseover=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (when mouse is over)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMouseenter\n\t *\n\t * @description\n\t * Specify custom behavior on mouseenter event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n\t * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mouseenter=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (when mouse enters)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMouseleave\n\t *\n\t * @description\n\t * Specify custom behavior on mouseleave event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n\t * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mouseleave=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (when mouse leaves)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngMousemove\n\t *\n\t * @description\n\t * Specify custom behavior on mousemove event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n\t * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <button ng-mousemove=\"count = count + 1\" ng-init=\"count=0\">\n\t        Increment (when mouse moves)\n\t      </button>\n\t      count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngKeydown\n\t *\n\t * @description\n\t * Specify custom behavior on keydown event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n\t * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <input ng-keydown=\"count = count + 1\" ng-init=\"count=0\">\n\t      key down count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngKeyup\n\t *\n\t * @description\n\t * Specify custom behavior on keyup event.\n\t *\n\t * @element ANY\n\t * @priority 0\n\t * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n\t * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t       <p>Typing in the input box below updates the key count</p>\n\t       <input ng-keyup=\"count = count + 1\" ng-init=\"count=0\"> key up count: {{count}}\n\t\n\t       <p>Typing in the input box below updates the keycode</p>\n\t       <input ng-keyup=\"event=$event\">\n\t       <p>event keyCode: {{ event.keyCode }}</p>\n\t       <p>event altKey: {{ event.altKey }}</p>\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngKeypress\n\t *\n\t * @description\n\t * Specify custom behavior on keypress event.\n\t *\n\t * @element ANY\n\t * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n\t * keypress. ({@link guide/expression#-event- Event object is available as `$event`}\n\t * and can be interrogated for keyCode, altKey, etc.)\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <input ng-keypress=\"count = count + 1\" ng-init=\"count=0\">\n\t      key press count: {{count}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngSubmit\n\t *\n\t * @description\n\t * Enables binding angular expressions to onsubmit events.\n\t *\n\t * Additionally it prevents the default action (which for form means sending the request to the\n\t * server and reloading the current page), but only if the form does not contain `action`,\n\t * `data-action`, or `x-action` attributes.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n\t * `ngSubmit` handlers together. See the\n\t * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\n\t * for a detailed discussion of when `ngSubmit` may be triggered.\n\t * </div>\n\t *\n\t * @element form\n\t * @priority 0\n\t * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n\t * ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example module=\"submitExample\">\n\t     <file name=\"index.html\">\n\t      <script>\n\t        angular.module('submitExample', [])\n\t          .controller('ExampleController', ['$scope', function($scope) {\n\t            $scope.list = [];\n\t            $scope.text = 'hello';\n\t            $scope.submit = function() {\n\t              if ($scope.text) {\n\t                $scope.list.push(this.text);\n\t                $scope.text = '';\n\t              }\n\t            };\n\t          }]);\n\t      </script>\n\t      <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n\t        Enter text and hit enter:\n\t        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n\t        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n\t        <pre>list={{list}}</pre>\n\t      </form>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-submit', function() {\n\t         expect(element(by.binding('list')).getText()).toBe('list=[]');\n\t         element(by.css('#submit')).click();\n\t         expect(element(by.binding('list')).getText()).toContain('hello');\n\t         expect(element(by.model('text')).getAttribute('value')).toBe('');\n\t       });\n\t       it('should ignore empty strings', function() {\n\t         expect(element(by.binding('list')).getText()).toBe('list=[]');\n\t         element(by.css('#submit')).click();\n\t         element(by.css('#submit')).click();\n\t         expect(element(by.binding('list')).getText()).toContain('hello');\n\t        });\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngFocus\n\t *\n\t * @description\n\t * Specify custom behavior on focus event.\n\t *\n\t * Note: As the `focus` event is executed synchronously when calling `input.focus()`\n\t * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n\t * during an `$apply` to ensure a consistent state.\n\t *\n\t * @element window, input, select, textarea, a\n\t * @priority 0\n\t * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon\n\t * focus. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t * See {@link ng.directive:ngClick ngClick}\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngBlur\n\t *\n\t * @description\n\t * Specify custom behavior on blur event.\n\t *\n\t * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\n\t * an element has lost focus.\n\t *\n\t * Note: As the `blur` event is executed synchronously also during DOM manipulations\n\t * (e.g. removing a focussed input),\n\t * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n\t * during an `$apply` to ensure a consistent state.\n\t *\n\t * @element window, input, select, textarea, a\n\t * @priority 0\n\t * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon\n\t * blur. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t * See {@link ng.directive:ngClick ngClick}\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngCopy\n\t *\n\t * @description\n\t * Specify custom behavior on copy event.\n\t *\n\t * @element window, input, select, textarea, a\n\t * @priority 0\n\t * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon\n\t * copy. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <input ng-copy=\"copied=true\" ng-init=\"copied=false; value='copy me'\" ng-model=\"value\">\n\t      copied: {{copied}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngCut\n\t *\n\t * @description\n\t * Specify custom behavior on cut event.\n\t *\n\t * @element window, input, select, textarea, a\n\t * @priority 0\n\t * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon\n\t * cut. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <input ng-cut=\"cut=true\" ng-init=\"cut=false; value='cut me'\" ng-model=\"value\">\n\t      cut: {{cut}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngPaste\n\t *\n\t * @description\n\t * Specify custom behavior on paste event.\n\t *\n\t * @element window, input, select, textarea, a\n\t * @priority 0\n\t * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon\n\t * paste. ({@link guide/expression#-event- Event object is available as `$event`})\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t      <input ng-paste=\"paste=true\" ng-init=\"paste=false\" placeholder='paste here'>\n\t      pasted: {{paste}}\n\t     </file>\n\t   </example>\n\t */\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngIf\n\t * @restrict A\n\t *\n\t * @description\n\t * The `ngIf` directive removes or recreates a portion of the DOM tree based on an\n\t * {expression}. If the expression assigned to `ngIf` evaluates to a false\n\t * value then the element is removed from the DOM, otherwise a clone of the\n\t * element is reinserted into the DOM.\n\t *\n\t * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\n\t * element in the DOM rather than changing its visibility via the `display` css property.  A common\n\t * case when this difference is significant is when using css selectors that rely on an element's\n\t * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n\t *\n\t * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope\n\t * is created when the element is restored.  The scope created within `ngIf` inherits from\n\t * its parent scope using\n\t * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\n\t * An important implication of this is if `ngModel` is used within `ngIf` to bind to\n\t * a javascript primitive defined in the parent scope. In this case any modifications made to the\n\t * variable within the child scope will override (hide) the value in the parent scope.\n\t *\n\t * Also, `ngIf` recreates elements using their compiled state. An example of this behavior\n\t * is if an element's class attribute is directly modified after it's compiled, using something like\n\t * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\n\t * the added class will be lost because the original compiled state is used to regenerate the element.\n\t *\n\t * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`\n\t * and `leave` effects.\n\t *\n\t * @animations\n\t * enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container\n\t * leave - happens just before the `ngIf` contents are removed from the DOM\n\t *\n\t * @element ANY\n\t * @scope\n\t * @priority 600\n\t * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\n\t *     the element is removed from the DOM tree. If it is truthy a copy of the compiled\n\t *     element is added to the DOM tree.\n\t *\n\t * @example\n\t  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t      Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /><br/>\n\t      Show when checked:\n\t      <span ng-if=\"checked\" class=\"animate-if\">\n\t        I'm removed when the checkbox is unchecked.\n\t      </span>\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .animate-if {\n\t        background:white;\n\t        border:1px solid black;\n\t        padding:10px;\n\t      }\n\t\n\t      .animate-if.ng-enter, .animate-if.ng-leave {\n\t        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t      }\n\t\n\t      .animate-if.ng-enter,\n\t      .animate-if.ng-leave.ng-leave-active {\n\t        opacity:0;\n\t      }\n\t\n\t      .animate-if.ng-leave,\n\t      .animate-if.ng-enter.ng-enter-active {\n\t        opacity:1;\n\t      }\n\t    </file>\n\t  </example>\n\t */\n\tvar ngIfDirective = ['$animate', function($animate) {\n\t  return {\n\t    transclude: 'element',\n\t    priority: 600,\n\t    terminal: true,\n\t    restrict: 'A',\n\t    $$tlb: true,\n\t    link: function ($scope, $element, $attr, ctrl, $transclude) {\n\t        var block, childScope, previousElements;\n\t        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\n\t\n\t          if (toBoolean(value)) {\n\t            if (!childScope) {\n\t              childScope = $scope.$new();\n\t              $transclude(childScope, function (clone) {\n\t                clone[clone.length++] = document.createComment(' end ngIf: ' + $attr.ngIf + ' ');\n\t                // Note: We only need the first/last node of the cloned nodes.\n\t                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n\t                // by a directive with templateUrl when its template arrives.\n\t                block = {\n\t                  clone: clone\n\t                };\n\t                $animate.enter(clone, $element.parent(), $element);\n\t              });\n\t            }\n\t          } else {\n\t            if(previousElements) {\n\t              previousElements.remove();\n\t              previousElements = null;\n\t            }\n\t            if(childScope) {\n\t              childScope.$destroy();\n\t              childScope = null;\n\t            }\n\t            if(block) {\n\t              previousElements = getBlockElements(block.clone);\n\t              $animate.leave(previousElements, function() {\n\t                previousElements = null;\n\t              });\n\t              block = null;\n\t            }\n\t          }\n\t        });\n\t    }\n\t  };\n\t}];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngInclude\n\t * @restrict ECA\n\t *\n\t * @description\n\t * Fetches, compiles and includes an external HTML fragment.\n\t *\n\t * By default, the template URL is restricted to the same domain and protocol as the\n\t * application document. This is done by calling {@link ng.$sce#getTrustedResourceUrl\n\t * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\n\t * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n\t * [wrap them](ng.$sce#trustAsResourceUrl) as trusted values. Refer to Angular's {@link\n\t * ng.$sce Strict Contextual Escaping}.\n\t *\n\t * In addition, the browser's\n\t * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n\t * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n\t * policy may further restrict whether the template is successfully loaded.\n\t * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\n\t * access on some browsers.\n\t *\n\t * @animations\n\t * enter - animation is used to bring new content into the browser.\n\t * leave - animation is used to animate existing content away.\n\t *\n\t * The enter and leave animation occur concurrently.\n\t *\n\t * @scope\n\t * @priority 400\n\t *\n\t * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n\t *                 make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n\t * @param {string=} onload Expression to evaluate when a new partial is loaded.\n\t *\n\t * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n\t *                  $anchorScroll} to scroll the viewport after the content is loaded.\n\t *\n\t *                  - If the attribute is not set, disable scrolling.\n\t *                  - If the attribute is set without value, enable scrolling.\n\t *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n\t *\n\t * @example\n\t  <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t     <div ng-controller=\"ExampleController\">\n\t       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n\t        <option value=\"\">(blank)</option>\n\t       </select>\n\t       url of the template: <code>{{template.url}}</code>\n\t       <hr/>\n\t       <div class=\"slide-animate-container\">\n\t         <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n\t       </div>\n\t     </div>\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('includeExample', ['ngAnimate'])\n\t        .controller('ExampleController', ['$scope', function($scope) {\n\t          $scope.templates =\n\t            [ { name: 'template1.html', url: 'template1.html'},\n\t              { name: 'template2.html', url: 'template2.html'} ];\n\t          $scope.template = $scope.templates[0];\n\t        }]);\n\t     </file>\n\t    <file name=\"template1.html\">\n\t      Content of template1.html\n\t    </file>\n\t    <file name=\"template2.html\">\n\t      Content of template2.html\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .slide-animate-container {\n\t        position:relative;\n\t        background:white;\n\t        border:1px solid black;\n\t        height:40px;\n\t        overflow:hidden;\n\t      }\n\t\n\t      .slide-animate {\n\t        padding:10px;\n\t      }\n\t\n\t      .slide-animate.ng-enter, .slide-animate.ng-leave {\n\t        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t\n\t        position:absolute;\n\t        top:0;\n\t        left:0;\n\t        right:0;\n\t        bottom:0;\n\t        display:block;\n\t        padding:10px;\n\t      }\n\t\n\t      .slide-animate.ng-enter {\n\t        top:-50px;\n\t      }\n\t      .slide-animate.ng-enter.ng-enter-active {\n\t        top:0;\n\t      }\n\t\n\t      .slide-animate.ng-leave {\n\t        top:0;\n\t      }\n\t      .slide-animate.ng-leave.ng-leave-active {\n\t        top:50px;\n\t      }\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      var templateSelect = element(by.model('template'));\n\t      var includeElem = element(by.css('[ng-include]'));\n\t\n\t      it('should load template1.html', function() {\n\t        expect(includeElem.getText()).toMatch(/Content of template1.html/);\n\t      });\n\t\n\t      it('should load template2.html', function() {\n\t        if (browser.params.browser == 'firefox') {\n\t          // Firefox can't handle using selects\n\t          // See https://github.com/angular/protractor/issues/480\n\t          return;\n\t        }\n\t        templateSelect.click();\n\t        templateSelect.all(by.css('option')).get(2).click();\n\t        expect(includeElem.getText()).toMatch(/Content of template2.html/);\n\t      });\n\t\n\t      it('should change to blank', function() {\n\t        if (browser.params.browser == 'firefox') {\n\t          // Firefox can't handle using selects\n\t          return;\n\t        }\n\t        templateSelect.click();\n\t        templateSelect.all(by.css('option')).get(0).click();\n\t        expect(includeElem.isPresent()).toBe(false);\n\t      });\n\t    </file>\n\t  </example>\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc event\n\t * @name ngInclude#$includeContentRequested\n\t * @eventType emit on the scope ngInclude was declared in\n\t * @description\n\t * Emitted every time the ngInclude content is requested.\n\t */\n\t\n\t\n\t/**\n\t * @ngdoc event\n\t * @name ngInclude#$includeContentLoaded\n\t * @eventType emit on the current ngInclude scope\n\t * @description\n\t * Emitted every time the ngInclude content is reloaded.\n\t */\n\tvar ngIncludeDirective = ['$http', '$templateCache', '$anchorScroll', '$animate', '$sce',\n\t                  function($http,   $templateCache,   $anchorScroll,   $animate,   $sce) {\n\t  return {\n\t    restrict: 'ECA',\n\t    priority: 400,\n\t    terminal: true,\n\t    transclude: 'element',\n\t    controller: angular.noop,\n\t    compile: function(element, attr) {\n\t      var srcExp = attr.ngInclude || attr.src,\n\t          onloadExp = attr.onload || '',\n\t          autoScrollExp = attr.autoscroll;\n\t\n\t      return function(scope, $element, $attr, ctrl, $transclude) {\n\t        var changeCounter = 0,\n\t            currentScope,\n\t            previousElement,\n\t            currentElement;\n\t\n\t        var cleanupLastIncludeContent = function() {\n\t          if(previousElement) {\n\t            previousElement.remove();\n\t            previousElement = null;\n\t          }\n\t          if(currentScope) {\n\t            currentScope.$destroy();\n\t            currentScope = null;\n\t          }\n\t          if(currentElement) {\n\t            $animate.leave(currentElement, function() {\n\t              previousElement = null;\n\t            });\n\t            previousElement = currentElement;\n\t            currentElement = null;\n\t          }\n\t        };\n\t\n\t        scope.$watch($sce.parseAsResourceUrl(srcExp), function ngIncludeWatchAction(src) {\n\t          var afterAnimation = function() {\n\t            if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n\t              $anchorScroll();\n\t            }\n\t          };\n\t          var thisChangeId = ++changeCounter;\n\t\n\t          if (src) {\n\t            $http.get(src, {cache: $templateCache}).success(function(response) {\n\t              if (thisChangeId !== changeCounter) return;\n\t              var newScope = scope.$new();\n\t              ctrl.template = response;\n\t\n\t              // Note: This will also link all children of ng-include that were contained in the original\n\t              // html. If that content contains controllers, ... they could pollute/change the scope.\n\t              // However, using ng-include on an element with additional content does not make sense...\n\t              // Note: We can't remove them in the cloneAttchFn of $transclude as that\n\t              // function is called before linking the content, which would apply child\n\t              // directives to non existing elements.\n\t              var clone = $transclude(newScope, function(clone) {\n\t                cleanupLastIncludeContent();\n\t                $animate.enter(clone, null, $element, afterAnimation);\n\t              });\n\t\n\t              currentScope = newScope;\n\t              currentElement = clone;\n\t\n\t              currentScope.$emit('$includeContentLoaded');\n\t              scope.$eval(onloadExp);\n\t            }).error(function() {\n\t              if (thisChangeId === changeCounter) cleanupLastIncludeContent();\n\t            });\n\t            scope.$emit('$includeContentRequested');\n\t          } else {\n\t            cleanupLastIncludeContent();\n\t            ctrl.template = null;\n\t          }\n\t        });\n\t      };\n\t    }\n\t  };\n\t}];\n\t\n\t// This directive is called during the $transclude call of the first `ngInclude` directive.\n\t// It will replace and compile the content of the element with the loaded template.\n\t// We need this directive so that the element content is already filled when\n\t// the link function of another directive on the same element as ngInclude\n\t// is called.\n\tvar ngIncludeFillContentDirective = ['$compile',\n\t  function($compile) {\n\t    return {\n\t      restrict: 'ECA',\n\t      priority: -400,\n\t      require: 'ngInclude',\n\t      link: function(scope, $element, $attr, ctrl) {\n\t        $element.html(ctrl.template);\n\t        $compile($element.contents())(scope);\n\t      }\n\t    };\n\t  }];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngInit\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngInit` directive allows you to evaluate an expression in the\n\t * current scope.\n\t *\n\t * <div class=\"alert alert-error\">\n\t * The only appropriate use of `ngInit` is for aliasing special properties of\n\t * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\n\t * should use {@link guide/controller controllers} rather than `ngInit`\n\t * to initialize values on a scope.\n\t * </div>\n\t * <div class=\"alert alert-warning\">\n\t * **Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\n\t * sure you have parenthesis for correct precedence:\n\t * <pre class=\"prettyprint\">\n\t *   <div ng-init=\"test1 = (data | orderBy:'name')\"></div>\n\t * </pre>\n\t * </div>\n\t *\n\t * @priority 450\n\t *\n\t * @element ANY\n\t * @param {expression} ngInit {@link guide/expression Expression} to eval.\n\t *\n\t * @example\n\t   <example module=\"initExample\">\n\t     <file name=\"index.html\">\n\t   <script>\n\t     angular.module('initExample', [])\n\t       .controller('ExampleController', ['$scope', function($scope) {\n\t         $scope.list = [['a', 'b'], ['c', 'd']];\n\t       }]);\n\t   </script>\n\t   <div ng-controller=\"ExampleController\">\n\t     <div ng-repeat=\"innerList in list\" ng-init=\"outerIndex = $index\">\n\t       <div ng-repeat=\"value in innerList\" ng-init=\"innerIndex = $index\">\n\t          <span class=\"example-init\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n\t       </div>\n\t     </div>\n\t   </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should alias index positions', function() {\n\t         var elements = element.all(by.css('.example-init'));\n\t         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\n\t         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\n\t         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\n\t         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngInitDirective = ngDirective({\n\t  priority: 450,\n\t  compile: function() {\n\t    return {\n\t      pre: function(scope, element, attrs) {\n\t        scope.$eval(attrs.ngInit);\n\t      }\n\t    };\n\t  }\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngNonBindable\n\t * @restrict AC\n\t * @priority 1000\n\t *\n\t * @description\n\t * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\n\t * DOM element. This is useful if the element contains what appears to be Angular directives and\n\t * bindings but which should be ignored by Angular. This could be the case if you have a site that\n\t * displays snippets of code, for instance.\n\t *\n\t * @element ANY\n\t *\n\t * @example\n\t * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,\n\t * but the one wrapped in `ngNonBindable` is left alone.\n\t *\n\t * @example\n\t    <example>\n\t      <file name=\"index.html\">\n\t        <div>Normal: {{1 + 2}}</div>\n\t        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t       it('should check ng-non-bindable', function() {\n\t         expect(element(by.binding('1 + 2')).getText()).toContain('3');\n\t         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\+ 2/);\n\t       });\n\t      </file>\n\t    </example>\n\t */\n\tvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngPluralize\n\t * @restrict EA\n\t *\n\t * @description\n\t * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n\t * These rules are bundled with angular.js, but can be overridden\n\t * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n\t * by specifying the mappings between\n\t * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n\t * and the strings to be displayed.\n\t *\n\t * # Plural categories and explicit number rules\n\t * There are two\n\t * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n\t * in Angular's default en-US locale: \"one\" and \"other\".\n\t *\n\t * While a plural category may match many numbers (for example, in en-US locale, \"other\" can match\n\t * any number that is not 1), an explicit number rule can only match one number. For example, the\n\t * explicit number rule for \"3\" matches the number 3. There are examples of plural categories\n\t * and explicit number rules throughout the rest of this documentation.\n\t *\n\t * # Configuring ngPluralize\n\t * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n\t * You can also provide an optional attribute, `offset`.\n\t *\n\t * The value of the `count` attribute can be either a string or an {@link guide/expression\n\t * Angular expression}; these are evaluated on the current scope for its bound value.\n\t *\n\t * The `when` attribute specifies the mappings between plural categories and the actual\n\t * string to be displayed. The value of the attribute should be a JSON object.\n\t *\n\t * The following example shows how to configure ngPluralize:\n\t *\n\t * ```html\n\t * <ng-pluralize count=\"personCount\"\n\t                 when=\"{'0': 'Nobody is viewing.',\n\t *                      'one': '1 person is viewing.',\n\t *                      'other': '{} people are viewing.'}\">\n\t * </ng-pluralize>\n\t *```\n\t *\n\t * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n\t * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n\t * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n\t * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n\t * show \"a dozen people are viewing\".\n\t *\n\t * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\n\t * into pluralized strings. In the previous example, Angular will replace `{}` with\n\t * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n\t * for <span ng-non-bindable>{{numberExpression}}</span>.\n\t *\n\t * # Configuring ngPluralize with offset\n\t * The `offset` attribute allows further customization of pluralized text, which can result in\n\t * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n\t * you might display \"John, Kate and 2 others are viewing this document\".\n\t * The offset attribute allows you to offset a number by any desired value.\n\t * Let's take a look at an example:\n\t *\n\t * ```html\n\t * <ng-pluralize count=\"personCount\" offset=2\n\t *               when=\"{'0': 'Nobody is viewing.',\n\t *                      '1': '{{person1}} is viewing.',\n\t *                      '2': '{{person1}} and {{person2}} are viewing.',\n\t *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n\t *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n\t * </ng-pluralize>\n\t * ```\n\t *\n\t * Notice that we are still using two plural categories(one, other), but we added\n\t * three explicit number rules 0, 1 and 2.\n\t * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n\t * When three people view the document, no explicit number rule is found, so\n\t * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n\t * In this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\n\t * is shown.\n\t *\n\t * Note that when you specify offsets, you must provide explicit number rules for\n\t * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n\t * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n\t * plural categories \"one\" and \"other\".\n\t *\n\t * @param {string|expression} count The variable to be bound to.\n\t * @param {string} when The mapping between plural category to its corresponding strings.\n\t * @param {number=} offset Offset to deduct from the total number.\n\t *\n\t * @example\n\t    <example module=\"pluralizeExample\">\n\t      <file name=\"index.html\">\n\t        <script>\n\t          angular.module('pluralizeExample', [])\n\t            .controller('ExampleController', ['$scope', function($scope) {\n\t              $scope.person1 = 'Igor';\n\t              $scope.person2 = 'Misko';\n\t              $scope.personCount = 1;\n\t            }]);\n\t        </script>\n\t        <div ng-controller=\"ExampleController\">\n\t          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n\t          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n\t          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\t\n\t          <!--- Example with simple pluralization rules for en locale --->\n\t          Without Offset:\n\t          <ng-pluralize count=\"personCount\"\n\t                        when=\"{'0': 'Nobody is viewing.',\n\t                               'one': '1 person is viewing.',\n\t                               'other': '{} people are viewing.'}\">\n\t          </ng-pluralize><br>\n\t\n\t          <!--- Example with offset --->\n\t          With Offset(2):\n\t          <ng-pluralize count=\"personCount\" offset=2\n\t                        when=\"{'0': 'Nobody is viewing.',\n\t                               '1': '{{person1}} is viewing.',\n\t                               '2': '{{person1}} and {{person2}} are viewing.',\n\t                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n\t                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n\t          </ng-pluralize>\n\t        </div>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should show correct pluralized string', function() {\n\t          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n\t          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n\t          var countInput = element(by.model('personCount'));\n\t\n\t          expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n\t          expect(withOffset.getText()).toEqual('Igor is viewing.');\n\t\n\t          countInput.clear();\n\t          countInput.sendKeys('0');\n\t\n\t          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n\t          expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\t\n\t          countInput.clear();\n\t          countInput.sendKeys('2');\n\t\n\t          expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n\t          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\t\n\t          countInput.clear();\n\t          countInput.sendKeys('3');\n\t\n\t          expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n\t          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\t\n\t          countInput.clear();\n\t          countInput.sendKeys('4');\n\t\n\t          expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n\t          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n\t        });\n\t        it('should show data-bound names', function() {\n\t          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n\t          var personCount = element(by.model('personCount'));\n\t          var person1 = element(by.model('person1'));\n\t          var person2 = element(by.model('person2'));\n\t          personCount.clear();\n\t          personCount.sendKeys('4');\n\t          person1.clear();\n\t          person1.sendKeys('Di');\n\t          person2.clear();\n\t          person2.sendKeys('Vojta');\n\t          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n\t        });\n\t      </file>\n\t    </example>\n\t */\n\tvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n\t  var BRACE = /{}/g;\n\t  return {\n\t    restrict: 'EA',\n\t    link: function(scope, element, attr) {\n\t      var numberExp = attr.count,\n\t          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs\n\t          offset = attr.offset || 0,\n\t          whens = scope.$eval(whenExp) || {},\n\t          whensExpFns = {},\n\t          startSymbol = $interpolate.startSymbol(),\n\t          endSymbol = $interpolate.endSymbol(),\n\t          isWhen = /^when(Minus)?(.+)$/;\n\t\n\t      forEach(attr, function(expression, attributeName) {\n\t        if (isWhen.test(attributeName)) {\n\t          whens[lowercase(attributeName.replace('when', '').replace('Minus', '-'))] =\n\t            element.attr(attr.$attr[attributeName]);\n\t        }\n\t      });\n\t      forEach(whens, function(expression, key) {\n\t        whensExpFns[key] =\n\t          $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' +\n\t            offset + endSymbol));\n\t      });\n\t\n\t      scope.$watch(function ngPluralizeWatch() {\n\t        var value = parseFloat(scope.$eval(numberExp));\n\t\n\t        if (!isNaN(value)) {\n\t          //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,\n\t          //check it against pluralization rules in $locale service\n\t          if (!(value in whens)) value = $locale.pluralCat(value - offset);\n\t           return whensExpFns[value](scope, element, true);\n\t        } else {\n\t          return '';\n\t        }\n\t      }, function ngPluralizeWatchAction(newVal) {\n\t        element.text(newVal);\n\t      });\n\t    }\n\t  };\n\t}];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngRepeat\n\t *\n\t * @description\n\t * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n\t * instance gets its own scope, where the given loop variable is set to the current collection item,\n\t * and `$index` is set to the item index or key.\n\t *\n\t * Special properties are exposed on the local scope of each template instance, including:\n\t *\n\t * | Variable  | Type            | Details                                                                     |\n\t * |-----------|-----------------|-----------------------------------------------------------------------------|\n\t * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n\t * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n\t * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n\t * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n\t * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n\t * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n\t *\n\t * Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\n\t * This may be useful when, for instance, nesting ngRepeats.\n\t *\n\t * # Special repeat start and end points\n\t * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\n\t * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\n\t * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\n\t * up to and including the ending HTML tag where **ng-repeat-end** is placed.\n\t *\n\t * The example below makes use of this feature:\n\t * ```html\n\t *   <header ng-repeat-start=\"item in items\">\n\t *     Header {{ item }}\n\t *   </header>\n\t *   <div class=\"body\">\n\t *     Body {{ item }}\n\t *   </div>\n\t *   <footer ng-repeat-end>\n\t *     Footer {{ item }}\n\t *   </footer>\n\t * ```\n\t *\n\t * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n\t * ```html\n\t *   <header>\n\t *     Header A\n\t *   </header>\n\t *   <div class=\"body\">\n\t *     Body A\n\t *   </div>\n\t *   <footer>\n\t *     Footer A\n\t *   </footer>\n\t *   <header>\n\t *     Header B\n\t *   </header>\n\t *   <div class=\"body\">\n\t *     Body B\n\t *   </div>\n\t *   <footer>\n\t *     Footer B\n\t *   </footer>\n\t * ```\n\t *\n\t * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\n\t * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).\n\t *\n\t * @animations\n\t * **.enter** - when a new item is added to the list or when an item is revealed after a filter\n\t *\n\t * **.leave** - when an item is removed from the list or when an item is filtered out\n\t *\n\t * **.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered\n\t *\n\t * @element ANY\n\t * @scope\n\t * @priority 1000\n\t * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\n\t *   formats are currently supported:\n\t *\n\t *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n\t *     is a scope expression giving the collection to enumerate.\n\t *\n\t *     For example: `album in artist.albums`.\n\t *\n\t *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n\t *     and `expression` is the scope expression giving the collection to enumerate.\n\t *\n\t *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n\t *\n\t *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking function\n\t *     which can be used to associate the objects in the collection with the DOM elements. If no tracking function\n\t *     is specified the ng-repeat associates elements by identity in the collection. It is an error to have\n\t *     more than one tracking function to resolve to the same key. (This would mean that two distinct objects are\n\t *     mapped to the same DOM element, which is not possible.)  Filters should be applied to the expression,\n\t *     before specifying a tracking expression.\n\t *\n\t *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\n\t *     will be associated by item identity in the array.\n\t *\n\t *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n\t *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n\t *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n\t *     element in the same way in the DOM.\n\t *\n\t *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\n\t *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n\t *     property is same.\n\t *\n\t *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\n\t *     to items in conjunction with a tracking expression.\n\t *\n\t * @example\n\t * This example initializes the scope to a list of names and\n\t * then uses `ngRepeat` to display every person:\n\t  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t      <div ng-init=\"friends = [\n\t        {name:'John', age:25, gender:'boy'},\n\t        {name:'Jessie', age:30, gender:'girl'},\n\t        {name:'Johanna', age:28, gender:'girl'},\n\t        {name:'Joy', age:15, gender:'girl'},\n\t        {name:'Mary', age:28, gender:'girl'},\n\t        {name:'Peter', age:95, gender:'boy'},\n\t        {name:'Sebastian', age:50, gender:'boy'},\n\t        {name:'Erika', age:27, gender:'girl'},\n\t        {name:'Patrick', age:40, gender:'boy'},\n\t        {name:'Samantha', age:60, gender:'girl'}\n\t      ]\">\n\t        I have {{friends.length}} friends. They are:\n\t        <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" />\n\t        <ul class=\"example-animate-container\">\n\t          <li class=\"animate-repeat\" ng-repeat=\"friend in friends | filter:q\">\n\t            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n\t          </li>\n\t        </ul>\n\t      </div>\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .example-animate-container {\n\t        background:white;\n\t        border:1px solid black;\n\t        list-style:none;\n\t        margin:0;\n\t        padding:0 10px;\n\t      }\n\t\n\t      .animate-repeat {\n\t        line-height:40px;\n\t        list-style:none;\n\t        box-sizing:border-box;\n\t      }\n\t\n\t      .animate-repeat.ng-move,\n\t      .animate-repeat.ng-enter,\n\t      .animate-repeat.ng-leave {\n\t        -webkit-transition:all linear 0.5s;\n\t        transition:all linear 0.5s;\n\t      }\n\t\n\t      .animate-repeat.ng-leave.ng-leave-active,\n\t      .animate-repeat.ng-move,\n\t      .animate-repeat.ng-enter {\n\t        opacity:0;\n\t        max-height:0;\n\t      }\n\t\n\t      .animate-repeat.ng-leave,\n\t      .animate-repeat.ng-move.ng-move-active,\n\t      .animate-repeat.ng-enter.ng-enter-active {\n\t        opacity:1;\n\t        max-height:40px;\n\t      }\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      var friends = element.all(by.repeater('friend in friends'));\n\t\n\t      it('should render initial data set', function() {\n\t        expect(friends.count()).toBe(10);\n\t        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\n\t        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\n\t        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\n\t        expect(element(by.binding('friends.length')).getText())\n\t            .toMatch(\"I have 10 friends. They are:\");\n\t      });\n\t\n\t       it('should update repeater when filter predicate changes', function() {\n\t         expect(friends.count()).toBe(10);\n\t\n\t         element(by.model('q')).sendKeys('ma');\n\t\n\t         expect(friends.count()).toBe(2);\n\t         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\n\t         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\n\t       });\n\t      </file>\n\t    </example>\n\t */\n\tvar ngRepeatDirective = ['$parse', '$animate', function($parse, $animate) {\n\t  var NG_REMOVED = '$$NG_REMOVED';\n\t  var ngRepeatMinErr = minErr('ngRepeat');\n\t  return {\n\t    transclude: 'element',\n\t    priority: 1000,\n\t    terminal: true,\n\t    $$tlb: true,\n\t    link: function($scope, $element, $attr, ctrl, $transclude){\n\t        var expression = $attr.ngRepeat;\n\t        var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/),\n\t          trackByExp, trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn,\n\t          lhs, rhs, valueIdentifier, keyIdentifier,\n\t          hashFnLocals = {$id: hashKey};\n\t\n\t        if (!match) {\n\t          throw ngRepeatMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n\t            expression);\n\t        }\n\t\n\t        lhs = match[1];\n\t        rhs = match[2];\n\t        trackByExp = match[3];\n\t\n\t        if (trackByExp) {\n\t          trackByExpGetter = $parse(trackByExp);\n\t          trackByIdExpFn = function(key, value, index) {\n\t            // assign key, value, and $index to the locals so that they can be used in hash functions\n\t            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\n\t            hashFnLocals[valueIdentifier] = value;\n\t            hashFnLocals.$index = index;\n\t            return trackByExpGetter($scope, hashFnLocals);\n\t          };\n\t        } else {\n\t          trackByIdArrayFn = function(key, value) {\n\t            return hashKey(value);\n\t          };\n\t          trackByIdObjFn = function(key) {\n\t            return key;\n\t          };\n\t        }\n\t\n\t        match = lhs.match(/^(?:([\\$\\w]+)|\\(([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\))$/);\n\t        if (!match) {\n\t          throw ngRepeatMinErr('iidexp', \"'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.\",\n\t                                                                    lhs);\n\t        }\n\t        valueIdentifier = match[3] || match[1];\n\t        keyIdentifier = match[2];\n\t\n\t        // Store a list of elements from previous run. This is a hash where key is the item from the\n\t        // iterator, and the value is objects with following properties.\n\t        //   - scope: bound scope\n\t        //   - element: previous element.\n\t        //   - index: position\n\t        var lastBlockMap = {};\n\t\n\t        //watch props\n\t        $scope.$watchCollection(rhs, function ngRepeatAction(collection){\n\t          var index, length,\n\t              previousNode = $element[0],     // current position of the node\n\t              nextNode,\n\t              // Same as lastBlockMap but it has the current state. It will become the\n\t              // lastBlockMap on the next iteration.\n\t              nextBlockMap = {},\n\t              arrayLength,\n\t              childScope,\n\t              key, value, // key/value of iteration\n\t              trackById,\n\t              trackByIdFn,\n\t              collectionKeys,\n\t              block,       // last object information {scope, element, id}\n\t              nextBlockOrder = [],\n\t              elementsToRemove;\n\t\n\t\n\t          if (isArrayLike(collection)) {\n\t            collectionKeys = collection;\n\t            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;\n\t          } else {\n\t            trackByIdFn = trackByIdExpFn || trackByIdObjFn;\n\t            // if object, extract keys, sort them and use to determine order of iteration over obj props\n\t            collectionKeys = [];\n\t            for (key in collection) {\n\t              if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {\n\t                collectionKeys.push(key);\n\t              }\n\t            }\n\t            collectionKeys.sort();\n\t          }\n\t\n\t          arrayLength = collectionKeys.length;\n\t\n\t          // locate existing items\n\t          length = nextBlockOrder.length = collectionKeys.length;\n\t          for(index = 0; index < length; index++) {\n\t           key = (collection === collectionKeys) ? index : collectionKeys[index];\n\t           value = collection[key];\n\t           trackById = trackByIdFn(key, value, index);\n\t           assertNotHasOwnProperty(trackById, '`track by` id');\n\t           if(lastBlockMap.hasOwnProperty(trackById)) {\n\t             block = lastBlockMap[trackById];\n\t             delete lastBlockMap[trackById];\n\t             nextBlockMap[trackById] = block;\n\t             nextBlockOrder[index] = block;\n\t           } else if (nextBlockMap.hasOwnProperty(trackById)) {\n\t             // restore lastBlockMap\n\t             forEach(nextBlockOrder, function(block) {\n\t               if (block && block.scope) lastBlockMap[block.id] = block;\n\t             });\n\t             // This is a duplicate and we need to throw an error\n\t             throw ngRepeatMinErr('dupes',\n\t                  \"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}\",\n\t                  expression, trackById, toJson(value));\n\t           } else {\n\t             // new never before seen block\n\t             nextBlockOrder[index] = { id: trackById };\n\t             nextBlockMap[trackById] = false;\n\t           }\n\t         }\n\t\n\t          // remove existing items\n\t          for (key in lastBlockMap) {\n\t            // lastBlockMap is our own object so we don't need to use special hasOwnPropertyFn\n\t            if (lastBlockMap.hasOwnProperty(key)) {\n\t              block = lastBlockMap[key];\n\t              elementsToRemove = getBlockElements(block.clone);\n\t              $animate.leave(elementsToRemove);\n\t              forEach(elementsToRemove, function(element) { element[NG_REMOVED] = true; });\n\t              block.scope.$destroy();\n\t            }\n\t          }\n\t\n\t          // we are not using forEach for perf reasons (trying to avoid #call)\n\t          for (index = 0, length = collectionKeys.length; index < length; index++) {\n\t            key = (collection === collectionKeys) ? index : collectionKeys[index];\n\t            value = collection[key];\n\t            block = nextBlockOrder[index];\n\t            if (nextBlockOrder[index - 1]) previousNode = getBlockEnd(nextBlockOrder[index - 1]);\n\t\n\t            if (block.scope) {\n\t              // if we have already seen this object, then we need to reuse the\n\t              // associated scope/element\n\t              childScope = block.scope;\n\t\n\t              nextNode = previousNode;\n\t              do {\n\t                nextNode = nextNode.nextSibling;\n\t              } while(nextNode && nextNode[NG_REMOVED]);\n\t\n\t              if (getBlockStart(block) != nextNode) {\n\t                // existing item which got moved\n\t                $animate.move(getBlockElements(block.clone), null, jqLite(previousNode));\n\t              }\n\t              previousNode = getBlockEnd(block);\n\t            } else {\n\t              // new item which we don't know about\n\t              childScope = $scope.$new();\n\t            }\n\t\n\t            childScope[valueIdentifier] = value;\n\t            if (keyIdentifier) childScope[keyIdentifier] = key;\n\t            childScope.$index = index;\n\t            childScope.$first = (index === 0);\n\t            childScope.$last = (index === (arrayLength - 1));\n\t            childScope.$middle = !(childScope.$first || childScope.$last);\n\t            // jshint bitwise: false\n\t            childScope.$odd = !(childScope.$even = (index&1) === 0);\n\t            // jshint bitwise: true\n\t\n\t            if (!block.scope) {\n\t              $transclude(childScope, function(clone) {\n\t                clone[clone.length++] = document.createComment(' end ngRepeat: ' + expression + ' ');\n\t                $animate.enter(clone, null, jqLite(previousNode));\n\t                previousNode = clone;\n\t                block.scope = childScope;\n\t                // Note: We only need the first/last node of the cloned nodes.\n\t                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n\t                // by a directive with templateUrl when its template arrives.\n\t                block.clone = clone;\n\t                nextBlockMap[block.id] = block;\n\t              });\n\t            }\n\t          }\n\t          lastBlockMap = nextBlockMap;\n\t        });\n\t    }\n\t  };\n\t\n\t  function getBlockStart(block) {\n\t    return block.clone[0];\n\t  }\n\t\n\t  function getBlockEnd(block) {\n\t    return block.clone[block.clone.length - 1];\n\t  }\n\t}];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngShow\n\t *\n\t * @description\n\t * The `ngShow` directive shows or hides the given HTML element based on the expression\n\t * provided to the `ngShow` attribute. The element is shown or hidden by removing or adding\n\t * the `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n\t * in AngularJS and sets the display style to none (using an !important flag).\n\t * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\t *\n\t * ```html\n\t * <!-- when $scope.myValue is truthy (element is visible) -->\n\t * <div ng-show=\"myValue\"></div>\n\t *\n\t * <!-- when $scope.myValue is falsy (element is hidden) -->\n\t * <div ng-show=\"myValue\" class=\"ng-hide\"></div>\n\t * ```\n\t *\n\t * When the `ngShow` expression evaluates to false then the `.ng-hide` CSS class is added to the class attribute\n\t * on the element causing it to become hidden. When true, the `.ng-hide` CSS class is removed\n\t * from the element causing the element not to appear hidden.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** Here is a list of values that ngShow will consider as a falsy value (case insensitive):<br />\n\t * \"f\" / \"0\" / \"false\" / \"no\" / \"n\" / \"[]\"\n\t * </div>\n\t *\n\t * ## Why is !important used?\n\t *\n\t * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n\t * can be easily overridden by heavier selectors. For example, something as simple\n\t * as changing the display style on a HTML list item would make hidden elements appear visible.\n\t * This also becomes a bigger issue when dealing with CSS frameworks.\n\t *\n\t * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n\t * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n\t * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\t *\n\t * ### Overriding `.ng-hide`\n\t *\n\t * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change\n\t * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n\t * class in CSS:\n\t *\n\t * ```css\n\t * .ng-hide {\n\t *   //this is just another form of hiding an element\n\t *   display:block!important;\n\t *   position:absolute;\n\t *   top:-9999px;\n\t *   left:-9999px;\n\t * }\n\t * ```\n\t *\n\t * By default you don't need to override in CSS anything and the animations will work around the display style.\n\t *\n\t * ## A note about animations with `ngShow`\n\t *\n\t * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n\t * is true and false. This system works like the animation system present with ngClass except that\n\t * you must also include the !important flag to override the display property\n\t * so that you can perform an animation when the element is hidden during the time of the animation.\n\t *\n\t * ```css\n\t * //\n\t * //a working example can be found at the bottom of this page\n\t * //\n\t * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n\t *   transition:0.5s linear all;\n\t * }\n\t *\n\t * .my-element.ng-hide-add { ... }\n\t * .my-element.ng-hide-add.ng-hide-add-active { ... }\n\t * .my-element.ng-hide-remove { ... }\n\t * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n\t * ```\n\t *\n\t * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display\n\t * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n\t *\n\t * @animations\n\t * addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible\n\t * removeClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden\n\t *\n\t * @element ANY\n\t * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n\t *     then the element is shown or hidden respectively.\n\t *\n\t * @example\n\t  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\t      <div>\n\t        Show:\n\t        <div class=\"check-element animate-show\" ng-show=\"checked\">\n\t          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n\t        </div>\n\t      </div>\n\t      <div>\n\t        Hide:\n\t        <div class=\"check-element animate-show\" ng-hide=\"checked\">\n\t          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n\t        </div>\n\t      </div>\n\t    </file>\n\t    <file name=\"glyphicons.css\">\n\t      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .animate-show {\n\t        -webkit-transition:all linear 0.5s;\n\t        transition:all linear 0.5s;\n\t        line-height:20px;\n\t        opacity:1;\n\t        padding:10px;\n\t        border:1px solid black;\n\t        background:white;\n\t      }\n\t\n\t      .animate-show.ng-hide {\n\t        line-height:0;\n\t        opacity:0;\n\t        padding:0 10px;\n\t      }\n\t\n\t      .check-element {\n\t        padding:10px;\n\t        border:1px solid black;\n\t        background:white;\n\t      }\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n\t      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\t\n\t      it('should check ng-show / ng-hide', function() {\n\t        expect(thumbsUp.isDisplayed()).toBeFalsy();\n\t        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\t\n\t        element(by.model('checked')).click();\n\t\n\t        expect(thumbsUp.isDisplayed()).toBeTruthy();\n\t        expect(thumbsDown.isDisplayed()).toBeFalsy();\n\t      });\n\t    </file>\n\t  </example>\n\t */\n\tvar ngShowDirective = ['$animate', function($animate) {\n\t  return function(scope, element, attr) {\n\t    scope.$watch(attr.ngShow, function ngShowWatchAction(value){\n\t      $animate[toBoolean(value) ? 'removeClass' : 'addClass'](element, 'ng-hide');\n\t    });\n\t  };\n\t}];\n\t\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngHide\n\t *\n\t * @description\n\t * The `ngHide` directive shows or hides the given HTML element based on the expression\n\t * provided to the `ngHide` attribute. The element is shown or hidden by removing or adding\n\t * the `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n\t * in AngularJS and sets the display style to none (using an !important flag).\n\t * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n\t *\n\t * ```html\n\t * <!-- when $scope.myValue is truthy (element is hidden) -->\n\t * <div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n\t *\n\t * <!-- when $scope.myValue is falsy (element is visible) -->\n\t * <div ng-hide=\"myValue\"></div>\n\t * ```\n\t *\n\t * When the `.ngHide` expression evaluates to true then the `.ng-hide` CSS class is added to the class attribute\n\t * on the element causing it to become hidden. When false, the `.ng-hide` CSS class is removed\n\t * from the element causing the element not to appear hidden.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** Here is a list of values that ngHide will consider as a falsy value (case insensitive):<br />\n\t * \"f\" / \"0\" / \"false\" / \"no\" / \"n\" / \"[]\"\n\t * </div>\n\t *\n\t * ## Why is !important used?\n\t *\n\t * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n\t * can be easily overridden by heavier selectors. For example, something as simple\n\t * as changing the display style on a HTML list item would make hidden elements appear visible.\n\t * This also becomes a bigger issue when dealing with CSS frameworks.\n\t *\n\t * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n\t * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n\t * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n\t *\n\t * ### Overriding `.ng-hide`\n\t *\n\t * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change\n\t * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n\t * class in CSS:\n\t *\n\t * ```css\n\t * .ng-hide {\n\t *   //this is just another form of hiding an element\n\t *   display:block!important;\n\t *   position:absolute;\n\t *   top:-9999px;\n\t *   left:-9999px;\n\t * }\n\t * ```\n\t *\n\t * By default you don't need to override in CSS anything and the animations will work around the display style.\n\t *\n\t * ## A note about animations with `ngHide`\n\t *\n\t * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n\t * is true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\n\t * CSS class is added and removed for you instead of your own CSS class.\n\t *\n\t * ```css\n\t * //\n\t * //a working example can be found at the bottom of this page\n\t * //\n\t * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n\t *   transition:0.5s linear all;\n\t * }\n\t *\n\t * .my-element.ng-hide-add { ... }\n\t * .my-element.ng-hide-add.ng-hide-add-active { ... }\n\t * .my-element.ng-hide-remove { ... }\n\t * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n\t * ```\n\t *\n\t * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display\n\t * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n\t *\n\t * @animations\n\t * removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden\n\t * addClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible\n\t *\n\t * @element ANY\n\t * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n\t *     the element is shown or hidden respectively.\n\t *\n\t * @example\n\t  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n\t      <div>\n\t        Show:\n\t        <div class=\"check-element animate-hide\" ng-show=\"checked\">\n\t          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n\t        </div>\n\t      </div>\n\t      <div>\n\t        Hide:\n\t        <div class=\"check-element animate-hide\" ng-hide=\"checked\">\n\t          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n\t        </div>\n\t      </div>\n\t    </file>\n\t    <file name=\"glyphicons.css\">\n\t      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .animate-hide {\n\t        -webkit-transition:all linear 0.5s;\n\t        transition:all linear 0.5s;\n\t        line-height:20px;\n\t        opacity:1;\n\t        padding:10px;\n\t        border:1px solid black;\n\t        background:white;\n\t      }\n\t\n\t      .animate-hide.ng-hide {\n\t        line-height:0;\n\t        opacity:0;\n\t        padding:0 10px;\n\t      }\n\t\n\t      .check-element {\n\t        padding:10px;\n\t        border:1px solid black;\n\t        background:white;\n\t      }\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n\t      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\t\n\t      it('should check ng-show / ng-hide', function() {\n\t        expect(thumbsUp.isDisplayed()).toBeFalsy();\n\t        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\t\n\t        element(by.model('checked')).click();\n\t\n\t        expect(thumbsUp.isDisplayed()).toBeTruthy();\n\t        expect(thumbsDown.isDisplayed()).toBeFalsy();\n\t      });\n\t    </file>\n\t  </example>\n\t */\n\tvar ngHideDirective = ['$animate', function($animate) {\n\t  return function(scope, element, attr) {\n\t    scope.$watch(attr.ngHide, function ngHideWatchAction(value){\n\t      $animate[toBoolean(value) ? 'addClass' : 'removeClass'](element, 'ng-hide');\n\t    });\n\t  };\n\t}];\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngStyle\n\t * @restrict AC\n\t *\n\t * @description\n\t * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n\t *\n\t * @element ANY\n\t * @param {expression} ngStyle\n\t *\n\t * {@link guide/expression Expression} which evals to an\n\t * object whose keys are CSS style names and values are corresponding values for those CSS\n\t * keys.\n\t *\n\t * Since some CSS style names are not valid keys for an object, they must be quoted.\n\t * See the 'background-color' style in the example below.\n\t *\n\t * @example\n\t   <example>\n\t     <file name=\"index.html\">\n\t        <input type=\"button\" value=\"set color\" ng-click=\"myStyle={color:'red'}\">\n\t        <input type=\"button\" value=\"set background\" ng-click=\"myStyle={'background-color':'blue'}\">\n\t        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n\t        <br/>\n\t        <span ng-style=\"myStyle\">Sample Text</span>\n\t        <pre>myStyle={{myStyle}}</pre>\n\t     </file>\n\t     <file name=\"style.css\">\n\t       span {\n\t         color: black;\n\t       }\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t       var colorSpan = element(by.css('span'));\n\t\n\t       it('should check ng-style', function() {\n\t         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n\t         element(by.css('input[value=\\'set color\\']')).click();\n\t         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\n\t         element(by.css('input[value=clear]')).click();\n\t         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n\t       });\n\t     </file>\n\t   </example>\n\t */\n\tvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n\t  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n\t    if (oldStyles && (newStyles !== oldStyles)) {\n\t      forEach(oldStyles, function(val, style) { element.css(style, '');});\n\t    }\n\t    if (newStyles) element.css(newStyles);\n\t  }, true);\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngSwitch\n\t * @restrict EA\n\t *\n\t * @description\n\t * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\n\t * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\n\t * as specified in the template.\n\t *\n\t * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\n\t * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\n\t * matches the value obtained from the evaluated expression. In other words, you define a container element\n\t * (where you place the directive), place an expression on the **`on=\"...\"` attribute**\n\t * (or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\n\t * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\n\t * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\n\t * attribute is displayed.\n\t *\n\t * <div class=\"alert alert-info\">\n\t * Be aware that the attribute values to match against cannot be expressions. They are interpreted\n\t * as literal string values to match against.\n\t * For example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\n\t * value of the expression `$scope.someVal`.\n\t * </div>\n\t\n\t * @animations\n\t * enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\n\t * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM\n\t *\n\t * @usage\n\t *\n\t * ```\n\t * <ANY ng-switch=\"expression\">\n\t *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n\t *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n\t *   <ANY ng-switch-default>...</ANY>\n\t * </ANY>\n\t * ```\n\t *\n\t *\n\t * @scope\n\t * @priority 800\n\t * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n\t * On child elements add:\n\t *\n\t * * `ngSwitchWhen`: the case statement to match against. If match then this\n\t *   case will be displayed. If the same match appears multiple times, all the\n\t *   elements will be displayed.\n\t * * `ngSwitchDefault`: the default case when no other case match. If there\n\t *   are multiple default cases, all of them will be displayed when no other\n\t *   case match.\n\t *\n\t *\n\t * @example\n\t  <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\">\n\t    <file name=\"index.html\">\n\t      <div ng-controller=\"ExampleController\">\n\t        <select ng-model=\"selection\" ng-options=\"item for item in items\">\n\t        </select>\n\t        <tt>selection={{selection}}</tt>\n\t        <hr/>\n\t        <div class=\"animate-switch-container\"\n\t          ng-switch on=\"selection\">\n\t            <div class=\"animate-switch\" ng-switch-when=\"settings\">Settings Div</div>\n\t            <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n\t            <div class=\"animate-switch\" ng-switch-default>default</div>\n\t        </div>\n\t      </div>\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('switchExample', ['ngAnimate'])\n\t        .controller('ExampleController', ['$scope', function($scope) {\n\t          $scope.items = ['settings', 'home', 'other'];\n\t          $scope.selection = $scope.items[0];\n\t        }]);\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .animate-switch-container {\n\t        position:relative;\n\t        background:white;\n\t        border:1px solid black;\n\t        height:40px;\n\t        overflow:hidden;\n\t      }\n\t\n\t      .animate-switch {\n\t        padding:10px;\n\t      }\n\t\n\t      .animate-switch.ng-animate {\n\t        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\t\n\t        position:absolute;\n\t        top:0;\n\t        left:0;\n\t        right:0;\n\t        bottom:0;\n\t      }\n\t\n\t      .animate-switch.ng-leave.ng-leave-active,\n\t      .animate-switch.ng-enter {\n\t        top:-50px;\n\t      }\n\t      .animate-switch.ng-leave,\n\t      .animate-switch.ng-enter.ng-enter-active {\n\t        top:0;\n\t      }\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      var switchElem = element(by.css('[ng-switch]'));\n\t      var select = element(by.model('selection'));\n\t\n\t      it('should start in settings', function() {\n\t        expect(switchElem.getText()).toMatch(/Settings Div/);\n\t      });\n\t      it('should change to home', function() {\n\t        select.all(by.css('option')).get(1).click();\n\t        expect(switchElem.getText()).toMatch(/Home Span/);\n\t      });\n\t      it('should select default', function() {\n\t        select.all(by.css('option')).get(2).click();\n\t        expect(switchElem.getText()).toMatch(/default/);\n\t      });\n\t    </file>\n\t  </example>\n\t */\n\tvar ngSwitchDirective = ['$animate', function($animate) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: 'ngSwitch',\n\t\n\t    // asks for $scope to fool the BC controller module\n\t    controller: ['$scope', function ngSwitchController() {\n\t     this.cases = {};\n\t    }],\n\t    link: function(scope, element, attr, ngSwitchController) {\n\t      var watchExpr = attr.ngSwitch || attr.on,\n\t          selectedTranscludes = [],\n\t          selectedElements = [],\n\t          previousElements = [],\n\t          selectedScopes = [];\n\t\n\t      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n\t        var i, ii;\n\t        for (i = 0, ii = previousElements.length; i < ii; ++i) {\n\t          previousElements[i].remove();\n\t        }\n\t        previousElements.length = 0;\n\t\n\t        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {\n\t          var selected = selectedElements[i];\n\t          selectedScopes[i].$destroy();\n\t          previousElements[i] = selected;\n\t          $animate.leave(selected, function() {\n\t            previousElements.splice(i, 1);\n\t          });\n\t        }\n\t\n\t        selectedElements.length = 0;\n\t        selectedScopes.length = 0;\n\t\n\t        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\n\t          scope.$eval(attr.change);\n\t          forEach(selectedTranscludes, function(selectedTransclude) {\n\t            var selectedScope = scope.$new();\n\t            selectedScopes.push(selectedScope);\n\t            selectedTransclude.transclude(selectedScope, function(caseElement) {\n\t              var anchor = selectedTransclude.element;\n\t\n\t              selectedElements.push(caseElement);\n\t              $animate.enter(caseElement, anchor.parent(), anchor);\n\t            });\n\t          });\n\t        }\n\t      });\n\t    }\n\t  };\n\t}];\n\t\n\tvar ngSwitchWhenDirective = ngDirective({\n\t  transclude: 'element',\n\t  priority: 800,\n\t  require: '^ngSwitch',\n\t  link: function(scope, element, attrs, ctrl, $transclude) {\n\t    ctrl.cases['!' + attrs.ngSwitchWhen] = (ctrl.cases['!' + attrs.ngSwitchWhen] || []);\n\t    ctrl.cases['!' + attrs.ngSwitchWhen].push({ transclude: $transclude, element: element });\n\t  }\n\t});\n\t\n\tvar ngSwitchDefaultDirective = ngDirective({\n\t  transclude: 'element',\n\t  priority: 800,\n\t  require: '^ngSwitch',\n\t  link: function(scope, element, attr, ctrl, $transclude) {\n\t    ctrl.cases['?'] = (ctrl.cases['?'] || []);\n\t    ctrl.cases['?'].push({ transclude: $transclude, element: element });\n\t   }\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name ngTransclude\n\t * @restrict AC\n\t *\n\t * @description\n\t * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n\t *\n\t * Any existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.\n\t *\n\t * @element ANY\n\t *\n\t * @example\n\t   <example module=\"transcludeExample\">\n\t     <file name=\"index.html\">\n\t       <script>\n\t         angular.module('transcludeExample', [])\n\t          .directive('pane', function(){\n\t             return {\n\t               restrict: 'E',\n\t               transclude: true,\n\t               scope: { title:'@' },\n\t               template: '<div style=\"border: 1px solid black;\">' +\n\t                           '<div style=\"background-color: gray\">{{title}}</div>' +\n\t                           '<div ng-transclude></div>' +\n\t                         '</div>'\n\t             };\n\t         })\n\t         .controller('ExampleController', ['$scope', function($scope) {\n\t           $scope.title = 'Lorem Ipsum';\n\t           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n\t         }]);\n\t       </script>\n\t       <div ng-controller=\"ExampleController\">\n\t         <input ng-model=\"title\"><br>\n\t         <textarea ng-model=\"text\"></textarea> <br/>\n\t         <pane title=\"{{title}}\">{{text}}</pane>\n\t       </div>\n\t     </file>\n\t     <file name=\"protractor.js\" type=\"protractor\">\n\t        it('should have transcluded', function() {\n\t          var titleElement = element(by.model('title'));\n\t          titleElement.clear();\n\t          titleElement.sendKeys('TITLE');\n\t          var textElement = element(by.model('text'));\n\t          textElement.clear();\n\t          textElement.sendKeys('TEXT');\n\t          expect(element(by.binding('title')).getText()).toEqual('TITLE');\n\t          expect(element(by.binding('text')).getText()).toEqual('TEXT');\n\t        });\n\t     </file>\n\t   </example>\n\t *\n\t */\n\tvar ngTranscludeDirective = ngDirective({\n\t  link: function($scope, $element, $attrs, controller, $transclude) {\n\t    if (!$transclude) {\n\t      throw minErr('ngTransclude')('orphan',\n\t       'Illegal use of ngTransclude directive in the template! ' +\n\t       'No parent directive that requires a transclusion found. ' +\n\t       'Element: {0}',\n\t       startingTag($element));\n\t    }\n\t\n\t    $transclude(function(clone) {\n\t      $element.empty();\n\t      $element.append(clone);\n\t    });\n\t  }\n\t});\n\t\n\t/**\n\t * @ngdoc directive\n\t * @name script\n\t * @restrict E\n\t *\n\t * @description\n\t * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\n\t * template can be used by {@link ng.directive:ngInclude `ngInclude`},\n\t * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n\t * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\n\t * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.\n\t *\n\t * @param {string} type Must be set to `'text/ng-template'`.\n\t * @param {string} id Cache name of the template.\n\t *\n\t * @example\n\t  <example>\n\t    <file name=\"index.html\">\n\t      <script type=\"text/ng-template\" id=\"/tpl.html\">\n\t        Content of the template.\n\t      </script>\n\t\n\t      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n\t      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n\t    </file>\n\t    <file name=\"protractor.js\" type=\"protractor\">\n\t      it('should load template defined inside script tag', function() {\n\t        element(by.css('#tpl-link')).click();\n\t        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n\t      });\n\t    </file>\n\t  </example>\n\t */\n\tvar scriptDirective = ['$templateCache', function($templateCache) {\n\t  return {\n\t    restrict: 'E',\n\t    terminal: true,\n\t    compile: function(element, attr) {\n\t      if (attr.type == 'text/ng-template') {\n\t        var templateUrl = attr.id,\n\t            text = element[0].text;\n\t\n\t        $templateCache.put(templateUrl, text);\n\t      }\n\t    }\n\t  };\n\t}];\n\t\n\tvar ngOptionsMinErr = minErr('ngOptions');\n\t/**\n\t * @ngdoc directive\n\t * @name select\n\t * @restrict E\n\t *\n\t * @description\n\t * HTML `SELECT` element with angular data-binding.\n\t *\n\t * # `ngOptions`\n\t *\n\t * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n\t * elements for the `<select>` element using the array or object obtained by evaluating the\n\t * `ngOptions` comprehension_expression.\n\t *\n\t * When an item in the `<select>` menu is selected, the array element or object property\n\t * represented by the selected option will be bound to the model identified by the `ngModel`\n\t * directive.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** `ngModel` compares by reference, not value. This is important when binding to an\n\t * array of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\n\t * </div>\n\t *\n\t * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n\t * be nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\n\t * option. See example below for demonstration.\n\t *\n\t * <div class=\"alert alert-warning\">\n\t * **Note:** `ngOptions` provides an iterator facility for the `<option>` element which should be used instead\n\t * of {@link ng.directive:ngRepeat ngRepeat} when you want the\n\t * `select` model to be bound to a non-string value. This is because an option element can only\n\t * be bound to string values at present.\n\t * </div>\n\t *\n\t * @param {string} ngModel Assignable angular expression to data-bind to.\n\t * @param {string=} name Property name of the form under which the control is published.\n\t * @param {string=} required The control is considered valid only if value is entered.\n\t * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n\t *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n\t *    `required` when you want to data-bind to the `required` attribute.\n\t * @param {comprehension_expression=} ngOptions in one of the following forms:\n\t *\n\t *   * for array data sources:\n\t *     * `label` **`for`** `value` **`in`** `array`\n\t *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n\t *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`\n\t *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n\t *   * for object data sources:\n\t *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n\t *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n\t *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n\t *     * `select` **`as`** `label` **`group by`** `group`\n\t *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n\t *\n\t * Where:\n\t *\n\t *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n\t *   * `value`: local variable which will refer to each item in the `array` or each property value\n\t *      of `object` during iteration.\n\t *   * `key`: local variable which will refer to a property name in `object` during iteration.\n\t *   * `label`: The result of this expression will be the label for `<option>` element. The\n\t *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n\t *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n\t *      element. If not specified, `select` expression will default to `value`.\n\t *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n\t *      DOM element.\n\t *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n\t *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\n\t *     `value` variable (e.g. `value.propertyName`).\n\t *\n\t * @example\n\t    <example module=\"selectExample\">\n\t      <file name=\"index.html\">\n\t        <script>\n\t        angular.module('selectExample', [])\n\t          .controller('ExampleController', ['$scope', function($scope) {\n\t            $scope.colors = [\n\t              {name:'black', shade:'dark'},\n\t              {name:'white', shade:'light'},\n\t              {name:'red', shade:'dark'},\n\t              {name:'blue', shade:'dark'},\n\t              {name:'yellow', shade:'light'}\n\t            ];\n\t            $scope.myColor = $scope.colors[2]; // red\n\t          }]);\n\t        </script>\n\t        <div ng-controller=\"ExampleController\">\n\t          <ul>\n\t            <li ng-repeat=\"color in colors\">\n\t              Name: <input ng-model=\"color.name\">\n\t              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n\t            </li>\n\t            <li>\n\t              [<a href ng-click=\"colors.push({})\">add</a>]\n\t            </li>\n\t          </ul>\n\t          <hr/>\n\t          Color (null not allowed):\n\t          <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select><br>\n\t\n\t          Color (null allowed):\n\t          <span  class=\"nullable\">\n\t            <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n\t              <option value=\"\">-- choose color --</option>\n\t            </select>\n\t          </span><br/>\n\t\n\t          Color grouped by shade:\n\t          <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n\t          </select><br/>\n\t\n\t\n\t          Select <a href ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</a>.<br>\n\t          <hr/>\n\t          Currently selected: {{ {selected_color:myColor}  }}\n\t          <div style=\"border:solid 1px black; height:20px\"\n\t               ng-style=\"{'background-color':myColor.name}\">\n\t          </div>\n\t        </div>\n\t      </file>\n\t      <file name=\"protractor.js\" type=\"protractor\">\n\t         it('should check ng-options', function() {\n\t           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n\t           element.all(by.model('myColor')).first().click();\n\t           element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n\t           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n\t           element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n\t           element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n\t           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n\t         });\n\t      </file>\n\t    </example>\n\t */\n\t\n\tvar ngOptionsDirective = valueFn({ terminal: true });\n\t// jshint maxlen: false\n\tvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n\t                         //000011111111110000000000022222222220000000000000000000003333333333000000000000004444444444444440000000005555555555555550000000666666666666666000000000000000777777777700000000000000000008888888888\n\t  var NG_OPTIONS_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,\n\t      nullModelCtrl = {$setViewValue: noop};\n\t// jshint maxlen: 100\n\t\n\t  return {\n\t    restrict: 'E',\n\t    require: ['select', '?ngModel'],\n\t    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n\t      var self = this,\n\t          optionsMap = {},\n\t          ngModelCtrl = nullModelCtrl,\n\t          nullOption,\n\t          unknownOption;\n\t\n\t\n\t      self.databound = $attrs.ngModel;\n\t\n\t\n\t      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n\t        ngModelCtrl = ngModelCtrl_;\n\t        nullOption = nullOption_;\n\t        unknownOption = unknownOption_;\n\t      };\n\t\n\t\n\t      self.addOption = function(value) {\n\t        assertNotHasOwnProperty(value, '\"option value\"');\n\t        optionsMap[value] = true;\n\t\n\t        if (ngModelCtrl.$viewValue == value) {\n\t          $element.val(value);\n\t          if (unknownOption.parent()) unknownOption.remove();\n\t        }\n\t      };\n\t\n\t\n\t      self.removeOption = function(value) {\n\t        if (this.hasOption(value)) {\n\t          delete optionsMap[value];\n\t          if (ngModelCtrl.$viewValue == value) {\n\t            this.renderUnknownOption(value);\n\t          }\n\t        }\n\t      };\n\t\n\t\n\t      self.renderUnknownOption = function(val) {\n\t        var unknownVal = '? ' + hashKey(val) + ' ?';\n\t        unknownOption.val(unknownVal);\n\t        $element.prepend(unknownOption);\n\t        $element.val(unknownVal);\n\t        unknownOption.prop('selected', true); // needed for IE\n\t      };\n\t\n\t\n\t      self.hasOption = function(value) {\n\t        return optionsMap.hasOwnProperty(value);\n\t      };\n\t\n\t      $scope.$on('$destroy', function() {\n\t        // disable unknown option so that we don't do work when the whole select is being destroyed\n\t        self.renderUnknownOption = noop;\n\t      });\n\t    }],\n\t\n\t    link: function(scope, element, attr, ctrls) {\n\t      // if ngModel is not defined, we don't need to do anything\n\t      if (!ctrls[1]) return;\n\t\n\t      var selectCtrl = ctrls[0],\n\t          ngModelCtrl = ctrls[1],\n\t          multiple = attr.multiple,\n\t          optionsExp = attr.ngOptions,\n\t          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n\t          emptyOption,\n\t          // we can't just jqLite('<option>') since jqLite is not smart enough\n\t          // to create it in <select> and IE barfs otherwise.\n\t          optionTemplate = jqLite(document.createElement('option')),\n\t          optGroupTemplate =jqLite(document.createElement('optgroup')),\n\t          unknownOption = optionTemplate.clone();\n\t\n\t      // find \"null\" option\n\t      for(var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n\t        if (children[i].value === '') {\n\t          emptyOption = nullOption = children.eq(i);\n\t          break;\n\t        }\n\t      }\n\t\n\t      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\t\n\t      // required validator\n\t      if (multiple) {\n\t        ngModelCtrl.$isEmpty = function(value) {\n\t          return !value || value.length === 0;\n\t        };\n\t      }\n\t\n\t      if (optionsExp) setupAsOptions(scope, element, ngModelCtrl);\n\t      else if (multiple) setupAsMultiple(scope, element, ngModelCtrl);\n\t      else setupAsSingle(scope, element, ngModelCtrl, selectCtrl);\n\t\n\t\n\t      ////////////////////////////\n\t\n\t\n\t\n\t      function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {\n\t        ngModelCtrl.$render = function() {\n\t          var viewValue = ngModelCtrl.$viewValue;\n\t\n\t          if (selectCtrl.hasOption(viewValue)) {\n\t            if (unknownOption.parent()) unknownOption.remove();\n\t            selectElement.val(viewValue);\n\t            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n\t          } else {\n\t            if (isUndefined(viewValue) && emptyOption) {\n\t              selectElement.val('');\n\t            } else {\n\t              selectCtrl.renderUnknownOption(viewValue);\n\t            }\n\t          }\n\t        };\n\t\n\t        selectElement.on('change', function() {\n\t          scope.$apply(function() {\n\t            if (unknownOption.parent()) unknownOption.remove();\n\t            ngModelCtrl.$setViewValue(selectElement.val());\n\t          });\n\t        });\n\t      }\n\t\n\t      function setupAsMultiple(scope, selectElement, ctrl) {\n\t        var lastView;\n\t        ctrl.$render = function() {\n\t          var items = new HashMap(ctrl.$viewValue);\n\t          forEach(selectElement.find('option'), function(option) {\n\t            option.selected = isDefined(items.get(option.value));\n\t          });\n\t        };\n\t\n\t        // we have to do it on each watch since ngModel watches reference, but\n\t        // we need to work of an array, so we need to see if anything was inserted/removed\n\t        scope.$watch(function selectMultipleWatch() {\n\t          if (!equals(lastView, ctrl.$viewValue)) {\n\t            lastView = shallowCopy(ctrl.$viewValue);\n\t            ctrl.$render();\n\t          }\n\t        });\n\t\n\t        selectElement.on('change', function() {\n\t          scope.$apply(function() {\n\t            var array = [];\n\t            forEach(selectElement.find('option'), function(option) {\n\t              if (option.selected) {\n\t                array.push(option.value);\n\t              }\n\t            });\n\t            ctrl.$setViewValue(array);\n\t          });\n\t        });\n\t      }\n\t\n\t      function setupAsOptions(scope, selectElement, ctrl) {\n\t        var match;\n\t\n\t        if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n\t          throw ngOptionsMinErr('iexp',\n\t            \"Expected expression in form of \" +\n\t            \"'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\" +\n\t            \" but got '{0}'. Element: {1}\",\n\t            optionsExp, startingTag(selectElement));\n\t        }\n\t\n\t        var displayFn = $parse(match[2] || match[1]),\n\t            valueName = match[4] || match[6],\n\t            keyName = match[5],\n\t            groupByFn = $parse(match[3] || ''),\n\t            valueFn = $parse(match[2] ? match[1] : valueName),\n\t            valuesFn = $parse(match[7]),\n\t            track = match[8],\n\t            trackFn = track ? $parse(match[8]) : null,\n\t            // This is an array of array of existing option groups in DOM.\n\t            // We try to reuse these if possible\n\t            // - optionGroupsCache[0] is the options with no option group\n\t            // - optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n\t            optionGroupsCache = [[{element: selectElement, label:''}]];\n\t\n\t        if (nullOption) {\n\t          // compile the element since there might be bindings in it\n\t          $compile(nullOption)(scope);\n\t\n\t          // remove the class, which is added automatically because we recompile the element and it\n\t          // becomes the compilation root\n\t          nullOption.removeClass('ng-scope');\n\t\n\t          // we need to remove it before calling selectElement.empty() because otherwise IE will\n\t          // remove the label from the element. wtf?\n\t          nullOption.remove();\n\t        }\n\t\n\t        // clear contents, we'll add what's needed based on the model\n\t        selectElement.empty();\n\t\n\t        selectElement.on('change', function() {\n\t          scope.$apply(function() {\n\t            var optionGroup,\n\t                collection = valuesFn(scope) || [],\n\t                locals = {},\n\t                key, value, optionElement, index, groupIndex, length, groupLength, trackIndex;\n\t\n\t            if (multiple) {\n\t              value = [];\n\t              for (groupIndex = 0, groupLength = optionGroupsCache.length;\n\t                   groupIndex < groupLength;\n\t                   groupIndex++) {\n\t                // list of options for that group. (first item has the parent)\n\t                optionGroup = optionGroupsCache[groupIndex];\n\t\n\t                for(index = 1, length = optionGroup.length; index < length; index++) {\n\t                  if ((optionElement = optionGroup[index].element)[0].selected) {\n\t                    key = optionElement.val();\n\t                    if (keyName) locals[keyName] = key;\n\t                    if (trackFn) {\n\t                      for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n\t                        locals[valueName] = collection[trackIndex];\n\t                        if (trackFn(scope, locals) == key) break;\n\t                      }\n\t                    } else {\n\t                      locals[valueName] = collection[key];\n\t                    }\n\t                    value.push(valueFn(scope, locals));\n\t                  }\n\t                }\n\t              }\n\t            } else {\n\t              key = selectElement.val();\n\t              if (key == '?') {\n\t                value = undefined;\n\t              } else if (key === ''){\n\t                value = null;\n\t              } else {\n\t                if (trackFn) {\n\t                  for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n\t                    locals[valueName] = collection[trackIndex];\n\t                    if (trackFn(scope, locals) == key) {\n\t                      value = valueFn(scope, locals);\n\t                      break;\n\t                    }\n\t                  }\n\t                } else {\n\t                  locals[valueName] = collection[key];\n\t                  if (keyName) locals[keyName] = key;\n\t                  value = valueFn(scope, locals);\n\t                }\n\t              }\n\t            }\n\t            ctrl.$setViewValue(value);\n\t            render();\n\t          });\n\t        });\n\t\n\t        ctrl.$render = render;\n\t\n\t        scope.$watchCollection(valuesFn, render);\n\t        scope.$watchCollection(function () {\n\t          var locals = {},\n\t              values = valuesFn(scope);\n\t          if (values) {\n\t            var toDisplay = new Array(values.length);\n\t            for (var i = 0, ii = values.length; i < ii; i++) {\n\t              locals[valueName] = values[i];\n\t              toDisplay[i] = displayFn(scope, locals);\n\t            }\n\t            return toDisplay;\n\t          }\n\t        }, render);\n\t\n\t        if ( multiple ) {\n\t          scope.$watchCollection(function() { return ctrl.$modelValue; }, render);\n\t        }\n\t\n\t        function getSelectedSet() {\n\t          var selectedSet = false;\n\t          if (multiple) {\n\t            var modelValue = ctrl.$modelValue;\n\t            if (trackFn && isArray(modelValue)) {\n\t              selectedSet = new HashMap([]);\n\t              var locals = {};\n\t              for (var trackIndex = 0; trackIndex < modelValue.length; trackIndex++) {\n\t                locals[valueName] = modelValue[trackIndex];\n\t                selectedSet.put(trackFn(scope, locals), modelValue[trackIndex]);\n\t              }\n\t            } else {\n\t              selectedSet = new HashMap(modelValue);\n\t            }\n\t          }\n\t          return selectedSet;\n\t        }\n\t\n\t\n\t        function render() {\n\t              // Temporary location for the option groups before we render them\n\t          var optionGroups = {'':[]},\n\t              optionGroupNames = [''],\n\t              optionGroupName,\n\t              optionGroup,\n\t              option,\n\t              existingParent, existingOptions, existingOption,\n\t              modelValue = ctrl.$modelValue,\n\t              values = valuesFn(scope) || [],\n\t              keys = keyName ? sortedKeys(values) : values,\n\t              key,\n\t              groupLength, length,\n\t              groupIndex, index,\n\t              locals = {},\n\t              selected,\n\t              selectedSet = getSelectedSet(),\n\t              lastElement,\n\t              element,\n\t              label;\n\t\n\t\n\t          // We now build up the list of options we need (we merge later)\n\t          for (index = 0; length = keys.length, index < length; index++) {\n\t\n\t            key = index;\n\t            if (keyName) {\n\t              key = keys[index];\n\t              if ( key.charAt(0) === '$' ) continue;\n\t              locals[keyName] = key;\n\t            }\n\t\n\t            locals[valueName] = values[key];\n\t\n\t            optionGroupName = groupByFn(scope, locals) || '';\n\t            if (!(optionGroup = optionGroups[optionGroupName])) {\n\t              optionGroup = optionGroups[optionGroupName] = [];\n\t              optionGroupNames.push(optionGroupName);\n\t            }\n\t            if (multiple) {\n\t              selected = isDefined(\n\t                selectedSet.remove(trackFn ? trackFn(scope, locals) : valueFn(scope, locals))\n\t              );\n\t            } else {\n\t              if (trackFn) {\n\t                var modelCast = {};\n\t                modelCast[valueName] = modelValue;\n\t                selected = trackFn(scope, modelCast) === trackFn(scope, locals);\n\t              } else {\n\t                selected = modelValue === valueFn(scope, locals);\n\t              }\n\t              selectedSet = selectedSet || selected; // see if at least one item is selected\n\t            }\n\t            label = displayFn(scope, locals); // what will be seen by the user\n\t\n\t            // doing displayFn(scope, locals) || '' overwrites zero values\n\t            label = isDefined(label) ? label : '';\n\t            optionGroup.push({\n\t              // either the index into array or key from object\n\t              id: trackFn ? trackFn(scope, locals) : (keyName ? keys[index] : index),\n\t              label: label,\n\t              selected: selected                   // determine if we should be selected\n\t            });\n\t          }\n\t          if (!multiple) {\n\t            if (nullOption || modelValue === null) {\n\t              // insert null option if we have a placeholder, or the model is null\n\t              optionGroups[''].unshift({id:'', label:'', selected:!selectedSet});\n\t            } else if (!selectedSet) {\n\t              // option could not be found, we have to insert the undefined item\n\t              optionGroups[''].unshift({id:'?', label:'', selected:true});\n\t            }\n\t          }\n\t\n\t          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n\t          for (groupIndex = 0, groupLength = optionGroupNames.length;\n\t               groupIndex < groupLength;\n\t               groupIndex++) {\n\t            // current option group name or '' if no group\n\t            optionGroupName = optionGroupNames[groupIndex];\n\t\n\t            // list of options for that group. (first item has the parent)\n\t            optionGroup = optionGroups[optionGroupName];\n\t\n\t            if (optionGroupsCache.length <= groupIndex) {\n\t              // we need to grow the optionGroups\n\t              existingParent = {\n\t                element: optGroupTemplate.clone().attr('label', optionGroupName),\n\t                label: optionGroup.label\n\t              };\n\t              existingOptions = [existingParent];\n\t              optionGroupsCache.push(existingOptions);\n\t              selectElement.append(existingParent.element);\n\t            } else {\n\t              existingOptions = optionGroupsCache[groupIndex];\n\t              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\t\n\t              // update the OPTGROUP label if not the same.\n\t              if (existingParent.label != optionGroupName) {\n\t                existingParent.element.attr('label', existingParent.label = optionGroupName);\n\t              }\n\t            }\n\t\n\t            lastElement = null;  // start at the beginning\n\t            for(index = 0, length = optionGroup.length; index < length; index++) {\n\t              option = optionGroup[index];\n\t              if ((existingOption = existingOptions[index+1])) {\n\t                // reuse elements\n\t                lastElement = existingOption.element;\n\t                if (existingOption.label !== option.label) {\n\t                  lastElement.text(existingOption.label = option.label);\n\t                  lastElement.prop('label', existingOption.label);\n\t                }\n\t                if (existingOption.id !== option.id) {\n\t                  lastElement.val(existingOption.id = option.id);\n\t                }\n\t                // lastElement.prop('selected') provided by jQuery has side-effects\n\t                if (lastElement[0].selected !== option.selected) {\n\t                  lastElement.prop('selected', (existingOption.selected = option.selected));\n\t                  if (msie) {\n\t                    // See #7692\n\t                    // The selected item wouldn't visually update on IE without this.\n\t                    // Tested on Win7: IE9, IE10 and IE11. Future IEs should be tested as well\n\t                    lastElement.prop('selected', existingOption.selected);\n\t                  }\n\t                }\n\t              } else {\n\t                // grow elements\n\t\n\t                // if it's a null option\n\t                if (option.id === '' && nullOption) {\n\t                  // put back the pre-compiled element\n\t                  element = nullOption;\n\t                } else {\n\t                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n\t                  // in this version of jQuery on some browser the .text() returns a string\n\t                  // rather then the element.\n\t                  (element = optionTemplate.clone())\n\t                      .val(option.id)\n\t                      .prop('selected', option.selected)\n\t                      .attr('selected', option.selected)\n\t                      .prop('label', option.label)\n\t                      .text(option.label);\n\t                }\n\t\n\t                existingOptions.push(existingOption = {\n\t                    element: element,\n\t                    label: option.label,\n\t                    id: option.id,\n\t                    selected: option.selected\n\t                });\n\t                selectCtrl.addOption(option.label, element);\n\t                if (lastElement) {\n\t                  lastElement.after(element);\n\t                } else {\n\t                  existingParent.element.append(element);\n\t                }\n\t                lastElement = element;\n\t              }\n\t            }\n\t            // remove any excessive OPTIONs in a group\n\t            index++; // increment since the existingOptions[0] is parent element not OPTION\n\t            while(existingOptions.length > index) {\n\t              option = existingOptions.pop();\n\t              selectCtrl.removeOption(option.label);\n\t              option.element.remove();\n\t            }\n\t          }\n\t          // remove any excessive OPTGROUPs from select\n\t          while(optionGroupsCache.length > groupIndex) {\n\t            optionGroupsCache.pop()[0].element.remove();\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t}];\n\t\n\tvar optionDirective = ['$interpolate', function($interpolate) {\n\t  var nullSelectCtrl = {\n\t    addOption: noop,\n\t    removeOption: noop\n\t  };\n\t\n\t  return {\n\t    restrict: 'E',\n\t    priority: 100,\n\t    compile: function(element, attr) {\n\t      if (isUndefined(attr.value)) {\n\t        var interpolateFn = $interpolate(element.text(), true);\n\t        if (!interpolateFn) {\n\t          attr.$set('value', element.text());\n\t        }\n\t      }\n\t\n\t      return function (scope, element, attr) {\n\t        var selectCtrlName = '$selectController',\n\t            parent = element.parent(),\n\t            selectCtrl = parent.data(selectCtrlName) ||\n\t              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\t\n\t        if (selectCtrl && selectCtrl.databound) {\n\t          // For some reason Opera defaults to true and if not overridden this messes up the repeater.\n\t          // We don't want the view to drive the initialization of the model anyway.\n\t          element.prop('selected', false);\n\t        } else {\n\t          selectCtrl = nullSelectCtrl;\n\t        }\n\t\n\t        if (interpolateFn) {\n\t          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n\t            attr.$set('value', newVal);\n\t            if (newVal !== oldVal) selectCtrl.removeOption(oldVal);\n\t            selectCtrl.addOption(newVal);\n\t          });\n\t        } else {\n\t          selectCtrl.addOption(attr.value);\n\t        }\n\t\n\t        element.on('$destroy', function() {\n\t          selectCtrl.removeOption(attr.value);\n\t        });\n\t      };\n\t    }\n\t  };\n\t}];\n\t\n\tvar styleDirective = valueFn({\n\t  restrict: 'E',\n\t  terminal: true\n\t});\n\t\n\t  if (window.angular.bootstrap) {\n\t    //AngularJS is already loaded, so we can return here...\n\t    console.log('WARNING: Tried to load angular more than once.');\n\t    return;\n\t  }\n\t\n\t  //try to bind to jquery now so that one can write angular.element().read()\n\t  //but we will rebind on bootstrap again.\n\t  bindJQuery();\n\t\n\t  publishExternalAPI(angular);\n\t\n\t  jqLite(document).ready(function() {\n\t    angularInit(document, bootstrap);\n\t  });\n\t\n\t})(window, document);\n\t\n\t!window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>');\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** vendor/vendor.8d85ed5f.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"js/\" + chunkId + \".\" + {\"1\":\"ea91a102\",\"2\":\"76507cf9\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8d85ed5f9b03cbceca1b\n **/","require('./angular');\nmodule.exports = angular;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/*!\n * angular-translate - v2.7.2 - 2015-06-01\n * http://github.com/angular-translate/angular-translate\n * Copyright (c) 2015 ; Licensed MIT\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    factory();\n  }\n}(this, function () {\n\n/**\n * @ngdoc overview\n * @name pascalprecht.translate\n *\n * @description\n * The main module which holds everything together.\n */\nangular.module('pascalprecht.translate', ['ng'])\n  .run(runTranslate);\n\nfunction runTranslate($translate) {\n\n  'use strict';\n\n  var key = $translate.storageKey(),\n    storage = $translate.storage();\n\n  var fallbackFromIncorrectStorageValue = function () {\n    var preferred = $translate.preferredLanguage();\n    if (angular.isString(preferred)) {\n      $translate.use(preferred);\n      // $translate.use() will also remember the language.\n      // So, we don't need to call storage.put() here.\n    } else {\n      storage.put(key, $translate.use());\n    }\n  };\n\n  fallbackFromIncorrectStorageValue.displayName = 'fallbackFromIncorrectStorageValue';\n\n  if (storage) {\n    if (!storage.get(key)) {\n      fallbackFromIncorrectStorageValue();\n    } else {\n      $translate.use(storage.get(key))['catch'](fallbackFromIncorrectStorageValue);\n    }\n  } else if (angular.isString($translate.preferredLanguage())) {\n    $translate.use($translate.preferredLanguage());\n  }\n}\nrunTranslate.$inject = ['$translate'];\n\nrunTranslate.displayName = 'runTranslate';\n\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translateSanitizationProvider\n *\n * @description\n *\n * Configurations for $translateSanitization\n */\nangular.module('pascalprecht.translate').provider('$translateSanitization', $translateSanitizationProvider);\n\nfunction $translateSanitizationProvider () {\n\n  'use strict';\n\n  var $sanitize,\n      currentStrategy = null, // TODO change to either 'sanitize', 'escape' or ['sanitize', 'escapeParameters'] in 3.0.\n      hasConfiguredStrategy = false,\n      hasShownNoStrategyConfiguredWarning = false,\n      strategies;\n\n  /**\n   * Definition of a sanitization strategy function\n   * @callback StrategyFunction\n   * @param {string|object} value - value to be sanitized (either a string or an interpolated value map)\n   * @param {string} mode - either 'text' for a string (translation) or 'params' for the interpolated params\n   * @return {string|object}\n   */\n\n  /**\n   * @ngdoc property\n   * @name strategies\n   * @propertyOf pascalprecht.translate.$translateSanitizationProvider\n   *\n   * @description\n   * Following strategies are built-in:\n   * <dl>\n   *   <dt>sanitize</dt>\n   *   <dd>Sanitizes HTML in the translation text using $sanitize</dd>\n   *   <dt>escape</dt>\n   *   <dd>Escapes HTML in the translation</dd>\n   *   <dt>sanitizeParameters</dt>\n   *   <dd>Sanitizes HTML in the values of the interpolation parameters using $sanitize</dd>\n   *   <dt>escapeParameters</dt>\n   *   <dd>Escapes HTML in the values of the interpolation parameters</dd>\n   *   <dt>escaped</dt>\n   *   <dd>Support legacy strategy name 'escaped' for backwards compatibility (will be removed in 3.0)</dd>\n   * </dl>\n   *\n   */\n\n  strategies = {\n    sanitize: function (value, mode) {\n      if (mode === 'text') {\n        value = htmlSanitizeValue(value);\n      }\n      return value;\n    },\n    escape: function (value, mode) {\n      if (mode === 'text') {\n        value = htmlEscapeValue(value);\n      }\n      return value;\n    },\n    sanitizeParameters: function (value, mode) {\n      if (mode === 'params') {\n        value = mapInterpolationParameters(value, htmlSanitizeValue);\n      }\n      return value;\n    },\n    escapeParameters: function (value, mode) {\n      if (mode === 'params') {\n        value = mapInterpolationParameters(value, htmlEscapeValue);\n      }\n      return value;\n    }\n  };\n  // Support legacy strategy name 'escaped' for backwards compatibility.\n  // TODO should be removed in 3.0\n  strategies.escaped = strategies.escapeParameters;\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateSanitizationProvider#addStrategy\n   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n   *\n   * @description\n   * Adds a sanitization strategy to the list of known strategies.\n   *\n   * @param {string} strategyName - unique key for a strategy\n   * @param {StrategyFunction} strategyFunction - strategy function\n   * @returns {object} this\n   */\n  this.addStrategy = function (strategyName, strategyFunction) {\n    strategies[strategyName] = strategyFunction;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateSanitizationProvider#removeStrategy\n   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n   *\n   * @description\n   * Removes a sanitization strategy from the list of known strategies.\n   *\n   * @param {string} strategyName - unique key for a strategy\n   * @returns {object} this\n   */\n  this.removeStrategy = function (strategyName) {\n    delete strategies[strategyName];\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateSanitizationProvider#useStrategy\n   * @methodOf pascalprecht.translate.$translateSanitizationProvider\n   *\n   * @description\n   * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.\n   *\n   * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.\n   * @returns {object} this\n   */\n  this.useStrategy = function (strategy) {\n    hasConfiguredStrategy = true;\n    currentStrategy = strategy;\n    return this;\n  };\n\n  /**\n   * @ngdoc object\n   * @name pascalprecht.translate.$translateSanitization\n   * @requires $injector\n   * @requires $log\n   *\n   * @description\n   * Sanitizes interpolation parameters and translated texts.\n   *\n   */\n  this.$get = ['$injector', '$log', function ($injector, $log) {\n\n    var applyStrategies = function (value, mode, selectedStrategies) {\n      angular.forEach(selectedStrategies, function (selectedStrategy) {\n        if (angular.isFunction(selectedStrategy)) {\n          value = selectedStrategy(value, mode);\n        } else if (angular.isFunction(strategies[selectedStrategy])) {\n          value = strategies[selectedStrategy](value, mode);\n        } else {\n          throw new Error('pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: \\'' + selectedStrategy + '\\'');\n        }\n      });\n      return value;\n    };\n\n    // TODO: should be removed in 3.0\n    var showNoStrategyConfiguredWarning = function () {\n      if (!hasConfiguredStrategy && !hasShownNoStrategyConfiguredWarning) {\n        $log.warn('pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details.');\n        hasShownNoStrategyConfiguredWarning = true;\n      }\n    };\n\n    if ($injector.has('$sanitize')) {\n      $sanitize = $injector.get('$sanitize');\n    }\n\n    return {\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translateSanitization#useStrategy\n       * @methodOf pascalprecht.translate.$translateSanitization\n       *\n       * @description\n       * Selects a sanitization strategy. When an array is provided the strategies will be executed in order.\n       *\n       * @param {string|StrategyFunction|array} strategy The sanitization strategy / strategies which should be used. Either a name of an existing strategy, a custom strategy function, or an array consisting of multiple names and / or custom functions.\n       */\n      useStrategy: (function (self) {\n        return function (strategy) {\n          self.useStrategy(strategy);\n        };\n      })(this),\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translateSanitization#sanitize\n       * @methodOf pascalprecht.translate.$translateSanitization\n       *\n       * @description\n       * Sanitizes a value.\n       *\n       * @param {string|object} value The value which should be sanitized.\n       * @param {string} mode The current sanitization mode, either 'params' or 'text'.\n       * @param {string|StrategyFunction|array} [strategy] Optional custom strategy which should be used instead of the currently selected strategy.\n       * @returns {string|object} sanitized value\n       */\n      sanitize: function (value, mode, strategy) {\n        if (!currentStrategy) {\n          showNoStrategyConfiguredWarning();\n        }\n\n        if (arguments.length < 3) {\n          strategy = currentStrategy;\n        }\n\n        if (!strategy) {\n          return value;\n        }\n\n        var selectedStrategies = angular.isArray(strategy) ? strategy : [strategy];\n        return applyStrategies(value, mode, selectedStrategies);\n      }\n    };\n  }];\n\n  var htmlEscapeValue = function (value) {\n    var element = angular.element('<div></div>');\n    element.text(value); // not chainable, see #1044\n    return element.html();\n  };\n\n  var htmlSanitizeValue = function (value) {\n    if (!$sanitize) {\n      throw new Error('pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as \\'escape\\'.');\n    }\n    return $sanitize(value);\n  };\n\n  var mapInterpolationParameters = function (value, iteratee) {\n    if (angular.isObject(value)) {\n      var result = angular.isArray(value) ? [] : {};\n\n      angular.forEach(value, function (propertyValue, propertyKey) {\n        result[propertyKey] = mapInterpolationParameters(propertyValue, iteratee);\n      });\n\n      return result;\n    } else if (angular.isNumber(value)) {\n      return value;\n    } else {\n      return iteratee(value);\n    }\n  };\n}\n\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translateProvider\n * @description\n *\n * $translateProvider allows developers to register translation-tables, asynchronous loaders\n * and similar to configure translation behavior directly inside of a module.\n *\n */\nangular.module('pascalprecht.translate')\n.constant('pascalprechtTranslateOverrider', {})\n.provider('$translate', $translate);\n\nfunction $translate($STORAGE_KEY, $windowProvider, $translateSanitizationProvider, pascalprechtTranslateOverrider) {\n\n  'use strict';\n\n  var $translationTable = {},\n      $preferredLanguage,\n      $availableLanguageKeys = [],\n      $languageKeyAliases,\n      $fallbackLanguage,\n      $fallbackWasString,\n      $uses,\n      $nextLang,\n      $storageFactory,\n      $storageKey = $STORAGE_KEY,\n      $storagePrefix,\n      $missingTranslationHandlerFactory,\n      $interpolationFactory,\n      $interpolatorFactories = [],\n      $loaderFactory,\n      $cloakClassName = 'translate-cloak',\n      $loaderOptions,\n      $notFoundIndicatorLeft,\n      $notFoundIndicatorRight,\n      $postCompilingEnabled = false,\n      $forceAsyncReloadEnabled = false,\n      NESTED_OBJECT_DELIMITER = '.',\n      loaderCache,\n      directivePriority = 0,\n      statefulFilter = true,\n      uniformLanguageTagResolver = 'default',\n      languageTagResolver = {\n        'default': function (tag) {\n          return (tag || '').split('-').join('_');\n        },\n        java: function (tag) {\n          var temp = (tag || '').split('-').join('_');\n          var parts = temp.split('_');\n          return parts.length > 1 ? (parts[0].toLowerCase() + '_' + parts[1].toUpperCase()) : temp;\n        },\n        bcp47: function (tag) {\n          var temp = (tag || '').split('_').join('-');\n          var parts = temp.split('-');\n          return parts.length > 1 ? (parts[0].toLowerCase() + '-' + parts[1].toUpperCase()) : temp;\n        }\n      };\n\n  var version = '2.7.2';\n\n  // tries to determine the browsers language\n  var getFirstBrowserLanguage = function () {\n\n    // internal purpose only\n    if (angular.isFunction(pascalprechtTranslateOverrider.getLocale)) {\n      return pascalprechtTranslateOverrider.getLocale();\n    }\n\n    var nav = $windowProvider.$get().navigator,\n        browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage'],\n        i,\n        language;\n\n    // support for HTML 5.1 \"navigator.languages\"\n    if (angular.isArray(nav.languages)) {\n      for (i = 0; i < nav.languages.length; i++) {\n        language = nav.languages[i];\n        if (language && language.length) {\n          return language;\n        }\n      }\n    }\n\n    // support for other well known properties in browsers\n    for (i = 0; i < browserLanguagePropertyKeys.length; i++) {\n      language = nav[browserLanguagePropertyKeys[i]];\n      if (language && language.length) {\n        return language;\n      }\n    }\n\n    return null;\n  };\n  getFirstBrowserLanguage.displayName = 'angular-translate/service: getFirstBrowserLanguage';\n\n  // tries to determine the browsers locale\n  var getLocale = function () {\n    var locale = getFirstBrowserLanguage() || '';\n    if (languageTagResolver[uniformLanguageTagResolver]) {\n      locale = languageTagResolver[uniformLanguageTagResolver](locale);\n    }\n    return locale;\n  };\n  getLocale.displayName = 'angular-translate/service: getLocale';\n\n  /**\n   * @name indexOf\n   * @private\n   *\n   * @description\n   * indexOf polyfill. Kinda sorta.\n   *\n   * @param {array} array Array to search in.\n   * @param {string} searchElement Element to search for.\n   *\n   * @returns {int} Index of search element.\n   */\n  var indexOf = function(array, searchElement) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === searchElement) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  /**\n   * @name trim\n   * @private\n   *\n   * @description\n   * trim polyfill\n   *\n   * @returns {string} The string stripped of whitespace from both ends\n   */\n  var trim = function() {\n    return this.toString().replace(/^\\s+|\\s+$/g, '');\n  };\n\n  var negotiateLocale = function (preferred) {\n\n    var avail = [],\n        locale = angular.lowercase(preferred),\n        i = 0,\n        n = $availableLanguageKeys.length;\n\n    for (; i < n; i++) {\n      avail.push(angular.lowercase($availableLanguageKeys[i]));\n    }\n\n    if (indexOf(avail, locale) > -1) {\n      return preferred;\n    }\n\n    if ($languageKeyAliases) {\n      var alias;\n      for (var langKeyAlias in $languageKeyAliases) {\n        var hasWildcardKey = false;\n        var hasExactKey = Object.prototype.hasOwnProperty.call($languageKeyAliases, langKeyAlias) &&\n          angular.lowercase(langKeyAlias) === angular.lowercase(preferred);\n\n        if (langKeyAlias.slice(-1) === '*') {\n          hasWildcardKey = langKeyAlias.slice(0, -1) === preferred.slice(0, langKeyAlias.length-1);\n        }\n        if (hasExactKey || hasWildcardKey) {\n          alias = $languageKeyAliases[langKeyAlias];\n          if (indexOf(avail, angular.lowercase(alias)) > -1) {\n            return alias;\n          }\n        }\n      }\n    }\n\n    if (preferred) {\n      var parts = preferred.split('_');\n\n      if (parts.length > 1 && indexOf(avail, angular.lowercase(parts[0])) > -1) {\n        return parts[0];\n      }\n    }\n\n    // If everything fails, just return the preferred, unchanged.\n    return preferred;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#translations\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Registers a new translation table for specific language key.\n   *\n   * To register a translation table for specific language, pass a defined language\n   * key as first parameter.\n   *\n   * <pre>\n   *  // register translation table for language: 'de_DE'\n   *  $translateProvider.translations('de_DE', {\n   *    'GREETING': 'Hallo Welt!'\n   *  });\n   *\n   *  // register another one\n   *  $translateProvider.translations('en_US', {\n   *    'GREETING': 'Hello world!'\n   *  });\n   * </pre>\n   *\n   * When registering multiple translation tables for for the same language key,\n   * the actual translation table gets extended. This allows you to define module\n   * specific translation which only get added, once a specific module is loaded in\n   * your app.\n   *\n   * Invoking this method with no arguments returns the translation table which was\n   * registered with no language key. Invoking it with a language key returns the\n   * related translation table.\n   *\n   * @param {string} key A language key.\n   * @param {object} translationTable A plain old JavaScript object that represents a translation table.\n   *\n   */\n  var translations = function (langKey, translationTable) {\n\n    if (!langKey && !translationTable) {\n      return $translationTable;\n    }\n\n    if (langKey && !translationTable) {\n      if (angular.isString(langKey)) {\n        return $translationTable[langKey];\n      }\n    } else {\n      if (!angular.isObject($translationTable[langKey])) {\n        $translationTable[langKey] = {};\n      }\n      angular.extend($translationTable[langKey], flatObject(translationTable));\n    }\n    return this;\n  };\n\n  this.translations = translations;\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#cloakClassName\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   *\n   * Let's you change the class name for `translate-cloak` directive.\n   * Default class name is `translate-cloak`.\n   *\n   * @param {string} name translate-cloak class name\n   */\n  this.cloakClassName = function (name) {\n    if (!name) {\n      return $cloakClassName;\n    }\n    $cloakClassName = name;\n    return this;\n  };\n\n  /**\n   * @name flatObject\n   * @private\n   *\n   * @description\n   * Flats an object. This function is used to flatten given translation data with\n   * namespaces, so they are later accessible via dot notation.\n   */\n  var flatObject = function (data, path, result, prevKey) {\n    var key, keyWithPath, keyWithShortPath, val;\n\n    if (!path) {\n      path = [];\n    }\n    if (!result) {\n      result = {};\n    }\n    for (key in data) {\n      if (!Object.prototype.hasOwnProperty.call(data, key)) {\n        continue;\n      }\n      val = data[key];\n      if (angular.isObject(val)) {\n        flatObject(val, path.concat(key), result, key);\n      } else {\n        keyWithPath = path.length ? ('' + path.join(NESTED_OBJECT_DELIMITER) + NESTED_OBJECT_DELIMITER + key) : key;\n        if(path.length && key === prevKey){\n          // Create shortcut path (foo.bar == foo.bar.bar)\n          keyWithShortPath = '' + path.join(NESTED_OBJECT_DELIMITER);\n          // Link it to original path\n          result[keyWithShortPath] = '@:' + keyWithPath;\n        }\n        result[keyWithPath] = val;\n      }\n    }\n    return result;\n  };\n  flatObject.displayName = 'flatObject';\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#addInterpolation\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Adds interpolation services to angular-translate, so it can manage them.\n   *\n   * @param {object} factory Interpolation service factory\n   */\n  this.addInterpolation = function (factory) {\n    $interpolatorFactories.push(factory);\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useMessageFormatInterpolation\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use interpolation functionality of messageformat.js.\n   * This is useful when having high level pluralization and gender selection.\n   */\n  this.useMessageFormatInterpolation = function () {\n    return this.useInterpolation('$translateMessageFormatInterpolation');\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useInterpolation\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate which interpolation style to use as default, application-wide.\n   * Simply pass a factory/service name. The interpolation service has to implement\n   * the correct interface.\n   *\n   * @param {string} factory Interpolation service name.\n   */\n  this.useInterpolation = function (factory) {\n    $interpolationFactory = factory;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useSanitizeStrategy\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Simply sets a sanitation strategy type.\n   *\n   * @param {string} value Strategy type.\n   */\n  this.useSanitizeValueStrategy = function (value) {\n    $translateSanitizationProvider.useStrategy(value);\n    return this;\n  };\n\n /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#preferredLanguage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells the module which of the registered translation tables to use for translation\n   * at initial startup by passing a language key. Similar to `$translateProvider#use`\n   * only that it says which language to **prefer**.\n   *\n   * @param {string} langKey A language key.\n   *\n   */\n  this.preferredLanguage = function(langKey) {\n    setupPreferredLanguage(langKey);\n    return this;\n\n  };\n  var setupPreferredLanguage = function (langKey) {\n    if (langKey) {\n      $preferredLanguage = langKey;\n    }\n    return $preferredLanguage;\n  };\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicator\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Sets an indicator which is used when a translation isn't found. E.g. when\n   * setting the indicator as 'X' and one tries to translate a translation id\n   * called `NOT_FOUND`, this will result in `X NOT_FOUND X`.\n   *\n   * Internally this methods sets a left indicator and a right indicator using\n   * `$translateProvider.translationNotFoundIndicatorLeft()` and\n   * `$translateProvider.translationNotFoundIndicatorRight()`.\n   *\n   * **Note**: These methods automatically add a whitespace between the indicators\n   * and the translation id.\n   *\n   * @param {string} indicator An indicator, could be any string.\n   */\n  this.translationNotFoundIndicator = function (indicator) {\n    this.translationNotFoundIndicatorLeft(indicator);\n    this.translationNotFoundIndicatorRight(indicator);\n    return this;\n  };\n\n  /**\n   * ngdoc function\n   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Sets an indicator which is used when a translation isn't found left to the\n   * translation id.\n   *\n   * @param {string} indicator An indicator.\n   */\n  this.translationNotFoundIndicatorLeft = function (indicator) {\n    if (!indicator) {\n      return $notFoundIndicatorLeft;\n    }\n    $notFoundIndicatorLeft = indicator;\n    return this;\n  };\n\n  /**\n   * ngdoc function\n   * @name pascalprecht.translate.$translateProvider#translationNotFoundIndicatorLeft\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Sets an indicator which is used when a translation isn't found right to the\n   * translation id.\n   *\n   * @param {string} indicator An indicator.\n   */\n  this.translationNotFoundIndicatorRight = function (indicator) {\n    if (!indicator) {\n      return $notFoundIndicatorRight;\n    }\n    $notFoundIndicatorRight = indicator;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#fallbackLanguage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells the module which of the registered translation tables to use when missing translations\n   * at initial startup by passing a language key. Similar to `$translateProvider#use`\n   * only that it says which language to **fallback**.\n   *\n   * @param {string||array} langKey A language key.\n   *\n   */\n  this.fallbackLanguage = function (langKey) {\n    fallbackStack(langKey);\n    return this;\n  };\n\n  var fallbackStack = function (langKey) {\n    if (langKey) {\n      if (angular.isString(langKey)) {\n        $fallbackWasString = true;\n        $fallbackLanguage = [ langKey ];\n      } else if (angular.isArray(langKey)) {\n        $fallbackWasString = false;\n        $fallbackLanguage = langKey;\n      }\n      if (angular.isString($preferredLanguage)  && indexOf($fallbackLanguage, $preferredLanguage) < 0) {\n        $fallbackLanguage.push($preferredLanguage);\n      }\n\n      return this;\n    } else {\n      if ($fallbackWasString) {\n        return $fallbackLanguage[0];\n      } else {\n        return $fallbackLanguage;\n      }\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#use\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Set which translation table to use for translation by given language key. When\n   * trying to 'use' a language which isn't provided, it'll throw an error.\n   *\n   * You actually don't have to use this method since `$translateProvider#preferredLanguage`\n   * does the job too.\n   *\n   * @param {string} langKey A language key.\n   */\n  this.use = function (langKey) {\n    if (langKey) {\n      if (!$translationTable[langKey] && (!$loaderFactory)) {\n        // only throw an error, when not loading translation data asynchronously\n        throw new Error('$translateProvider couldn\\'t find translationTable for langKey: \\'' + langKey + '\\'');\n      }\n      $uses = langKey;\n      return this;\n    }\n    return $uses;\n  };\n\n /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#storageKey\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells the module which key must represent the choosed language by a user in the storage.\n   *\n   * @param {string} key A key for the storage.\n   */\n  var storageKey = function(key) {\n    if (!key) {\n      if ($storagePrefix) {\n        return $storagePrefix + $storageKey;\n      }\n      return $storageKey;\n    }\n    $storageKey = key;\n    return this;\n  };\n\n  this.storageKey = storageKey;\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useUrlLoader\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use `$translateUrlLoader` extension service as loader.\n   *\n   * @param {string} url Url\n   * @param {Object=} options Optional configuration object\n   */\n  this.useUrlLoader = function (url, options) {\n    return this.useLoader('$translateUrlLoader', angular.extend({ url: url }, options));\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useStaticFilesLoader\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use `$translateStaticFilesLoader` extension service as loader.\n   *\n   * @param {Object=} options Optional configuration object\n   */\n  this.useStaticFilesLoader = function (options) {\n    return this.useLoader('$translateStaticFilesLoader', options);\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useLoader\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use any other service as loader.\n   *\n   * @param {string} loaderFactory Factory name to use\n   * @param {Object=} options Optional configuration object\n   */\n  this.useLoader = function (loaderFactory, options) {\n    $loaderFactory = loaderFactory;\n    $loaderOptions = options || {};\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useLocalStorage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use `$translateLocalStorage` service as storage layer.\n   *\n   */\n  this.useLocalStorage = function () {\n    return this.useStorage('$translateLocalStorage');\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useCookieStorage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use `$translateCookieStorage` service as storage layer.\n   */\n  this.useCookieStorage = function () {\n    return this.useStorage('$translateCookieStorage');\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useStorage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use custom service as storage layer.\n   */\n  this.useStorage = function (storageFactory) {\n    $storageFactory = storageFactory;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#storagePrefix\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Sets prefix for storage key.\n   *\n   * @param {string} prefix Storage key prefix\n   */\n  this.storagePrefix = function (prefix) {\n    if (!prefix) {\n      return prefix;\n    }\n    $storagePrefix = prefix;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandlerLog\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to use built-in log handler when trying to translate\n   * a translation Id which doesn't exist.\n   *\n   * This is actually a shortcut method for `useMissingTranslationHandler()`.\n   *\n   */\n  this.useMissingTranslationHandlerLog = function () {\n    return this.useMissingTranslationHandler('$translateMissingTranslationHandlerLog');\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useMissingTranslationHandler\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Expects a factory name which later gets instantiated with `$injector`.\n   * This method can be used to tell angular-translate to use a custom\n   * missingTranslationHandler. Just build a factory which returns a function\n   * and expects a translation id as argument.\n   *\n   * Example:\n   * <pre>\n   *  app.config(function ($translateProvider) {\n   *    $translateProvider.useMissingTranslationHandler('customHandler');\n   *  });\n   *\n   *  app.factory('customHandler', function (dep1, dep2) {\n   *    return function (translationId) {\n   *      // something with translationId and dep1 and dep2\n   *    };\n   *  });\n   * </pre>\n   *\n   * @param {string} factory Factory name\n   */\n  this.useMissingTranslationHandler = function (factory) {\n    $missingTranslationHandlerFactory = factory;\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#usePostCompiling\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * If post compiling is enabled, all translated values will be processed\n   * again with AngularJS' $compile.\n   *\n   * Example:\n   * <pre>\n   *  app.config(function ($translateProvider) {\n   *    $translateProvider.usePostCompiling(true);\n   *  });\n   * </pre>\n   *\n   * @param {string} factory Factory name\n   */\n  this.usePostCompiling = function (value) {\n    $postCompilingEnabled = !(!value);\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#forceAsyncReload\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * If force async reload is enabled, async loader will always be called\n   * even if $translationTable already contains the language key, adding\n   * possible new entries to the $translationTable.\n   *\n   * Example:\n   * <pre>\n   *  app.config(function ($translateProvider) {\n   *    $translateProvider.forceAsyncReload(true);\n   *  });\n   * </pre>\n   *\n   * @param {boolean} value - valid values are true or false\n   */\n  this.forceAsyncReload = function (value) {\n    $forceAsyncReloadEnabled = !(!value);\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#uniformLanguageTag\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate which language tag should be used as a result when determining\n   * the current browser language.\n   *\n   * This setting must be set before invoking {@link pascalprecht.translate.$translateProvider#methods_determinePreferredLanguage determinePreferredLanguage()}.\n   *\n   * <pre>\n   * $translateProvider\n   *   .uniformLanguageTag('bcp47')\n   *   .determinePreferredLanguage()\n   * </pre>\n   *\n   * The resolver currently supports:\n   * * default\n   *     (traditionally: hyphens will be converted into underscores, i.e. en-US => en_US)\n   *     en-US => en_US\n   *     en_US => en_US\n   *     en-us => en_us\n   * * java\n   *     like default, but the second part will be always in uppercase\n   *     en-US => en_US\n   *     en_US => en_US\n   *     en-us => en_US\n   * * BCP 47 (RFC 4646 & 4647)\n   *     en-US => en-US\n   *     en_US => en-US\n   *     en-us => en-US\n   *\n   * See also:\n   * * http://en.wikipedia.org/wiki/IETF_language_tag\n   * * http://www.w3.org/International/core/langtags/\n   * * http://tools.ietf.org/html/bcp47\n   *\n   * @param {string|object} options - options (or standard)\n   * @param {string} options.standard - valid values are 'default', 'bcp47', 'java'\n   */\n  this.uniformLanguageTag = function (options) {\n\n    if (!options) {\n      options = {};\n    } else if (angular.isString(options)) {\n      options = {\n        standard: options\n      };\n    }\n\n    uniformLanguageTagResolver = options.standard;\n\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#determinePreferredLanguage\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Tells angular-translate to try to determine on its own which language key\n   * to set as preferred language. When `fn` is given, angular-translate uses it\n   * to determine a language key, otherwise it uses the built-in `getLocale()`\n   * method.\n   *\n   * The `getLocale()` returns a language key in the format `[lang]_[country]` or\n   * `[lang]` depending on what the browser provides.\n   *\n   * Use this method at your own risk, since not all browsers return a valid\n   * locale (see {@link pascalprecht.translate.$translateProvider#methods_uniformLanguageTag uniformLanguageTag()}).\n   *\n   * @param {Function=} fn Function to determine a browser's locale\n   */\n  this.determinePreferredLanguage = function (fn) {\n\n    var locale = (fn && angular.isFunction(fn)) ? fn() : getLocale();\n\n    if (!$availableLanguageKeys.length) {\n      $preferredLanguage = locale;\n    } else {\n      $preferredLanguage = negotiateLocale(locale);\n    }\n\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#registerAvailableLanguageKeys\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Registers a set of language keys the app will work with. Use this method in\n   * combination with\n   * {@link pascalprecht.translate.$translateProvider#determinePreferredLanguage determinePreferredLanguage}.\n   * When available languages keys are registered, angular-translate\n   * tries to find the best fitting language key depending on the browsers locale,\n   * considering your language key convention.\n   *\n   * @param {object} languageKeys Array of language keys the your app will use\n   * @param {object=} aliases Alias map.\n   */\n  this.registerAvailableLanguageKeys = function (languageKeys, aliases) {\n    if (languageKeys) {\n      $availableLanguageKeys = languageKeys;\n      if (aliases) {\n        $languageKeyAliases = aliases;\n      }\n      return this;\n    }\n    return $availableLanguageKeys;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#useLoaderCache\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Registers a cache for internal $http based loaders.\n   * {@link pascalprecht.translate.$translateProvider#determinePreferredLanguage determinePreferredLanguage}.\n   * When false the cache will be disabled (default). When true or undefined\n   * the cache will be a default (see $cacheFactory). When an object it will\n   * be treat as a cache object itself: the usage is $http({cache: cache})\n   *\n   * @param {object} cache boolean, string or cache-object\n   */\n  this.useLoaderCache = function (cache) {\n    if (cache === false) {\n      // disable cache\n      loaderCache = undefined;\n    } else if (cache === true) {\n      // enable cache using AJS defaults\n      loaderCache = true;\n    } else if (typeof(cache) === 'undefined') {\n      // enable cache using default\n      loaderCache = '$translationCache';\n    } else if (cache) {\n      // enable cache using given one (see $cacheFactory)\n      loaderCache = cache;\n    }\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#directivePriority\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Sets the default priority of the translate directive. The standard value is `0`.\n   * Calling this function without an argument will return the current value.\n   *\n   * @param {number} priority for the translate-directive\n   */\n  this.directivePriority = function (priority) {\n    if (priority === undefined) {\n      // getter\n      return directivePriority;\n    } else {\n      // setter with chaining\n      directivePriority = priority;\n      return this;\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateProvider#statefulFilter\n   * @methodOf pascalprecht.translate.$translateProvider\n   *\n   * @description\n   * Since AngularJS 1.3, filters which are not stateless (depending at the scope)\n   * have to explicit define this behavior.\n   * Sets whether the translate filter should be stateful or stateless. The standard value is `true`\n   * meaning being stateful.\n   * Calling this function without an argument will return the current value.\n   *\n   * @param {boolean} state - defines the state of the filter\n   */\n  this.statefulFilter = function (state) {\n    if (state === undefined) {\n      // getter\n      return statefulFilter;\n    } else {\n      // setter with chaining\n      statefulFilter = state;\n      return this;\n    }\n  };\n\n  /**\n   * @ngdoc object\n   * @name pascalprecht.translate.$translate\n   * @requires $interpolate\n   * @requires $log\n   * @requires $rootScope\n   * @requires $q\n   *\n   * @description\n   * The `$translate` service is the actual core of angular-translate. It expects a translation id\n   * and optional interpolate parameters to translate contents.\n   *\n   * <pre>\n   *  $translate('HEADLINE_TEXT').then(function (translation) {\n   *    $scope.translatedText = translation;\n   *  });\n   * </pre>\n   *\n   * @param {string|array} translationId A token which represents a translation id\n   *                                     This can be optionally an array of translation ids which\n   *                                     results that the function returns an object where each key\n   *                                     is the translation id and the value the translation.\n   * @param {object=} interpolateParams An object hash for dynamic values\n   * @param {string} interpolationId The id of the interpolation to use\n   * @returns {object} promise\n   */\n  this.$get = [\n    '$log',\n    '$injector',\n    '$rootScope',\n    '$q',\n    function ($log, $injector, $rootScope, $q) {\n\n      var Storage,\n          defaultInterpolator = $injector.get($interpolationFactory || '$translateDefaultInterpolation'),\n          pendingLoader = false,\n          interpolatorHashMap = {},\n          langPromises = {},\n          fallbackIndex,\n          startFallbackIteration;\n\n      var $translate = function (translationId, interpolateParams, interpolationId, defaultTranslationText) {\n\n        // Duck detection: If the first argument is an array, a bunch of translations was requested.\n        // The result is an object.\n        if (angular.isArray(translationId)) {\n          // Inspired by Q.allSettled by Kris Kowal\n          // https://github.com/kriskowal/q/blob/b0fa72980717dc202ffc3cbf03b936e10ebbb9d7/q.js#L1553-1563\n          // This transforms all promises regardless resolved or rejected\n          var translateAll = function (translationIds) {\n            var results = {}; // storing the actual results\n            var promises = []; // promises to wait for\n            // Wraps the promise a) being always resolved and b) storing the link id->value\n            var translate = function (translationId) {\n              var deferred = $q.defer();\n              var regardless = function (value) {\n                results[translationId] = value;\n                deferred.resolve([translationId, value]);\n              };\n              // we don't care whether the promise was resolved or rejected; just store the values\n              $translate(translationId, interpolateParams, interpolationId, defaultTranslationText).then(regardless, regardless);\n              return deferred.promise;\n            };\n            for (var i = 0, c = translationIds.length; i < c; i++) {\n              promises.push(translate(translationIds[i]));\n            }\n            // wait for all (including storing to results)\n            return $q.all(promises).then(function () {\n              // return the results\n              return results;\n            });\n          };\n          return translateAll(translationId);\n        }\n\n        var deferred = $q.defer();\n\n        // trim off any whitespace\n        if (translationId) {\n          translationId = trim.apply(translationId);\n        }\n\n        var promiseToWaitFor = (function () {\n          var promise = $preferredLanguage ?\n            langPromises[$preferredLanguage] :\n            langPromises[$uses];\n\n          fallbackIndex = 0;\n\n          if ($storageFactory && !promise) {\n            // looks like there's no pending promise for $preferredLanguage or\n            // $uses. Maybe there's one pending for a language that comes from\n            // storage.\n            var langKey = Storage.get($storageKey);\n            promise = langPromises[langKey];\n\n            if ($fallbackLanguage && $fallbackLanguage.length) {\n                var index = indexOf($fallbackLanguage, langKey);\n                // maybe the language from storage is also defined as fallback language\n                // we increase the fallback language index to not search in that language\n                // as fallback, since it's probably the first used language\n                // in that case the index starts after the first element\n                fallbackIndex = (index === 0) ? 1 : 0;\n\n                // but we can make sure to ALWAYS fallback to preferred language at least\n                if (indexOf($fallbackLanguage, $preferredLanguage) < 0) {\n                  $fallbackLanguage.push($preferredLanguage);\n                }\n            }\n          }\n          return promise;\n        }());\n\n        if (!promiseToWaitFor) {\n          // no promise to wait for? okay. Then there's no loader registered\n          // nor is a one pending for language that comes from storage.\n          // We can just translate.\n          determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText).then(deferred.resolve, deferred.reject);\n        } else {\n          var promiseResolved = function () {\n            determineTranslation(translationId, interpolateParams, interpolationId, defaultTranslationText).then(deferred.resolve, deferred.reject);\n          };\n          promiseResolved.displayName = 'promiseResolved';\n\n          promiseToWaitFor['finally'](promiseResolved, deferred.reject);\n        }\n        return deferred.promise;\n      };\n\n      /**\n       * @name applyNotFoundIndicators\n       * @private\n       *\n       * @description\n       * Applies not fount indicators to given translation id, if needed.\n       * This function gets only executed, if a translation id doesn't exist,\n       * which is why a translation id is expected as argument.\n       *\n       * @param {string} translationId Translation id.\n       * @returns {string} Same as given translation id but applied with not found\n       * indicators.\n       */\n      var applyNotFoundIndicators = function (translationId) {\n        // applying notFoundIndicators\n        if ($notFoundIndicatorLeft) {\n          translationId = [$notFoundIndicatorLeft, translationId].join(' ');\n        }\n        if ($notFoundIndicatorRight) {\n          translationId = [translationId, $notFoundIndicatorRight].join(' ');\n        }\n        return translationId;\n      };\n\n      /**\n       * @name useLanguage\n       * @private\n       *\n       * @description\n       * Makes actual use of a language by setting a given language key as used\n       * language and informs registered interpolators to also use the given\n       * key as locale.\n       *\n       * @param {key} Locale key.\n       */\n      var useLanguage = function (key) {\n        $uses = key;\n        $rootScope.$emit('$translateChangeSuccess', {language: key});\n\n        if ($storageFactory) {\n          Storage.put($translate.storageKey(), $uses);\n        }\n        // inform default interpolator\n        defaultInterpolator.setLocale($uses);\n\n        var eachInterpolator = function (interpolator, id) {\n          interpolatorHashMap[id].setLocale($uses);\n        };\n        eachInterpolator.displayName = 'eachInterpolatorLocaleSetter';\n\n        // inform all others too!\n        angular.forEach(interpolatorHashMap, eachInterpolator);\n        $rootScope.$emit('$translateChangeEnd', {language: key});\n      };\n\n      /**\n       * @name loadAsync\n       * @private\n       *\n       * @description\n       * Kicks of registered async loader using `$injector` and applies existing\n       * loader options. When resolved, it updates translation tables accordingly\n       * or rejects with given language key.\n       *\n       * @param {string} key Language key.\n       * @return {Promise} A promise.\n       */\n      var loadAsync = function (key) {\n        if (!key) {\n          throw 'No language key specified for loading.';\n        }\n\n        var deferred = $q.defer();\n\n        $rootScope.$emit('$translateLoadingStart', {language: key});\n        pendingLoader = true;\n\n        var cache = loaderCache;\n        if (typeof(cache) === 'string') {\n          // getting on-demand instance of loader\n          cache = $injector.get(cache);\n        }\n\n        var loaderOptions = angular.extend({}, $loaderOptions, {\n          key: key,\n          $http: angular.extend({}, {\n            cache: cache\n          }, $loaderOptions.$http)\n        });\n\n        var onLoaderSuccess = function (data) {\n          var translationTable = {};\n          $rootScope.$emit('$translateLoadingSuccess', {language: key});\n\n          if (angular.isArray(data)) {\n            angular.forEach(data, function (table) {\n              angular.extend(translationTable, flatObject(table));\n            });\n          } else {\n            angular.extend(translationTable, flatObject(data));\n          }\n          pendingLoader = false;\n          deferred.resolve({\n            key: key,\n            table: translationTable\n          });\n          $rootScope.$emit('$translateLoadingEnd', {language: key});\n        };\n        onLoaderSuccess.displayName = 'onLoaderSuccess';\n\n        var onLoaderError = function (key) {\n          $rootScope.$emit('$translateLoadingError', {language: key});\n          deferred.reject(key);\n          $rootScope.$emit('$translateLoadingEnd', {language: key});\n        };\n        onLoaderError.displayName = 'onLoaderError';\n\n        $injector.get($loaderFactory)(loaderOptions)\n          .then(onLoaderSuccess, onLoaderError);\n\n        return deferred.promise;\n      };\n\n      if ($storageFactory) {\n        Storage = $injector.get($storageFactory);\n\n        if (!Storage.get || !Storage.put) {\n          throw new Error('Couldn\\'t use storage \\'' + $storageFactory + '\\', missing get() or put() method!');\n        }\n      }\n\n      // if we have additional interpolations that were added via\n      // $translateProvider.addInterpolation(), we have to map'em\n      if ($interpolatorFactories.length) {\n        var eachInterpolationFactory = function (interpolatorFactory) {\n          var interpolator = $injector.get(interpolatorFactory);\n          // setting initial locale for each interpolation service\n          interpolator.setLocale($preferredLanguage || $uses);\n          // make'em recognizable through id\n          interpolatorHashMap[interpolator.getInterpolationIdentifier()] = interpolator;\n        };\n        eachInterpolationFactory.displayName = 'interpolationFactoryAdder';\n\n        angular.forEach($interpolatorFactories, eachInterpolationFactory);\n      }\n\n      /**\n       * @name getTranslationTable\n       * @private\n       *\n       * @description\n       * Returns a promise that resolves to the translation table\n       * or is rejected if an error occurred.\n       *\n       * @param langKey\n       * @returns {Q.promise}\n       */\n      var getTranslationTable = function (langKey) {\n        var deferred = $q.defer();\n        if (Object.prototype.hasOwnProperty.call($translationTable, langKey)) {\n          deferred.resolve($translationTable[langKey]);\n        } else if (langPromises[langKey]) {\n          var onResolve = function (data) {\n            translations(data.key, data.table);\n            deferred.resolve(data.table);\n          };\n          onResolve.displayName = 'translationTableResolver';\n          langPromises[langKey].then(onResolve, deferred.reject);\n        } else {\n          deferred.reject();\n        }\n        return deferred.promise;\n      };\n\n      /**\n       * @name getFallbackTranslation\n       * @private\n       *\n       * @description\n       * Returns a promise that will resolve to the translation\n       * or be rejected if no translation was found for the language.\n       * This function is currently only used for fallback language translation.\n       *\n       * @param langKey The language to translate to.\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {Q.promise}\n       */\n      var getFallbackTranslation = function (langKey, translationId, interpolateParams, Interpolator) {\n        var deferred = $q.defer();\n\n        var onResolve = function (translationTable) {\n          if (Object.prototype.hasOwnProperty.call(translationTable, translationId)) {\n            Interpolator.setLocale(langKey);\n            var translation = translationTable[translationId];\n            if (translation.substr(0, 2) === '@:') {\n              getFallbackTranslation(langKey, translation.substr(2), interpolateParams, Interpolator)\n                .then(deferred.resolve, deferred.reject);\n            } else {\n              deferred.resolve(Interpolator.interpolate(translationTable[translationId], interpolateParams));\n            }\n            Interpolator.setLocale($uses);\n          } else {\n            deferred.reject();\n          }\n        };\n        onResolve.displayName = 'fallbackTranslationResolver';\n\n        getTranslationTable(langKey).then(onResolve, deferred.reject);\n\n        return deferred.promise;\n      };\n\n      /**\n       * @name getFallbackTranslationInstant\n       * @private\n       *\n       * @description\n       * Returns a translation\n       * This function is currently only used for fallback language translation.\n       *\n       * @param langKey The language to translate to.\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {string} translation\n       */\n      var getFallbackTranslationInstant = function (langKey, translationId, interpolateParams, Interpolator) {\n        var result, translationTable = $translationTable[langKey];\n\n        if (translationTable && Object.prototype.hasOwnProperty.call(translationTable, translationId)) {\n          Interpolator.setLocale(langKey);\n          result = Interpolator.interpolate(translationTable[translationId], interpolateParams);\n          if (result.substr(0, 2) === '@:') {\n            return getFallbackTranslationInstant(langKey, result.substr(2), interpolateParams, Interpolator);\n          }\n          Interpolator.setLocale($uses);\n        }\n\n        return result;\n      };\n\n\n      /**\n       * @name translateByHandler\n       * @private\n       *\n       * Translate by missing translation handler.\n       *\n       * @param translationId\n       * @returns translation created by $missingTranslationHandler or translationId is $missingTranslationHandler is\n       * absent\n       */\n      var translateByHandler = function (translationId, interpolateParams) {\n        // If we have a handler factory - we might also call it here to determine if it provides\n        // a default text for a translationid that can't be found anywhere in our tables\n        if ($missingTranslationHandlerFactory) {\n          var resultString = $injector.get($missingTranslationHandlerFactory)(translationId, $uses, interpolateParams);\n          if (resultString !== undefined) {\n            return resultString;\n          } else {\n            return translationId;\n          }\n        } else {\n          return translationId;\n        }\n      };\n\n      /**\n       * @name resolveForFallbackLanguage\n       * @private\n       *\n       * Recursive helper function for fallbackTranslation that will sequentially look\n       * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.\n       *\n       * @param fallbackLanguageIndex\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {Q.promise} Promise that will resolve to the translation.\n       */\n      var resolveForFallbackLanguage = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator, defaultTranslationText) {\n        var deferred = $q.defer();\n\n        if (fallbackLanguageIndex < $fallbackLanguage.length) {\n          var langKey = $fallbackLanguage[fallbackLanguageIndex];\n          getFallbackTranslation(langKey, translationId, interpolateParams, Interpolator).then(\n            deferred.resolve,\n            function () {\n              // Look in the next fallback language for a translation.\n              // It delays the resolving by passing another promise to resolve.\n              resolveForFallbackLanguage(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator, defaultTranslationText).then(deferred.resolve);\n            }\n          );\n        } else {\n          // No translation found in any fallback language\n          // if a default translation text is set in the directive, then return this as a result\n          if (defaultTranslationText) {\n            deferred.resolve(defaultTranslationText);\n          } else {\n            // if no default translation is set and an error handler is defined, send it to the handler\n            // and then return the result\n            deferred.resolve(translateByHandler(translationId, interpolateParams));\n          }\n        }\n        return deferred.promise;\n      };\n\n      /**\n       * @name resolveForFallbackLanguageInstant\n       * @private\n       *\n       * Recursive helper function for fallbackTranslation that will sequentially look\n       * for a translation in the fallbackLanguages starting with fallbackLanguageIndex.\n       *\n       * @param fallbackLanguageIndex\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {string} translation\n       */\n      var resolveForFallbackLanguageInstant = function (fallbackLanguageIndex, translationId, interpolateParams, Interpolator) {\n        var result;\n\n        if (fallbackLanguageIndex < $fallbackLanguage.length) {\n          var langKey = $fallbackLanguage[fallbackLanguageIndex];\n          result = getFallbackTranslationInstant(langKey, translationId, interpolateParams, Interpolator);\n          if (!result) {\n            result = resolveForFallbackLanguageInstant(fallbackLanguageIndex + 1, translationId, interpolateParams, Interpolator);\n          }\n        }\n        return result;\n      };\n\n      /**\n       * Translates with the usage of the fallback languages.\n       *\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {Q.promise} Promise, that resolves to the translation.\n       */\n      var fallbackTranslation = function (translationId, interpolateParams, Interpolator, defaultTranslationText) {\n        // Start with the fallbackLanguage with index 0\n        return resolveForFallbackLanguage((startFallbackIteration>0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator, defaultTranslationText);\n      };\n\n      /**\n       * Translates with the usage of the fallback languages.\n       *\n       * @param translationId\n       * @param interpolateParams\n       * @param Interpolator\n       * @returns {String} translation\n       */\n      var fallbackTranslationInstant = function (translationId, interpolateParams, Interpolator) {\n        // Start with the fallbackLanguage with index 0\n        return resolveForFallbackLanguageInstant((startFallbackIteration>0 ? startFallbackIteration : fallbackIndex), translationId, interpolateParams, Interpolator);\n      };\n\n      var determineTranslation = function (translationId, interpolateParams, interpolationId, defaultTranslationText) {\n\n        var deferred = $q.defer();\n\n        var table = $uses ? $translationTable[$uses] : $translationTable,\n            Interpolator = (interpolationId) ? interpolatorHashMap[interpolationId] : defaultInterpolator;\n\n        // if the translation id exists, we can just interpolate it\n        if (table && Object.prototype.hasOwnProperty.call(table, translationId)) {\n          var translation = table[translationId];\n\n          // If using link, rerun $translate with linked translationId and return it\n          if (translation.substr(0, 2) === '@:') {\n\n            $translate(translation.substr(2), interpolateParams, interpolationId, defaultTranslationText)\n              .then(deferred.resolve, deferred.reject);\n          } else {\n            deferred.resolve(Interpolator.interpolate(translation, interpolateParams));\n          }\n        } else {\n          var missingTranslationHandlerTranslation;\n          // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise\n          if ($missingTranslationHandlerFactory && !pendingLoader) {\n            missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams);\n          }\n\n          // since we couldn't translate the inital requested translation id,\n          // we try it now with one or more fallback languages, if fallback language(s) is\n          // configured.\n          if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n            fallbackTranslation(translationId, interpolateParams, Interpolator, defaultTranslationText)\n                .then(function (translation) {\n                  deferred.resolve(translation);\n                }, function (_translationId) {\n                  deferred.reject(applyNotFoundIndicators(_translationId));\n                });\n          } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {\n            // looks like the requested translation id doesn't exists.\n            // Now, if there is a registered handler for missing translations and no\n            // asyncLoader is pending, we execute the handler\n            if (defaultTranslationText) {\n              deferred.resolve(defaultTranslationText);\n              } else {\n                deferred.resolve(missingTranslationHandlerTranslation);\n              }\n          } else {\n            if (defaultTranslationText) {\n              deferred.resolve(defaultTranslationText);\n            } else {\n              deferred.reject(applyNotFoundIndicators(translationId));\n            }\n          }\n        }\n        return deferred.promise;\n      };\n\n      var determineTranslationInstant = function (translationId, interpolateParams, interpolationId) {\n\n        var result, table = $uses ? $translationTable[$uses] : $translationTable,\n            Interpolator = defaultInterpolator;\n\n        // if the interpolation id exists use custom interpolator\n        if (interpolatorHashMap && Object.prototype.hasOwnProperty.call(interpolatorHashMap, interpolationId)) {\n          Interpolator = interpolatorHashMap[interpolationId];\n        }\n\n        // if the translation id exists, we can just interpolate it\n        if (table && Object.prototype.hasOwnProperty.call(table, translationId)) {\n          var translation = table[translationId];\n\n          // If using link, rerun $translate with linked translationId and return it\n          if (translation.substr(0, 2) === '@:') {\n            result = determineTranslationInstant(translation.substr(2), interpolateParams, interpolationId);\n          } else {\n            result = Interpolator.interpolate(translation, interpolateParams);\n          }\n        } else {\n          var missingTranslationHandlerTranslation;\n          // for logging purposes only (as in $translateMissingTranslationHandlerLog), value is not returned to promise\n          if ($missingTranslationHandlerFactory && !pendingLoader) {\n            missingTranslationHandlerTranslation = translateByHandler(translationId, interpolateParams);\n          }\n\n          // since we couldn't translate the inital requested translation id,\n          // we try it now with one or more fallback languages, if fallback language(s) is\n          // configured.\n          if ($uses && $fallbackLanguage && $fallbackLanguage.length) {\n            fallbackIndex = 0;\n            result = fallbackTranslationInstant(translationId, interpolateParams, Interpolator);\n          } else if ($missingTranslationHandlerFactory && !pendingLoader && missingTranslationHandlerTranslation) {\n            // looks like the requested translation id doesn't exists.\n            // Now, if there is a registered handler for missing translations and no\n            // asyncLoader is pending, we execute the handler\n            result = missingTranslationHandlerTranslation;\n          } else {\n            result = applyNotFoundIndicators(translationId);\n          }\n        }\n\n        return result;\n      };\n\n      var clearNextLangAndPromise = function(key) {\n        if ($nextLang === key) {\n          $nextLang = undefined;\n        }\n        langPromises[key] = undefined;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#preferredLanguage\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the language key for the preferred language.\n       *\n       * @param {string} langKey language String or Array to be used as preferredLanguage (changing at runtime)\n       *\n       * @return {string} preferred language key\n       */\n      $translate.preferredLanguage = function (langKey) {\n        if(langKey) {\n          setupPreferredLanguage(langKey);\n        }\n        return $preferredLanguage;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#cloakClassName\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the configured class name for `translate-cloak` directive.\n       *\n       * @return {string} cloakClassName\n       */\n      $translate.cloakClassName = function () {\n        return $cloakClassName;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#fallbackLanguage\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the language key for the fallback languages or sets a new fallback stack.\n       *\n       * @param {string=} langKey language String or Array of fallback languages to be used (to change stack at runtime)\n       *\n       * @return {string||array} fallback language key\n       */\n      $translate.fallbackLanguage = function (langKey) {\n        if (langKey !== undefined && langKey !== null) {\n          fallbackStack(langKey);\n\n          // as we might have an async loader initiated and a new translation language might have been defined\n          // we need to add the promise to the stack also. So - iterate.\n          if ($loaderFactory) {\n            if ($fallbackLanguage && $fallbackLanguage.length) {\n              for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n                if (!langPromises[$fallbackLanguage[i]]) {\n                  langPromises[$fallbackLanguage[i]] = loadAsync($fallbackLanguage[i]);\n                }\n              }\n            }\n          }\n          $translate.use($translate.use());\n        }\n        if ($fallbackWasString) {\n          return $fallbackLanguage[0];\n        } else {\n          return $fallbackLanguage;\n        }\n\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#useFallbackLanguage\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Sets the first key of the fallback language stack to be used for translation.\n       * Therefore all languages in the fallback array BEFORE this key will be skipped!\n       *\n       * @param {string=} langKey Contains the langKey the iteration shall start with. Set to false if you want to\n       * get back to the whole stack\n       */\n      $translate.useFallbackLanguage = function (langKey) {\n        if (langKey !== undefined && langKey !== null) {\n          if (!langKey) {\n            startFallbackIteration = 0;\n          } else {\n            var langKeyPosition = indexOf($fallbackLanguage, langKey);\n            if (langKeyPosition > -1) {\n              startFallbackIteration = langKeyPosition;\n            }\n          }\n\n        }\n\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#proposedLanguage\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the language key of language that is currently loaded asynchronously.\n       *\n       * @return {string} language key\n       */\n      $translate.proposedLanguage = function () {\n        return $nextLang;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#storage\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns registered storage.\n       *\n       * @return {object} Storage\n       */\n      $translate.storage = function () {\n        return Storage;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#use\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Tells angular-translate which language to use by given language key. This method is\n       * used to change language at runtime. It also takes care of storing the language\n       * key in a configured store to let your app remember the choosed language.\n       *\n       * When trying to 'use' a language which isn't available it tries to load it\n       * asynchronously with registered loaders.\n       *\n       * Returns promise object with loaded language file data\n       * @example\n       * $translate.use(\"en_US\").then(function(data){\n       *   $scope.text = $translate(\"HELLO\");\n       * });\n       *\n       * @param {string} key Language key\n       * @return {string} Language key\n       */\n      $translate.use = function (key) {\n        if (!key) {\n          return $uses;\n        }\n\n        var deferred = $q.defer();\n\n        $rootScope.$emit('$translateChangeStart', {language: key});\n\n        // Try to get the aliased language key\n        var aliasedKey = negotiateLocale(key);\n        if (aliasedKey) {\n          key = aliasedKey;\n        }\n\n        // if there isn't a translation table for the language we've requested,\n        // we load it asynchronously\n        if (($forceAsyncReloadEnabled || !$translationTable[key]) && $loaderFactory && !langPromises[key]) {\n          $nextLang = key;\n          langPromises[key] = loadAsync(key).then(function (translation) {\n            translations(translation.key, translation.table);\n            deferred.resolve(translation.key);\n            useLanguage(translation.key);\n            return translation;\n          }, function (key) {\n            $rootScope.$emit('$translateChangeError', {language: key});\n            deferred.reject(key);\n            $rootScope.$emit('$translateChangeEnd', {language: key});\n            return $q.reject(key);\n          });\n          langPromises[key]['finally'](function () {\n            clearNextLangAndPromise(key);\n          });\n        } else if ($nextLang === key && langPromises[key]) {\n          // we are already loading this asynchronously\n          // resolve our new deferred when the old langPromise is resolved\n          langPromises[key].then(function (translation) {\n            deferred.resolve(translation.key);\n            return translation;\n          }, function (key) {\n            deferred.reject(key);\n            return $q.reject(key);\n          });\n        } else {\n          deferred.resolve(key);\n          useLanguage(key);\n        }\n\n        return deferred.promise;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#storageKey\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the key for the storage.\n       *\n       * @return {string} storage key\n       */\n      $translate.storageKey = function () {\n        return storageKey();\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#isPostCompilingEnabled\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns whether post compiling is enabled or not\n       *\n       * @return {bool} storage key\n       */\n      $translate.isPostCompilingEnabled = function () {\n        return $postCompilingEnabled;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#isForceAsyncReloadEnabled\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns whether force async reload is enabled or not\n       *\n       * @return {boolean} forceAsyncReload value\n       */\n      $translate.isForceAsyncReloadEnabled = function () {\n        return $forceAsyncReloadEnabled;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#refresh\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Refreshes a translation table pointed by the given langKey. If langKey is not specified,\n       * the module will drop all existent translation tables and load new version of those which\n       * are currently in use.\n       *\n       * Refresh means that the module will drop target translation table and try to load it again.\n       *\n       * In case there are no loaders registered the refresh() method will throw an Error.\n       *\n       * If the module is able to refresh translation tables refresh() method will broadcast\n       * $translateRefreshStart and $translateRefreshEnd events.\n       *\n       * @example\n       * // this will drop all currently existent translation tables and reload those which are\n       * // currently in use\n       * $translate.refresh();\n       * // this will refresh a translation table for the en_US language\n       * $translate.refresh('en_US');\n       *\n       * @param {string} langKey A language key of the table, which has to be refreshed\n       *\n       * @return {promise} Promise, which will be resolved in case a translation tables refreshing\n       * process is finished successfully, and reject if not.\n       */\n      $translate.refresh = function (langKey) {\n        if (!$loaderFactory) {\n          throw new Error('Couldn\\'t refresh translation table, no loader registered!');\n        }\n\n        var deferred = $q.defer();\n\n        function resolve() {\n          deferred.resolve();\n          $rootScope.$emit('$translateRefreshEnd', {language: langKey});\n        }\n\n        function reject() {\n          deferred.reject();\n          $rootScope.$emit('$translateRefreshEnd', {language: langKey});\n        }\n\n        $rootScope.$emit('$translateRefreshStart', {language: langKey});\n\n        if (!langKey) {\n          // if there's no language key specified we refresh ALL THE THINGS!\n          var tables = [], loadingKeys = {};\n\n          // reload registered fallback languages\n          if ($fallbackLanguage && $fallbackLanguage.length) {\n            for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n              tables.push(loadAsync($fallbackLanguage[i]));\n              loadingKeys[$fallbackLanguage[i]] = true;\n            }\n          }\n\n          // reload currently used language\n          if ($uses && !loadingKeys[$uses]) {\n            tables.push(loadAsync($uses));\n          }\n\n          var allTranslationsLoaded = function (tableData) {\n            $translationTable = {};\n            angular.forEach(tableData, function (data) {\n              translations(data.key, data.table);\n            });\n            if ($uses) {\n              useLanguage($uses);\n            }\n            resolve();\n          };\n          allTranslationsLoaded.displayName = 'refreshPostProcessor';\n\n          $q.all(tables).then(allTranslationsLoaded, reject);\n\n        } else if ($translationTable[langKey]) {\n\n          var oneTranslationsLoaded = function (data) {\n            translations(data.key, data.table);\n            if (langKey === $uses) {\n              useLanguage($uses);\n            }\n            resolve();\n          };\n          oneTranslationsLoaded.displayName = 'refreshPostProcessor';\n\n          loadAsync(langKey).then(oneTranslationsLoaded, reject);\n\n        } else {\n          reject();\n        }\n        return deferred.promise;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#instant\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns a translation instantly from the internal state of loaded translation. All rules\n       * regarding the current language, the preferred language of even fallback languages will be\n       * used except any promise handling. If a language was not found, an asynchronous loading\n       * will be invoked in the background.\n       *\n       * @param {string|array} translationId A token which represents a translation id\n       *                                     This can be optionally an array of translation ids which\n       *                                     results that the function's promise returns an object where\n       *                                     each key is the translation id and the value the translation.\n       * @param {object} interpolateParams Params\n       * @param {string} interpolationId The id of the interpolation to use\n       *\n       * @return {string|object} translation\n       */\n      $translate.instant = function (translationId, interpolateParams, interpolationId) {\n\n        // Detect undefined and null values to shorten the execution and prevent exceptions\n        if (translationId === null || angular.isUndefined(translationId)) {\n          return translationId;\n        }\n\n        // Duck detection: If the first argument is an array, a bunch of translations was requested.\n        // The result is an object.\n        if (angular.isArray(translationId)) {\n          var results = {};\n          for (var i = 0, c = translationId.length; i < c; i++) {\n            results[translationId[i]] = $translate.instant(translationId[i], interpolateParams, interpolationId);\n          }\n          return results;\n        }\n\n        // We discarded unacceptable values. So we just need to verify if translationId is empty String\n        if (angular.isString(translationId) && translationId.length < 1) {\n          return translationId;\n        }\n\n        // trim off any whitespace\n        if (translationId) {\n          translationId = trim.apply(translationId);\n        }\n\n        var result, possibleLangKeys = [];\n        if ($preferredLanguage) {\n          possibleLangKeys.push($preferredLanguage);\n        }\n        if ($uses) {\n          possibleLangKeys.push($uses);\n        }\n        if ($fallbackLanguage && $fallbackLanguage.length) {\n          possibleLangKeys = possibleLangKeys.concat($fallbackLanguage);\n        }\n        for (var j = 0, d = possibleLangKeys.length; j < d; j++) {\n          var possibleLangKey = possibleLangKeys[j];\n          if ($translationTable[possibleLangKey]) {\n            if (typeof $translationTable[possibleLangKey][translationId] !== 'undefined') {\n              result = determineTranslationInstant(translationId, interpolateParams, interpolationId);\n            } else if ($notFoundIndicatorLeft || $notFoundIndicatorRight) {\n              result = applyNotFoundIndicators(translationId);\n            }\n          }\n          if (typeof result !== 'undefined') {\n            break;\n          }\n        }\n\n        if (!result && result !== '') {\n          // Return translation of default interpolator if not found anything.\n          result = defaultInterpolator.interpolate(translationId, interpolateParams);\n          if ($missingTranslationHandlerFactory && !pendingLoader) {\n            result = translateByHandler(translationId, interpolateParams);\n          }\n        }\n\n        return result;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#versionInfo\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the current version information for the angular-translate library\n       *\n       * @return {string} angular-translate version\n       */\n      $translate.versionInfo = function () {\n        return version;\n      };\n\n      /**\n       * @ngdoc function\n       * @name pascalprecht.translate.$translate#loaderCache\n       * @methodOf pascalprecht.translate.$translate\n       *\n       * @description\n       * Returns the defined loaderCache.\n       *\n       * @return {boolean|string|object} current value of loaderCache\n       */\n      $translate.loaderCache = function () {\n        return loaderCache;\n      };\n\n      // internal purpose only\n      $translate.directivePriority = function () {\n        return directivePriority;\n      };\n\n      // internal purpose only\n      $translate.statefulFilter = function () {\n        return statefulFilter;\n      };\n\n      if ($loaderFactory) {\n\n        // If at least one async loader is defined and there are no\n        // (default) translations available we should try to load them.\n        if (angular.equals($translationTable, {})) {\n          $translate.use($translate.use());\n        }\n\n        // Also, if there are any fallback language registered, we start\n        // loading them asynchronously as soon as we can.\n        if ($fallbackLanguage && $fallbackLanguage.length) {\n          var processAsyncResult = function (translation) {\n            translations(translation.key, translation.table);\n            $rootScope.$emit('$translateChangeEnd', { language: translation.key });\n            return translation;\n          };\n          for (var i = 0, len = $fallbackLanguage.length; i < len; i++) {\n            var fallbackLanguageId = $fallbackLanguage[i];\n            if ($forceAsyncReloadEnabled || !$translationTable[fallbackLanguageId]) {\n              langPromises[fallbackLanguageId] = loadAsync(fallbackLanguageId).then(processAsyncResult);\n            }\n          }\n        }\n      }\n\n      return $translate;\n    }\n  ];\n}\n$translate.$inject = ['$STORAGE_KEY', '$windowProvider', '$translateSanitizationProvider', 'pascalprechtTranslateOverrider'];\n\n$translate.displayName = 'displayName';\n\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translateDefaultInterpolation\n * @requires $interpolate\n *\n * @description\n * Uses angular's `$interpolate` services to interpolate strings against some values.\n *\n * Be aware to configure a proper sanitization strategy.\n *\n * See also:\n * * {@link pascalprecht.translate.$translateSanitization}\n *\n * @return {object} $translateDefaultInterpolation Interpolator service\n */\nangular.module('pascalprecht.translate').factory('$translateDefaultInterpolation', $translateDefaultInterpolation);\n\nfunction $translateDefaultInterpolation ($interpolate, $translateSanitization) {\n\n  'use strict';\n\n  var $translateInterpolator = {},\n      $locale,\n      $identifier = 'default';\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateDefaultInterpolation#setLocale\n   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n   *\n   * @description\n   * Sets current locale (this is currently not use in this interpolation).\n   *\n   * @param {string} locale Language key or locale.\n   */\n  $translateInterpolator.setLocale = function (locale) {\n    $locale = locale;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateDefaultInterpolation#getInterpolationIdentifier\n   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n   *\n   * @description\n   * Returns an identifier for this interpolation service.\n   *\n   * @returns {string} $identifier\n   */\n  $translateInterpolator.getInterpolationIdentifier = function () {\n    return $identifier;\n  };\n\n  /**\n   * @deprecated will be removed in 3.0\n   * @see {@link pascalprecht.translate.$translateSanitization}\n   */\n  $translateInterpolator.useSanitizeValueStrategy = function (value) {\n    $translateSanitization.useStrategy(value);\n    return this;\n  };\n\n  /**\n   * @ngdoc function\n   * @name pascalprecht.translate.$translateDefaultInterpolation#interpolate\n   * @methodOf pascalprecht.translate.$translateDefaultInterpolation\n   *\n   * @description\n   * Interpolates given string agains given interpolate params using angulars\n   * `$interpolate` service.\n   *\n   * @returns {string} interpolated string.\n   */\n  $translateInterpolator.interpolate = function (string, interpolationParams) {\n    interpolationParams = interpolationParams || {};\n    interpolationParams = $translateSanitization.sanitize(interpolationParams, 'params');\n\n    var interpolatedText = $interpolate(string)(interpolationParams);\n    interpolatedText = $translateSanitization.sanitize(interpolatedText, 'text');\n\n    return interpolatedText;\n  };\n\n  return $translateInterpolator;\n}\n$translateDefaultInterpolation.$inject = ['$interpolate', '$translateSanitization'];\n\n$translateDefaultInterpolation.displayName = '$translateDefaultInterpolation';\n\nangular.module('pascalprecht.translate').constant('$STORAGE_KEY', 'NG_TRANSLATE_LANG_KEY');\n\nangular.module('pascalprecht.translate')\n/**\n * @ngdoc directive\n * @name pascalprecht.translate.directive:translate\n * @requires $compile\n * @requires $filter\n * @requires $interpolate\n * @restrict A\n *\n * @description\n * Translates given translation id either through attribute or DOM content.\n * Internally it uses `translate` filter to translate translation id. It possible to\n * pass an optional `translate-values` object literal as string into translation id.\n *\n * @param {string=} translate Translation id which could be either string or interpolated string.\n * @param {string=} translate-values Values to pass into translation id. Can be passed as object literal string or interpolated object.\n * @param {string=} translate-attr-ATTR translate Translation id and put it into ATTR attribute.\n * @param {string=} translate-default will be used unless translation was successful\n * @param {boolean=} translate-compile (default true if present) defines locally activation of {@link pascalprecht.translate.$translateProvider#methods_usePostCompiling}\n *\n * @example\n   <example module=\"ngView\">\n    <file name=\"index.html\">\n      <div ng-controller=\"TranslateCtrl\">\n\n        <pre translate=\"TRANSLATION_ID\"></pre>\n        <pre translate>TRANSLATION_ID</pre>\n        <pre translate translate-attr-title=\"TRANSLATION_ID\"></pre>\n        <pre translate=\"{{translationId}}\"></pre>\n        <pre translate>{{translationId}}</pre>\n        <pre translate=\"WITH_VALUES\" translate-values=\"{value: 5}\"></pre>\n        <pre translate translate-values=\"{value: 5}\">WITH_VALUES</pre>\n        <pre translate=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>\n        <pre translate translate-values=\"{{values}}\">WITH_VALUES</pre>\n        <pre translate translate-attr-title=\"WITH_VALUES\" translate-values=\"{{values}}\"></pre>\n\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngView', ['pascalprecht.translate'])\n\n      .config(function ($translateProvider) {\n\n        $translateProvider.translations('en',{\n          'TRANSLATION_ID': 'Hello there!',\n          'WITH_VALUES': 'The following value is dynamic: {{value}}'\n        }).preferredLanguage('en');\n\n      });\n\n      angular.module('ngView').controller('TranslateCtrl', function ($scope) {\n        $scope.translationId = 'TRANSLATION_ID';\n\n        $scope.values = {\n          value: 78\n        };\n      });\n    </file>\n    <file name=\"scenario.js\">\n      it('should translate', function () {\n        inject(function ($rootScope, $compile) {\n          $rootScope.translationId = 'TRANSLATION_ID';\n\n          element = $compile('<p translate=\"TRANSLATION_ID\"></p>')($rootScope);\n          $rootScope.$digest();\n          expect(element.text()).toBe('Hello there!');\n\n          element = $compile('<p translate=\"{{translationId}}\"></p>')($rootScope);\n          $rootScope.$digest();\n          expect(element.text()).toBe('Hello there!');\n\n          element = $compile('<p translate>TRANSLATION_ID</p>')($rootScope);\n          $rootScope.$digest();\n          expect(element.text()).toBe('Hello there!');\n\n          element = $compile('<p translate>{{translationId}}</p>')($rootScope);\n          $rootScope.$digest();\n          expect(element.text()).toBe('Hello there!');\n\n          element = $compile('<p translate translate-attr-title=\"TRANSLATION_ID\"></p>')($rootScope);\n          $rootScope.$digest();\n          expect(element.attr('title')).toBe('Hello there!');\n        });\n      });\n    </file>\n   </example>\n */\n.directive('translate', translateDirective);\nfunction translateDirective($translate, $q, $interpolate, $compile, $parse, $rootScope) {\n\n  'use strict';\n\n  /**\n   * @name trim\n   * @private\n   *\n   * @description\n   * trim polyfill\n   *\n   * @returns {string} The string stripped of whitespace from both ends\n   */\n  var trim = function() {\n    return this.toString().replace(/^\\s+|\\s+$/g, '');\n  };\n\n  return {\n    restrict: 'AE',\n    scope: true,\n    priority: $translate.directivePriority(),\n    compile: function (tElement, tAttr) {\n\n      var translateValuesExist = (tAttr.translateValues) ?\n        tAttr.translateValues : undefined;\n\n      var translateInterpolation = (tAttr.translateInterpolation) ?\n        tAttr.translateInterpolation : undefined;\n\n      var translateValueExist = tElement[0].outerHTML.match(/translate-value-+/i);\n\n      var interpolateRegExp = '^(.*)(' + $interpolate.startSymbol() + '.*' + $interpolate.endSymbol() + ')(.*)',\n          watcherRegExp = '^(.*)' + $interpolate.startSymbol() + '(.*)' + $interpolate.endSymbol() + '(.*)';\n\n      return function linkFn(scope, iElement, iAttr) {\n\n        scope.interpolateParams = {};\n        scope.preText = '';\n        scope.postText = '';\n        var translationIds = {};\n\n        var initInterpolationParams = function (interpolateParams, iAttr, tAttr) {\n          // initial setup\n          if (iAttr.translateValues) {\n            angular.extend(interpolateParams, $parse(iAttr.translateValues)(scope.$parent));\n          }\n          // initially fetch all attributes if existing and fill the params\n          if (translateValueExist) {\n            for (var attr in tAttr) {\n              if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {\n                var attributeName = angular.lowercase(attr.substr(14, 1)) + attr.substr(15);\n                interpolateParams[attributeName] = tAttr[attr];\n              }\n            }\n          }\n        };\n\n        // Ensures any change of the attribute \"translate\" containing the id will\n        // be re-stored to the scope's \"translationId\".\n        // If the attribute has no content, the element's text value (white spaces trimmed off) will be used.\n        var observeElementTranslation = function (translationId) {\n\n          // Remove any old watcher\n          if (angular.isFunction(observeElementTranslation._unwatchOld)) {\n            observeElementTranslation._unwatchOld();\n            observeElementTranslation._unwatchOld = undefined;\n          }\n\n          if (angular.equals(translationId , '') || !angular.isDefined(translationId)) {\n            // Resolve translation id by inner html if required\n            var interpolateMatches = trim.apply(iElement.text()).match(interpolateRegExp);\n            // Interpolate translation id if required\n            if (angular.isArray(interpolateMatches)) {\n              scope.preText = interpolateMatches[1];\n              scope.postText = interpolateMatches[3];\n              translationIds.translate = $interpolate(interpolateMatches[2])(scope.$parent);\n              var watcherMatches = iElement.text().match(watcherRegExp);\n              if (angular.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length) {\n                observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {\n                  translationIds.translate = newValue;\n                  updateTranslations();\n                });\n              }\n            } else {\n              translationIds.translate = iElement.text().replace(/^\\s+|\\s+$/g,'');\n            }\n          } else {\n            translationIds.translate = translationId;\n          }\n          updateTranslations();\n        };\n\n        var observeAttributeTranslation = function (translateAttr) {\n          iAttr.$observe(translateAttr, function (translationId) {\n            translationIds[translateAttr] = translationId;\n            updateTranslations();\n          });\n        };\n\n        // initial setup with values\n        initInterpolationParams(scope.interpolateParams, iAttr, tAttr);\n\n        var firstAttributeChangedEvent = true;\n        iAttr.$observe('translate', function (translationId) {\n          if (typeof translationId === 'undefined') {\n            // case of element \"<translate>xyz</translate>\"\n            observeElementTranslation('');\n          } else {\n            // case of regular attribute\n            if (translationId !== '' || !firstAttributeChangedEvent) {\n              translationIds.translate = translationId;\n              updateTranslations();\n            }\n          }\n          firstAttributeChangedEvent = false;\n        });\n\n        for (var translateAttr in iAttr) {\n          if (iAttr.hasOwnProperty(translateAttr) && translateAttr.substr(0, 13) === 'translateAttr') {\n            observeAttributeTranslation(translateAttr);\n          }\n        }\n\n        iAttr.$observe('translateDefault', function (value) {\n          scope.defaultText = value;\n        });\n\n        if (translateValuesExist) {\n          iAttr.$observe('translateValues', function (interpolateParams) {\n            if (interpolateParams) {\n              scope.$parent.$watch(function () {\n                angular.extend(scope.interpolateParams, $parse(interpolateParams)(scope.$parent));\n              });\n            }\n          });\n        }\n\n        if (translateValueExist) {\n          var observeValueAttribute = function (attrName) {\n            iAttr.$observe(attrName, function (value) {\n              var attributeName = angular.lowercase(attrName.substr(14, 1)) + attrName.substr(15);\n              scope.interpolateParams[attributeName] = value;\n            });\n          };\n          for (var attr in iAttr) {\n            if (Object.prototype.hasOwnProperty.call(iAttr, attr) && attr.substr(0, 14) === 'translateValue' && attr !== 'translateValues') {\n              observeValueAttribute(attr);\n            }\n          }\n        }\n\n        // Master update function\n        var updateTranslations = function () {\n          for (var key in translationIds) {\n\n            if (translationIds.hasOwnProperty(key) && translationIds[key] !== undefined) {\n              updateTranslation(key, translationIds[key], scope, scope.interpolateParams, scope.defaultText);\n            }\n          }\n        };\n\n        // Put translation processing function outside loop\n        var updateTranslation = function(translateAttr, translationId, scope, interpolateParams, defaultTranslationText) {\n          if (translationId) {\n            $translate(translationId, interpolateParams, translateInterpolation, defaultTranslationText)\n              .then(function (translation) {\n                applyTranslation(translation, scope, true, translateAttr);\n              }, function (translationId) {\n                applyTranslation(translationId, scope, false, translateAttr);\n              });\n          } else {\n            // as an empty string cannot be translated, we can solve this using successful=false\n            applyTranslation(translationId, scope, false, translateAttr);\n          }\n        };\n\n        var applyTranslation = function (value, scope, successful, translateAttr) {\n          if (translateAttr === 'translate') {\n            // default translate into innerHTML\n            if (!successful && typeof scope.defaultText !== 'undefined') {\n              value = scope.defaultText;\n            }\n            iElement.html(scope.preText + value + scope.postText);\n            var globallyEnabled = $translate.isPostCompilingEnabled();\n            var locallyDefined = typeof tAttr.translateCompile !== 'undefined';\n            var locallyEnabled = locallyDefined && tAttr.translateCompile !== 'false';\n            if ((globallyEnabled && !locallyDefined) || locallyEnabled) {\n              $compile(iElement.contents())(scope);\n            }\n          } else {\n            // translate attribute\n            if (!successful && typeof scope.defaultText !== 'undefined') {\n              value = scope.defaultText;\n            }\n            var attributeName = iAttr.$attr[translateAttr];\n            if (attributeName.substr(0, 5) === 'data-') {\n              // ensure html5 data prefix is stripped\n              attributeName = attributeName.substr(5);\n            }\n            attributeName = attributeName.substr(15);\n            iElement.attr(attributeName, value);\n          }\n        };\n\n        if (translateValuesExist || translateValueExist || iAttr.translateDefault) {\n          scope.$watch('interpolateParams', updateTranslations, true);\n        }\n\n        // Ensures the text will be refreshed after the current language was changed\n        // w/ $translate.use(...)\n        var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslations);\n\n        // ensure translation will be looked up at least one\n        if (iElement.text().length) {\n          if (iAttr.translate) {\n            observeElementTranslation(iAttr.translate);\n          } else {\n            observeElementTranslation('');\n          }\n        } else if (iAttr.translate) {\n          // ensure attribute will be not skipped\n          observeElementTranslation(iAttr.translate);\n        }\n        updateTranslations();\n        scope.$on('$destroy', unbind);\n      };\n    }\n  };\n}\ntranslateDirective.$inject = ['$translate', '$q', '$interpolate', '$compile', '$parse', '$rootScope'];\n\ntranslateDirective.displayName = 'translateDirective';\n\nangular.module('pascalprecht.translate')\n/**\n * @ngdoc directive\n * @name pascalprecht.translate.directive:translateCloak\n * @requires $rootScope\n * @requires $translate\n * @restrict A\n *\n * $description\n * Adds a `translate-cloak` class name to the given element where this directive\n * is applied initially and removes it, once a loader has finished loading.\n *\n * This directive can be used to prevent initial flickering when loading translation\n * data asynchronously.\n *\n * The class name is defined in\n * {@link pascalprecht.translate.$translateProvider#cloakClassName $translate.cloakClassName()}.\n *\n * @param {string=} translate-cloak If a translationId is provided, it will be used for showing\n *                                  or hiding the cloak. Basically it relies on the translation\n *                                  resolve.\n */\n.directive('translateCloak', translateCloakDirective);\n\nfunction translateCloakDirective($rootScope, $translate) {\n\n  'use strict';\n\n  return {\n    compile: function (tElement) {\n      var applyCloak = function () {\n        tElement.addClass($translate.cloakClassName());\n      },\n      removeCloak = function () {\n        tElement.removeClass($translate.cloakClassName());\n      },\n      removeListener = $rootScope.$on('$translateChangeEnd', function () {\n        removeCloak();\n        removeListener();\n        removeListener = null;\n      });\n      applyCloak();\n\n      return function linkFn(scope, iElement, iAttr) {\n        // Register a watcher for the defined translation allowing a fine tuned cloak\n        if (iAttr.translateCloak && iAttr.translateCloak.length) {\n          iAttr.$observe('translateCloak', function (translationId) {\n            $translate(translationId).then(removeCloak, applyCloak);\n          });\n        }\n      };\n    }\n  };\n}\ntranslateCloakDirective.$inject = ['$rootScope', '$translate'];\n\ntranslateCloakDirective.displayName = 'translateCloakDirective';\n\nangular.module('pascalprecht.translate')\n/**\n * @ngdoc filter\n * @name pascalprecht.translate.filter:translate\n * @requires $parse\n * @requires pascalprecht.translate.$translate\n * @function\n *\n * @description\n * Uses `$translate` service to translate contents. Accepts interpolate parameters\n * to pass dynamized values though translation.\n *\n * @param {string} translationId A translation id to be translated.\n * @param {*=} interpolateParams Optional object literal (as hash or string) to pass values into translation.\n *\n * @returns {string} Translated text.\n *\n * @example\n   <example module=\"ngView\">\n    <file name=\"index.html\">\n      <div ng-controller=\"TranslateCtrl\">\n\n        <pre>{{ 'TRANSLATION_ID' | translate }}</pre>\n        <pre>{{ translationId | translate }}</pre>\n        <pre>{{ 'WITH_VALUES' | translate:'{value: 5}' }}</pre>\n        <pre>{{ 'WITH_VALUES' | translate:values }}</pre>\n\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngView', ['pascalprecht.translate'])\n\n      .config(function ($translateProvider) {\n\n        $translateProvider.translations('en', {\n          'TRANSLATION_ID': 'Hello there!',\n          'WITH_VALUES': 'The following value is dynamic: {{value}}'\n        });\n        $translateProvider.preferredLanguage('en');\n\n      });\n\n      angular.module('ngView').controller('TranslateCtrl', function ($scope) {\n        $scope.translationId = 'TRANSLATION_ID';\n\n        $scope.values = {\n          value: 78\n        };\n      });\n    </file>\n   </example>\n */\n.filter('translate', translateFilterFactory);\n\nfunction translateFilterFactory($parse, $translate) {\n\n  'use strict';\n\n  var translateFilter = function (translationId, interpolateParams, interpolation) {\n\n    if (!angular.isObject(interpolateParams)) {\n      interpolateParams = $parse(interpolateParams)(this);\n    }\n\n    return $translate.instant(translationId, interpolateParams, interpolation);\n  };\n\n  if ($translate.statefulFilter()) {\n    translateFilter.$stateful = true;\n  }\n\n  return translateFilter;\n}\ntranslateFilterFactory.$inject = ['$parse', '$translate'];\n\ntranslateFilterFactory.displayName = 'translateFilterFactory';\n\nangular.module('pascalprecht.translate')\n\n/**\n * @ngdoc object\n * @name pascalprecht.translate.$translationCache\n * @requires $cacheFactory\n *\n * @description\n * The first time a translation table is used, it is loaded in the translation cache for quick retrieval. You\n * can load translation tables directly into the cache by consuming the\n * `$translationCache` service directly.\n *\n * @return {object} $cacheFactory object.\n */\n  .factory('$translationCache', $translationCache);\n\nfunction $translationCache($cacheFactory) {\n\n  'use strict';\n\n  return $cacheFactory('translations');\n}\n$translationCache.$inject = ['$cacheFactory'];\n\n$translationCache.displayName = '$translationCache';\nreturn 'pascalprecht.translate';\n\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular-translate/dist/angular-translate.js\n ** module id = 5\n ** module chunks = 0\n **/","require('./angular-animate');\nmodule.exports = 'ngAnimate';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular-animate/index.js\n ** module id = 6\n ** module chunks = 0\n **/","var duScrollDefaultEasing=function(e){\"use strict\";return.5>e?Math.pow(2*e,2)/2:1-Math.pow(2*(1-e),2)/2};angular.module(\"duScroll\",[\"duScroll.scrollspy\",\"duScroll.smoothScroll\",\"duScroll.scrollContainer\",\"duScroll.spyContext\",\"duScroll.scrollHelpers\"]).value(\"duScrollDuration\",350).value(\"duScrollSpyWait\",100).value(\"duScrollGreedy\",!1).value(\"duScrollOffset\",0).value(\"duScrollEasing\",duScrollDefaultEasing).value(\"duScrollCancelOnEvents\",\"scroll mousedown mousewheel touchmove keydown\").value(\"duScrollBottomSpy\",!1),angular.module(\"duScroll.scrollHelpers\",[\"duScroll.requestAnimation\"]).run([\"$window\",\"$q\",\"cancelAnimation\",\"requestAnimation\",\"duScrollEasing\",\"duScrollDuration\",\"duScrollOffset\",\"duScrollCancelOnEvents\",function(e,t,n,r,o,l,u,i){\"use strict\";var c={},a=function(e){return\"undefined\"!=typeof HTMLDocument&&e instanceof HTMLDocument||e.nodeType&&e.nodeType===e.DOCUMENT_NODE},s=function(e){return\"undefined\"!=typeof HTMLElement&&e instanceof HTMLElement||e.nodeType&&e.nodeType===e.ELEMENT_NODE},d=function(e){return s(e)||a(e)?e:e[0]};c.duScrollTo=function(t,n,r,o){var l;if(angular.isElement(t)?l=this.duScrollToElement:angular.isDefined(r)&&(l=this.duScrollToAnimated),l)return l.apply(this,arguments);var u=d(this);return a(u)?e.scrollTo(t,n):(u.scrollLeft=t,void(u.scrollTop=n))};var f,p;c.duScrollToAnimated=function(e,l,u,c){u&&!c&&(c=o);var a=this.duScrollLeft(),s=this.duScrollTop(),d=Math.round(e-a),m=Math.round(l-s),S=null,g=0,h=this,v=function(e){(!e||g&&e.which>0)&&(i&&h.unbind(i,v),n(f),p.reject(),f=null)};if(f&&v(),p=t.defer(),0===u||!d&&!m)return 0===u&&h.duScrollTo(e,l),p.resolve(),p.promise;var y=function(e){null===S&&(S=e),g=e-S;var t=g>=u?1:c(g/u);h.scrollTo(a+Math.ceil(d*t),s+Math.ceil(m*t)),1>t?f=r(y):(i&&h.unbind(i,v),f=null,p.resolve())};return h.duScrollTo(a,s),i&&h.bind(i,v),f=r(y),p.promise},c.duScrollToElement=function(e,t,n,r){var o=d(this);(!angular.isNumber(t)||isNaN(t))&&(t=u);var l=this.duScrollTop()+d(e).getBoundingClientRect().top-t;return s(o)&&(l-=o.getBoundingClientRect().top),this.duScrollTo(0,l,n,r)},c.duScrollLeft=function(t,n,r){if(angular.isNumber(t))return this.duScrollTo(t,this.duScrollTop(),n,r);var o=d(this);return a(o)?e.scrollX||document.documentElement.scrollLeft||document.body.scrollLeft:o.scrollLeft},c.duScrollTop=function(t,n,r){if(angular.isNumber(t))return this.duScrollTo(this.duScrollLeft(),t,n,r);var o=d(this);return a(o)?e.scrollY||document.documentElement.scrollTop||document.body.scrollTop:o.scrollTop},c.duScrollToElementAnimated=function(e,t,n,r){return this.duScrollToElement(e,t,n||l,r)},c.duScrollTopAnimated=function(e,t,n){return this.duScrollTop(e,t||l,n)},c.duScrollLeftAnimated=function(e,t,n){return this.duScrollLeft(e,t||l,n)},angular.forEach(c,function(e,t){angular.element.prototype[t]=e;var n=t.replace(/^duScroll/,\"scroll\");angular.isUndefined(angular.element.prototype[n])&&(angular.element.prototype[n]=e)})}]),angular.module(\"duScroll.polyfill\",[]).factory(\"polyfill\",[\"$window\",function(e){\"use strict\";var t=[\"webkit\",\"moz\",\"o\",\"ms\"];return function(n,r){if(e[n])return e[n];for(var o,l=n.substr(0,1).toUpperCase()+n.substr(1),u=0;u<t.length;u++)if(o=t[u]+l,e[o])return e[o];return r}}]),angular.module(\"duScroll.requestAnimation\",[\"duScroll.polyfill\"]).factory(\"requestAnimation\",[\"polyfill\",\"$timeout\",function(e,t){\"use strict\";var n=0,r=function(e,r){var o=(new Date).getTime(),l=Math.max(0,16-(o-n)),u=t(function(){e(o+l)},l);return n=o+l,u};return e(\"requestAnimationFrame\",r)}]).factory(\"cancelAnimation\",[\"polyfill\",\"$timeout\",function(e,t){\"use strict\";var n=function(e){t.cancel(e)};return e(\"cancelAnimationFrame\",n)}]),angular.module(\"duScroll.spyAPI\",[\"duScroll.scrollContainerAPI\"]).factory(\"spyAPI\",[\"$rootScope\",\"$timeout\",\"$window\",\"$document\",\"scrollContainerAPI\",\"duScrollGreedy\",\"duScrollSpyWait\",\"duScrollBottomSpy\",function(e,t,n,r,o,l,u,i){\"use strict\";var c=function(o){var c=!1,a=!1,s=function(){a=!1;var t,u=o.container,c=u[0],s=0;\"undefined\"!=typeof HTMLElement&&c instanceof HTMLElement||c.nodeType&&c.nodeType===c.ELEMENT_NODE?(s=c.getBoundingClientRect().top,t=Math.round(c.scrollTop+c.clientHeight)>=c.scrollHeight):t=Math.round(n.pageYOffset+n.innerHeight)>=r[0].body.scrollHeight;var d,f,p,m,S,g,h=i&&t?\"bottom\":\"top\";for(m=o.spies,f=o.currentlyActive,p=void 0,d=0;d<m.length;d++)S=m[d],g=S.getTargetPosition(),g&&(i&&t||g.top+S.offset-s<20&&(l||-1*g.top+s)<g.height)&&(!p||p[h]<g[h])&&(p={spy:S},p[h]=g[h]);p&&(p=p.spy),f===p||l&&!p||(f&&(f.$element.removeClass(\"active\"),e.$broadcast(\"duScrollspy:becameInactive\",f.$element)),p&&(p.$element.addClass(\"active\"),e.$broadcast(\"duScrollspy:becameActive\",p.$element)),o.currentlyActive=p)};return u?function(){c?a=!0:(s(),c=t(function(){c=!1,a&&s()},u,!1))}:s},a={},s=function(e){var t=e.$id,n={spies:[]};return n.handler=c(n),a[t]=n,e.$on(\"$destroy\",function(){d(e)}),t},d=function(e){var t=e.$id,n=a[t],r=n.container;r&&r.off(\"scroll\",n.handler),delete a[t]},f=s(e),p=function(e){return a[e.$id]?a[e.$id]:e.$parent?p(e.$parent):a[f]},m=function(e){var t,n,r=e.$scope;if(r)return p(r);for(n in a)if(t=a[n],-1!==t.spies.indexOf(e))return t},S=function(e){for(;e.parentNode;)if(e=e.parentNode,e===document)return!0;return!1},g=function(e){var t=m(e);t&&(t.spies.push(e),t.container&&S(t.container)||(t.container&&t.container.off(\"scroll\",t.handler),t.container=o.getContainer(e.$scope),t.container.on(\"scroll\",t.handler).triggerHandler(\"scroll\")))},h=function(e){var t=m(e);e===t.currentlyActive&&(t.currentlyActive=null);var n=t.spies.indexOf(e);-1!==n&&t.spies.splice(n,1),e.$element=null};return{addSpy:g,removeSpy:h,createContext:s,destroyContext:d,getContextForScope:p}}]),angular.module(\"duScroll.scrollContainerAPI\",[]).factory(\"scrollContainerAPI\",[\"$document\",function(e){\"use strict\";var t={},n=function(e,n){var r=e.$id;return t[r]=n,r},r=function(e){return t[e.$id]?e.$id:e.$parent?r(e.$parent):void 0},o=function(n){var o=r(n);return o?t[o]:e},l=function(e){var n=r(e);n&&delete t[n]};return{getContainerId:r,getContainer:o,setContainer:n,removeContainer:l}}]),angular.module(\"duScroll.smoothScroll\",[\"duScroll.scrollHelpers\",\"duScroll.scrollContainerAPI\"]).directive(\"duSmoothScroll\",[\"duScrollDuration\",\"duScrollOffset\",\"scrollContainerAPI\",function(e,t,n){\"use strict\";return{link:function(r,o,l){o.on(\"click\",function(o){if(l.href&&-1!==l.href.indexOf(\"#\")||\"\"!==l.duSmoothScroll){var u=l.href?l.href.replace(/.*(?=#[^\\s]+$)/,\"\").substring(1):l.duSmoothScroll,i=document.getElementById(u)||document.getElementsByName(u)[0];if(i&&i.getBoundingClientRect){o.stopPropagation&&o.stopPropagation(),o.preventDefault&&o.preventDefault();var c=l.offset?parseInt(l.offset,10):t,a=l.duration?parseInt(l.duration,10):e,s=n.getContainer(r);s.duScrollToElement(angular.element(i),isNaN(c)?0:c,isNaN(a)?0:a)}}})}}}]),angular.module(\"duScroll.spyContext\",[\"duScroll.spyAPI\"]).directive(\"duSpyContext\",[\"spyAPI\",function(e){\"use strict\";return{restrict:\"A\",scope:!0,compile:function(t,n,r){return{pre:function(t,n,r,o){e.createContext(t)}}}}}]),angular.module(\"duScroll.scrollContainer\",[\"duScroll.scrollContainerAPI\"]).directive(\"duScrollContainer\",[\"scrollContainerAPI\",function(e){\"use strict\";return{restrict:\"A\",scope:!0,compile:function(t,n,r){return{pre:function(t,n,r,o){r.$observe(\"duScrollContainer\",function(r){angular.isString(r)&&(r=document.getElementById(r)),r=angular.isElement(r)?angular.element(r):n,e.setContainer(t,r),t.$on(\"$destroy\",function(){e.removeContainer(t)})})}}}}}]),angular.module(\"duScroll.scrollspy\",[\"duScroll.spyAPI\"]).directive(\"duScrollspy\",[\"spyAPI\",\"duScrollOffset\",\"$timeout\",\"$rootScope\",function(e,t,n,r){\"use strict\";var o=function(e,t,n,r){angular.isElement(e)?this.target=e:angular.isString(e)&&(this.targetId=e),this.$scope=t,this.$element=n,this.offset=r};return o.prototype.getTargetElement=function(){return!this.target&&this.targetId&&(this.target=document.getElementById(this.targetId)||document.getElementsByName(this.targetId)[0]),this.target},o.prototype.getTargetPosition=function(){var e=this.getTargetElement();return e?e.getBoundingClientRect():void 0},o.prototype.flushTargetCache=function(){this.targetId&&(this.target=void 0)},{link:function(l,u,i){var c,a=i.ngHref||i.href;a&&-1!==a.indexOf(\"#\")?c=a.replace(/.*(?=#[^\\s]+$)/,\"\").substring(1):i.duScrollspy?c=i.duScrollspy:i.duSmoothScroll&&(c=i.duSmoothScroll),c&&n(function(){var n=new o(c,l,u,-(i.offset?parseInt(i.offset,10):t));e.addSpy(n),l.$on(\"$locationChangeSuccess\",n.flushTargetCache.bind(n));var a=r.$on(\"$stateChangeSuccess\",n.flushTargetCache.bind(n));l.$on(\"$destroy\",function(){e.removeSpy(n),a()})},0,!1)}}}]);\n//# sourceMappingURL=angular-scroll.min.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular-scroll/angular-scroll.min.js\n ** module id = 26\n ** module chunks = 0\n **/","(function(factory) {\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    window.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define('hljs', [], function() {\n        return window.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index == 0;\n  }\n\n  function isNotHighlighted(language) {\n    return /no-?highlight|plain|text/.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length,\n        classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names and\n    match = /\\blang(?:uage)?-([\\w-]+)\\b/.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n    for(i = 0, length = classes.length; i < length; i++) {\n      if(getLanguage(classes[i]) || isNotHighlighted(classes[i])) {\n        return classes[i];\n      }\n    }\n\n  }\n\n  function inherit(parent, obj) {\n    var result = {}, key;\n    for (key in parent)\n      result[key] = parent[key];\n    if (obj)\n      for (key in obj)\n        result[key] = obj[key];\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType == 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType == 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset != highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event == 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';}\n      result += '<' + tag(node) + Array.prototype.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event == 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substr(processed, stream[0].offset - processed));\n      processed = stream[0].offset;\n      if (stream == original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream == original && stream.length && stream[0].offset == processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event == 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords == 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          Object.keys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\b\\w+\\b/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance === undefined)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      var expanded_contains = [];\n      mode.contains.forEach(function(c) {\n        if (c.variants) {\n          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});\n        } else {\n          expanded_contains.push(c == 'self' ? mode : c);\n        }\n      });\n      mode.contains = expanded_contains;\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      for (var i = 0; i < mode.contains.length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : '</span>';\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      if (!top.keywords)\n        return escape(mode_buffer);\n      var result = '';\n      var last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      var match = top.lexemesRe.exec(mode_buffer);\n      while (match) {\n        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n        var keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage == 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      return top.subLanguage !== undefined ? processSubLanguage() : processKeywords();\n    }\n\n    function startNewMode(mode, lexeme) {\n      var markup = mode.className? buildSpan(mode.className, '', true): '';\n      if (mode.returnBegin) {\n        result += markup;\n        mode_buffer = '';\n      } else if (mode.excludeBegin) {\n        result += escape(lexeme) + markup;\n        mode_buffer = '';\n      } else {\n        result += markup;\n        mode_buffer = lexeme;\n      }\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n      if (lexeme === undefined) {\n        result += processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        result += processBuffer();\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        result += processBuffer();\n        do {\n          if (top.className) {\n            result += '</span>';\n          }\n          relevance += top.relevance;\n          top = top.parent;\n        } while (top != end_mode.parent);\n        if (origin.excludeEnd) {\n          result += escape(lexeme);\n        }\n        mode_buffer = '';\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current != language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substr(index, match.index - index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += '</span>';\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message.indexOf('Illegal') != -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.forEach(function(name) {\n      if (!getLanguage(name)) {\n        return;\n      }\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    if (options.tabReplace) {\n      value = value.replace(/^((<[^>]+>|\\t)+)/gm, function(match, p1 /*..., offset, s*/) {\n        return p1.replace(/\\t/g, options.tabReplace);\n      });\n    }\n    if (options.useBR) {\n      value = value.replace(/\\n/g, '<br>');\n    }\n    return value;\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var language = blockLanguage(block);\n    if (isNotHighlighted(language))\n        return;\n\n    var node;\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    var text = node.textContent;\n    var result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    var originalStream = nodeStream(node);\n    if (originalStream.length) {\n      var resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    Array.prototype.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  var languages = {};\n  var aliases = {};\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  function getLanguage(name) {\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: \"(?:TODO|FIXME|NOTE|BUG|XXX):\",\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\nhljs.registerLanguage('1c', function(hljs){\n  var IDENT_RE_RU = '[a-zA-Zа-яА-Я][a-zA-Z0-9_а-яА-Я]*';\n  var OneS_KEYWORDS = 'возврат дата для если и или иначе иначеесли исключение конецесли ' +\n    'конецпопытки конецпроцедуры конецфункции конеццикла константа не перейти перем ' +\n    'перечисление по пока попытка прервать продолжить процедура строка тогда фс функция цикл ' +\n    'число экспорт';\n  var OneS_BUILT_IN = 'ansitooem oemtoansi ввестивидсубконто ввестидату ввестизначение ' +\n    'ввестиперечисление ввестипериод ввестиплансчетов ввестистроку ввестичисло вопрос ' +\n    'восстановитьзначение врег выбранныйплансчетов вызватьисключение датагод датамесяц ' +\n    'датачисло добавитьмесяц завершитьработусистемы заголовоксистемы записьжурналарегистрации ' +\n    'запуститьприложение зафиксироватьтранзакцию значениевстроку значениевстрокувнутр ' +\n    'значениевфайл значениеизстроки значениеизстрокивнутр значениеизфайла имякомпьютера ' +\n    'имяпользователя каталогвременныхфайлов каталогиб каталогпользователя каталогпрограммы ' +\n    'кодсимв командасистемы конгода конецпериодаби конецрассчитанногопериодаби ' +\n    'конецстандартногоинтервала конквартала конмесяца коннедели лев лог лог10 макс ' +\n    'максимальноеколичествосубконто мин монопольныйрежим названиеинтерфейса названиенабораправ ' +\n    'назначитьвид назначитьсчет найти найтипомеченныенаудаление найтиссылки началопериодаби ' +\n    'началостандартногоинтервала начатьтранзакцию начгода начквартала начмесяца начнедели ' +\n    'номерднягода номерднянедели номернеделигода нрег обработкаожидания окр описаниеошибки ' +\n    'основнойжурналрасчетов основнойплансчетов основнойязык открытьформу открытьформумодально ' +\n    'отменитьтранзакцию очиститьокносообщений периодстр полноеимяпользователя получитьвремята ' +\n    'получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта ' +\n    'получитьпустоезначение получитьта прав праводоступа предупреждение префиксавтонумерации ' +\n    'пустаястрока пустоезначение рабочаядаттьпустоезначение рабочаядата разделительстраниц ' +\n    'разделительстрок разм разобратьпозициюдокумента рассчитатьрегистрына ' +\n    'рассчитатьрегистрыпо сигнал симв символтабуляции создатьобъект сокрл сокрлп сокрп ' +\n    'сообщить состояние сохранитьзначение сред статусвозврата стрдлина стрзаменить ' +\n    'стрколичествострок стрполучитьстроку  стрчисловхождений сформироватьпозициюдокумента ' +\n    'счетпокоду текущаядата текущеевремя типзначения типзначениястр удалитьобъекты ' +\n    'установитьтана установитьтапо фиксшаблон формат цел шаблон';\n  var DQUOTE =  {className: 'dquote',  begin: '\"\"'};\n  var STR_START = {\n      className: 'string',\n      begin: '\"', end: '\"|$',\n      contains: [DQUOTE]\n    };\n  var STR_CONT = {\n    className: 'string',\n    begin: '\\\\|', end: '\"|$',\n    contains: [DQUOTE]\n  };\n\n  return {\n    case_insensitive: true,\n    lexemes: IDENT_RE_RU,\n    keywords: {keyword: OneS_KEYWORDS, built_in: OneS_BUILT_IN},\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      STR_START, STR_CONT,\n      {\n        className: 'function',\n        begin: '(процедура|функция)', end: '$',\n        lexemes: IDENT_RE_RU,\n        keywords: 'процедура функция',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE_RU}),\n          {\n            className: 'tail',\n            endsWithParent: true,\n            contains: [\n              {\n                className: 'params',\n                begin: '\\\\(', end: '\\\\)',\n                lexemes: IDENT_RE_RU,\n                keywords: 'знач',\n                contains: [STR_START, STR_CONT]\n              },\n              {\n                className: 'export',\n                begin: 'экспорт', endsWithParent: true,\n                lexemes: IDENT_RE_RU,\n                keywords: 'экспорт',\n                contains: [hljs.C_LINE_COMMENT_MODE]\n              }\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE\n        ]\n      },\n      {className: 'preprocessor', begin: '#', end: '$'},\n      {className: 'date', begin: '\\'\\\\d{2}\\\\.\\\\d{2}\\\\.(\\\\d{2}|\\\\d{4})\\''}\n    ]\n  };\n});\n\nhljs.registerLanguage('actionscript', function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: '[.]{3}', end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    aliases: ['as'],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'package',\n        beginKeywords: 'package', end: '{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'preprocessor',\n        beginKeywords: 'import include', end: ';'\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          {\n            className: 'type',\n            begin: ':',\n            end: IDENT_FUNC_RETURN_TYPE_RE,\n            relevance: 10\n          }\n        ]\n      }\n    ],\n    illegal: /#/\n  };\n});\n\nhljs.registerLanguage('apache', function(hljs) {\n  var NUMBER = {className: 'number', begin: '[\\\\$%]\\\\d+'};\n  return {\n    aliases: ['apacheconf'],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {className: 'tag', begin: '</?', end: '>'},\n      {\n        className: 'keyword',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords aren’t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          common:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: {\n            literal: 'on off all'\n          },\n          contains: [\n            {\n              className: 'sqbracket',\n              begin: '\\\\s\\\\[', end: '\\\\]$'\n            },\n            {\n              className: 'cbracket',\n              begin: '[\\\\$%]\\\\{', end: '\\\\}',\n              contains: ['self', NUMBER]\n            },\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n});\n\nhljs.registerLanguage('applescript', function(hljs) {\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: ''});\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', hljs.C_NUMBER_MODE, STRING]\n  };\n  var COMMENT_MODE_1 = hljs.COMMENT('--', '$');\n  var COMMENT_MODE_2 = hljs.COMMENT(\n    '\\\\(\\\\*',\n    '\\\\*\\\\)',\n    {\n      contains: ['self', COMMENT_MODE_1] //allow nesting\n    }\n  );\n  var COMMENTS = [\n    COMMENT_MODE_1,\n    COMMENT_MODE_2,\n    hljs.HASH_COMMENT_MODE\n  ];\n\n  return {\n    aliases: ['osascript'],\n    keywords: {\n      keyword:\n        'about above after against and around as at back before beginning ' +\n        'behind below beneath beside between but by considering ' +\n        'contain contains continue copy div does eighth else end equal ' +\n        'equals error every exit fifth first for fourth from front ' +\n        'get given global if ignoring in into is it its last local me ' +\n        'middle mod my ninth not of on onto or over prop property put ref ' +\n        'reference repeat returning script second set seventh since ' +\n        'sixth some tell tenth that the|0 then third through thru ' +\n        'timeout times to transaction try until where while whose with ' +\n        'without',\n      constant:\n        'AppleScript false linefeed return pi quote result space tab true',\n      type:\n        'alias application boolean class constant date file integer list ' +\n        'number real record string text',\n      command:\n        'activate beep count delay launch log offset read round ' +\n        'run say summarize write',\n      property:\n        'character characters contents day frontmost id item length ' +\n        'month name paragraph paragraphs rest reverse running time version ' +\n        'weekday word words year'\n    },\n    contains: [\n      STRING,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'type',\n        begin: '\\\\bPOSIX file\\\\b'\n      },\n      {\n        className: 'command',\n        begin:\n          '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +\n          'mount volume|path to|(close|open for) access|(get|set) eof|' +\n          'current date|do shell script|get volume settings|random number|' +\n          'set volume|system attribute|system info|time to GMT|' +\n          '(load|run|store) script|scripting components|' +\n          'ASCII (character|number)|localized string|' +\n          'choose (application|color|file|file name|' +\n          'folder|from list|remote application|URL)|' +\n          'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n      },\n      {\n        className: 'constant',\n        begin:\n          '\\\\b(text item delimiters|current application|missing value)\\\\b'\n      },\n      {\n        className: 'keyword',\n        begin:\n          '\\\\b(apart from|aside from|instead of|out of|greater than|' +\n          \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" +\n          '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +\n          'contained by|comes (before|after)|a (ref|reference))\\\\b'\n      },\n      {\n        className: 'property',\n        begin:\n          '\\\\b(POSIX path|(date|time) string|quoted form)\\\\b'\n      },\n      {\n        className: 'function_start',\n        beginKeywords: 'on',\n        illegal: '[${=;\\\\n]',\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      }\n    ].concat(COMMENTS),\n    illegal: '//|->|=>|\\\\[\\\\['\n  };\n});\n\nhljs.registerLanguage('armasm', function(hljs) {\n    //local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n  return {\n    case_insensitive: true,\n    aliases: ['arm'],\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      literal:\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 '+ //standard registers\n        'pc lr sp ip sl sb fp '+ //typical regs plus backward compatibility\n        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 '+ //more regs and fp\n        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 '+ //coprocessor regs\n        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 '+ //more coproc\n        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 '+ //advanced SIMD NEON regs\n\n        //program status registers\n        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf '+\n        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf '+\n\n        //NEON and VFP registers\n        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 '+\n        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 '+\n        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 '+\n        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ',\n    preprocessor:\n        //GNU preprocs\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg '+\n        //ARM directives\n        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\n    built_in:\n        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @ '\n    },\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\b('+     //mnemonics\n            'adc|'+\n            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|'+\n            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|'+\n            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|'+\n            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|'+\n            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|'+\n            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|'+\n            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|'+\n            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|'+\n            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|'+\n            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|'+\n            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|'+\n            'wfe|wfi|yield'+\n        ')'+\n        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?'+ //condition codes\n        '[sptrx]?' ,                                             //legal postfixes\n        end: '\\\\s'\n      },\n      hljs.COMMENT('[;@]', '$', {relevance: 0}),\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        relevance: 0\n      },\n      {\n        className: 'title',\n        begin: '\\\\|', end: '\\\\|',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        variants: [\n            {begin: '[#$=]?0x[0-9a-f]+'}, //hex\n            {begin: '[#$=]?0b[01]+'},     //bin\n            {begin: '[#$=]\\\\d+'},        //literal\n            {begin: '\\\\b\\\\d+'}           //bare number\n        ],\n        relevance: 0\n      },\n      {\n        className: 'label',\n        variants: [\n            {begin: '^[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+'}, //ARM syntax\n            {begin: '^\\\\s*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'}, //GNU ARM syntax\n            {begin: '[=#]\\\\w+' }  //label reference\n        ],\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('xml', function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var PHP = {\n    begin: /<\\?(php)?(?!\\w)/, end: /\\?>/,\n    subLanguage: 'php'\n  };\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      PHP,\n      {\n        className: 'attribute',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '=',\n        relevance: 0,\n        contains: [\n          {\n            className: 'value',\n            contains: [PHP],\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\\/>]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xsl', 'plist'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'doctype',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        className: 'cdata',\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {title: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: 'css'\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {title: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars']\n        }\n      },\n      PHP,\n      {\n        className: 'pi',\n        begin: /<\\?\\w+/, end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'title', begin: /[^ \\/><\\n\\t]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('asciidoc', function(hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'header',\n        begin: '^(={1,5}) .+?( \\\\1)?$',\n        relevance: 10\n      },\n      {\n        className: 'header',\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$',\n        relevance: 10\n      },\n      // document attributes\n      {\n        className: 'attribute',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'attribute',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'blockquote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'label',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'smartquote',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        className: 'horizontal_rule',\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            //className: 'macro',\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link_url',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'link_label',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('aspectj', function (hljs) {\n  var KEYWORDS =\n    'false synchronized int abstract float private char boolean static null if const ' +\n    'for true while long throw strictfp finally protected import native final return void ' +\n    'enum else extends implements break transient new catch instanceof byte super volatile case ' +\n    'assert short package default double public try this switch continue throws privileged ' +\n    'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +\n    'staticinitialization withincode target within execution getWithinTypeName handler ' +\n    'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents '+\n    'warning error soft precedence thisAspectInstance';\n  var SHORTKEYS = 'get set args call';\n  return {\n    keywords : KEYWORDS,\n    illegal : /<\\/|#/,\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className : 'aspect',\n        beginKeywords : 'aspect',\n        end : /[{;=]/,\n        excludeEnd : true,\n        illegal : /[:;\"\\[\\]]/,\n        contains : [\n          {\n            beginKeywords : 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin : /\\([^\\)]*/,\n            end : /[)]+/,\n            keywords : KEYWORDS + ' ' + SHORTKEYS,\n            excludeEnd : false\n          }\n        ]\n      },\n      {\n        className : 'class',\n        beginKeywords : 'class interface',\n        end : /[{;=]/,\n        excludeEnd : true,\n        relevance: 0,\n        keywords : 'class interface',\n        illegal : /[:\"\\[\\]]/,\n        contains : [\n          {beginKeywords : 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        // AspectJ Constructs\n        beginKeywords : 'pointcut after before around throwing returning',\n        end : /[)]/,\n        excludeEnd : false,\n        illegal : /[\"\\[\\]]/,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin : true,\n            contains : [hljs.UNDERSCORE_TITLE_MODE]\n          }\n        ]\n      },\n      {\n        begin : /[:]/,\n        returnBegin : true,\n        end : /[{;]/,\n        relevance: 0,\n        excludeEnd : false,\n        keywords : KEYWORDS,\n        illegal : /[\"\\[\\]]/,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            keywords : KEYWORDS + ' ' + SHORTKEYS\n          },\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      {\n        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\n        beginKeywords : 'new throw',\n        relevance : 0\n      },\n      {\n        // the function class is a bit different for AspectJ compared to the Java language\n        className : 'function',\n        begin : /\\w+ +\\w+(\\.)?\\w+\\s*\\([^\\)]*\\)\\s*((throws)[\\w\\s,]+)?[\\{;]/,\n        returnBegin : true,\n        end : /[{;=]/,\n        keywords : KEYWORDS,\n        excludeEnd : true,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin : true,\n            relevance: 0,\n            contains : [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className : 'params',\n            begin : /\\(/, end : /\\)/,\n            relevance: 0,\n            keywords : KEYWORDS,\n            contains : [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        // annotation is also used in this language\n        className : 'annotation',\n        begin : '@[A-Za-z]+'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('autohotkey', function(hljs) {\n  var BACKTICK_ESCAPE = {\n    className: 'escape',\n    begin: '`[\\\\s\\\\S]'\n  };\n  var COMMENTS = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var BUILT_IN = [\n    {\n      className: 'built_in',\n      begin: 'A_[a-zA-Z0-9]+'\n    },\n    {\n      className: 'built_in',\n      beginKeywords: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n    }\n  ];\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword: 'Break Continue Else Gosub If Loop Return While',\n      literal: 'A true false NOT AND OR'\n    },\n    contains: BUILT_IN.concat([\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [BACKTICK_ESCAPE]}),\n      COMMENTS,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'var_expand', // FIXME\n        begin: '%', end: '%',\n        illegal: '\\\\n',\n        contains: [BACKTICK_ESCAPE]\n      },\n      {\n        className: 'label',\n        contains: [BACKTICK_ESCAPE],\n        variants: [\n          {begin: '^[^\\\\n\";]+::(?!=)'},\n          {begin: '^[^\\\\n\";]+:(?!=)', relevance: 0} // zero relevance as it catches a lot of things\n                                                    // followed by a single ':' in many languages\n        ]\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,',\n        relevance: 10\n      }\n    ])\n  }\n});\n\nhljs.registerLanguage('autoit', function(hljs) {\n    var KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +\n        'Default Dim Do Else ElseIf EndFunc EndIf EndSelect ' +\n        'EndSwitch EndWith Enum Exit ExitLoop For Func ' +\n        'Global If In Local Next ReDim Return Select Static ' +\n        'Step Switch Then To Until Volatile WEnd While With',\n\n        LITERAL = 'True False And Null Not Or',\n\n        BUILT_IN = 'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin ' +\n        'Assign ATan AutoItSetOption AutoItWinGetTitle ' +\n        'AutoItWinSetTitle Beep Binary BinaryLen BinaryMid ' +\n        'BinaryToString BitAND BitNOT BitOR BitRotate BitShift ' +\n        'BitXOR BlockInput Break Call CDTray Ceiling Chr ' +\n        'ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ' +\n        'ConsoleWriteError ControlClick ControlCommand ' +\n        'ControlDisable ControlEnable ControlFocus ControlGetFocus ' +\n        'ControlGetHandle ControlGetPos ControlGetText ControlHide ' +\n        'ControlListView ControlMove ControlSend ControlSetText ' +\n        'ControlShow ControlTreeView Cos Dec DirCopy DirCreate ' +\n        'DirGetSize DirMove DirRemove DllCall DllCallAddress ' +\n        'DllCallbackFree DllCallbackGetPtr DllCallbackRegister ' +\n        'DllClose DllOpen DllStructCreate DllStructGetData ' +\n        'DllStructGetPtr DllStructGetSize DllStructSetData ' +\n        'DriveGetDrive DriveGetFileSystem DriveGetLabel ' +\n        'DriveGetSerial DriveGetType DriveMapAdd DriveMapDel ' +\n        'DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal ' +\n        'DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp ' +\n        'FileChangeDir FileClose FileCopy FileCreateNTFSLink ' +\n        'FileCreateShortcut FileDelete FileExists FileFindFirstFile ' +\n        'FileFindNextFile FileFlush FileGetAttrib FileGetEncoding ' +\n        'FileGetLongName FileGetPos FileGetShortcut FileGetShortName ' +\n        'FileGetSize FileGetTime FileGetVersion FileInstall ' +\n        'FileMove FileOpen FileOpenDialog FileRead FileReadLine ' +\n        'FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog ' +\n        'FileSelectFolder FileSetAttrib FileSetEnd FileSetPos ' +\n        'FileSetTime FileWrite FileWriteLine Floor FtpSetProxy ' +\n        'FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton ' +\n        'GUICtrlCreateCheckbox GUICtrlCreateCombo ' +\n        'GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy ' +\n        'GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup ' +\n        'GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel ' +\n        'GUICtrlCreateList GUICtrlCreateListView ' +\n        'GUICtrlCreateListViewItem GUICtrlCreateMenu ' +\n        'GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj ' +\n        'GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio ' +\n        'GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem ' +\n        'GUICtrlCreateTreeView GUICtrlCreateTreeViewItem ' +\n        'GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle ' +\n        'GUICtrlGetState GUICtrlRead GUICtrlRecvMsg ' +\n        'GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy ' +\n        'GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor ' +\n        'GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor ' +\n        'GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage ' +\n        'GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos ' +\n        'GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle ' +\n        'GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg ' +\n        'GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor ' +\n        'GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon ' +\n        'GUISetOnEvent GUISetState GUISetStyle GUIStartGroup ' +\n        'GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent ' +\n        'HWnd InetClose InetGet InetGetInfo InetGetSize InetRead ' +\n        'IniDelete IniRead IniReadSection IniReadSectionNames ' +\n        'IniRenameSection IniWrite IniWriteSection InputBox Int ' +\n        'IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct ' +\n        'IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj ' +\n        'IsPtr IsString Log MemGetStats Mod MouseClick ' +\n        'MouseClickDrag MouseDown MouseGetCursor MouseGetPos ' +\n        'MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ' +\n        'ObjCreateInterface ObjEvent ObjGet ObjName ' +\n        'OnAutoItExitRegister OnAutoItExitUnRegister Opt Ping ' +\n        'PixelChecksum PixelGetColor PixelSearch ProcessClose ' +\n        'ProcessExists ProcessGetStats ProcessList ' +\n        'ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ' +\n        'ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey ' +\n        'RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait ' +\n        'RunWait Send SendKeepActive SetError SetExtended ' +\n        'ShellExecute ShellExecuteWait Shutdown Sin Sleep ' +\n        'SoundPlay SoundSetWaveVolume SplashImageOn SplashOff ' +\n        'SplashTextOn Sqrt SRandom StatusbarGetText StderrRead ' +\n        'StdinWrite StdioClose StdoutRead String StringAddCR ' +\n        'StringCompare StringFormat StringFromASCIIArray StringInStr ' +\n        'StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit ' +\n        'StringIsFloat StringIsInt StringIsLower StringIsSpace ' +\n        'StringIsUpper StringIsXDigit StringLeft StringLen ' +\n        'StringLower StringMid StringRegExp StringRegExpReplace ' +\n        'StringReplace StringReverse StringRight StringSplit ' +\n        'StringStripCR StringStripWS StringToASCIIArray ' +\n        'StringToBinary StringTrimLeft StringTrimRight StringUpper ' +\n        'Tan TCPAccept TCPCloseSocket TCPConnect TCPListen ' +\n        'TCPNameToIP TCPRecv TCPSend TCPShutdown TCPStartup ' +\n        'TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu ' +\n        'TrayGetMsg TrayItemDelete TrayItemGetHandle ' +\n        'TrayItemGetState TrayItemGetText TrayItemSetOnEvent ' +\n        'TrayItemSetState TrayItemSetText TraySetClick TraySetIcon ' +\n        'TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip ' +\n        'TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv ' +\n        'UDPSend UDPShutdown UDPStartup VarGetType WinActivate ' +\n        'WinActive WinClose WinExists WinFlash WinGetCaretPos ' +\n        'WinGetClassList WinGetClientSize WinGetHandle WinGetPos ' +\n        'WinGetProcess WinGetState WinGetText WinGetTitle WinKill ' +\n        'WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo ' +\n        'WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans ' +\n        'WinWait WinWaitActive WinWaitClose WinWaitNotActive ' +\n        'Array1DToHistogram ArrayAdd ArrayBinarySearch ' +\n        'ArrayColDelete ArrayColInsert ArrayCombinations ' +\n        'ArrayConcatenate ArrayDelete ArrayDisplay ArrayExtract ' +\n        'ArrayFindAll ArrayInsert ArrayMax ArrayMaxIndex ArrayMin ' +\n        'ArrayMinIndex ArrayPermute ArrayPop ArrayPush ' +\n        'ArrayReverse ArraySearch ArrayShuffle ArraySort ArraySwap ' +\n        'ArrayToClip ArrayToString ArrayTranspose ArrayTrim ' +\n        'ArrayUnique Assert ChooseColor ChooseFont ' +\n        'ClipBoard_ChangeChain ClipBoard_Close ClipBoard_CountFormats ' +\n        'ClipBoard_Empty ClipBoard_EnumFormats ClipBoard_FormatStr ' +\n        'ClipBoard_GetData ClipBoard_GetDataEx ClipBoard_GetFormatName ' +\n        'ClipBoard_GetOpenWindow ClipBoard_GetOwner ' +\n        'ClipBoard_GetPriorityFormat ClipBoard_GetSequenceNumber ' +\n        'ClipBoard_GetViewer ClipBoard_IsFormatAvailable ' +\n        'ClipBoard_Open ClipBoard_RegisterFormat ClipBoard_SetData ' +\n        'ClipBoard_SetDataEx ClipBoard_SetViewer ClipPutFile ' +\n        'ColorConvertHSLtoRGB ColorConvertRGBtoHSL ColorGetBlue ' +\n        'ColorGetCOLORREF ColorGetGreen ColorGetRed ColorGetRGB ' +\n        'ColorSetCOLORREF ColorSetRGB Crypt_DecryptData ' +\n        'Crypt_DecryptFile Crypt_DeriveKey Crypt_DestroyKey ' +\n        'Crypt_EncryptData Crypt_EncryptFile Crypt_GenRandom ' +\n        'Crypt_HashData Crypt_HashFile Crypt_Shutdown Crypt_Startup ' +\n        'DateAdd DateDayOfWeek DateDaysInMonth DateDiff ' +\n        'DateIsLeapYear DateIsValid DateTimeFormat DateTimeSplit ' +\n        'DateToDayOfWeek DateToDayOfWeekISO DateToDayValue ' +\n        'DateToMonth Date_Time_CompareFileTime ' +\n        'Date_Time_DOSDateTimeToArray Date_Time_DOSDateTimeToFileTime ' +\n        'Date_Time_DOSDateTimeToStr Date_Time_DOSDateToArray ' +\n        'Date_Time_DOSDateToStr Date_Time_DOSTimeToArray ' +\n        'Date_Time_DOSTimeToStr Date_Time_EncodeFileTime ' +\n        'Date_Time_EncodeSystemTime Date_Time_FileTimeToArray ' +\n        'Date_Time_FileTimeToDOSDateTime ' +\n        'Date_Time_FileTimeToLocalFileTime Date_Time_FileTimeToStr ' +\n        'Date_Time_FileTimeToSystemTime Date_Time_GetFileTime ' +\n        'Date_Time_GetLocalTime Date_Time_GetSystemTime ' +\n        'Date_Time_GetSystemTimeAdjustment ' +\n        'Date_Time_GetSystemTimeAsFileTime Date_Time_GetSystemTimes ' +\n        'Date_Time_GetTickCount Date_Time_GetTimeZoneInformation ' +\n        'Date_Time_LocalFileTimeToFileTime Date_Time_SetFileTime ' +\n        'Date_Time_SetLocalTime Date_Time_SetSystemTime ' +\n        'Date_Time_SetSystemTimeAdjustment ' +\n        'Date_Time_SetTimeZoneInformation Date_Time_SystemTimeToArray ' +\n        'Date_Time_SystemTimeToDateStr Date_Time_SystemTimeToDateTimeStr ' +\n        'Date_Time_SystemTimeToFileTime Date_Time_SystemTimeToTimeStr ' +\n        'Date_Time_SystemTimeToTzSpecificLocalTime ' +\n        'Date_Time_TzSpecificLocalTimeToSystemTime DayValueToDate ' +\n        'DebugBugReportEnv DebugCOMError DebugOut DebugReport ' +\n        'DebugReportEx DebugReportVar DebugSetup Degree ' +\n        'EventLog__Backup EventLog__Clear EventLog__Close ' +\n        'EventLog__Count EventLog__DeregisterSource EventLog__Full ' +\n        'EventLog__Notify EventLog__Oldest EventLog__Open ' +\n        'EventLog__OpenBackup EventLog__Read EventLog__RegisterSource ' +\n        'EventLog__Report Excel_BookAttach Excel_BookClose ' +\n        'Excel_BookList Excel_BookNew Excel_BookOpen ' +\n        'Excel_BookOpenText Excel_BookSave Excel_BookSaveAs ' +\n        'Excel_Close Excel_ColumnToLetter Excel_ColumnToNumber ' +\n        'Excel_ConvertFormula Excel_Export Excel_FilterGet ' +\n        'Excel_FilterSet Excel_Open Excel_PictureAdd Excel_Print ' +\n        'Excel_RangeCopyPaste Excel_RangeDelete Excel_RangeFind ' +\n        'Excel_RangeInsert Excel_RangeLinkAddRemove Excel_RangeRead ' +\n        'Excel_RangeReplace Excel_RangeSort Excel_RangeValidate ' +\n        'Excel_RangeWrite Excel_SheetAdd Excel_SheetCopyMove ' +\n        'Excel_SheetDelete Excel_SheetList FileCountLines FileCreate ' +\n        'FileListToArray FileListToArrayRec FilePrint ' +\n        'FileReadToArray FileWriteFromArray FileWriteLog ' +\n        'FileWriteToLine FTP_Close FTP_Command FTP_Connect ' +\n        'FTP_DecodeInternetStatus FTP_DirCreate FTP_DirDelete ' +\n        'FTP_DirGetCurrent FTP_DirPutContents FTP_DirSetCurrent ' +\n        'FTP_FileClose FTP_FileDelete FTP_FileGet FTP_FileGetSize ' +\n        'FTP_FileOpen FTP_FilePut FTP_FileRead FTP_FileRename ' +\n        'FTP_FileTimeLoHiToStr FTP_FindFileClose FTP_FindFileFirst ' +\n        'FTP_FindFileNext FTP_GetLastResponseInfo FTP_ListToArray ' +\n        'FTP_ListToArray2D FTP_ListToArrayEx FTP_Open ' +\n        'FTP_ProgressDownload FTP_ProgressUpload FTP_SetStatusCallback ' +\n        'GDIPlus_ArrowCapCreate GDIPlus_ArrowCapDispose ' +\n        'GDIPlus_ArrowCapGetFillState GDIPlus_ArrowCapGetHeight ' +\n        'GDIPlus_ArrowCapGetMiddleInset GDIPlus_ArrowCapGetWidth ' +\n        'GDIPlus_ArrowCapSetFillState GDIPlus_ArrowCapSetHeight ' +\n        'GDIPlus_ArrowCapSetMiddleInset GDIPlus_ArrowCapSetWidth ' +\n        'GDIPlus_BitmapApplyEffect GDIPlus_BitmapApplyEffectEx ' +\n        'GDIPlus_BitmapCloneArea GDIPlus_BitmapConvertFormat ' +\n        'GDIPlus_BitmapCreateApplyEffect ' +\n        'GDIPlus_BitmapCreateApplyEffectEx ' +\n        'GDIPlus_BitmapCreateDIBFromBitmap GDIPlus_BitmapCreateFromFile ' +\n        'GDIPlus_BitmapCreateFromGraphics ' +\n        'GDIPlus_BitmapCreateFromHBITMAP GDIPlus_BitmapCreateFromHICON ' +\n        'GDIPlus_BitmapCreateFromHICON32 GDIPlus_BitmapCreateFromMemory ' +\n        'GDIPlus_BitmapCreateFromResource GDIPlus_BitmapCreateFromScan0 ' +\n        'GDIPlus_BitmapCreateFromStream ' +\n        'GDIPlus_BitmapCreateHBITMAPFromBitmap GDIPlus_BitmapDispose ' +\n        'GDIPlus_BitmapGetHistogram GDIPlus_BitmapGetHistogramEx ' +\n        'GDIPlus_BitmapGetHistogramSize GDIPlus_BitmapGetPixel ' +\n        'GDIPlus_BitmapLockBits GDIPlus_BitmapSetPixel ' +\n        'GDIPlus_BitmapUnlockBits GDIPlus_BrushClone ' +\n        'GDIPlus_BrushCreateSolid GDIPlus_BrushDispose ' +\n        'GDIPlus_BrushGetSolidColor GDIPlus_BrushGetType ' +\n        'GDIPlus_BrushSetSolidColor GDIPlus_ColorMatrixCreate ' +\n        'GDIPlus_ColorMatrixCreateGrayScale ' +\n        'GDIPlus_ColorMatrixCreateNegative ' +\n        'GDIPlus_ColorMatrixCreateSaturation ' +\n        'GDIPlus_ColorMatrixCreateScale ' +\n        'GDIPlus_ColorMatrixCreateTranslate GDIPlus_CustomLineCapClone ' +\n        'GDIPlus_CustomLineCapCreate GDIPlus_CustomLineCapDispose ' +\n        'GDIPlus_CustomLineCapGetStrokeCaps ' +\n        'GDIPlus_CustomLineCapSetStrokeCaps GDIPlus_Decoders ' +\n        'GDIPlus_DecodersGetCount GDIPlus_DecodersGetSize ' +\n        'GDIPlus_DrawImageFX GDIPlus_DrawImageFXEx ' +\n        'GDIPlus_DrawImagePoints GDIPlus_EffectCreate ' +\n        'GDIPlus_EffectCreateBlur GDIPlus_EffectCreateBrightnessContrast ' +\n        'GDIPlus_EffectCreateColorBalance GDIPlus_EffectCreateColorCurve ' +\n        'GDIPlus_EffectCreateColorLUT GDIPlus_EffectCreateColorMatrix ' +\n        'GDIPlus_EffectCreateHueSaturationLightness ' +\n        'GDIPlus_EffectCreateLevels GDIPlus_EffectCreateRedEyeCorrection ' +\n        'GDIPlus_EffectCreateSharpen GDIPlus_EffectCreateTint ' +\n        'GDIPlus_EffectDispose GDIPlus_EffectGetParameters ' +\n        'GDIPlus_EffectSetParameters GDIPlus_Encoders ' +\n        'GDIPlus_EncodersGetCLSID GDIPlus_EncodersGetCount ' +\n        'GDIPlus_EncodersGetParamList GDIPlus_EncodersGetParamListSize ' +\n        'GDIPlus_EncodersGetSize GDIPlus_FontCreate ' +\n        'GDIPlus_FontDispose GDIPlus_FontFamilyCreate ' +\n        'GDIPlus_FontFamilyCreateFromCollection ' +\n        'GDIPlus_FontFamilyDispose GDIPlus_FontFamilyGetCellAscent ' +\n        'GDIPlus_FontFamilyGetCellDescent GDIPlus_FontFamilyGetEmHeight ' +\n        'GDIPlus_FontFamilyGetLineSpacing GDIPlus_FontGetHeight ' +\n        'GDIPlus_FontPrivateAddFont GDIPlus_FontPrivateAddMemoryFont ' +\n        'GDIPlus_FontPrivateCollectionDispose ' +\n        'GDIPlus_FontPrivateCreateCollection GDIPlus_GraphicsClear ' +\n        'GDIPlus_GraphicsCreateFromHDC GDIPlus_GraphicsCreateFromHWND ' +\n        'GDIPlus_GraphicsDispose GDIPlus_GraphicsDrawArc ' +\n        'GDIPlus_GraphicsDrawBezier GDIPlus_GraphicsDrawClosedCurve ' +\n        'GDIPlus_GraphicsDrawClosedCurve2 GDIPlus_GraphicsDrawCurve ' +\n        'GDIPlus_GraphicsDrawCurve2 GDIPlus_GraphicsDrawEllipse ' +\n        'GDIPlus_GraphicsDrawImage GDIPlus_GraphicsDrawImagePointsRect ' +\n        'GDIPlus_GraphicsDrawImageRect GDIPlus_GraphicsDrawImageRectRect ' +\n        'GDIPlus_GraphicsDrawLine GDIPlus_GraphicsDrawPath ' +\n        'GDIPlus_GraphicsDrawPie GDIPlus_GraphicsDrawPolygon ' +\n        'GDIPlus_GraphicsDrawRect GDIPlus_GraphicsDrawString ' +\n        'GDIPlus_GraphicsDrawStringEx GDIPlus_GraphicsFillClosedCurve ' +\n        'GDIPlus_GraphicsFillClosedCurve2 GDIPlus_GraphicsFillEllipse ' +\n        'GDIPlus_GraphicsFillPath GDIPlus_GraphicsFillPie ' +\n        'GDIPlus_GraphicsFillPolygon GDIPlus_GraphicsFillRect ' +\n        'GDIPlus_GraphicsFillRegion GDIPlus_GraphicsGetCompositingMode ' +\n        'GDIPlus_GraphicsGetCompositingQuality GDIPlus_GraphicsGetDC ' +\n        'GDIPlus_GraphicsGetInterpolationMode ' +\n        'GDIPlus_GraphicsGetSmoothingMode GDIPlus_GraphicsGetTransform ' +\n        'GDIPlus_GraphicsMeasureCharacterRanges ' +\n        'GDIPlus_GraphicsMeasureString GDIPlus_GraphicsReleaseDC ' +\n        'GDIPlus_GraphicsResetClip GDIPlus_GraphicsResetTransform ' +\n        'GDIPlus_GraphicsRestore GDIPlus_GraphicsRotateTransform ' +\n        'GDIPlus_GraphicsSave GDIPlus_GraphicsScaleTransform ' +\n        'GDIPlus_GraphicsSetClipPath GDIPlus_GraphicsSetClipRect ' +\n        'GDIPlus_GraphicsSetClipRegion ' +\n        'GDIPlus_GraphicsSetCompositingMode ' +\n        'GDIPlus_GraphicsSetCompositingQuality ' +\n        'GDIPlus_GraphicsSetInterpolationMode ' +\n        'GDIPlus_GraphicsSetPixelOffsetMode ' +\n        'GDIPlus_GraphicsSetSmoothingMode ' +\n        'GDIPlus_GraphicsSetTextRenderingHint ' +\n        'GDIPlus_GraphicsSetTransform GDIPlus_GraphicsTransformPoints ' +\n        'GDIPlus_GraphicsTranslateTransform GDIPlus_HatchBrushCreate ' +\n        'GDIPlus_HICONCreateFromBitmap GDIPlus_ImageAttributesCreate ' +\n        'GDIPlus_ImageAttributesDispose ' +\n        'GDIPlus_ImageAttributesSetColorKeys ' +\n        'GDIPlus_ImageAttributesSetColorMatrix GDIPlus_ImageDispose ' +\n        'GDIPlus_ImageGetDimension GDIPlus_ImageGetFlags ' +\n        'GDIPlus_ImageGetGraphicsContext GDIPlus_ImageGetHeight ' +\n        'GDIPlus_ImageGetHorizontalResolution ' +\n        'GDIPlus_ImageGetPixelFormat GDIPlus_ImageGetRawFormat ' +\n        'GDIPlus_ImageGetThumbnail GDIPlus_ImageGetType ' +\n        'GDIPlus_ImageGetVerticalResolution GDIPlus_ImageGetWidth ' +\n        'GDIPlus_ImageLoadFromFile GDIPlus_ImageLoadFromStream ' +\n        'GDIPlus_ImageResize GDIPlus_ImageRotateFlip ' +\n        'GDIPlus_ImageSaveToFile GDIPlus_ImageSaveToFileEx ' +\n        'GDIPlus_ImageSaveToStream GDIPlus_ImageScale ' +\n        'GDIPlus_LineBrushCreate GDIPlus_LineBrushCreateFromRect ' +\n        'GDIPlus_LineBrushCreateFromRectWithAngle ' +\n        'GDIPlus_LineBrushGetColors GDIPlus_LineBrushGetRect ' +\n        'GDIPlus_LineBrushMultiplyTransform ' +\n        'GDIPlus_LineBrushResetTransform GDIPlus_LineBrushSetBlend ' +\n        'GDIPlus_LineBrushSetColors GDIPlus_LineBrushSetGammaCorrection ' +\n        'GDIPlus_LineBrushSetLinearBlend GDIPlus_LineBrushSetPresetBlend ' +\n        'GDIPlus_LineBrushSetSigmaBlend GDIPlus_LineBrushSetTransform ' +\n        'GDIPlus_MatrixClone GDIPlus_MatrixCreate ' +\n        'GDIPlus_MatrixDispose GDIPlus_MatrixGetElements ' +\n        'GDIPlus_MatrixInvert GDIPlus_MatrixMultiply ' +\n        'GDIPlus_MatrixRotate GDIPlus_MatrixScale ' +\n        'GDIPlus_MatrixSetElements GDIPlus_MatrixShear ' +\n        'GDIPlus_MatrixTransformPoints GDIPlus_MatrixTranslate ' +\n        'GDIPlus_PaletteInitialize GDIPlus_ParamAdd GDIPlus_ParamInit ' +\n        'GDIPlus_ParamSize GDIPlus_PathAddArc GDIPlus_PathAddBezier ' +\n        'GDIPlus_PathAddClosedCurve GDIPlus_PathAddClosedCurve2 ' +\n        'GDIPlus_PathAddCurve GDIPlus_PathAddCurve2 ' +\n        'GDIPlus_PathAddCurve3 GDIPlus_PathAddEllipse ' +\n        'GDIPlus_PathAddLine GDIPlus_PathAddLine2 GDIPlus_PathAddPath ' +\n        'GDIPlus_PathAddPie GDIPlus_PathAddPolygon ' +\n        'GDIPlus_PathAddRectangle GDIPlus_PathAddString ' +\n        'GDIPlus_PathBrushCreate GDIPlus_PathBrushCreateFromPath ' +\n        'GDIPlus_PathBrushGetCenterPoint GDIPlus_PathBrushGetFocusScales ' +\n        'GDIPlus_PathBrushGetPointCount GDIPlus_PathBrushGetRect ' +\n        'GDIPlus_PathBrushGetWrapMode GDIPlus_PathBrushMultiplyTransform ' +\n        'GDIPlus_PathBrushResetTransform GDIPlus_PathBrushSetBlend ' +\n        'GDIPlus_PathBrushSetCenterColor GDIPlus_PathBrushSetCenterPoint ' +\n        'GDIPlus_PathBrushSetFocusScales ' +\n        'GDIPlus_PathBrushSetGammaCorrection ' +\n        'GDIPlus_PathBrushSetLinearBlend GDIPlus_PathBrushSetPresetBlend ' +\n        'GDIPlus_PathBrushSetSigmaBlend ' +\n        'GDIPlus_PathBrushSetSurroundColor ' +\n        'GDIPlus_PathBrushSetSurroundColorsWithCount ' +\n        'GDIPlus_PathBrushSetTransform GDIPlus_PathBrushSetWrapMode ' +\n        'GDIPlus_PathClone GDIPlus_PathCloseFigure GDIPlus_PathCreate ' +\n        'GDIPlus_PathCreate2 GDIPlus_PathDispose GDIPlus_PathFlatten ' +\n        'GDIPlus_PathGetData GDIPlus_PathGetFillMode ' +\n        'GDIPlus_PathGetLastPoint GDIPlus_PathGetPointCount ' +\n        'GDIPlus_PathGetPoints GDIPlus_PathGetWorldBounds ' +\n        'GDIPlus_PathIsOutlineVisiblePoint GDIPlus_PathIsVisiblePoint ' +\n        'GDIPlus_PathIterCreate GDIPlus_PathIterDispose ' +\n        'GDIPlus_PathIterGetSubpathCount GDIPlus_PathIterNextMarkerPath ' +\n        'GDIPlus_PathIterNextSubpathPath GDIPlus_PathIterRewind ' +\n        'GDIPlus_PathReset GDIPlus_PathReverse GDIPlus_PathSetFillMode ' +\n        'GDIPlus_PathSetMarker GDIPlus_PathStartFigure ' +\n        'GDIPlus_PathTransform GDIPlus_PathWarp GDIPlus_PathWiden ' +\n        'GDIPlus_PathWindingModeOutline GDIPlus_PenCreate ' +\n        'GDIPlus_PenCreate2 GDIPlus_PenDispose GDIPlus_PenGetAlignment ' +\n        'GDIPlus_PenGetColor GDIPlus_PenGetCustomEndCap ' +\n        'GDIPlus_PenGetDashCap GDIPlus_PenGetDashStyle ' +\n        'GDIPlus_PenGetEndCap GDIPlus_PenGetMiterLimit ' +\n        'GDIPlus_PenGetWidth GDIPlus_PenSetAlignment ' +\n        'GDIPlus_PenSetColor GDIPlus_PenSetCustomEndCap ' +\n        'GDIPlus_PenSetDashCap GDIPlus_PenSetDashStyle ' +\n        'GDIPlus_PenSetEndCap GDIPlus_PenSetLineCap ' +\n        'GDIPlus_PenSetLineJoin GDIPlus_PenSetMiterLimit ' +\n        'GDIPlus_PenSetStartCap GDIPlus_PenSetWidth ' +\n        'GDIPlus_RectFCreate GDIPlus_RegionClone ' +\n        'GDIPlus_RegionCombinePath GDIPlus_RegionCombineRect ' +\n        'GDIPlus_RegionCombineRegion GDIPlus_RegionCreate ' +\n        'GDIPlus_RegionCreateFromPath GDIPlus_RegionCreateFromRect ' +\n        'GDIPlus_RegionDispose GDIPlus_RegionGetBounds ' +\n        'GDIPlus_RegionGetHRgn GDIPlus_RegionTransform ' +\n        'GDIPlus_RegionTranslate GDIPlus_Shutdown GDIPlus_Startup ' +\n        'GDIPlus_StringFormatCreate GDIPlus_StringFormatDispose ' +\n        'GDIPlus_StringFormatGetMeasurableCharacterRangeCount ' +\n        'GDIPlus_StringFormatSetAlign GDIPlus_StringFormatSetLineAlign ' +\n        'GDIPlus_StringFormatSetMeasurableCharacterRanges ' +\n        'GDIPlus_TextureCreate GDIPlus_TextureCreate2 ' +\n        'GDIPlus_TextureCreateIA GetIP GUICtrlAVI_Close ' +\n        'GUICtrlAVI_Create GUICtrlAVI_Destroy GUICtrlAVI_IsPlaying ' +\n        'GUICtrlAVI_Open GUICtrlAVI_OpenEx GUICtrlAVI_Play ' +\n        'GUICtrlAVI_Seek GUICtrlAVI_Show GUICtrlAVI_Stop ' +\n        'GUICtrlButton_Click GUICtrlButton_Create ' +\n        'GUICtrlButton_Destroy GUICtrlButton_Enable ' +\n        'GUICtrlButton_GetCheck GUICtrlButton_GetFocus ' +\n        'GUICtrlButton_GetIdealSize GUICtrlButton_GetImage ' +\n        'GUICtrlButton_GetImageList GUICtrlButton_GetNote ' +\n        'GUICtrlButton_GetNoteLength GUICtrlButton_GetSplitInfo ' +\n        'GUICtrlButton_GetState GUICtrlButton_GetText ' +\n        'GUICtrlButton_GetTextMargin GUICtrlButton_SetCheck ' +\n        'GUICtrlButton_SetDontClick GUICtrlButton_SetFocus ' +\n        'GUICtrlButton_SetImage GUICtrlButton_SetImageList ' +\n        'GUICtrlButton_SetNote GUICtrlButton_SetShield ' +\n        'GUICtrlButton_SetSize GUICtrlButton_SetSplitInfo ' +\n        'GUICtrlButton_SetState GUICtrlButton_SetStyle ' +\n        'GUICtrlButton_SetText GUICtrlButton_SetTextMargin ' +\n        'GUICtrlButton_Show GUICtrlComboBoxEx_AddDir ' +\n        'GUICtrlComboBoxEx_AddString GUICtrlComboBoxEx_BeginUpdate ' +\n        'GUICtrlComboBoxEx_Create GUICtrlComboBoxEx_CreateSolidBitMap ' +\n        'GUICtrlComboBoxEx_DeleteString GUICtrlComboBoxEx_Destroy ' +\n        'GUICtrlComboBoxEx_EndUpdate GUICtrlComboBoxEx_FindStringExact ' +\n        'GUICtrlComboBoxEx_GetComboBoxInfo ' +\n        'GUICtrlComboBoxEx_GetComboControl GUICtrlComboBoxEx_GetCount ' +\n        'GUICtrlComboBoxEx_GetCurSel ' +\n        'GUICtrlComboBoxEx_GetDroppedControlRect ' +\n        'GUICtrlComboBoxEx_GetDroppedControlRectEx ' +\n        'GUICtrlComboBoxEx_GetDroppedState ' +\n        'GUICtrlComboBoxEx_GetDroppedWidth ' +\n        'GUICtrlComboBoxEx_GetEditControl GUICtrlComboBoxEx_GetEditSel ' +\n        'GUICtrlComboBoxEx_GetEditText ' +\n        'GUICtrlComboBoxEx_GetExtendedStyle ' +\n        'GUICtrlComboBoxEx_GetExtendedUI GUICtrlComboBoxEx_GetImageList ' +\n        'GUICtrlComboBoxEx_GetItem GUICtrlComboBoxEx_GetItemEx ' +\n        'GUICtrlComboBoxEx_GetItemHeight GUICtrlComboBoxEx_GetItemImage ' +\n        'GUICtrlComboBoxEx_GetItemIndent ' +\n        'GUICtrlComboBoxEx_GetItemOverlayImage ' +\n        'GUICtrlComboBoxEx_GetItemParam ' +\n        'GUICtrlComboBoxEx_GetItemSelectedImage ' +\n        'GUICtrlComboBoxEx_GetItemText GUICtrlComboBoxEx_GetItemTextLen ' +\n        'GUICtrlComboBoxEx_GetList GUICtrlComboBoxEx_GetListArray ' +\n        'GUICtrlComboBoxEx_GetLocale GUICtrlComboBoxEx_GetLocaleCountry ' +\n        'GUICtrlComboBoxEx_GetLocaleLang ' +\n        'GUICtrlComboBoxEx_GetLocalePrimLang ' +\n        'GUICtrlComboBoxEx_GetLocaleSubLang ' +\n        'GUICtrlComboBoxEx_GetMinVisible GUICtrlComboBoxEx_GetTopIndex ' +\n        'GUICtrlComboBoxEx_GetUnicode GUICtrlComboBoxEx_InitStorage ' +\n        'GUICtrlComboBoxEx_InsertString GUICtrlComboBoxEx_LimitText ' +\n        'GUICtrlComboBoxEx_ReplaceEditSel GUICtrlComboBoxEx_ResetContent ' +\n        'GUICtrlComboBoxEx_SetCurSel GUICtrlComboBoxEx_SetDroppedWidth ' +\n        'GUICtrlComboBoxEx_SetEditSel GUICtrlComboBoxEx_SetEditText ' +\n        'GUICtrlComboBoxEx_SetExtendedStyle ' +\n        'GUICtrlComboBoxEx_SetExtendedUI GUICtrlComboBoxEx_SetImageList ' +\n        'GUICtrlComboBoxEx_SetItem GUICtrlComboBoxEx_SetItemEx ' +\n        'GUICtrlComboBoxEx_SetItemHeight GUICtrlComboBoxEx_SetItemImage ' +\n        'GUICtrlComboBoxEx_SetItemIndent ' +\n        'GUICtrlComboBoxEx_SetItemOverlayImage ' +\n        'GUICtrlComboBoxEx_SetItemParam ' +\n        'GUICtrlComboBoxEx_SetItemSelectedImage ' +\n        'GUICtrlComboBoxEx_SetMinVisible GUICtrlComboBoxEx_SetTopIndex ' +\n        'GUICtrlComboBoxEx_SetUnicode GUICtrlComboBoxEx_ShowDropDown ' +\n        'GUICtrlComboBox_AddDir GUICtrlComboBox_AddString ' +\n        'GUICtrlComboBox_AutoComplete GUICtrlComboBox_BeginUpdate ' +\n        'GUICtrlComboBox_Create GUICtrlComboBox_DeleteString ' +\n        'GUICtrlComboBox_Destroy GUICtrlComboBox_EndUpdate ' +\n        'GUICtrlComboBox_FindString GUICtrlComboBox_FindStringExact ' +\n        'GUICtrlComboBox_GetComboBoxInfo GUICtrlComboBox_GetCount ' +\n        'GUICtrlComboBox_GetCueBanner GUICtrlComboBox_GetCurSel ' +\n        'GUICtrlComboBox_GetDroppedControlRect ' +\n        'GUICtrlComboBox_GetDroppedControlRectEx ' +\n        'GUICtrlComboBox_GetDroppedState GUICtrlComboBox_GetDroppedWidth ' +\n        'GUICtrlComboBox_GetEditSel GUICtrlComboBox_GetEditText ' +\n        'GUICtrlComboBox_GetExtendedUI ' +\n        'GUICtrlComboBox_GetHorizontalExtent ' +\n        'GUICtrlComboBox_GetItemHeight GUICtrlComboBox_GetLBText ' +\n        'GUICtrlComboBox_GetLBTextLen GUICtrlComboBox_GetList ' +\n        'GUICtrlComboBox_GetListArray GUICtrlComboBox_GetLocale ' +\n        'GUICtrlComboBox_GetLocaleCountry GUICtrlComboBox_GetLocaleLang ' +\n        'GUICtrlComboBox_GetLocalePrimLang ' +\n        'GUICtrlComboBox_GetLocaleSubLang GUICtrlComboBox_GetMinVisible ' +\n        'GUICtrlComboBox_GetTopIndex GUICtrlComboBox_InitStorage ' +\n        'GUICtrlComboBox_InsertString GUICtrlComboBox_LimitText ' +\n        'GUICtrlComboBox_ReplaceEditSel GUICtrlComboBox_ResetContent ' +\n        'GUICtrlComboBox_SelectString GUICtrlComboBox_SetCueBanner ' +\n        'GUICtrlComboBox_SetCurSel GUICtrlComboBox_SetDroppedWidth ' +\n        'GUICtrlComboBox_SetEditSel GUICtrlComboBox_SetEditText ' +\n        'GUICtrlComboBox_SetExtendedUI ' +\n        'GUICtrlComboBox_SetHorizontalExtent ' +\n        'GUICtrlComboBox_SetItemHeight GUICtrlComboBox_SetMinVisible ' +\n        'GUICtrlComboBox_SetTopIndex GUICtrlComboBox_ShowDropDown ' +\n        'GUICtrlDTP_Create GUICtrlDTP_Destroy GUICtrlDTP_GetMCColor ' +\n        'GUICtrlDTP_GetMCFont GUICtrlDTP_GetMonthCal ' +\n        'GUICtrlDTP_GetRange GUICtrlDTP_GetRangeEx ' +\n        'GUICtrlDTP_GetSystemTime GUICtrlDTP_GetSystemTimeEx ' +\n        'GUICtrlDTP_SetFormat GUICtrlDTP_SetMCColor ' +\n        'GUICtrlDTP_SetMCFont GUICtrlDTP_SetRange ' +\n        'GUICtrlDTP_SetRangeEx GUICtrlDTP_SetSystemTime ' +\n        'GUICtrlDTP_SetSystemTimeEx GUICtrlEdit_AppendText ' +\n        'GUICtrlEdit_BeginUpdate GUICtrlEdit_CanUndo ' +\n        'GUICtrlEdit_CharFromPos GUICtrlEdit_Create ' +\n        'GUICtrlEdit_Destroy GUICtrlEdit_EmptyUndoBuffer ' +\n        'GUICtrlEdit_EndUpdate GUICtrlEdit_Find GUICtrlEdit_FmtLines ' +\n        'GUICtrlEdit_GetCueBanner GUICtrlEdit_GetFirstVisibleLine ' +\n        'GUICtrlEdit_GetLimitText GUICtrlEdit_GetLine ' +\n        'GUICtrlEdit_GetLineCount GUICtrlEdit_GetMargins ' +\n        'GUICtrlEdit_GetModify GUICtrlEdit_GetPasswordChar ' +\n        'GUICtrlEdit_GetRECT GUICtrlEdit_GetRECTEx GUICtrlEdit_GetSel ' +\n        'GUICtrlEdit_GetText GUICtrlEdit_GetTextLen ' +\n        'GUICtrlEdit_HideBalloonTip GUICtrlEdit_InsertText ' +\n        'GUICtrlEdit_LineFromChar GUICtrlEdit_LineIndex ' +\n        'GUICtrlEdit_LineLength GUICtrlEdit_LineScroll ' +\n        'GUICtrlEdit_PosFromChar GUICtrlEdit_ReplaceSel ' +\n        'GUICtrlEdit_Scroll GUICtrlEdit_SetCueBanner ' +\n        'GUICtrlEdit_SetLimitText GUICtrlEdit_SetMargins ' +\n        'GUICtrlEdit_SetModify GUICtrlEdit_SetPasswordChar ' +\n        'GUICtrlEdit_SetReadOnly GUICtrlEdit_SetRECT ' +\n        'GUICtrlEdit_SetRECTEx GUICtrlEdit_SetRECTNP ' +\n        'GUICtrlEdit_SetRectNPEx GUICtrlEdit_SetSel ' +\n        'GUICtrlEdit_SetTabStops GUICtrlEdit_SetText ' +\n        'GUICtrlEdit_ShowBalloonTip GUICtrlEdit_Undo ' +\n        'GUICtrlHeader_AddItem GUICtrlHeader_ClearFilter ' +\n        'GUICtrlHeader_ClearFilterAll GUICtrlHeader_Create ' +\n        'GUICtrlHeader_CreateDragImage GUICtrlHeader_DeleteItem ' +\n        'GUICtrlHeader_Destroy GUICtrlHeader_EditFilter ' +\n        'GUICtrlHeader_GetBitmapMargin GUICtrlHeader_GetImageList ' +\n        'GUICtrlHeader_GetItem GUICtrlHeader_GetItemAlign ' +\n        'GUICtrlHeader_GetItemBitmap GUICtrlHeader_GetItemCount ' +\n        'GUICtrlHeader_GetItemDisplay GUICtrlHeader_GetItemFlags ' +\n        'GUICtrlHeader_GetItemFormat GUICtrlHeader_GetItemImage ' +\n        'GUICtrlHeader_GetItemOrder GUICtrlHeader_GetItemParam ' +\n        'GUICtrlHeader_GetItemRect GUICtrlHeader_GetItemRectEx ' +\n        'GUICtrlHeader_GetItemText GUICtrlHeader_GetItemWidth ' +\n        'GUICtrlHeader_GetOrderArray GUICtrlHeader_GetUnicodeFormat ' +\n        'GUICtrlHeader_HitTest GUICtrlHeader_InsertItem ' +\n        'GUICtrlHeader_Layout GUICtrlHeader_OrderToIndex ' +\n        'GUICtrlHeader_SetBitmapMargin ' +\n        'GUICtrlHeader_SetFilterChangeTimeout ' +\n        'GUICtrlHeader_SetHotDivider GUICtrlHeader_SetImageList ' +\n        'GUICtrlHeader_SetItem GUICtrlHeader_SetItemAlign ' +\n        'GUICtrlHeader_SetItemBitmap GUICtrlHeader_SetItemDisplay ' +\n        'GUICtrlHeader_SetItemFlags GUICtrlHeader_SetItemFormat ' +\n        'GUICtrlHeader_SetItemImage GUICtrlHeader_SetItemOrder ' +\n        'GUICtrlHeader_SetItemParam GUICtrlHeader_SetItemText ' +\n        'GUICtrlHeader_SetItemWidth GUICtrlHeader_SetOrderArray ' +\n        'GUICtrlHeader_SetUnicodeFormat GUICtrlIpAddress_ClearAddress ' +\n        'GUICtrlIpAddress_Create GUICtrlIpAddress_Destroy ' +\n        'GUICtrlIpAddress_Get GUICtrlIpAddress_GetArray ' +\n        'GUICtrlIpAddress_GetEx GUICtrlIpAddress_IsBlank ' +\n        'GUICtrlIpAddress_Set GUICtrlIpAddress_SetArray ' +\n        'GUICtrlIpAddress_SetEx GUICtrlIpAddress_SetFocus ' +\n        'GUICtrlIpAddress_SetFont GUICtrlIpAddress_SetRange ' +\n        'GUICtrlIpAddress_ShowHide GUICtrlListBox_AddFile ' +\n        'GUICtrlListBox_AddString GUICtrlListBox_BeginUpdate ' +\n        'GUICtrlListBox_ClickItem GUICtrlListBox_Create ' +\n        'GUICtrlListBox_DeleteString GUICtrlListBox_Destroy ' +\n        'GUICtrlListBox_Dir GUICtrlListBox_EndUpdate ' +\n        'GUICtrlListBox_FindInText GUICtrlListBox_FindString ' +\n        'GUICtrlListBox_GetAnchorIndex GUICtrlListBox_GetCaretIndex ' +\n        'GUICtrlListBox_GetCount GUICtrlListBox_GetCurSel ' +\n        'GUICtrlListBox_GetHorizontalExtent GUICtrlListBox_GetItemData ' +\n        'GUICtrlListBox_GetItemHeight GUICtrlListBox_GetItemRect ' +\n        'GUICtrlListBox_GetItemRectEx GUICtrlListBox_GetListBoxInfo ' +\n        'GUICtrlListBox_GetLocale GUICtrlListBox_GetLocaleCountry ' +\n        'GUICtrlListBox_GetLocaleLang GUICtrlListBox_GetLocalePrimLang ' +\n        'GUICtrlListBox_GetLocaleSubLang GUICtrlListBox_GetSel ' +\n        'GUICtrlListBox_GetSelCount GUICtrlListBox_GetSelItems ' +\n        'GUICtrlListBox_GetSelItemsText GUICtrlListBox_GetText ' +\n        'GUICtrlListBox_GetTextLen GUICtrlListBox_GetTopIndex ' +\n        'GUICtrlListBox_InitStorage GUICtrlListBox_InsertString ' +\n        'GUICtrlListBox_ItemFromPoint GUICtrlListBox_ReplaceString ' +\n        'GUICtrlListBox_ResetContent GUICtrlListBox_SelectString ' +\n        'GUICtrlListBox_SelItemRange GUICtrlListBox_SelItemRangeEx ' +\n        'GUICtrlListBox_SetAnchorIndex GUICtrlListBox_SetCaretIndex ' +\n        'GUICtrlListBox_SetColumnWidth GUICtrlListBox_SetCurSel ' +\n        'GUICtrlListBox_SetHorizontalExtent GUICtrlListBox_SetItemData ' +\n        'GUICtrlListBox_SetItemHeight GUICtrlListBox_SetLocale ' +\n        'GUICtrlListBox_SetSel GUICtrlListBox_SetTabStops ' +\n        'GUICtrlListBox_SetTopIndex GUICtrlListBox_Sort ' +\n        'GUICtrlListBox_SwapString GUICtrlListBox_UpdateHScroll ' +\n        'GUICtrlListView_AddArray GUICtrlListView_AddColumn ' +\n        'GUICtrlListView_AddItem GUICtrlListView_AddSubItem ' +\n        'GUICtrlListView_ApproximateViewHeight ' +\n        'GUICtrlListView_ApproximateViewRect ' +\n        'GUICtrlListView_ApproximateViewWidth GUICtrlListView_Arrange ' +\n        'GUICtrlListView_BeginUpdate GUICtrlListView_CancelEditLabel ' +\n        'GUICtrlListView_ClickItem GUICtrlListView_CopyItems ' +\n        'GUICtrlListView_Create GUICtrlListView_CreateDragImage ' +\n        'GUICtrlListView_CreateSolidBitMap ' +\n        'GUICtrlListView_DeleteAllItems GUICtrlListView_DeleteColumn ' +\n        'GUICtrlListView_DeleteItem GUICtrlListView_DeleteItemsSelected ' +\n        'GUICtrlListView_Destroy GUICtrlListView_DrawDragImage ' +\n        'GUICtrlListView_EditLabel GUICtrlListView_EnableGroupView ' +\n        'GUICtrlListView_EndUpdate GUICtrlListView_EnsureVisible ' +\n        'GUICtrlListView_FindInText GUICtrlListView_FindItem ' +\n        'GUICtrlListView_FindNearest GUICtrlListView_FindParam ' +\n        'GUICtrlListView_FindText GUICtrlListView_GetBkColor ' +\n        'GUICtrlListView_GetBkImage GUICtrlListView_GetCallbackMask ' +\n        'GUICtrlListView_GetColumn GUICtrlListView_GetColumnCount ' +\n        'GUICtrlListView_GetColumnOrder ' +\n        'GUICtrlListView_GetColumnOrderArray ' +\n        'GUICtrlListView_GetColumnWidth GUICtrlListView_GetCounterPage ' +\n        'GUICtrlListView_GetEditControl ' +\n        'GUICtrlListView_GetExtendedListViewStyle ' +\n        'GUICtrlListView_GetFocusedGroup GUICtrlListView_GetGroupCount ' +\n        'GUICtrlListView_GetGroupInfo ' +\n        'GUICtrlListView_GetGroupInfoByIndex ' +\n        'GUICtrlListView_GetGroupRect ' +\n        'GUICtrlListView_GetGroupViewEnabled GUICtrlListView_GetHeader ' +\n        'GUICtrlListView_GetHotCursor GUICtrlListView_GetHotItem ' +\n        'GUICtrlListView_GetHoverTime GUICtrlListView_GetImageList ' +\n        'GUICtrlListView_GetISearchString GUICtrlListView_GetItem ' +\n        'GUICtrlListView_GetItemChecked GUICtrlListView_GetItemCount ' +\n        'GUICtrlListView_GetItemCut GUICtrlListView_GetItemDropHilited ' +\n        'GUICtrlListView_GetItemEx GUICtrlListView_GetItemFocused ' +\n        'GUICtrlListView_GetItemGroupID GUICtrlListView_GetItemImage ' +\n        'GUICtrlListView_GetItemIndent GUICtrlListView_GetItemParam ' +\n        'GUICtrlListView_GetItemPosition ' +\n        'GUICtrlListView_GetItemPositionX ' +\n        'GUICtrlListView_GetItemPositionY GUICtrlListView_GetItemRect ' +\n        'GUICtrlListView_GetItemRectEx GUICtrlListView_GetItemSelected ' +\n        'GUICtrlListView_GetItemSpacing GUICtrlListView_GetItemSpacingX ' +\n        'GUICtrlListView_GetItemSpacingY GUICtrlListView_GetItemState ' +\n        'GUICtrlListView_GetItemStateImage GUICtrlListView_GetItemText ' +\n        'GUICtrlListView_GetItemTextArray ' +\n        'GUICtrlListView_GetItemTextString GUICtrlListView_GetNextItem ' +\n        'GUICtrlListView_GetNumberOfWorkAreas GUICtrlListView_GetOrigin ' +\n        'GUICtrlListView_GetOriginX GUICtrlListView_GetOriginY ' +\n        'GUICtrlListView_GetOutlineColor ' +\n        'GUICtrlListView_GetSelectedColumn ' +\n        'GUICtrlListView_GetSelectedCount ' +\n        'GUICtrlListView_GetSelectedIndices ' +\n        'GUICtrlListView_GetSelectionMark GUICtrlListView_GetStringWidth ' +\n        'GUICtrlListView_GetSubItemRect GUICtrlListView_GetTextBkColor ' +\n        'GUICtrlListView_GetTextColor GUICtrlListView_GetToolTips ' +\n        'GUICtrlListView_GetTopIndex GUICtrlListView_GetUnicodeFormat ' +\n        'GUICtrlListView_GetView GUICtrlListView_GetViewDetails ' +\n        'GUICtrlListView_GetViewLarge GUICtrlListView_GetViewList ' +\n        'GUICtrlListView_GetViewRect GUICtrlListView_GetViewSmall ' +\n        'GUICtrlListView_GetViewTile GUICtrlListView_HideColumn ' +\n        'GUICtrlListView_HitTest GUICtrlListView_InsertColumn ' +\n        'GUICtrlListView_InsertGroup GUICtrlListView_InsertItem ' +\n        'GUICtrlListView_JustifyColumn GUICtrlListView_MapIDToIndex ' +\n        'GUICtrlListView_MapIndexToID GUICtrlListView_RedrawItems ' +\n        'GUICtrlListView_RegisterSortCallBack ' +\n        'GUICtrlListView_RemoveAllGroups GUICtrlListView_RemoveGroup ' +\n        'GUICtrlListView_Scroll GUICtrlListView_SetBkColor ' +\n        'GUICtrlListView_SetBkImage GUICtrlListView_SetCallBackMask ' +\n        'GUICtrlListView_SetColumn GUICtrlListView_SetColumnOrder ' +\n        'GUICtrlListView_SetColumnOrderArray ' +\n        'GUICtrlListView_SetColumnWidth ' +\n        'GUICtrlListView_SetExtendedListViewStyle ' +\n        'GUICtrlListView_SetGroupInfo GUICtrlListView_SetHotItem ' +\n        'GUICtrlListView_SetHoverTime GUICtrlListView_SetIconSpacing ' +\n        'GUICtrlListView_SetImageList GUICtrlListView_SetItem ' +\n        'GUICtrlListView_SetItemChecked GUICtrlListView_SetItemCount ' +\n        'GUICtrlListView_SetItemCut GUICtrlListView_SetItemDropHilited ' +\n        'GUICtrlListView_SetItemEx GUICtrlListView_SetItemFocused ' +\n        'GUICtrlListView_SetItemGroupID GUICtrlListView_SetItemImage ' +\n        'GUICtrlListView_SetItemIndent GUICtrlListView_SetItemParam ' +\n        'GUICtrlListView_SetItemPosition ' +\n        'GUICtrlListView_SetItemPosition32 ' +\n        'GUICtrlListView_SetItemSelected GUICtrlListView_SetItemState ' +\n        'GUICtrlListView_SetItemStateImage GUICtrlListView_SetItemText ' +\n        'GUICtrlListView_SetOutlineColor ' +\n        'GUICtrlListView_SetSelectedColumn ' +\n        'GUICtrlListView_SetSelectionMark GUICtrlListView_SetTextBkColor ' +\n        'GUICtrlListView_SetTextColor GUICtrlListView_SetToolTips ' +\n        'GUICtrlListView_SetUnicodeFormat GUICtrlListView_SetView ' +\n        'GUICtrlListView_SetWorkAreas GUICtrlListView_SimpleSort ' +\n        'GUICtrlListView_SortItems GUICtrlListView_SubItemHitTest ' +\n        'GUICtrlListView_UnRegisterSortCallBack GUICtrlMenu_AddMenuItem ' +\n        'GUICtrlMenu_AppendMenu GUICtrlMenu_CalculatePopupWindowPosition ' +\n        'GUICtrlMenu_CheckMenuItem GUICtrlMenu_CheckRadioItem ' +\n        'GUICtrlMenu_CreateMenu GUICtrlMenu_CreatePopup ' +\n        'GUICtrlMenu_DeleteMenu GUICtrlMenu_DestroyMenu ' +\n        'GUICtrlMenu_DrawMenuBar GUICtrlMenu_EnableMenuItem ' +\n        'GUICtrlMenu_FindItem GUICtrlMenu_FindParent ' +\n        'GUICtrlMenu_GetItemBmp GUICtrlMenu_GetItemBmpChecked ' +\n        'GUICtrlMenu_GetItemBmpUnchecked GUICtrlMenu_GetItemChecked ' +\n        'GUICtrlMenu_GetItemCount GUICtrlMenu_GetItemData ' +\n        'GUICtrlMenu_GetItemDefault GUICtrlMenu_GetItemDisabled ' +\n        'GUICtrlMenu_GetItemEnabled GUICtrlMenu_GetItemGrayed ' +\n        'GUICtrlMenu_GetItemHighlighted GUICtrlMenu_GetItemID ' +\n        'GUICtrlMenu_GetItemInfo GUICtrlMenu_GetItemRect ' +\n        'GUICtrlMenu_GetItemRectEx GUICtrlMenu_GetItemState ' +\n        'GUICtrlMenu_GetItemStateEx GUICtrlMenu_GetItemSubMenu ' +\n        'GUICtrlMenu_GetItemText GUICtrlMenu_GetItemType ' +\n        'GUICtrlMenu_GetMenu GUICtrlMenu_GetMenuBackground ' +\n        'GUICtrlMenu_GetMenuBarInfo GUICtrlMenu_GetMenuContextHelpID ' +\n        'GUICtrlMenu_GetMenuData GUICtrlMenu_GetMenuDefaultItem ' +\n        'GUICtrlMenu_GetMenuHeight GUICtrlMenu_GetMenuInfo ' +\n        'GUICtrlMenu_GetMenuStyle GUICtrlMenu_GetSystemMenu ' +\n        'GUICtrlMenu_InsertMenuItem GUICtrlMenu_InsertMenuItemEx ' +\n        'GUICtrlMenu_IsMenu GUICtrlMenu_LoadMenu ' +\n        'GUICtrlMenu_MapAccelerator GUICtrlMenu_MenuItemFromPoint ' +\n        'GUICtrlMenu_RemoveMenu GUICtrlMenu_SetItemBitmaps ' +\n        'GUICtrlMenu_SetItemBmp GUICtrlMenu_SetItemBmpChecked ' +\n        'GUICtrlMenu_SetItemBmpUnchecked GUICtrlMenu_SetItemChecked ' +\n        'GUICtrlMenu_SetItemData GUICtrlMenu_SetItemDefault ' +\n        'GUICtrlMenu_SetItemDisabled GUICtrlMenu_SetItemEnabled ' +\n        'GUICtrlMenu_SetItemGrayed GUICtrlMenu_SetItemHighlighted ' +\n        'GUICtrlMenu_SetItemID GUICtrlMenu_SetItemInfo ' +\n        'GUICtrlMenu_SetItemState GUICtrlMenu_SetItemSubMenu ' +\n        'GUICtrlMenu_SetItemText GUICtrlMenu_SetItemType ' +\n        'GUICtrlMenu_SetMenu GUICtrlMenu_SetMenuBackground ' +\n        'GUICtrlMenu_SetMenuContextHelpID GUICtrlMenu_SetMenuData ' +\n        'GUICtrlMenu_SetMenuDefaultItem GUICtrlMenu_SetMenuHeight ' +\n        'GUICtrlMenu_SetMenuInfo GUICtrlMenu_SetMenuStyle ' +\n        'GUICtrlMenu_TrackPopupMenu GUICtrlMonthCal_Create ' +\n        'GUICtrlMonthCal_Destroy GUICtrlMonthCal_GetCalendarBorder ' +\n        'GUICtrlMonthCal_GetCalendarCount GUICtrlMonthCal_GetColor ' +\n        'GUICtrlMonthCal_GetColorArray GUICtrlMonthCal_GetCurSel ' +\n        'GUICtrlMonthCal_GetCurSelStr GUICtrlMonthCal_GetFirstDOW ' +\n        'GUICtrlMonthCal_GetFirstDOWStr GUICtrlMonthCal_GetMaxSelCount ' +\n        'GUICtrlMonthCal_GetMaxTodayWidth ' +\n        'GUICtrlMonthCal_GetMinReqHeight GUICtrlMonthCal_GetMinReqRect ' +\n        'GUICtrlMonthCal_GetMinReqRectArray ' +\n        'GUICtrlMonthCal_GetMinReqWidth GUICtrlMonthCal_GetMonthDelta ' +\n        'GUICtrlMonthCal_GetMonthRange GUICtrlMonthCal_GetMonthRangeMax ' +\n        'GUICtrlMonthCal_GetMonthRangeMaxStr ' +\n        'GUICtrlMonthCal_GetMonthRangeMin ' +\n        'GUICtrlMonthCal_GetMonthRangeMinStr ' +\n        'GUICtrlMonthCal_GetMonthRangeSpan GUICtrlMonthCal_GetRange ' +\n        'GUICtrlMonthCal_GetRangeMax GUICtrlMonthCal_GetRangeMaxStr ' +\n        'GUICtrlMonthCal_GetRangeMin GUICtrlMonthCal_GetRangeMinStr ' +\n        'GUICtrlMonthCal_GetSelRange GUICtrlMonthCal_GetSelRangeMax ' +\n        'GUICtrlMonthCal_GetSelRangeMaxStr ' +\n        'GUICtrlMonthCal_GetSelRangeMin ' +\n        'GUICtrlMonthCal_GetSelRangeMinStr GUICtrlMonthCal_GetToday ' +\n        'GUICtrlMonthCal_GetTodayStr GUICtrlMonthCal_GetUnicodeFormat ' +\n        'GUICtrlMonthCal_HitTest GUICtrlMonthCal_SetCalendarBorder ' +\n        'GUICtrlMonthCal_SetColor GUICtrlMonthCal_SetCurSel ' +\n        'GUICtrlMonthCal_SetDayState GUICtrlMonthCal_SetFirstDOW ' +\n        'GUICtrlMonthCal_SetMaxSelCount GUICtrlMonthCal_SetMonthDelta ' +\n        'GUICtrlMonthCal_SetRange GUICtrlMonthCal_SetSelRange ' +\n        'GUICtrlMonthCal_SetToday GUICtrlMonthCal_SetUnicodeFormat ' +\n        'GUICtrlRebar_AddBand GUICtrlRebar_AddToolBarBand ' +\n        'GUICtrlRebar_BeginDrag GUICtrlRebar_Create ' +\n        'GUICtrlRebar_DeleteBand GUICtrlRebar_Destroy ' +\n        'GUICtrlRebar_DragMove GUICtrlRebar_EndDrag ' +\n        'GUICtrlRebar_GetBandBackColor GUICtrlRebar_GetBandBorders ' +\n        'GUICtrlRebar_GetBandBordersEx GUICtrlRebar_GetBandChildHandle ' +\n        'GUICtrlRebar_GetBandChildSize GUICtrlRebar_GetBandCount ' +\n        'GUICtrlRebar_GetBandForeColor GUICtrlRebar_GetBandHeaderSize ' +\n        'GUICtrlRebar_GetBandID GUICtrlRebar_GetBandIdealSize ' +\n        'GUICtrlRebar_GetBandLength GUICtrlRebar_GetBandLParam ' +\n        'GUICtrlRebar_GetBandMargins GUICtrlRebar_GetBandMarginsEx ' +\n        'GUICtrlRebar_GetBandRect GUICtrlRebar_GetBandRectEx ' +\n        'GUICtrlRebar_GetBandStyle GUICtrlRebar_GetBandStyleBreak ' +\n        'GUICtrlRebar_GetBandStyleChildEdge ' +\n        'GUICtrlRebar_GetBandStyleFixedBMP ' +\n        'GUICtrlRebar_GetBandStyleFixedSize ' +\n        'GUICtrlRebar_GetBandStyleGripperAlways ' +\n        'GUICtrlRebar_GetBandStyleHidden ' +\n        'GUICtrlRebar_GetBandStyleHideTitle ' +\n        'GUICtrlRebar_GetBandStyleNoGripper ' +\n        'GUICtrlRebar_GetBandStyleTopAlign ' +\n        'GUICtrlRebar_GetBandStyleUseChevron ' +\n        'GUICtrlRebar_GetBandStyleVariableHeight ' +\n        'GUICtrlRebar_GetBandText GUICtrlRebar_GetBarHeight ' +\n        'GUICtrlRebar_GetBarInfo GUICtrlRebar_GetBKColor ' +\n        'GUICtrlRebar_GetColorScheme GUICtrlRebar_GetRowCount ' +\n        'GUICtrlRebar_GetRowHeight GUICtrlRebar_GetTextColor ' +\n        'GUICtrlRebar_GetToolTips GUICtrlRebar_GetUnicodeFormat ' +\n        'GUICtrlRebar_HitTest GUICtrlRebar_IDToIndex ' +\n        'GUICtrlRebar_MaximizeBand GUICtrlRebar_MinimizeBand ' +\n        'GUICtrlRebar_MoveBand GUICtrlRebar_SetBandBackColor ' +\n        'GUICtrlRebar_SetBandForeColor GUICtrlRebar_SetBandHeaderSize ' +\n        'GUICtrlRebar_SetBandID GUICtrlRebar_SetBandIdealSize ' +\n        'GUICtrlRebar_SetBandLength GUICtrlRebar_SetBandLParam ' +\n        'GUICtrlRebar_SetBandStyle GUICtrlRebar_SetBandStyleBreak ' +\n        'GUICtrlRebar_SetBandStyleChildEdge ' +\n        'GUICtrlRebar_SetBandStyleFixedBMP ' +\n        'GUICtrlRebar_SetBandStyleFixedSize ' +\n        'GUICtrlRebar_SetBandStyleGripperAlways ' +\n        'GUICtrlRebar_SetBandStyleHidden ' +\n        'GUICtrlRebar_SetBandStyleHideTitle ' +\n        'GUICtrlRebar_SetBandStyleNoGripper ' +\n        'GUICtrlRebar_SetBandStyleTopAlign ' +\n        'GUICtrlRebar_SetBandStyleUseChevron ' +\n        'GUICtrlRebar_SetBandStyleVariableHeight ' +\n        'GUICtrlRebar_SetBandText GUICtrlRebar_SetBarInfo ' +\n        'GUICtrlRebar_SetBKColor GUICtrlRebar_SetColorScheme ' +\n        'GUICtrlRebar_SetTextColor GUICtrlRebar_SetToolTips ' +\n        'GUICtrlRebar_SetUnicodeFormat GUICtrlRebar_ShowBand ' +\n        'GUICtrlRichEdit_AppendText GUICtrlRichEdit_AutoDetectURL ' +\n        'GUICtrlRichEdit_CanPaste GUICtrlRichEdit_CanPasteSpecial ' +\n        'GUICtrlRichEdit_CanRedo GUICtrlRichEdit_CanUndo ' +\n        'GUICtrlRichEdit_ChangeFontSize GUICtrlRichEdit_Copy ' +\n        'GUICtrlRichEdit_Create GUICtrlRichEdit_Cut ' +\n        'GUICtrlRichEdit_Deselect GUICtrlRichEdit_Destroy ' +\n        'GUICtrlRichEdit_EmptyUndoBuffer GUICtrlRichEdit_FindText ' +\n        'GUICtrlRichEdit_FindTextInRange GUICtrlRichEdit_GetBkColor ' +\n        'GUICtrlRichEdit_GetCharAttributes ' +\n        'GUICtrlRichEdit_GetCharBkColor GUICtrlRichEdit_GetCharColor ' +\n        'GUICtrlRichEdit_GetCharPosFromXY ' +\n        'GUICtrlRichEdit_GetCharPosOfNextWord ' +\n        'GUICtrlRichEdit_GetCharPosOfPreviousWord ' +\n        'GUICtrlRichEdit_GetCharWordBreakInfo ' +\n        'GUICtrlRichEdit_GetFirstCharPosOnLine GUICtrlRichEdit_GetFont ' +\n        'GUICtrlRichEdit_GetLineCount GUICtrlRichEdit_GetLineLength ' +\n        'GUICtrlRichEdit_GetLineNumberFromCharPos ' +\n        'GUICtrlRichEdit_GetNextRedo GUICtrlRichEdit_GetNextUndo ' +\n        'GUICtrlRichEdit_GetNumberOfFirstVisibleLine ' +\n        'GUICtrlRichEdit_GetParaAlignment ' +\n        'GUICtrlRichEdit_GetParaAttributes GUICtrlRichEdit_GetParaBorder ' +\n        'GUICtrlRichEdit_GetParaIndents GUICtrlRichEdit_GetParaNumbering ' +\n        'GUICtrlRichEdit_GetParaShading GUICtrlRichEdit_GetParaSpacing ' +\n        'GUICtrlRichEdit_GetParaTabStops GUICtrlRichEdit_GetPasswordChar ' +\n        'GUICtrlRichEdit_GetRECT GUICtrlRichEdit_GetScrollPos ' +\n        'GUICtrlRichEdit_GetSel GUICtrlRichEdit_GetSelAA ' +\n        'GUICtrlRichEdit_GetSelText GUICtrlRichEdit_GetSpaceUnit ' +\n        'GUICtrlRichEdit_GetText GUICtrlRichEdit_GetTextInLine ' +\n        'GUICtrlRichEdit_GetTextInRange GUICtrlRichEdit_GetTextLength ' +\n        'GUICtrlRichEdit_GetVersion GUICtrlRichEdit_GetXYFromCharPos ' +\n        'GUICtrlRichEdit_GetZoom GUICtrlRichEdit_GotoCharPos ' +\n        'GUICtrlRichEdit_HideSelection GUICtrlRichEdit_InsertText ' +\n        'GUICtrlRichEdit_IsModified GUICtrlRichEdit_IsTextSelected ' +\n        'GUICtrlRichEdit_Paste GUICtrlRichEdit_PasteSpecial ' +\n        'GUICtrlRichEdit_PauseRedraw GUICtrlRichEdit_Redo ' +\n        'GUICtrlRichEdit_ReplaceText GUICtrlRichEdit_ResumeRedraw ' +\n        'GUICtrlRichEdit_ScrollLineOrPage GUICtrlRichEdit_ScrollLines ' +\n        'GUICtrlRichEdit_ScrollToCaret GUICtrlRichEdit_SetBkColor ' +\n        'GUICtrlRichEdit_SetCharAttributes ' +\n        'GUICtrlRichEdit_SetCharBkColor GUICtrlRichEdit_SetCharColor ' +\n        'GUICtrlRichEdit_SetEventMask GUICtrlRichEdit_SetFont ' +\n        'GUICtrlRichEdit_SetLimitOnText GUICtrlRichEdit_SetModified ' +\n        'GUICtrlRichEdit_SetParaAlignment ' +\n        'GUICtrlRichEdit_SetParaAttributes GUICtrlRichEdit_SetParaBorder ' +\n        'GUICtrlRichEdit_SetParaIndents GUICtrlRichEdit_SetParaNumbering ' +\n        'GUICtrlRichEdit_SetParaShading GUICtrlRichEdit_SetParaSpacing ' +\n        'GUICtrlRichEdit_SetParaTabStops GUICtrlRichEdit_SetPasswordChar ' +\n        'GUICtrlRichEdit_SetReadOnly GUICtrlRichEdit_SetRECT ' +\n        'GUICtrlRichEdit_SetScrollPos GUICtrlRichEdit_SetSel ' +\n        'GUICtrlRichEdit_SetSpaceUnit GUICtrlRichEdit_SetTabStops ' +\n        'GUICtrlRichEdit_SetText GUICtrlRichEdit_SetUndoLimit ' +\n        'GUICtrlRichEdit_SetZoom GUICtrlRichEdit_StreamFromFile ' +\n        'GUICtrlRichEdit_StreamFromVar GUICtrlRichEdit_StreamToFile ' +\n        'GUICtrlRichEdit_StreamToVar GUICtrlRichEdit_Undo ' +\n        'GUICtrlSlider_ClearSel GUICtrlSlider_ClearTics ' +\n        'GUICtrlSlider_Create GUICtrlSlider_Destroy ' +\n        'GUICtrlSlider_GetBuddy GUICtrlSlider_GetChannelRect ' +\n        'GUICtrlSlider_GetChannelRectEx GUICtrlSlider_GetLineSize ' +\n        'GUICtrlSlider_GetLogicalTics GUICtrlSlider_GetNumTics ' +\n        'GUICtrlSlider_GetPageSize GUICtrlSlider_GetPos ' +\n        'GUICtrlSlider_GetRange GUICtrlSlider_GetRangeMax ' +\n        'GUICtrlSlider_GetRangeMin GUICtrlSlider_GetSel ' +\n        'GUICtrlSlider_GetSelEnd GUICtrlSlider_GetSelStart ' +\n        'GUICtrlSlider_GetThumbLength GUICtrlSlider_GetThumbRect ' +\n        'GUICtrlSlider_GetThumbRectEx GUICtrlSlider_GetTic ' +\n        'GUICtrlSlider_GetTicPos GUICtrlSlider_GetToolTips ' +\n        'GUICtrlSlider_GetUnicodeFormat GUICtrlSlider_SetBuddy ' +\n        'GUICtrlSlider_SetLineSize GUICtrlSlider_SetPageSize ' +\n        'GUICtrlSlider_SetPos GUICtrlSlider_SetRange ' +\n        'GUICtrlSlider_SetRangeMax GUICtrlSlider_SetRangeMin ' +\n        'GUICtrlSlider_SetSel GUICtrlSlider_SetSelEnd ' +\n        'GUICtrlSlider_SetSelStart GUICtrlSlider_SetThumbLength ' +\n        'GUICtrlSlider_SetTic GUICtrlSlider_SetTicFreq ' +\n        'GUICtrlSlider_SetTipSide GUICtrlSlider_SetToolTips ' +\n        'GUICtrlSlider_SetUnicodeFormat GUICtrlStatusBar_Create ' +\n        'GUICtrlStatusBar_Destroy GUICtrlStatusBar_EmbedControl ' +\n        'GUICtrlStatusBar_GetBorders GUICtrlStatusBar_GetBordersHorz ' +\n        'GUICtrlStatusBar_GetBordersRect GUICtrlStatusBar_GetBordersVert ' +\n        'GUICtrlStatusBar_GetCount GUICtrlStatusBar_GetHeight ' +\n        'GUICtrlStatusBar_GetIcon GUICtrlStatusBar_GetParts ' +\n        'GUICtrlStatusBar_GetRect GUICtrlStatusBar_GetRectEx ' +\n        'GUICtrlStatusBar_GetText GUICtrlStatusBar_GetTextFlags ' +\n        'GUICtrlStatusBar_GetTextLength GUICtrlStatusBar_GetTextLengthEx ' +\n        'GUICtrlStatusBar_GetTipText GUICtrlStatusBar_GetUnicodeFormat ' +\n        'GUICtrlStatusBar_GetWidth GUICtrlStatusBar_IsSimple ' +\n        'GUICtrlStatusBar_Resize GUICtrlStatusBar_SetBkColor ' +\n        'GUICtrlStatusBar_SetIcon GUICtrlStatusBar_SetMinHeight ' +\n        'GUICtrlStatusBar_SetParts GUICtrlStatusBar_SetSimple ' +\n        'GUICtrlStatusBar_SetText GUICtrlStatusBar_SetTipText ' +\n        'GUICtrlStatusBar_SetUnicodeFormat GUICtrlStatusBar_ShowHide ' +\n        'GUICtrlTab_ActivateTab GUICtrlTab_ClickTab GUICtrlTab_Create ' +\n        'GUICtrlTab_DeleteAllItems GUICtrlTab_DeleteItem ' +\n        'GUICtrlTab_DeselectAll GUICtrlTab_Destroy GUICtrlTab_FindTab ' +\n        'GUICtrlTab_GetCurFocus GUICtrlTab_GetCurSel ' +\n        'GUICtrlTab_GetDisplayRect GUICtrlTab_GetDisplayRectEx ' +\n        'GUICtrlTab_GetExtendedStyle GUICtrlTab_GetImageList ' +\n        'GUICtrlTab_GetItem GUICtrlTab_GetItemCount ' +\n        'GUICtrlTab_GetItemImage GUICtrlTab_GetItemParam ' +\n        'GUICtrlTab_GetItemRect GUICtrlTab_GetItemRectEx ' +\n        'GUICtrlTab_GetItemState GUICtrlTab_GetItemText ' +\n        'GUICtrlTab_GetRowCount GUICtrlTab_GetToolTips ' +\n        'GUICtrlTab_GetUnicodeFormat GUICtrlTab_HighlightItem ' +\n        'GUICtrlTab_HitTest GUICtrlTab_InsertItem ' +\n        'GUICtrlTab_RemoveImage GUICtrlTab_SetCurFocus ' +\n        'GUICtrlTab_SetCurSel GUICtrlTab_SetExtendedStyle ' +\n        'GUICtrlTab_SetImageList GUICtrlTab_SetItem ' +\n        'GUICtrlTab_SetItemImage GUICtrlTab_SetItemParam ' +\n        'GUICtrlTab_SetItemSize GUICtrlTab_SetItemState ' +\n        'GUICtrlTab_SetItemText GUICtrlTab_SetMinTabWidth ' +\n        'GUICtrlTab_SetPadding GUICtrlTab_SetToolTips ' +\n        'GUICtrlTab_SetUnicodeFormat GUICtrlToolbar_AddBitmap ' +\n        'GUICtrlToolbar_AddButton GUICtrlToolbar_AddButtonSep ' +\n        'GUICtrlToolbar_AddString GUICtrlToolbar_ButtonCount ' +\n        'GUICtrlToolbar_CheckButton GUICtrlToolbar_ClickAccel ' +\n        'GUICtrlToolbar_ClickButton GUICtrlToolbar_ClickIndex ' +\n        'GUICtrlToolbar_CommandToIndex GUICtrlToolbar_Create ' +\n        'GUICtrlToolbar_Customize GUICtrlToolbar_DeleteButton ' +\n        'GUICtrlToolbar_Destroy GUICtrlToolbar_EnableButton ' +\n        'GUICtrlToolbar_FindToolbar GUICtrlToolbar_GetAnchorHighlight ' +\n        'GUICtrlToolbar_GetBitmapFlags GUICtrlToolbar_GetButtonBitmap ' +\n        'GUICtrlToolbar_GetButtonInfo GUICtrlToolbar_GetButtonInfoEx ' +\n        'GUICtrlToolbar_GetButtonParam GUICtrlToolbar_GetButtonRect ' +\n        'GUICtrlToolbar_GetButtonRectEx GUICtrlToolbar_GetButtonSize ' +\n        'GUICtrlToolbar_GetButtonState GUICtrlToolbar_GetButtonStyle ' +\n        'GUICtrlToolbar_GetButtonText GUICtrlToolbar_GetColorScheme ' +\n        'GUICtrlToolbar_GetDisabledImageList ' +\n        'GUICtrlToolbar_GetExtendedStyle GUICtrlToolbar_GetHotImageList ' +\n        'GUICtrlToolbar_GetHotItem GUICtrlToolbar_GetImageList ' +\n        'GUICtrlToolbar_GetInsertMark GUICtrlToolbar_GetInsertMarkColor ' +\n        'GUICtrlToolbar_GetMaxSize GUICtrlToolbar_GetMetrics ' +\n        'GUICtrlToolbar_GetPadding GUICtrlToolbar_GetRows ' +\n        'GUICtrlToolbar_GetString GUICtrlToolbar_GetStyle ' +\n        'GUICtrlToolbar_GetStyleAltDrag ' +\n        'GUICtrlToolbar_GetStyleCustomErase GUICtrlToolbar_GetStyleFlat ' +\n        'GUICtrlToolbar_GetStyleList GUICtrlToolbar_GetStyleRegisterDrop ' +\n        'GUICtrlToolbar_GetStyleToolTips ' +\n        'GUICtrlToolbar_GetStyleTransparent ' +\n        'GUICtrlToolbar_GetStyleWrapable GUICtrlToolbar_GetTextRows ' +\n        'GUICtrlToolbar_GetToolTips GUICtrlToolbar_GetUnicodeFormat ' +\n        'GUICtrlToolbar_HideButton GUICtrlToolbar_HighlightButton ' +\n        'GUICtrlToolbar_HitTest GUICtrlToolbar_IndexToCommand ' +\n        'GUICtrlToolbar_InsertButton GUICtrlToolbar_InsertMarkHitTest ' +\n        'GUICtrlToolbar_IsButtonChecked GUICtrlToolbar_IsButtonEnabled ' +\n        'GUICtrlToolbar_IsButtonHidden ' +\n        'GUICtrlToolbar_IsButtonHighlighted ' +\n        'GUICtrlToolbar_IsButtonIndeterminate ' +\n        'GUICtrlToolbar_IsButtonPressed GUICtrlToolbar_LoadBitmap ' +\n        'GUICtrlToolbar_LoadImages GUICtrlToolbar_MapAccelerator ' +\n        'GUICtrlToolbar_MoveButton GUICtrlToolbar_PressButton ' +\n        'GUICtrlToolbar_SetAnchorHighlight GUICtrlToolbar_SetBitmapSize ' +\n        'GUICtrlToolbar_SetButtonBitMap GUICtrlToolbar_SetButtonInfo ' +\n        'GUICtrlToolbar_SetButtonInfoEx GUICtrlToolbar_SetButtonParam ' +\n        'GUICtrlToolbar_SetButtonSize GUICtrlToolbar_SetButtonState ' +\n        'GUICtrlToolbar_SetButtonStyle GUICtrlToolbar_SetButtonText ' +\n        'GUICtrlToolbar_SetButtonWidth GUICtrlToolbar_SetCmdID ' +\n        'GUICtrlToolbar_SetColorScheme ' +\n        'GUICtrlToolbar_SetDisabledImageList ' +\n        'GUICtrlToolbar_SetDrawTextFlags GUICtrlToolbar_SetExtendedStyle ' +\n        'GUICtrlToolbar_SetHotImageList GUICtrlToolbar_SetHotItem ' +\n        'GUICtrlToolbar_SetImageList GUICtrlToolbar_SetIndent ' +\n        'GUICtrlToolbar_SetIndeterminate GUICtrlToolbar_SetInsertMark ' +\n        'GUICtrlToolbar_SetInsertMarkColor GUICtrlToolbar_SetMaxTextRows ' +\n        'GUICtrlToolbar_SetMetrics GUICtrlToolbar_SetPadding ' +\n        'GUICtrlToolbar_SetParent GUICtrlToolbar_SetRows ' +\n        'GUICtrlToolbar_SetStyle GUICtrlToolbar_SetStyleAltDrag ' +\n        'GUICtrlToolbar_SetStyleCustomErase GUICtrlToolbar_SetStyleFlat ' +\n        'GUICtrlToolbar_SetStyleList GUICtrlToolbar_SetStyleRegisterDrop ' +\n        'GUICtrlToolbar_SetStyleToolTips ' +\n        'GUICtrlToolbar_SetStyleTransparent ' +\n        'GUICtrlToolbar_SetStyleWrapable GUICtrlToolbar_SetToolTips ' +\n        'GUICtrlToolbar_SetUnicodeFormat GUICtrlToolbar_SetWindowTheme ' +\n        'GUICtrlTreeView_Add GUICtrlTreeView_AddChild ' +\n        'GUICtrlTreeView_AddChildFirst GUICtrlTreeView_AddFirst ' +\n        'GUICtrlTreeView_BeginUpdate GUICtrlTreeView_ClickItem ' +\n        'GUICtrlTreeView_Create GUICtrlTreeView_CreateDragImage ' +\n        'GUICtrlTreeView_CreateSolidBitMap GUICtrlTreeView_Delete ' +\n        'GUICtrlTreeView_DeleteAll GUICtrlTreeView_DeleteChildren ' +\n        'GUICtrlTreeView_Destroy GUICtrlTreeView_DisplayRect ' +\n        'GUICtrlTreeView_DisplayRectEx GUICtrlTreeView_EditText ' +\n        'GUICtrlTreeView_EndEdit GUICtrlTreeView_EndUpdate ' +\n        'GUICtrlTreeView_EnsureVisible GUICtrlTreeView_Expand ' +\n        'GUICtrlTreeView_ExpandedOnce GUICtrlTreeView_FindItem ' +\n        'GUICtrlTreeView_FindItemEx GUICtrlTreeView_GetBkColor ' +\n        'GUICtrlTreeView_GetBold GUICtrlTreeView_GetChecked ' +\n        'GUICtrlTreeView_GetChildCount GUICtrlTreeView_GetChildren ' +\n        'GUICtrlTreeView_GetCount GUICtrlTreeView_GetCut ' +\n        'GUICtrlTreeView_GetDropTarget GUICtrlTreeView_GetEditControl ' +\n        'GUICtrlTreeView_GetExpanded GUICtrlTreeView_GetFirstChild ' +\n        'GUICtrlTreeView_GetFirstItem GUICtrlTreeView_GetFirstVisible ' +\n        'GUICtrlTreeView_GetFocused GUICtrlTreeView_GetHeight ' +\n        'GUICtrlTreeView_GetImageIndex ' +\n        'GUICtrlTreeView_GetImageListIconHandle ' +\n        'GUICtrlTreeView_GetIndent GUICtrlTreeView_GetInsertMarkColor ' +\n        'GUICtrlTreeView_GetISearchString GUICtrlTreeView_GetItemByIndex ' +\n        'GUICtrlTreeView_GetItemHandle GUICtrlTreeView_GetItemParam ' +\n        'GUICtrlTreeView_GetLastChild GUICtrlTreeView_GetLineColor ' +\n        'GUICtrlTreeView_GetNext GUICtrlTreeView_GetNextChild ' +\n        'GUICtrlTreeView_GetNextSibling GUICtrlTreeView_GetNextVisible ' +\n        'GUICtrlTreeView_GetNormalImageList ' +\n        'GUICtrlTreeView_GetParentHandle GUICtrlTreeView_GetParentParam ' +\n        'GUICtrlTreeView_GetPrev GUICtrlTreeView_GetPrevChild ' +\n        'GUICtrlTreeView_GetPrevSibling GUICtrlTreeView_GetPrevVisible ' +\n        'GUICtrlTreeView_GetScrollTime GUICtrlTreeView_GetSelected ' +\n        'GUICtrlTreeView_GetSelectedImageIndex ' +\n        'GUICtrlTreeView_GetSelection GUICtrlTreeView_GetSiblingCount ' +\n        'GUICtrlTreeView_GetState GUICtrlTreeView_GetStateImageIndex ' +\n        'GUICtrlTreeView_GetStateImageList GUICtrlTreeView_GetText ' +\n        'GUICtrlTreeView_GetTextColor GUICtrlTreeView_GetToolTips ' +\n        'GUICtrlTreeView_GetTree GUICtrlTreeView_GetUnicodeFormat ' +\n        'GUICtrlTreeView_GetVisible GUICtrlTreeView_GetVisibleCount ' +\n        'GUICtrlTreeView_HitTest GUICtrlTreeView_HitTestEx ' +\n        'GUICtrlTreeView_HitTestItem GUICtrlTreeView_Index ' +\n        'GUICtrlTreeView_InsertItem GUICtrlTreeView_IsFirstItem ' +\n        'GUICtrlTreeView_IsParent GUICtrlTreeView_Level ' +\n        'GUICtrlTreeView_SelectItem GUICtrlTreeView_SelectItemByIndex ' +\n        'GUICtrlTreeView_SetBkColor GUICtrlTreeView_SetBold ' +\n        'GUICtrlTreeView_SetChecked GUICtrlTreeView_SetCheckedByIndex ' +\n        'GUICtrlTreeView_SetChildren GUICtrlTreeView_SetCut ' +\n        'GUICtrlTreeView_SetDropTarget GUICtrlTreeView_SetFocused ' +\n        'GUICtrlTreeView_SetHeight GUICtrlTreeView_SetIcon ' +\n        'GUICtrlTreeView_SetImageIndex GUICtrlTreeView_SetIndent ' +\n        'GUICtrlTreeView_SetInsertMark ' +\n        'GUICtrlTreeView_SetInsertMarkColor ' +\n        'GUICtrlTreeView_SetItemHeight GUICtrlTreeView_SetItemParam ' +\n        'GUICtrlTreeView_SetLineColor GUICtrlTreeView_SetNormalImageList ' +\n        'GUICtrlTreeView_SetScrollTime GUICtrlTreeView_SetSelected ' +\n        'GUICtrlTreeView_SetSelectedImageIndex GUICtrlTreeView_SetState ' +\n        'GUICtrlTreeView_SetStateImageIndex ' +\n        'GUICtrlTreeView_SetStateImageList GUICtrlTreeView_SetText ' +\n        'GUICtrlTreeView_SetTextColor GUICtrlTreeView_SetToolTips ' +\n        'GUICtrlTreeView_SetUnicodeFormat GUICtrlTreeView_Sort ' +\n        'GUIImageList_Add GUIImageList_AddBitmap GUIImageList_AddIcon ' +\n        'GUIImageList_AddMasked GUIImageList_BeginDrag ' +\n        'GUIImageList_Copy GUIImageList_Create GUIImageList_Destroy ' +\n        'GUIImageList_DestroyIcon GUIImageList_DragEnter ' +\n        'GUIImageList_DragLeave GUIImageList_DragMove ' +\n        'GUIImageList_Draw GUIImageList_DrawEx GUIImageList_Duplicate ' +\n        'GUIImageList_EndDrag GUIImageList_GetBkColor ' +\n        'GUIImageList_GetIcon GUIImageList_GetIconHeight ' +\n        'GUIImageList_GetIconSize GUIImageList_GetIconSizeEx ' +\n        'GUIImageList_GetIconWidth GUIImageList_GetImageCount ' +\n        'GUIImageList_GetImageInfoEx GUIImageList_Remove ' +\n        'GUIImageList_ReplaceIcon GUIImageList_SetBkColor ' +\n        'GUIImageList_SetIconSize GUIImageList_SetImageCount ' +\n        'GUIImageList_Swap GUIScrollBars_EnableScrollBar ' +\n        'GUIScrollBars_GetScrollBarInfoEx GUIScrollBars_GetScrollBarRect ' +\n        'GUIScrollBars_GetScrollBarRGState ' +\n        'GUIScrollBars_GetScrollBarXYLineButton ' +\n        'GUIScrollBars_GetScrollBarXYThumbBottom ' +\n        'GUIScrollBars_GetScrollBarXYThumbTop ' +\n        'GUIScrollBars_GetScrollInfo GUIScrollBars_GetScrollInfoEx ' +\n        'GUIScrollBars_GetScrollInfoMax GUIScrollBars_GetScrollInfoMin ' +\n        'GUIScrollBars_GetScrollInfoPage GUIScrollBars_GetScrollInfoPos ' +\n        'GUIScrollBars_GetScrollInfoTrackPos GUIScrollBars_GetScrollPos ' +\n        'GUIScrollBars_GetScrollRange GUIScrollBars_Init ' +\n        'GUIScrollBars_ScrollWindow GUIScrollBars_SetScrollInfo ' +\n        'GUIScrollBars_SetScrollInfoMax GUIScrollBars_SetScrollInfoMin ' +\n        'GUIScrollBars_SetScrollInfoPage GUIScrollBars_SetScrollInfoPos ' +\n        'GUIScrollBars_SetScrollRange GUIScrollBars_ShowScrollBar ' +\n        'GUIToolTip_Activate GUIToolTip_AddTool GUIToolTip_AdjustRect ' +\n        'GUIToolTip_BitsToTTF GUIToolTip_Create GUIToolTip_Deactivate ' +\n        'GUIToolTip_DelTool GUIToolTip_Destroy GUIToolTip_EnumTools ' +\n        'GUIToolTip_GetBubbleHeight GUIToolTip_GetBubbleSize ' +\n        'GUIToolTip_GetBubbleWidth GUIToolTip_GetCurrentTool ' +\n        'GUIToolTip_GetDelayTime GUIToolTip_GetMargin ' +\n        'GUIToolTip_GetMarginEx GUIToolTip_GetMaxTipWidth ' +\n        'GUIToolTip_GetText GUIToolTip_GetTipBkColor ' +\n        'GUIToolTip_GetTipTextColor GUIToolTip_GetTitleBitMap ' +\n        'GUIToolTip_GetTitleText GUIToolTip_GetToolCount ' +\n        'GUIToolTip_GetToolInfo GUIToolTip_HitTest ' +\n        'GUIToolTip_NewToolRect GUIToolTip_Pop GUIToolTip_PopUp ' +\n        'GUIToolTip_SetDelayTime GUIToolTip_SetMargin ' +\n        'GUIToolTip_SetMaxTipWidth GUIToolTip_SetTipBkColor ' +\n        'GUIToolTip_SetTipTextColor GUIToolTip_SetTitle ' +\n        'GUIToolTip_SetToolInfo GUIToolTip_SetWindowTheme ' +\n        'GUIToolTip_ToolExists GUIToolTip_ToolToArray ' +\n        'GUIToolTip_TrackActivate GUIToolTip_TrackPosition ' +\n        'GUIToolTip_Update GUIToolTip_UpdateTipText HexToString ' +\n        'IEAction IEAttach IEBodyReadHTML IEBodyReadText ' +\n        'IEBodyWriteHTML IECreate IECreateEmbedded IEDocGetObj ' +\n        'IEDocInsertHTML IEDocInsertText IEDocReadHTML ' +\n        'IEDocWriteHTML IEErrorNotify IEFormElementCheckBoxSelect ' +\n        'IEFormElementGetCollection IEFormElementGetObjByName ' +\n        'IEFormElementGetValue IEFormElementOptionSelect ' +\n        'IEFormElementRadioSelect IEFormElementSetValue ' +\n        'IEFormGetCollection IEFormGetObjByName IEFormImageClick ' +\n        'IEFormReset IEFormSubmit IEFrameGetCollection ' +\n        'IEFrameGetObjByName IEGetObjById IEGetObjByName ' +\n        'IEHeadInsertEventScript IEImgClick IEImgGetCollection ' +\n        'IEIsFrameSet IELinkClickByIndex IELinkClickByText ' +\n        'IELinkGetCollection IELoadWait IELoadWaitTimeout IENavigate ' +\n        'IEPropertyGet IEPropertySet IEQuit IETableGetCollection ' +\n        'IETableWriteToArray IETagNameAllGetCollection ' +\n        'IETagNameGetCollection IE_Example IE_Introduction ' +\n        'IE_VersionInfo INetExplorerCapable INetGetSource INetMail ' +\n        'INetSmtpMail IsPressed MathCheckDiv Max MemGlobalAlloc ' +\n        'MemGlobalFree MemGlobalLock MemGlobalSize MemGlobalUnlock ' +\n        'MemMoveMemory MemVirtualAlloc MemVirtualAllocEx ' +\n        'MemVirtualFree MemVirtualFreeEx Min MouseTrap ' +\n        'NamedPipes_CallNamedPipe NamedPipes_ConnectNamedPipe ' +\n        'NamedPipes_CreateNamedPipe NamedPipes_CreatePipe ' +\n        'NamedPipes_DisconnectNamedPipe ' +\n        'NamedPipes_GetNamedPipeHandleState NamedPipes_GetNamedPipeInfo ' +\n        'NamedPipes_PeekNamedPipe NamedPipes_SetNamedPipeHandleState ' +\n        'NamedPipes_TransactNamedPipe NamedPipes_WaitNamedPipe ' +\n        'Net_Share_ConnectionEnum Net_Share_FileClose ' +\n        'Net_Share_FileEnum Net_Share_FileGetInfo Net_Share_PermStr ' +\n        'Net_Share_ResourceStr Net_Share_SessionDel ' +\n        'Net_Share_SessionEnum Net_Share_SessionGetInfo ' +\n        'Net_Share_ShareAdd Net_Share_ShareCheck Net_Share_ShareDel ' +\n        'Net_Share_ShareEnum Net_Share_ShareGetInfo ' +\n        'Net_Share_ShareSetInfo Net_Share_StatisticsGetSvr ' +\n        'Net_Share_StatisticsGetWrk Now NowCalc NowCalcDate ' +\n        'NowDate NowTime PathFull PathGetRelative PathMake ' +\n        'PathSplit ProcessGetName ProcessGetPriority Radian ' +\n        'ReplaceStringInFile RunDos ScreenCapture_Capture ' +\n        'ScreenCapture_CaptureWnd ScreenCapture_SaveImage ' +\n        'ScreenCapture_SetBMPFormat ScreenCapture_SetJPGQuality ' +\n        'ScreenCapture_SetTIFColorDepth ScreenCapture_SetTIFCompression ' +\n        'Security__AdjustTokenPrivileges ' +\n        'Security__CreateProcessWithToken Security__DuplicateTokenEx ' +\n        'Security__GetAccountSid Security__GetLengthSid ' +\n        'Security__GetTokenInformation Security__ImpersonateSelf ' +\n        'Security__IsValidSid Security__LookupAccountName ' +\n        'Security__LookupAccountSid Security__LookupPrivilegeValue ' +\n        'Security__OpenProcessToken Security__OpenThreadToken ' +\n        'Security__OpenThreadTokenEx Security__SetPrivilege ' +\n        'Security__SetTokenInformation Security__SidToStringSid ' +\n        'Security__SidTypeStr Security__StringSidToSid SendMessage ' +\n        'SendMessageA SetDate SetTime Singleton SoundClose ' +\n        'SoundLength SoundOpen SoundPause SoundPlay SoundPos ' +\n        'SoundResume SoundSeek SoundStatus SoundStop ' +\n        'SQLite_Changes SQLite_Close SQLite_Display2DResult ' +\n        'SQLite_Encode SQLite_ErrCode SQLite_ErrMsg SQLite_Escape ' +\n        'SQLite_Exec SQLite_FastEncode SQLite_FastEscape ' +\n        'SQLite_FetchData SQLite_FetchNames SQLite_GetTable ' +\n        'SQLite_GetTable2d SQLite_LastInsertRowID SQLite_LibVersion ' +\n        'SQLite_Open SQLite_Query SQLite_QueryFinalize ' +\n        'SQLite_QueryReset SQLite_QuerySingleRow SQLite_SafeMode ' +\n        'SQLite_SetTimeout SQLite_Shutdown SQLite_SQLiteExe ' +\n        'SQLite_Startup SQLite_TotalChanges StringBetween ' +\n        'StringExplode StringInsert StringProper StringRepeat ' +\n        'StringTitleCase StringToHex TCPIpToName TempFile ' +\n        'TicksToTime Timer_Diff Timer_GetIdleTime Timer_GetTimerID ' +\n        'Timer_Init Timer_KillAllTimers Timer_KillTimer ' +\n        'Timer_SetTimer TimeToTicks VersionCompare viClose ' +\n        'viExecCommand viFindGpib viGpibBusReset viGTL ' +\n        'viInteractiveControl viOpen viSetAttribute viSetTimeout ' +\n        'WeekNumberISO WinAPI_AbortPath WinAPI_ActivateKeyboardLayout ' +\n        'WinAPI_AddClipboardFormatListener WinAPI_AddFontMemResourceEx ' +\n        'WinAPI_AddFontResourceEx WinAPI_AddIconOverlay ' +\n        'WinAPI_AddIconTransparency WinAPI_AddMRUString ' +\n        'WinAPI_AdjustBitmap WinAPI_AdjustTokenPrivileges ' +\n        'WinAPI_AdjustWindowRectEx WinAPI_AlphaBlend WinAPI_AngleArc ' +\n        'WinAPI_AnimateWindow WinAPI_Arc WinAPI_ArcTo ' +\n        'WinAPI_ArrayToStruct WinAPI_AssignProcessToJobObject ' +\n        'WinAPI_AssocGetPerceivedType WinAPI_AssocQueryString ' +\n        'WinAPI_AttachConsole WinAPI_AttachThreadInput ' +\n        'WinAPI_BackupRead WinAPI_BackupReadAbort WinAPI_BackupSeek ' +\n        'WinAPI_BackupWrite WinAPI_BackupWriteAbort WinAPI_Beep ' +\n        'WinAPI_BeginBufferedPaint WinAPI_BeginDeferWindowPos ' +\n        'WinAPI_BeginPaint WinAPI_BeginPath WinAPI_BeginUpdateResource ' +\n        'WinAPI_BitBlt WinAPI_BringWindowToTop ' +\n        'WinAPI_BroadcastSystemMessage WinAPI_BrowseForFolderDlg ' +\n        'WinAPI_BufferedPaintClear WinAPI_BufferedPaintInit ' +\n        'WinAPI_BufferedPaintSetAlpha WinAPI_BufferedPaintUnInit ' +\n        'WinAPI_CallNextHookEx WinAPI_CallWindowProc ' +\n        'WinAPI_CallWindowProcW WinAPI_CascadeWindows ' +\n        'WinAPI_ChangeWindowMessageFilterEx WinAPI_CharToOem ' +\n        'WinAPI_ChildWindowFromPointEx WinAPI_ClientToScreen ' +\n        'WinAPI_ClipCursor WinAPI_CloseDesktop WinAPI_CloseEnhMetaFile ' +\n        'WinAPI_CloseFigure WinAPI_CloseHandle WinAPI_CloseThemeData ' +\n        'WinAPI_CloseWindow WinAPI_CloseWindowStation ' +\n        'WinAPI_CLSIDFromProgID WinAPI_CoInitialize ' +\n        'WinAPI_ColorAdjustLuma WinAPI_ColorHLSToRGB ' +\n        'WinAPI_ColorRGBToHLS WinAPI_CombineRgn ' +\n        'WinAPI_CombineTransform WinAPI_CommandLineToArgv ' +\n        'WinAPI_CommDlgExtendedError WinAPI_CommDlgExtendedErrorEx ' +\n        'WinAPI_CompareString WinAPI_CompressBitmapBits ' +\n        'WinAPI_CompressBuffer WinAPI_ComputeCrc32 ' +\n        'WinAPI_ConfirmCredentials WinAPI_CopyBitmap WinAPI_CopyCursor ' +\n        'WinAPI_CopyEnhMetaFile WinAPI_CopyFileEx WinAPI_CopyIcon ' +\n        'WinAPI_CopyImage WinAPI_CopyRect WinAPI_CopyStruct ' +\n        'WinAPI_CoTaskMemAlloc WinAPI_CoTaskMemFree ' +\n        'WinAPI_CoTaskMemRealloc WinAPI_CoUninitialize ' +\n        'WinAPI_Create32BitHBITMAP WinAPI_Create32BitHICON ' +\n        'WinAPI_CreateANDBitmap WinAPI_CreateBitmap ' +\n        'WinAPI_CreateBitmapIndirect WinAPI_CreateBrushIndirect ' +\n        'WinAPI_CreateBuffer WinAPI_CreateBufferFromStruct ' +\n        'WinAPI_CreateCaret WinAPI_CreateColorAdjustment ' +\n        'WinAPI_CreateCompatibleBitmap WinAPI_CreateCompatibleBitmapEx ' +\n        'WinAPI_CreateCompatibleDC WinAPI_CreateDesktop ' +\n        'WinAPI_CreateDIB WinAPI_CreateDIBColorTable ' +\n        'WinAPI_CreateDIBitmap WinAPI_CreateDIBSection ' +\n        'WinAPI_CreateDirectory WinAPI_CreateDirectoryEx ' +\n        'WinAPI_CreateEllipticRgn WinAPI_CreateEmptyIcon ' +\n        'WinAPI_CreateEnhMetaFile WinAPI_CreateEvent WinAPI_CreateFile ' +\n        'WinAPI_CreateFileEx WinAPI_CreateFileMapping ' +\n        'WinAPI_CreateFont WinAPI_CreateFontEx ' +\n        'WinAPI_CreateFontIndirect WinAPI_CreateGUID ' +\n        'WinAPI_CreateHardLink WinAPI_CreateIcon ' +\n        'WinAPI_CreateIconFromResourceEx WinAPI_CreateIconIndirect ' +\n        'WinAPI_CreateJobObject WinAPI_CreateMargins ' +\n        'WinAPI_CreateMRUList WinAPI_CreateMutex WinAPI_CreateNullRgn ' +\n        'WinAPI_CreateNumberFormatInfo WinAPI_CreateObjectID ' +\n        'WinAPI_CreatePen WinAPI_CreatePoint WinAPI_CreatePolygonRgn ' +\n        'WinAPI_CreateProcess WinAPI_CreateProcessWithToken ' +\n        'WinAPI_CreateRect WinAPI_CreateRectEx WinAPI_CreateRectRgn ' +\n        'WinAPI_CreateRectRgnIndirect WinAPI_CreateRoundRectRgn ' +\n        'WinAPI_CreateSemaphore WinAPI_CreateSize ' +\n        'WinAPI_CreateSolidBitmap WinAPI_CreateSolidBrush ' +\n        'WinAPI_CreateStreamOnHGlobal WinAPI_CreateString ' +\n        'WinAPI_CreateSymbolicLink WinAPI_CreateTransform ' +\n        'WinAPI_CreateWindowEx WinAPI_CreateWindowStation ' +\n        'WinAPI_DecompressBuffer WinAPI_DecryptFile ' +\n        'WinAPI_DeferWindowPos WinAPI_DefineDosDevice ' +\n        'WinAPI_DefRawInputProc WinAPI_DefSubclassProc ' +\n        'WinAPI_DefWindowProc WinAPI_DefWindowProcW WinAPI_DeleteDC ' +\n        'WinAPI_DeleteEnhMetaFile WinAPI_DeleteFile ' +\n        'WinAPI_DeleteObject WinAPI_DeleteObjectID ' +\n        'WinAPI_DeleteVolumeMountPoint WinAPI_DeregisterShellHookWindow ' +\n        'WinAPI_DestroyCaret WinAPI_DestroyCursor WinAPI_DestroyIcon ' +\n        'WinAPI_DestroyWindow WinAPI_DeviceIoControl ' +\n        'WinAPI_DisplayStruct WinAPI_DllGetVersion WinAPI_DllInstall ' +\n        'WinAPI_DllUninstall WinAPI_DPtoLP WinAPI_DragAcceptFiles ' +\n        'WinAPI_DragFinish WinAPI_DragQueryFileEx ' +\n        'WinAPI_DragQueryPoint WinAPI_DrawAnimatedRects ' +\n        'WinAPI_DrawBitmap WinAPI_DrawEdge WinAPI_DrawFocusRect ' +\n        'WinAPI_DrawFrameControl WinAPI_DrawIcon WinAPI_DrawIconEx ' +\n        'WinAPI_DrawLine WinAPI_DrawShadowText WinAPI_DrawText ' +\n        'WinAPI_DrawThemeBackground WinAPI_DrawThemeEdge ' +\n        'WinAPI_DrawThemeIcon WinAPI_DrawThemeParentBackground ' +\n        'WinAPI_DrawThemeText WinAPI_DrawThemeTextEx ' +\n        'WinAPI_DuplicateEncryptionInfoFile WinAPI_DuplicateHandle ' +\n        'WinAPI_DuplicateTokenEx WinAPI_DwmDefWindowProc ' +\n        'WinAPI_DwmEnableBlurBehindWindow WinAPI_DwmEnableComposition ' +\n        'WinAPI_DwmExtendFrameIntoClientArea ' +\n        'WinAPI_DwmGetColorizationColor ' +\n        'WinAPI_DwmGetColorizationParameters ' +\n        'WinAPI_DwmGetWindowAttribute WinAPI_DwmInvalidateIconicBitmaps ' +\n        'WinAPI_DwmIsCompositionEnabled ' +\n        'WinAPI_DwmQueryThumbnailSourceSize WinAPI_DwmRegisterThumbnail ' +\n        'WinAPI_DwmSetColorizationParameters ' +\n        'WinAPI_DwmSetIconicLivePreviewBitmap ' +\n        'WinAPI_DwmSetIconicThumbnail WinAPI_DwmSetWindowAttribute ' +\n        'WinAPI_DwmUnregisterThumbnail ' +\n        'WinAPI_DwmUpdateThumbnailProperties WinAPI_DWordToFloat ' +\n        'WinAPI_DWordToInt WinAPI_EjectMedia WinAPI_Ellipse ' +\n        'WinAPI_EmptyWorkingSet WinAPI_EnableWindow WinAPI_EncryptFile ' +\n        'WinAPI_EncryptionDisable WinAPI_EndBufferedPaint ' +\n        'WinAPI_EndDeferWindowPos WinAPI_EndPaint WinAPI_EndPath ' +\n        'WinAPI_EndUpdateResource WinAPI_EnumChildProcess ' +\n        'WinAPI_EnumChildWindows WinAPI_EnumDesktops ' +\n        'WinAPI_EnumDesktopWindows WinAPI_EnumDeviceDrivers ' +\n        'WinAPI_EnumDisplayDevices WinAPI_EnumDisplayMonitors ' +\n        'WinAPI_EnumDisplaySettings WinAPI_EnumDllProc ' +\n        'WinAPI_EnumFiles WinAPI_EnumFileStreams ' +\n        'WinAPI_EnumFontFamilies WinAPI_EnumHardLinks ' +\n        'WinAPI_EnumMRUList WinAPI_EnumPageFiles ' +\n        'WinAPI_EnumProcessHandles WinAPI_EnumProcessModules ' +\n        'WinAPI_EnumProcessThreads WinAPI_EnumProcessWindows ' +\n        'WinAPI_EnumRawInputDevices WinAPI_EnumResourceLanguages ' +\n        'WinAPI_EnumResourceNames WinAPI_EnumResourceTypes ' +\n        'WinAPI_EnumSystemGeoID WinAPI_EnumSystemLocales ' +\n        'WinAPI_EnumUILanguages WinAPI_EnumWindows ' +\n        'WinAPI_EnumWindowsPopup WinAPI_EnumWindowStations ' +\n        'WinAPI_EnumWindowsTop WinAPI_EqualMemory WinAPI_EqualRect ' +\n        'WinAPI_EqualRgn WinAPI_ExcludeClipRect ' +\n        'WinAPI_ExpandEnvironmentStrings WinAPI_ExtCreatePen ' +\n        'WinAPI_ExtCreateRegion WinAPI_ExtFloodFill WinAPI_ExtractIcon ' +\n        'WinAPI_ExtractIconEx WinAPI_ExtSelectClipRgn ' +\n        'WinAPI_FatalAppExit WinAPI_FatalExit ' +\n        'WinAPI_FileEncryptionStatus WinAPI_FileExists ' +\n        'WinAPI_FileIconInit WinAPI_FileInUse WinAPI_FillMemory ' +\n        'WinAPI_FillPath WinAPI_FillRect WinAPI_FillRgn ' +\n        'WinAPI_FindClose WinAPI_FindCloseChangeNotification ' +\n        'WinAPI_FindExecutable WinAPI_FindFirstChangeNotification ' +\n        'WinAPI_FindFirstFile WinAPI_FindFirstFileName ' +\n        'WinAPI_FindFirstStream WinAPI_FindNextChangeNotification ' +\n        'WinAPI_FindNextFile WinAPI_FindNextFileName ' +\n        'WinAPI_FindNextStream WinAPI_FindResource ' +\n        'WinAPI_FindResourceEx WinAPI_FindTextDlg WinAPI_FindWindow ' +\n        'WinAPI_FlashWindow WinAPI_FlashWindowEx WinAPI_FlattenPath ' +\n        'WinAPI_FloatToDWord WinAPI_FloatToInt WinAPI_FlushFileBuffers ' +\n        'WinAPI_FlushFRBuffer WinAPI_FlushViewOfFile ' +\n        'WinAPI_FormatDriveDlg WinAPI_FormatMessage WinAPI_FrameRect ' +\n        'WinAPI_FrameRgn WinAPI_FreeLibrary WinAPI_FreeMemory ' +\n        'WinAPI_FreeMRUList WinAPI_FreeResource WinAPI_GdiComment ' +\n        'WinAPI_GetActiveWindow WinAPI_GetAllUsersProfileDirectory ' +\n        'WinAPI_GetAncestor WinAPI_GetApplicationRestartSettings ' +\n        'WinAPI_GetArcDirection WinAPI_GetAsyncKeyState ' +\n        'WinAPI_GetBinaryType WinAPI_GetBitmapBits ' +\n        'WinAPI_GetBitmapDimension WinAPI_GetBitmapDimensionEx ' +\n        'WinAPI_GetBkColor WinAPI_GetBkMode WinAPI_GetBoundsRect ' +\n        'WinAPI_GetBrushOrg WinAPI_GetBufferedPaintBits ' +\n        'WinAPI_GetBufferedPaintDC WinAPI_GetBufferedPaintTargetDC ' +\n        'WinAPI_GetBufferedPaintTargetRect WinAPI_GetBValue ' +\n        'WinAPI_GetCaretBlinkTime WinAPI_GetCaretPos WinAPI_GetCDType ' +\n        'WinAPI_GetClassInfoEx WinAPI_GetClassLongEx ' +\n        'WinAPI_GetClassName WinAPI_GetClientHeight ' +\n        'WinAPI_GetClientRect WinAPI_GetClientWidth ' +\n        'WinAPI_GetClipboardSequenceNumber WinAPI_GetClipBox ' +\n        'WinAPI_GetClipCursor WinAPI_GetClipRgn ' +\n        'WinAPI_GetColorAdjustment WinAPI_GetCompressedFileSize ' +\n        'WinAPI_GetCompression WinAPI_GetConnectedDlg ' +\n        'WinAPI_GetCurrentDirectory WinAPI_GetCurrentHwProfile ' +\n        'WinAPI_GetCurrentObject WinAPI_GetCurrentPosition ' +\n        'WinAPI_GetCurrentProcess ' +\n        'WinAPI_GetCurrentProcessExplicitAppUserModelID ' +\n        'WinAPI_GetCurrentProcessID WinAPI_GetCurrentThemeName ' +\n        'WinAPI_GetCurrentThread WinAPI_GetCurrentThreadId ' +\n        'WinAPI_GetCursor WinAPI_GetCursorInfo WinAPI_GetDateFormat ' +\n        'WinAPI_GetDC WinAPI_GetDCEx WinAPI_GetDefaultPrinter ' +\n        'WinAPI_GetDefaultUserProfileDirectory WinAPI_GetDesktopWindow ' +\n        'WinAPI_GetDeviceCaps WinAPI_GetDeviceDriverBaseName ' +\n        'WinAPI_GetDeviceDriverFileName WinAPI_GetDeviceGammaRamp ' +\n        'WinAPI_GetDIBColorTable WinAPI_GetDIBits ' +\n        'WinAPI_GetDiskFreeSpaceEx WinAPI_GetDlgCtrlID ' +\n        'WinAPI_GetDlgItem WinAPI_GetDllDirectory ' +\n        'WinAPI_GetDriveBusType WinAPI_GetDriveGeometryEx ' +\n        'WinAPI_GetDriveNumber WinAPI_GetDriveType ' +\n        'WinAPI_GetDurationFormat WinAPI_GetEffectiveClientRect ' +\n        'WinAPI_GetEnhMetaFile WinAPI_GetEnhMetaFileBits ' +\n        'WinAPI_GetEnhMetaFileDescription WinAPI_GetEnhMetaFileDimension ' +\n        'WinAPI_GetEnhMetaFileHeader WinAPI_GetErrorMessage ' +\n        'WinAPI_GetErrorMode WinAPI_GetExitCodeProcess ' +\n        'WinAPI_GetExtended WinAPI_GetFileAttributes WinAPI_GetFileID ' +\n        'WinAPI_GetFileInformationByHandle ' +\n        'WinAPI_GetFileInformationByHandleEx WinAPI_GetFilePointerEx ' +\n        'WinAPI_GetFileSizeEx WinAPI_GetFileSizeOnDisk ' +\n        'WinAPI_GetFileTitle WinAPI_GetFileType ' +\n        'WinAPI_GetFileVersionInfo WinAPI_GetFinalPathNameByHandle ' +\n        'WinAPI_GetFinalPathNameByHandleEx WinAPI_GetFocus ' +\n        'WinAPI_GetFontMemoryResourceInfo WinAPI_GetFontName ' +\n        'WinAPI_GetFontResourceInfo WinAPI_GetForegroundWindow ' +\n        'WinAPI_GetFRBuffer WinAPI_GetFullPathName WinAPI_GetGeoInfo ' +\n        'WinAPI_GetGlyphOutline WinAPI_GetGraphicsMode ' +\n        'WinAPI_GetGuiResources WinAPI_GetGUIThreadInfo ' +\n        'WinAPI_GetGValue WinAPI_GetHandleInformation ' +\n        'WinAPI_GetHGlobalFromStream WinAPI_GetIconDimension ' +\n        'WinAPI_GetIconInfo WinAPI_GetIconInfoEx WinAPI_GetIdleTime ' +\n        'WinAPI_GetKeyboardLayout WinAPI_GetKeyboardLayoutList ' +\n        'WinAPI_GetKeyboardState WinAPI_GetKeyboardType ' +\n        'WinAPI_GetKeyNameText WinAPI_GetKeyState ' +\n        'WinAPI_GetLastActivePopup WinAPI_GetLastError ' +\n        'WinAPI_GetLastErrorMessage WinAPI_GetLayeredWindowAttributes ' +\n        'WinAPI_GetLocaleInfo WinAPI_GetLogicalDrives ' +\n        'WinAPI_GetMapMode WinAPI_GetMemorySize ' +\n        'WinAPI_GetMessageExtraInfo WinAPI_GetModuleFileNameEx ' +\n        'WinAPI_GetModuleHandle WinAPI_GetModuleHandleEx ' +\n        'WinAPI_GetModuleInformation WinAPI_GetMonitorInfo ' +\n        'WinAPI_GetMousePos WinAPI_GetMousePosX WinAPI_GetMousePosY ' +\n        'WinAPI_GetMUILanguage WinAPI_GetNumberFormat WinAPI_GetObject ' +\n        'WinAPI_GetObjectID WinAPI_GetObjectInfoByHandle ' +\n        'WinAPI_GetObjectNameByHandle WinAPI_GetObjectType ' +\n        'WinAPI_GetOpenFileName WinAPI_GetOutlineTextMetrics ' +\n        'WinAPI_GetOverlappedResult WinAPI_GetParent ' +\n        'WinAPI_GetParentProcess WinAPI_GetPerformanceInfo ' +\n        'WinAPI_GetPEType WinAPI_GetPhysicallyInstalledSystemMemory ' +\n        'WinAPI_GetPixel WinAPI_GetPolyFillMode WinAPI_GetPosFromRect ' +\n        'WinAPI_GetPriorityClass WinAPI_GetProcAddress ' +\n        'WinAPI_GetProcessAffinityMask WinAPI_GetProcessCommandLine ' +\n        'WinAPI_GetProcessFileName WinAPI_GetProcessHandleCount ' +\n        'WinAPI_GetProcessID WinAPI_GetProcessIoCounters ' +\n        'WinAPI_GetProcessMemoryInfo WinAPI_GetProcessName ' +\n        'WinAPI_GetProcessShutdownParameters WinAPI_GetProcessTimes ' +\n        'WinAPI_GetProcessUser WinAPI_GetProcessWindowStation ' +\n        'WinAPI_GetProcessWorkingDirectory WinAPI_GetProfilesDirectory ' +\n        'WinAPI_GetPwrCapabilities WinAPI_GetRawInputBuffer ' +\n        'WinAPI_GetRawInputBufferLength WinAPI_GetRawInputData ' +\n        'WinAPI_GetRawInputDeviceInfo WinAPI_GetRegionData ' +\n        'WinAPI_GetRegisteredRawInputDevices ' +\n        'WinAPI_GetRegKeyNameByHandle WinAPI_GetRgnBox WinAPI_GetROP2 ' +\n        'WinAPI_GetRValue WinAPI_GetSaveFileName WinAPI_GetShellWindow ' +\n        'WinAPI_GetStartupInfo WinAPI_GetStdHandle ' +\n        'WinAPI_GetStockObject WinAPI_GetStretchBltMode ' +\n        'WinAPI_GetString WinAPI_GetSysColor WinAPI_GetSysColorBrush ' +\n        'WinAPI_GetSystemDefaultLangID WinAPI_GetSystemDefaultLCID ' +\n        'WinAPI_GetSystemDefaultUILanguage WinAPI_GetSystemDEPPolicy ' +\n        'WinAPI_GetSystemInfo WinAPI_GetSystemMetrics ' +\n        'WinAPI_GetSystemPowerStatus WinAPI_GetSystemTimes ' +\n        'WinAPI_GetSystemWow64Directory WinAPI_GetTabbedTextExtent ' +\n        'WinAPI_GetTempFileName WinAPI_GetTextAlign ' +\n        'WinAPI_GetTextCharacterExtra WinAPI_GetTextColor ' +\n        'WinAPI_GetTextExtentPoint32 WinAPI_GetTextFace ' +\n        'WinAPI_GetTextMetrics WinAPI_GetThemeAppProperties ' +\n        'WinAPI_GetThemeBackgroundContentRect ' +\n        'WinAPI_GetThemeBackgroundExtent WinAPI_GetThemeBackgroundRegion ' +\n        'WinAPI_GetThemeBitmap WinAPI_GetThemeBool ' +\n        'WinAPI_GetThemeColor WinAPI_GetThemeDocumentationProperty ' +\n        'WinAPI_GetThemeEnumValue WinAPI_GetThemeFilename ' +\n        'WinAPI_GetThemeFont WinAPI_GetThemeInt WinAPI_GetThemeMargins ' +\n        'WinAPI_GetThemeMetric WinAPI_GetThemePartSize ' +\n        'WinAPI_GetThemePosition WinAPI_GetThemePropertyOrigin ' +\n        'WinAPI_GetThemeRect WinAPI_GetThemeString ' +\n        'WinAPI_GetThemeSysBool WinAPI_GetThemeSysColor ' +\n        'WinAPI_GetThemeSysColorBrush WinAPI_GetThemeSysFont ' +\n        'WinAPI_GetThemeSysInt WinAPI_GetThemeSysSize ' +\n        'WinAPI_GetThemeSysString WinAPI_GetThemeTextExtent ' +\n        'WinAPI_GetThemeTextMetrics WinAPI_GetThemeTransitionDuration ' +\n        'WinAPI_GetThreadDesktop WinAPI_GetThreadErrorMode ' +\n        'WinAPI_GetThreadLocale WinAPI_GetThreadUILanguage ' +\n        'WinAPI_GetTickCount WinAPI_GetTickCount64 ' +\n        'WinAPI_GetTimeFormat WinAPI_GetTopWindow ' +\n        'WinAPI_GetUDFColorMode WinAPI_GetUpdateRect ' +\n        'WinAPI_GetUpdateRgn WinAPI_GetUserDefaultLangID ' +\n        'WinAPI_GetUserDefaultLCID WinAPI_GetUserDefaultUILanguage ' +\n        'WinAPI_GetUserGeoID WinAPI_GetUserObjectInformation ' +\n        'WinAPI_GetVersion WinAPI_GetVersionEx ' +\n        'WinAPI_GetVolumeInformation WinAPI_GetVolumeInformationByHandle ' +\n        'WinAPI_GetVolumeNameForVolumeMountPoint WinAPI_GetWindow ' +\n        'WinAPI_GetWindowDC WinAPI_GetWindowDisplayAffinity ' +\n        'WinAPI_GetWindowExt WinAPI_GetWindowFileName ' +\n        'WinAPI_GetWindowHeight WinAPI_GetWindowInfo ' +\n        'WinAPI_GetWindowLong WinAPI_GetWindowOrg ' +\n        'WinAPI_GetWindowPlacement WinAPI_GetWindowRect ' +\n        'WinAPI_GetWindowRgn WinAPI_GetWindowRgnBox ' +\n        'WinAPI_GetWindowSubclass WinAPI_GetWindowText ' +\n        'WinAPI_GetWindowTheme WinAPI_GetWindowThreadProcessId ' +\n        'WinAPI_GetWindowWidth WinAPI_GetWorkArea ' +\n        'WinAPI_GetWorldTransform WinAPI_GetXYFromPoint ' +\n        'WinAPI_GlobalMemoryStatus WinAPI_GradientFill ' +\n        'WinAPI_GUIDFromString WinAPI_GUIDFromStringEx WinAPI_HashData ' +\n        'WinAPI_HashString WinAPI_HiByte WinAPI_HideCaret ' +\n        'WinAPI_HiDWord WinAPI_HiWord WinAPI_InflateRect ' +\n        'WinAPI_InitMUILanguage WinAPI_InProcess ' +\n        'WinAPI_IntersectClipRect WinAPI_IntersectRect ' +\n        'WinAPI_IntToDWord WinAPI_IntToFloat WinAPI_InvalidateRect ' +\n        'WinAPI_InvalidateRgn WinAPI_InvertANDBitmap ' +\n        'WinAPI_InvertColor WinAPI_InvertRect WinAPI_InvertRgn ' +\n        'WinAPI_IOCTL WinAPI_IsAlphaBitmap WinAPI_IsBadCodePtr ' +\n        'WinAPI_IsBadReadPtr WinAPI_IsBadStringPtr ' +\n        'WinAPI_IsBadWritePtr WinAPI_IsChild WinAPI_IsClassName ' +\n        'WinAPI_IsDoorOpen WinAPI_IsElevated WinAPI_IsHungAppWindow ' +\n        'WinAPI_IsIconic WinAPI_IsInternetConnected ' +\n        'WinAPI_IsLoadKBLayout WinAPI_IsMemory ' +\n        'WinAPI_IsNameInExpression WinAPI_IsNetworkAlive ' +\n        'WinAPI_IsPathShared WinAPI_IsProcessInJob ' +\n        'WinAPI_IsProcessorFeaturePresent WinAPI_IsRectEmpty ' +\n        'WinAPI_IsThemeActive ' +\n        'WinAPI_IsThemeBackgroundPartiallyTransparent ' +\n        'WinAPI_IsThemePartDefined WinAPI_IsValidLocale ' +\n        'WinAPI_IsWindow WinAPI_IsWindowEnabled WinAPI_IsWindowUnicode ' +\n        'WinAPI_IsWindowVisible WinAPI_IsWow64Process ' +\n        'WinAPI_IsWritable WinAPI_IsZoomed WinAPI_Keybd_Event ' +\n        'WinAPI_KillTimer WinAPI_LineDDA WinAPI_LineTo ' +\n        'WinAPI_LoadBitmap WinAPI_LoadCursor WinAPI_LoadCursorFromFile ' +\n        'WinAPI_LoadIcon WinAPI_LoadIconMetric ' +\n        'WinAPI_LoadIconWithScaleDown WinAPI_LoadImage ' +\n        'WinAPI_LoadIndirectString WinAPI_LoadKeyboardLayout ' +\n        'WinAPI_LoadLibrary WinAPI_LoadLibraryEx WinAPI_LoadMedia ' +\n        'WinAPI_LoadResource WinAPI_LoadShell32Icon WinAPI_LoadString ' +\n        'WinAPI_LoadStringEx WinAPI_LoByte WinAPI_LocalFree ' +\n        'WinAPI_LockDevice WinAPI_LockFile WinAPI_LockResource ' +\n        'WinAPI_LockWindowUpdate WinAPI_LockWorkStation WinAPI_LoDWord ' +\n        'WinAPI_LongMid WinAPI_LookupIconIdFromDirectoryEx ' +\n        'WinAPI_LoWord WinAPI_LPtoDP WinAPI_MAKELANGID ' +\n        'WinAPI_MAKELCID WinAPI_MakeLong WinAPI_MakeQWord ' +\n        'WinAPI_MakeWord WinAPI_MapViewOfFile WinAPI_MapVirtualKey ' +\n        'WinAPI_MaskBlt WinAPI_MessageBeep WinAPI_MessageBoxCheck ' +\n        'WinAPI_MessageBoxIndirect WinAPI_MirrorIcon ' +\n        'WinAPI_ModifyWorldTransform WinAPI_MonitorFromPoint ' +\n        'WinAPI_MonitorFromRect WinAPI_MonitorFromWindow ' +\n        'WinAPI_Mouse_Event WinAPI_MoveFileEx WinAPI_MoveMemory ' +\n        'WinAPI_MoveTo WinAPI_MoveToEx WinAPI_MoveWindow ' +\n        'WinAPI_MsgBox WinAPI_MulDiv WinAPI_MultiByteToWideChar ' +\n        'WinAPI_MultiByteToWideCharEx WinAPI_NtStatusToDosError ' +\n        'WinAPI_OemToChar WinAPI_OffsetClipRgn WinAPI_OffsetPoints ' +\n        'WinAPI_OffsetRect WinAPI_OffsetRgn WinAPI_OffsetWindowOrg ' +\n        'WinAPI_OpenDesktop WinAPI_OpenFileById WinAPI_OpenFileDlg ' +\n        'WinAPI_OpenFileMapping WinAPI_OpenIcon ' +\n        'WinAPI_OpenInputDesktop WinAPI_OpenJobObject WinAPI_OpenMutex ' +\n        'WinAPI_OpenProcess WinAPI_OpenProcessToken ' +\n        'WinAPI_OpenSemaphore WinAPI_OpenThemeData ' +\n        'WinAPI_OpenWindowStation WinAPI_PageSetupDlg ' +\n        'WinAPI_PaintDesktop WinAPI_PaintRgn WinAPI_ParseURL ' +\n        'WinAPI_ParseUserName WinAPI_PatBlt WinAPI_PathAddBackslash ' +\n        'WinAPI_PathAddExtension WinAPI_PathAppend ' +\n        'WinAPI_PathBuildRoot WinAPI_PathCanonicalize ' +\n        'WinAPI_PathCommonPrefix WinAPI_PathCompactPath ' +\n        'WinAPI_PathCompactPathEx WinAPI_PathCreateFromUrl ' +\n        'WinAPI_PathFindExtension WinAPI_PathFindFileName ' +\n        'WinAPI_PathFindNextComponent WinAPI_PathFindOnPath ' +\n        'WinAPI_PathGetArgs WinAPI_PathGetCharType ' +\n        'WinAPI_PathGetDriveNumber WinAPI_PathIsContentType ' +\n        'WinAPI_PathIsDirectory WinAPI_PathIsDirectoryEmpty ' +\n        'WinAPI_PathIsExe WinAPI_PathIsFileSpec ' +\n        'WinAPI_PathIsLFNFileSpec WinAPI_PathIsRelative ' +\n        'WinAPI_PathIsRoot WinAPI_PathIsSameRoot ' +\n        'WinAPI_PathIsSystemFolder WinAPI_PathIsUNC ' +\n        'WinAPI_PathIsUNCServer WinAPI_PathIsUNCServerShare ' +\n        'WinAPI_PathMakeSystemFolder WinAPI_PathMatchSpec ' +\n        'WinAPI_PathParseIconLocation WinAPI_PathRelativePathTo ' +\n        'WinAPI_PathRemoveArgs WinAPI_PathRemoveBackslash ' +\n        'WinAPI_PathRemoveExtension WinAPI_PathRemoveFileSpec ' +\n        'WinAPI_PathRenameExtension WinAPI_PathSearchAndQualify ' +\n        'WinAPI_PathSkipRoot WinAPI_PathStripPath ' +\n        'WinAPI_PathStripToRoot WinAPI_PathToRegion ' +\n        'WinAPI_PathUndecorate WinAPI_PathUnExpandEnvStrings ' +\n        'WinAPI_PathUnmakeSystemFolder WinAPI_PathUnquoteSpaces ' +\n        'WinAPI_PathYetAnotherMakeUniqueName WinAPI_PickIconDlg ' +\n        'WinAPI_PlayEnhMetaFile WinAPI_PlaySound WinAPI_PlgBlt ' +\n        'WinAPI_PointFromRect WinAPI_PolyBezier WinAPI_PolyBezierTo ' +\n        'WinAPI_PolyDraw WinAPI_Polygon WinAPI_PostMessage ' +\n        'WinAPI_PrimaryLangId WinAPI_PrintDlg WinAPI_PrintDlgEx ' +\n        'WinAPI_PrintWindow WinAPI_ProgIDFromCLSID WinAPI_PtInRect ' +\n        'WinAPI_PtInRectEx WinAPI_PtInRegion WinAPI_PtVisible ' +\n        'WinAPI_QueryDosDevice WinAPI_QueryInformationJobObject ' +\n        'WinAPI_QueryPerformanceCounter WinAPI_QueryPerformanceFrequency ' +\n        'WinAPI_RadialGradientFill WinAPI_ReadDirectoryChanges ' +\n        'WinAPI_ReadFile WinAPI_ReadProcessMemory WinAPI_Rectangle ' +\n        'WinAPI_RectInRegion WinAPI_RectIsEmpty WinAPI_RectVisible ' +\n        'WinAPI_RedrawWindow WinAPI_RegCloseKey ' +\n        'WinAPI_RegConnectRegistry WinAPI_RegCopyTree ' +\n        'WinAPI_RegCopyTreeEx WinAPI_RegCreateKey ' +\n        'WinAPI_RegDeleteEmptyKey WinAPI_RegDeleteKey ' +\n        'WinAPI_RegDeleteKeyValue WinAPI_RegDeleteTree ' +\n        'WinAPI_RegDeleteTreeEx WinAPI_RegDeleteValue ' +\n        'WinAPI_RegDisableReflectionKey WinAPI_RegDuplicateHKey ' +\n        'WinAPI_RegEnableReflectionKey WinAPI_RegEnumKey ' +\n        'WinAPI_RegEnumValue WinAPI_RegFlushKey ' +\n        'WinAPI_RegisterApplicationRestart WinAPI_RegisterClass ' +\n        'WinAPI_RegisterClassEx WinAPI_RegisterHotKey ' +\n        'WinAPI_RegisterPowerSettingNotification ' +\n        'WinAPI_RegisterRawInputDevices WinAPI_RegisterShellHookWindow ' +\n        'WinAPI_RegisterWindowMessage WinAPI_RegLoadMUIString ' +\n        'WinAPI_RegNotifyChangeKeyValue WinAPI_RegOpenKey ' +\n        'WinAPI_RegQueryInfoKey WinAPI_RegQueryLastWriteTime ' +\n        'WinAPI_RegQueryMultipleValues WinAPI_RegQueryReflectionKey ' +\n        'WinAPI_RegQueryValue WinAPI_RegRestoreKey WinAPI_RegSaveKey ' +\n        'WinAPI_RegSetValue WinAPI_ReleaseCapture WinAPI_ReleaseDC ' +\n        'WinAPI_ReleaseMutex WinAPI_ReleaseSemaphore ' +\n        'WinAPI_ReleaseStream WinAPI_RemoveClipboardFormatListener ' +\n        'WinAPI_RemoveDirectory WinAPI_RemoveFontMemResourceEx ' +\n        'WinAPI_RemoveFontResourceEx WinAPI_RemoveWindowSubclass ' +\n        'WinAPI_ReOpenFile WinAPI_ReplaceFile WinAPI_ReplaceTextDlg ' +\n        'WinAPI_ResetEvent WinAPI_RestartDlg WinAPI_RestoreDC ' +\n        'WinAPI_RGB WinAPI_RotatePoints WinAPI_RoundRect ' +\n        'WinAPI_SaveDC WinAPI_SaveFileDlg WinAPI_SaveHBITMAPToFile ' +\n        'WinAPI_SaveHICONToFile WinAPI_ScaleWindowExt ' +\n        'WinAPI_ScreenToClient WinAPI_SearchPath WinAPI_SelectClipPath ' +\n        'WinAPI_SelectClipRgn WinAPI_SelectObject ' +\n        'WinAPI_SendMessageTimeout WinAPI_SetActiveWindow ' +\n        'WinAPI_SetArcDirection WinAPI_SetBitmapBits ' +\n        'WinAPI_SetBitmapDimensionEx WinAPI_SetBkColor ' +\n        'WinAPI_SetBkMode WinAPI_SetBoundsRect WinAPI_SetBrushOrg ' +\n        'WinAPI_SetCapture WinAPI_SetCaretBlinkTime WinAPI_SetCaretPos ' +\n        'WinAPI_SetClassLongEx WinAPI_SetColorAdjustment ' +\n        'WinAPI_SetCompression WinAPI_SetCurrentDirectory ' +\n        'WinAPI_SetCurrentProcessExplicitAppUserModelID WinAPI_SetCursor ' +\n        'WinAPI_SetDCBrushColor WinAPI_SetDCPenColor ' +\n        'WinAPI_SetDefaultPrinter WinAPI_SetDeviceGammaRamp ' +\n        'WinAPI_SetDIBColorTable WinAPI_SetDIBits ' +\n        'WinAPI_SetDIBitsToDevice WinAPI_SetDllDirectory ' +\n        'WinAPI_SetEndOfFile WinAPI_SetEnhMetaFileBits ' +\n        'WinAPI_SetErrorMode WinAPI_SetEvent WinAPI_SetFileAttributes ' +\n        'WinAPI_SetFileInformationByHandleEx WinAPI_SetFilePointer ' +\n        'WinAPI_SetFilePointerEx WinAPI_SetFileShortName ' +\n        'WinAPI_SetFileValidData WinAPI_SetFocus WinAPI_SetFont ' +\n        'WinAPI_SetForegroundWindow WinAPI_SetFRBuffer ' +\n        'WinAPI_SetGraphicsMode WinAPI_SetHandleInformation ' +\n        'WinAPI_SetInformationJobObject WinAPI_SetKeyboardLayout ' +\n        'WinAPI_SetKeyboardState WinAPI_SetLastError ' +\n        'WinAPI_SetLayeredWindowAttributes WinAPI_SetLocaleInfo ' +\n        'WinAPI_SetMapMode WinAPI_SetMessageExtraInfo WinAPI_SetParent ' +\n        'WinAPI_SetPixel WinAPI_SetPolyFillMode ' +\n        'WinAPI_SetPriorityClass WinAPI_SetProcessAffinityMask ' +\n        'WinAPI_SetProcessShutdownParameters ' +\n        'WinAPI_SetProcessWindowStation WinAPI_SetRectRgn ' +\n        'WinAPI_SetROP2 WinAPI_SetSearchPathMode ' +\n        'WinAPI_SetStretchBltMode WinAPI_SetSysColors ' +\n        'WinAPI_SetSystemCursor WinAPI_SetTextAlign ' +\n        'WinAPI_SetTextCharacterExtra WinAPI_SetTextColor ' +\n        'WinAPI_SetTextJustification WinAPI_SetThemeAppProperties ' +\n        'WinAPI_SetThreadDesktop WinAPI_SetThreadErrorMode ' +\n        'WinAPI_SetThreadExecutionState WinAPI_SetThreadLocale ' +\n        'WinAPI_SetThreadUILanguage WinAPI_SetTimer ' +\n        'WinAPI_SetUDFColorMode WinAPI_SetUserGeoID ' +\n        'WinAPI_SetUserObjectInformation WinAPI_SetVolumeMountPoint ' +\n        'WinAPI_SetWindowDisplayAffinity WinAPI_SetWindowExt ' +\n        'WinAPI_SetWindowLong WinAPI_SetWindowOrg ' +\n        'WinAPI_SetWindowPlacement WinAPI_SetWindowPos ' +\n        'WinAPI_SetWindowRgn WinAPI_SetWindowsHookEx ' +\n        'WinAPI_SetWindowSubclass WinAPI_SetWindowText ' +\n        'WinAPI_SetWindowTheme WinAPI_SetWinEventHook ' +\n        'WinAPI_SetWorldTransform WinAPI_SfcIsFileProtected ' +\n        'WinAPI_SfcIsKeyProtected WinAPI_ShellAboutDlg ' +\n        'WinAPI_ShellAddToRecentDocs WinAPI_ShellChangeNotify ' +\n        'WinAPI_ShellChangeNotifyDeregister ' +\n        'WinAPI_ShellChangeNotifyRegister WinAPI_ShellCreateDirectory ' +\n        'WinAPI_ShellEmptyRecycleBin WinAPI_ShellExecute ' +\n        'WinAPI_ShellExecuteEx WinAPI_ShellExtractAssociatedIcon ' +\n        'WinAPI_ShellExtractIcon WinAPI_ShellFileOperation ' +\n        'WinAPI_ShellFlushSFCache WinAPI_ShellGetFileInfo ' +\n        'WinAPI_ShellGetIconOverlayIndex WinAPI_ShellGetImageList ' +\n        'WinAPI_ShellGetKnownFolderIDList WinAPI_ShellGetKnownFolderPath ' +\n        'WinAPI_ShellGetLocalizedName WinAPI_ShellGetPathFromIDList ' +\n        'WinAPI_ShellGetSetFolderCustomSettings WinAPI_ShellGetSettings ' +\n        'WinAPI_ShellGetSpecialFolderLocation ' +\n        'WinAPI_ShellGetSpecialFolderPath WinAPI_ShellGetStockIconInfo ' +\n        'WinAPI_ShellILCreateFromPath WinAPI_ShellNotifyIcon ' +\n        'WinAPI_ShellNotifyIconGetRect WinAPI_ShellObjectProperties ' +\n        'WinAPI_ShellOpenFolderAndSelectItems WinAPI_ShellOpenWithDlg ' +\n        'WinAPI_ShellQueryRecycleBin ' +\n        'WinAPI_ShellQueryUserNotificationState ' +\n        'WinAPI_ShellRemoveLocalizedName WinAPI_ShellRestricted ' +\n        'WinAPI_ShellSetKnownFolderPath WinAPI_ShellSetLocalizedName ' +\n        'WinAPI_ShellSetSettings WinAPI_ShellStartNetConnectionDlg ' +\n        'WinAPI_ShellUpdateImage WinAPI_ShellUserAuthenticationDlg ' +\n        'WinAPI_ShellUserAuthenticationDlgEx WinAPI_ShortToWord ' +\n        'WinAPI_ShowCaret WinAPI_ShowCursor WinAPI_ShowError ' +\n        'WinAPI_ShowLastError WinAPI_ShowMsg WinAPI_ShowOwnedPopups ' +\n        'WinAPI_ShowWindow WinAPI_ShutdownBlockReasonCreate ' +\n        'WinAPI_ShutdownBlockReasonDestroy ' +\n        'WinAPI_ShutdownBlockReasonQuery WinAPI_SizeOfResource ' +\n        'WinAPI_StretchBlt WinAPI_StretchDIBits ' +\n        'WinAPI_StrFormatByteSize WinAPI_StrFormatByteSizeEx ' +\n        'WinAPI_StrFormatKBSize WinAPI_StrFromTimeInterval ' +\n        'WinAPI_StringFromGUID WinAPI_StringLenA WinAPI_StringLenW ' +\n        'WinAPI_StrLen WinAPI_StrokeAndFillPath WinAPI_StrokePath ' +\n        'WinAPI_StructToArray WinAPI_SubLangId WinAPI_SubtractRect ' +\n        'WinAPI_SwapDWord WinAPI_SwapQWord WinAPI_SwapWord ' +\n        'WinAPI_SwitchColor WinAPI_SwitchDesktop ' +\n        'WinAPI_SwitchToThisWindow WinAPI_SystemParametersInfo ' +\n        'WinAPI_TabbedTextOut WinAPI_TerminateJobObject ' +\n        'WinAPI_TerminateProcess WinAPI_TextOut WinAPI_TileWindows ' +\n        'WinAPI_TrackMouseEvent WinAPI_TransparentBlt ' +\n        'WinAPI_TwipsPerPixelX WinAPI_TwipsPerPixelY ' +\n        'WinAPI_UnhookWindowsHookEx WinAPI_UnhookWinEvent ' +\n        'WinAPI_UnionRect WinAPI_UnionStruct WinAPI_UniqueHardwareID ' +\n        'WinAPI_UnloadKeyboardLayout WinAPI_UnlockFile ' +\n        'WinAPI_UnmapViewOfFile WinAPI_UnregisterApplicationRestart ' +\n        'WinAPI_UnregisterClass WinAPI_UnregisterHotKey ' +\n        'WinAPI_UnregisterPowerSettingNotification ' +\n        'WinAPI_UpdateLayeredWindow WinAPI_UpdateLayeredWindowEx ' +\n        'WinAPI_UpdateLayeredWindowIndirect WinAPI_UpdateResource ' +\n        'WinAPI_UpdateWindow WinAPI_UrlApplyScheme ' +\n        'WinAPI_UrlCanonicalize WinAPI_UrlCombine WinAPI_UrlCompare ' +\n        'WinAPI_UrlCreateFromPath WinAPI_UrlFixup WinAPI_UrlGetPart ' +\n        'WinAPI_UrlHash WinAPI_UrlIs WinAPI_UserHandleGrantAccess ' +\n        'WinAPI_ValidateRect WinAPI_ValidateRgn WinAPI_VerQueryRoot ' +\n        'WinAPI_VerQueryValue WinAPI_VerQueryValueEx ' +\n        'WinAPI_WaitForInputIdle WinAPI_WaitForMultipleObjects ' +\n        'WinAPI_WaitForSingleObject WinAPI_WideCharToMultiByte ' +\n        'WinAPI_WidenPath WinAPI_WindowFromDC WinAPI_WindowFromPoint ' +\n        'WinAPI_WordToShort WinAPI_Wow64EnableWow64FsRedirection ' +\n        'WinAPI_WriteConsole WinAPI_WriteFile ' +\n        'WinAPI_WriteProcessMemory WinAPI_ZeroMemory ' +\n        'WinNet_AddConnection WinNet_AddConnection2 ' +\n        'WinNet_AddConnection3 WinNet_CancelConnection ' +\n        'WinNet_CancelConnection2 WinNet_CloseEnum ' +\n        'WinNet_ConnectionDialog WinNet_ConnectionDialog1 ' +\n        'WinNet_DisconnectDialog WinNet_DisconnectDialog1 ' +\n        'WinNet_EnumResource WinNet_GetConnection ' +\n        'WinNet_GetConnectionPerformance WinNet_GetLastError ' +\n        'WinNet_GetNetworkInformation WinNet_GetProviderName ' +\n        'WinNet_GetResourceInformation WinNet_GetResourceParent ' +\n        'WinNet_GetUniversalName WinNet_GetUser WinNet_OpenEnum ' +\n        'WinNet_RestoreConnection WinNet_UseConnection Word_Create ' +\n        'Word_DocAdd Word_DocAttach Word_DocClose Word_DocExport ' +\n        'Word_DocFind Word_DocFindReplace Word_DocGet ' +\n        'Word_DocLinkAdd Word_DocLinkGet Word_DocOpen ' +\n        'Word_DocPictureAdd Word_DocPrint Word_DocRangeSet ' +\n        'Word_DocSave Word_DocSaveAs Word_DocTableRead ' +\n        'Word_DocTableWrite Word_Quit',\n\n        COMMENT = {\n            variants: [\n              hljs.COMMENT(';', '$', {relevance: 0}),\n              hljs.COMMENT('#cs', '#ce'),\n              hljs.COMMENT('#comments-start', '#comments-end')\n            ]\n        },\n\n        VARIABLE = {\n            className: 'variable',\n            begin: '\\\\$[A-z0-9_]+'\n        },\n\n        STRING = {\n            className: 'string',\n            variants: [{\n                begin: /\"/,\n                end: /\"/,\n                contains: [{\n                    begin: /\"\"/,\n                    relevance: 0\n                }]\n            }, {\n                begin: /'/,\n                end: /'/,\n                contains: [{\n                    begin: /''/,\n                    relevance: 0\n                }]\n            }]\n        },\n\n        NUMBER = {\n            variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n        },\n\n        PREPROCESSOR = {\n            className: 'preprocessor',\n            begin: '#',\n            end: '$',\n            keywords: 'include include-once NoTrayIcon OnAutoItStartRegister RequireAdmin pragma ' +\n                'Au3Stripper_Ignore_Funcs Au3Stripper_Ignore_Variables ' +\n                'Au3Stripper_Off Au3Stripper_On Au3Stripper_Parameters ' +\n                'AutoIt3Wrapper_Add_Constants AutoIt3Wrapper_Au3Check_Parameters ' +\n                'AutoIt3Wrapper_Au3Check_Stop_OnWarning AutoIt3Wrapper_Aut2Exe ' +\n                'AutoIt3Wrapper_AutoIt3 AutoIt3Wrapper_AutoIt3Dir ' +\n                'AutoIt3Wrapper_Change2CUI AutoIt3Wrapper_Compile_Both ' +\n                'AutoIt3Wrapper_Compression AutoIt3Wrapper_EndIf ' +\n                'AutoIt3Wrapper_Icon AutoIt3Wrapper_If_Compile ' +\n                'AutoIt3Wrapper_If_Run AutoIt3Wrapper_Jump_To_First_Error ' +\n                'AutoIt3Wrapper_OutFile AutoIt3Wrapper_OutFile_Type ' +\n                'AutoIt3Wrapper_OutFile_X64 AutoIt3Wrapper_PlugIn_Funcs ' +\n                'AutoIt3Wrapper_Res_Comment Autoit3Wrapper_Res_Compatibility ' +\n                'AutoIt3Wrapper_Res_Description AutoIt3Wrapper_Res_Field ' +\n                'AutoIt3Wrapper_Res_File_Add AutoIt3Wrapper_Res_FileVersion ' +\n                'AutoIt3Wrapper_Res_FileVersion_AutoIncrement ' +\n                'AutoIt3Wrapper_Res_Icon_Add AutoIt3Wrapper_Res_Language ' +\n                'AutoIt3Wrapper_Res_LegalCopyright ' +\n                'AutoIt3Wrapper_Res_ProductVersion ' +\n                'AutoIt3Wrapper_Res_requestedExecutionLevel ' +\n                'AutoIt3Wrapper_Res_SaveSource AutoIt3Wrapper_Run_After ' +\n                'AutoIt3Wrapper_Run_Au3Check AutoIt3Wrapper_Run_Au3Stripper ' +\n                'AutoIt3Wrapper_Run_Before AutoIt3Wrapper_Run_Debug_Mode ' +\n                'AutoIt3Wrapper_Run_SciTE_Minimized ' +\n                'AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized ' +\n                'AutoIt3Wrapper_Run_Tidy AutoIt3Wrapper_ShowProgress ' +\n                'AutoIt3Wrapper_Testing AutoIt3Wrapper_Tidy_Stop_OnError ' +\n                'AutoIt3Wrapper_UPX_Parameters AutoIt3Wrapper_UseUPX ' +\n                'AutoIt3Wrapper_UseX64 AutoIt3Wrapper_Version ' +\n                'AutoIt3Wrapper_Versioning AutoIt3Wrapper_Versioning_Parameters ' +\n                'Tidy_Off Tidy_On Tidy_Parameters EndRegion Region',\n            contains: [{\n                    begin: /\\\\\\n/,\n                    relevance: 0\n                }, {\n                    beginKeywords: 'include',\n                    end: '$',\n                    contains: [\n                        STRING, {\n                            className: 'string',\n                            variants: [{\n                                begin: '<',\n                                end: '>'\n                            }, {\n                                begin: /\"/,\n                                end: /\"/,\n                                contains: [{\n                                    begin: /\"\"/,\n                                    relevance: 0\n                                }]\n                            }, {\n                                begin: /'/,\n                                end: /'/,\n                                contains: [{\n                                    begin: /''/,\n                                    relevance: 0\n                                }]\n                            }]\n                        }\n                    ]\n                },\n                STRING,\n                COMMENT\n            ]\n        },\n\n        CONSTANT = {\n            className: 'constant',\n            // begin: '@',\n            // end: '$',\n            // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',\n            // relevance: 5\n            begin: '@[A-z0-9_]+'\n        },\n\n        FUNCTION = {\n            className: 'function',\n            beginKeywords: 'Func',\n            end: '$',\n            excludeEnd: true,\n            illegal: '\\\\$|\\\\[|%',\n            contains: [\n                hljs.UNDERSCORE_TITLE_MODE, {\n                    className: 'params',\n                    begin: '\\\\(',\n                    end: '\\\\)',\n                    contains: [\n                        VARIABLE,\n                        STRING,\n                        NUMBER\n                    ]\n                }\n            ]\n        };\n\n    return {\n        case_insensitive: true,\n        keywords: {\n            keyword: KEYWORDS,\n            built_in: BUILT_IN,\n            literal: LITERAL\n        },\n        contains: [\n            COMMENT,\n            VARIABLE,\n            STRING,\n            NUMBER,\n            PREPROCESSOR,\n            CONSTANT,\n            FUNCTION\n        ]\n    }\n});\n\nhljs.registerLanguage('avrasm', function(hljs) {\n  return {\n    case_insensitive: true,\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      keyword:\n        /* mnemonic */\n        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +\n        'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +\n        'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +\n        'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +\n        'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +\n        'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +\n        'subi swap tst wdr',\n      built_in:\n        /* general purpose registers */\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +\n        'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +\n        /* IO Registers (ATMega128) */\n        'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +\n        'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +\n        'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +\n        'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +\n        'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +\n        'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +\n        'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +\n        'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n      preprocessor:\n        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +\n        '.listmac .macro .nolist .org .set'\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n      hljs.BINARY_NUMBER_MODE, // 0b...\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '[^\\\\\\\\]\\'',\n        illegal: '[^\\\\\\\\][^\\']'\n      },\n      {className: 'label',  begin: '^[A-Za-z0-9_.$]+:'},\n      {className: 'preprocessor', begin: '#', end: '$'},\n      {  // подстановка в «.macro»\n        className: 'localvars',\n        begin: '@[0-9]+'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('axapta', function(hljs) {\n  return {\n    keywords: 'false int abstract private char boolean static null if for true ' +\n      'while long throw finally protected final return void enum else ' +\n      'break new catch byte super case short default double public try this switch ' +\n      'continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count ' +\n      'order group by asc desc index hint like dispaly edit client server ttsbegin ' +\n      'ttscommit str real date container anytype common div mod',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: ':',\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('bash', function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /-?[a-z\\.]+/,\n    keywords: {\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      operator:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      {\n        className: 'shebang',\n        begin: /^#![^\\n]+sh\\s*$/,\n        relevance: 10\n      },\n      {\n        className: 'function',\n        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n        returnBegin: true,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n});\n\nhljs.registerLanguage('brainfuck', function(hljs){\n  var LITERAL = {\n    className: 'literal',\n    begin: '[\\\\+\\\\-]',\n    relevance: 0\n  };\n  return {\n    aliases: ['bf'],\n    contains: [\n      hljs.COMMENT(\n        '[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        {\n          returnEnd: true,\n          relevance: 0\n        }\n      ),\n      {\n        className: 'title',\n        begin: '[\\\\[\\\\]]',\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '[\\\\.,]',\n        relevance: 0\n      },\n      {\n        // this mode works as the only relevance counter\n        begin: /\\+\\+|\\-\\-/, returnBegin: true,\n        contains: [LITERAL]\n      },\n      LITERAL\n    ]\n  };\n});\n\nhljs.registerLanguage('cal', function(hljs) {\n  var KEYWORDS =\n    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n    'until while with var';\n  var LITERALS = 'false true';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var DATE = {\n      className: 'date',\n      begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n      relevance: 0\n  };\n  var DBL_QUOTED_VARIABLE = {\n      className: 'variable',\n      begin: '\"',\n      end: '\"'\n  };\n\n  var PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure', end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      }\n    ].concat(COMMENT_MODES)\n  };\n\n  var OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE,\n        PROCEDURE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    keywords: { keyword: KEYWORDS, literal: LITERALS },\n    contains: [\n      STRING, CHAR_STRING,\n      DATE, DBL_QUOTED_VARIABLE,\n      hljs.NUMBER_MODE,\n      OBJECT,\n      PROCEDURE\n    ]\n  };\n});\n\nhljs.registerLanguage('capnproto', function(hljs) {\n  return {\n    aliases: ['capnp'],\n    keywords: {\n      keyword:\n        'struct enum interface union group import using const annotation extends in of on as with from fixed',\n      built_in:\n        'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +\n        'Text Data AnyPointer AnyStruct Capability List',\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'shebang',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'number',\n        begin: /@\\d+\\b/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct enum', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'interface', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('ceylon', function(hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION =\n    'doc by license see throws tagged';\n  var LANGUAGE_ANNOTATIONS = DECLARATION_MODIFIERS + ' ' + DOCUMENTATION;\n  var SUBST = {\n    className: 'subst', excludeBegin: true, excludeEnd: true,\n    begin: /``/, end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"', end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\",\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    keywords: {\n      keyword: KEYWORDS,\n      annotation: LANGUAGE_ANNOTATIONS\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      {\n        // compiler annotation\n        className: 'annotation',\n        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n});\n\nhljs.registerLanguage('clojure', function(hljs) {\n  var keywords = {\n    built_in:\n      // Clojure keywords\n      'def cond apply if-not if-let if not not= = < > <= >= == + / * - rem '+\n      'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? '+\n      'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? '+\n      'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? '+\n      'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . '+\n      'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last '+\n      'drop-while while intern condp case reduced cycle split-at split-with repeat replicate '+\n      'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext '+\n      'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends '+\n      'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler '+\n      'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter '+\n      'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or '+\n      'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert '+\n      'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast '+\n      'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import '+\n      'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! '+\n      'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger '+\n      'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline '+\n      'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking '+\n      'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! '+\n      'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! '+\n      'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty '+\n      'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list '+\n      'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer '+\n      'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate '+\n      'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta '+\n      'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b(true|false|nil)\\b/\n  };\n  var COLLECTION = {\n    className: 'collection',\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'attribute',\n    begin: '[:]' + SYMBOL_RE\n  };\n  var LIST = {\n    className: 'list',\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'keyword', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['clj'],\n    illegal: /\\S/,\n    contains: [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n});\n\nhljs.registerLanguage('clojure-repl', function(hljs) {\n  return {\n    contains: [\n      {\n        className: 'prompt',\n        begin: /^([\\w.-]+|\\s*#_)=>/,\n        starts: {\n          end: /$/,\n          subLanguage: 'clojure'\n        }\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('cmake', function(hljs) {\n  return {\n    aliases: ['cmake.in'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'add_custom_command add_custom_target add_definitions add_dependencies ' +\n        'add_executable add_library add_subdirectory add_test aux_source_directory ' +\n        'break build_command cmake_minimum_required cmake_policy configure_file ' +\n        'create_test_sourcelist define_property else elseif enable_language enable_testing ' +\n        'endforeach endfunction endif endmacro endwhile execute_process export find_file ' +\n        'find_library find_package find_path find_program fltk_wrap_ui foreach function ' +\n        'get_cmake_property get_directory_property get_filename_component get_property ' +\n        'get_source_file_property get_target_property get_test_property if include ' +\n        'include_directories include_external_msproject include_regular_expression install ' +\n        'link_directories load_cache load_command macro mark_as_advanced message option ' +\n        'output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return ' +\n        'separate_arguments set set_directory_properties set_property ' +\n        'set_source_files_properties set_target_properties set_tests_properties site_name ' +\n        'source_group string target_link_libraries try_compile try_run unset variable_watch ' +\n        'while build_name exec_program export_library_dependencies install_files ' +\n        'install_programs install_targets link_libraries make_directory remove subdir_depends ' +\n        'subdirs use_mangled_mesa utility_source variable_requires write_file ' +\n        'qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or',\n      operator:\n        'equal less greater strless strgreater strequal matches'\n    },\n    contains: [\n      {\n        className: 'envvar',\n        begin: '\\\\${', end: '}'\n      },\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('coffeescript', function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      className: 'property',\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '`', end: '`',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n});\n\nhljs.registerLanguage('cpp', function(hljs) {\n  var CPP_PRIMATIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?\"' }),\n      {\n        begin: '(u8?|U)?R\"', end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.', end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)' },\n      { begin: hljs.C_NUMBER_RE }\n    ]\n  };\n\n  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  var CPP_KEYWORDS = {\n    keyword: 'int float while private char catch export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using class asm case typeid ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignof constexpr decltype ' +\n      'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong',\n    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf',\n    literal: 'true false nullptr NULL'\n  };\n  return {\n    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    contains: [\n      CPP_PRIMATIVE_TYPES,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$',\n        keywords: 'if else elif endif define undef warning error line ' +\n                  'pragma ifdef ifndef',\n        contains: [\n          {\n            begin: /\\\\\\n/, relevance: 0\n          },\n          {\n            beginKeywords: 'include', end: '$',\n            contains: [\n              STRINGS,\n              {\n                className: 'string',\n                begin: '<', end: '>',\n                illegal: '\\\\n',\n              }\n            ]\n          },\n          STRINGS,\n          NUMBERS,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n        ]\n      },\n      {\n        begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<', end: '>',\n        keywords: CPP_KEYWORDS,\n        contains: ['self', CPP_PRIMATIVE_TYPES]\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: CPP_KEYWORDS\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...) or else if(...)' from\n        // being recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n        returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: CPP_KEYWORDS,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('cs', function(hljs) {\n  var KEYWORDS =\n    // Normal keywords.\n    'abstract as base bool break byte case catch char checked const continue decimal dynamic ' +\n    'default delegate do double else enum event explicit extern false finally fixed float ' +\n    'for foreach goto if implicit in int interface internal is lock long null when ' +\n    'object operator out override params private protected public readonly ref sbyte ' +\n    'sealed short sizeof stackalloc static string struct switch this true try typeof ' +\n    'uint ulong unchecked unsafe ushort using virtual volatile void while async ' +\n    'protected public private internal ' +\n    // Contextual keywords.\n    'ascending descending from get group into join let orderby partial select set value var ' +\n    'where yield';\n  var GENERIC_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '>)?';\n  return {\n    aliases: ['csharp'],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'xmlDocTag',\n              variants: [\n                {\n                  begin: '///', relevance: 0\n                },\n                {\n                  begin: '<!--|-->'\n                },\n                {\n                  begin: '</?', end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$',\n        keywords: 'if else elif endif define undef warning error line region endregion pragma checksum'\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        beginKeywords: 'class interface', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          hljs.TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          {\n            // Customization of hljs.TITLE_MODE that allows '.'\n            className: 'title',\n            begin: '[a-zA-Z](\\\\.?\\\\w)*',\n            relevance: 0\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('css', function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var FUNCTION = {\n    className: 'function',\n    begin: IDENT_RE + '\\\\(',\n    returnBegin: true,\n    excludeEnd: true,\n    end: '\\\\('\n  };\n  var RULE = {\n    className: 'rule',\n    begin: /[A-Z\\_\\.\\-]+\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: /\\S/, end: ':', excludeEnd: true,\n        starts: {\n          className: 'value',\n          endsWithParent: true, excludeEnd: true,\n          contains: [\n            FUNCTION,\n            hljs.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'hexcolor', begin: '#[0-9A-Fa-f]+'\n            },\n            {\n              className: 'important', begin: '!important'\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      RULE,\n      {\n        className: 'id', begin: /\\#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'attr_selector',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$'\n      },\n      {\n        className: 'pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"']+/\n      },\n      {\n        className: 'at_rule',\n        begin: '@(font-face|page)',\n        lexemes: '[a-z-]+',\n        keywords: 'font-face page'\n      },\n      {\n        className: 'at_rule',\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\S+/\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            contains: [\n              FUNCTION,\n              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        className: 'rules',\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('d', /**\n * Known issues:\n *\n * - invalid hex string literals will be recognized as a double quoted strings\n *   but 'x' at the beginning of string will not be matched\n *\n * - delimited string literals are not checked for matching end delimiter\n *   (not possible to do with js regexp)\n *\n * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n *   also, content of token string is not validated to contain only valid D tokens\n *\n * - special token sequence rule is not strictly following D grammar (anything following #line\n *   up to the end of line is matched as special token sequence)\n */\n\nfunction(hljs) {\n  /**\n   * Language keywords\n   *\n   * @type {Object}\n   */\n  var D_KEYWORDS = {\n    keyword:\n      'abstract alias align asm assert auto body break byte case cast catch class ' +\n      'const continue debug default delete deprecated do else enum export extern final ' +\n      'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +\n      'interface invariant is lazy macro mixin module new nothrow out override package ' +\n      'pragma private protected public pure ref return scope shared static struct ' +\n      'super switch synchronized template this throw try typedef typeid typeof union ' +\n      'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +\n      '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n    built_in:\n      'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +\n      'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +\n      'wstring',\n    literal:\n      'false null true'\n  };\n\n  /**\n   * Number literal regexps\n   *\n   * @type {String}\n   */\n  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n    decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n    binary_integer_re = '0[bB][01_]+',\n    hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n    hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n\n    decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n    decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' +\n                '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' +\n                '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' +\n              ')',\n    hexadecimal_float_re = '(0[xX](' +\n                  hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|'+\n                  '\\\\.?' + hexadecimal_digits_re +\n                 ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n\n    integer_re = '(' +\n      decimal_integer_re + '|' +\n      binary_integer_re  + '|' +\n       hexadecimal_integer_re   +\n    ')',\n\n    float_re = '(' +\n      hexadecimal_float_re + '|' +\n      decimal_float_re  +\n    ')';\n\n  /**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */\n  var escape_sequence_re = '\\\\\\\\(' +\n              '[\\'\"\\\\?\\\\\\\\abfnrtv]|' +  // common escapes\n              'u[\\\\dA-Fa-f]{4}|' +     // four hex digit unicode codepoint\n              '[0-7]{1,3}|' +       // one to three octal digit ascii char code\n              'x[\\\\dA-Fa-f]{2}|' +    // two hex digit ascii char code\n              'U[\\\\dA-Fa-f]{8}' +      // eight hex digit unicode codepoint\n              ')|' +\n              '&[a-zA-Z\\\\d]{2,};';      // named character entity\n\n  /**\n   * D integer number literals\n   *\n   * @type {Object}\n   */\n  var D_INTEGER_MODE = {\n    className: 'number',\n      begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n      relevance: 0\n  };\n\n  /**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */\n  var D_FLOAT_MODE = {\n    className: 'number',\n    begin: '\\\\b(' +\n        float_re + '([fF]|L|i|[fF]i|Li)?|' +\n        integer_re + '(i|[fF]i|Li)' +\n      ')',\n    relevance: 0\n  };\n\n  /**\n   * D character literal\n   *\n   * @type {Object}\n   */\n  var D_CHARACTER_MODE = {\n    className: 'string',\n    begin: '\\'(' + escape_sequence_re + '|.)', end: '\\'',\n    illegal: '.'\n  };\n\n  /**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */\n  var D_ESCAPE_SEQUENCE = {\n    begin: escape_sequence_re,\n    relevance: 0\n  };\n\n  /**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */\n  var D_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    contains: [D_ESCAPE_SEQUENCE],\n    end: '\"[cwd]?'\n  };\n\n  /**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */\n  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n    className: 'string',\n    begin: '[rq]\"',\n    end: '\"[cwd]?',\n    relevance: 5\n  };\n\n  /**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */\n  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n    className: 'string',\n    begin: '`',\n    end: '`[cwd]?'\n  };\n\n  /**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */\n  var D_HEX_STRING_MODE = {\n    className: 'string',\n    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n    relevance: 10\n  };\n\n  /**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */\n  var D_TOKEN_STRING_MODE = {\n    className: 'string',\n    begin: 'q\"\\\\{',\n    end: '\\\\}\"'\n  };\n\n  /**\n   * Hashbang support\n   *\n   * @type {Object}\n   */\n  var D_HASHBANG_MODE = {\n    className: 'shebang',\n    begin: '^#!',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D special token sequence\n   *\n   * @type {Object}\n   */\n  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n    className: 'preprocessor',\n    begin: '#(line)',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D attributes\n   *\n   * @type {Object}\n   */\n  var D_ATTRIBUTE_MODE = {\n    className: 'keyword',\n    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n  };\n\n  /**\n   * D nesting comment\n   *\n   * @type {Object}\n   */\n  var D_NESTING_COMMENT_MODE = hljs.COMMENT(\n    '\\\\/\\\\+',\n    '\\\\+\\\\/',\n    {\n      contains: ['self'],\n      relevance: 10\n    }\n  );\n\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: D_KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        D_NESTING_COMMENT_MODE,\n        D_HEX_STRING_MODE,\n        D_STRING_MODE,\n        D_WYSIWYG_DELIMITED_STRING_MODE,\n        D_ALTERNATE_WYSIWYG_STRING_MODE,\n        D_TOKEN_STRING_MODE,\n        D_FLOAT_MODE,\n        D_INTEGER_MODE,\n        D_CHARACTER_MODE,\n        D_HASHBANG_MODE,\n        D_SPECIAL_TOKEN_SEQUENCE_MODE,\n        D_ATTRIBUTE_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('markdown', function(hljs) {\n  return {\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [\n      // highlight headers\n      {\n        className: 'header',\n        variants: [\n          { begin: '^#{1,6}', end: '$' },\n          { begin: '^.+?\\\\n[=-]{2,}$' }\n        ]\n      },\n      // inline html\n      {\n        begin: '<', end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      },\n      // lists (indicators only)\n      {\n        className: 'bullet',\n        begin: '^([*+-]|(\\\\d+\\\\.))\\\\s+'\n      },\n      // strong segments\n      {\n        className: 'strong',\n        begin: '[*_]{2}.+?[*_]{2}'\n      },\n      // emphasis segments\n      {\n        className: 'emphasis',\n        variants: [\n          { begin: '\\\\*.+?\\\\*' },\n          { begin: '_.+?_'\n          , relevance: 0\n          }\n        ]\n      },\n      // blockquotes\n      {\n        className: 'blockquote',\n        begin: '^>\\\\s+', end: '$'\n      },\n      // code snippets\n      {\n        className: 'code',\n        variants: [\n          { begin: '`.+?`' },\n          { begin: '^( {4}|\\t)', end: '$'\n          , relevance: 0\n          }\n        ]\n      },\n      // horizontal rules\n      {\n        className: 'horizontal_rule',\n        begin: '^[-\\\\*]{3,}', end: '$'\n      },\n      // using links - title and link\n      {\n        begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'link_label',\n            begin: '\\\\[', end: '\\\\]',\n            excludeBegin: true,\n            returnEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'link_url',\n            begin: '\\\\]\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          {\n            className: 'link_reference',\n            begin: '\\\\]\\\\[', end: '\\\\]',\n            excludeBegin: true, excludeEnd: true\n          }\n        ],\n        relevance: 10\n      },\n      {\n        begin: '^\\\\[\\.+\\\\]:',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'link_reference',\n            begin: '\\\\[', end: '\\\\]:',\n            excludeBegin: true, excludeEnd: true,\n            starts: {\n              className: 'link_url',\n              end: '$'\n            }\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('dart', function (hljs) {\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '}',\n    keywords: 'true false null this is new super'\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: 'r\\'\\'\\'', end: '\\'\\'\\''\n      },\n      {\n        begin: 'r\"\"\"', end: '\"\"\"'\n      },\n      {\n        begin: 'r\\'', end: '\\'',\n        illegal: '\\\\n'\n      },\n      {\n        begin: 'r\"', end: '\"',\n        illegal: '\\\\n'\n      },\n      {\n        begin: '\\'\\'\\'', end: '\\'\\'\\'',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      }\n    ]\n  };\n  SUBST.contains = [\n    hljs.C_NUMBER_MODE, STRING\n  ];\n\n  var KEYWORDS = {\n    keyword: 'assert break case catch class const continue default do else enum extends false final finally for if ' +\n      'in is new null rethrow return super switch this throw true try var void while with',\n    literal: 'abstract as dynamic export external factory get implements import library operator part set static typedef',\n    built_in:\n      // dart:core\n      'print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set ' +\n      'Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num ' +\n      // dart:html\n      'document window querySelector querySelectorAll Element ElementList'\n  };\n\n  return {\n    keywords: KEYWORDS,\n    contains: [\n      STRING,\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          subLanguage: 'markdown'\n        }\n      ),\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          subLanguage: 'markdown'\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'annotation', begin: '@[A-Za-z]+'\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('delphi', function(hljs) {\n  var KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      }\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      CLASS,\n      FUNCTION\n    ].concat(COMMENT_MODES)\n  };\n});\n\nhljs.registerLanguage('diff', function(hljs) {\n  return {\n    aliases: ['patch'],\n    contains: [\n      {\n        className: 'chunk',\n        relevance: 10,\n        variants: [\n          {begin: /^@@ +\\-\\d+,\\d+ +\\+\\d+,\\d+ +@@$/},\n          {begin: /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/},\n          {begin: /^\\-\\-\\- +\\d+,\\d+ +\\-\\-\\-\\-$/}\n        ]\n      },\n      {\n        className: 'header',\n        variants: [\n          {begin: /Index: /, end: /$/},\n          {begin: /=====/, end: /=====$/},\n          {begin: /^\\-\\-\\-/, end: /$/},\n          {begin: /^\\*{3} /, end: /$/},\n          {begin: /^\\+\\+\\+/, end: /$/},\n          {begin: /\\*{5}/, end: /\\*{5}$/}\n        ]\n      },\n      {\n        className: 'addition',\n        begin: '^\\\\+', end: '$'\n      },\n      {\n        className: 'deletion',\n        begin: '^\\\\-', end: '$'\n      },\n      {\n        className: 'change',\n        begin: '^\\\\!', end: '$'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('django', function(hljs) {\n  var FILTER = {\n    className: 'filter',\n    begin: /\\|[A-Za-z]+:?/,\n    keywords:\n      'truncatewords removetags linebreaksbr yesno get_digit timesince random striptags ' +\n      'filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands ' +\n      'title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode ' +\n      'timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort ' +\n      'dictsortreversed default_if_none pluralize lower join center default ' +\n      'truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first ' +\n      'escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize ' +\n      'localtime utc timezone',\n    contains: [\n      {className: 'argument', begin: /\"/, end: /\"/},\n      {className: 'argument', begin: /'/, end: /'/}\n    ]\n  };\n\n  return {\n    aliases: ['jinja'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{%\\s*comment\\s*%}/, /\\{%\\s*endcomment\\s*%}/),\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template_tag',\n        begin: /\\{%/, end: /%}/,\n        keywords:\n          'comment endcomment load templatetag ifchanged endifchanged if endif firstof for ' +\n          'endfor in ifnotequal endifnotequal widthratio extends include spaceless ' +\n          'endspaceless regroup by as ifequal endifequal ssi now with cycle url filter ' +\n          'endfilter debug block endblock else autoescape endautoescape csrf_token empty elif ' +\n          'endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix ' +\n          'plural get_current_language language get_available_languages ' +\n          'get_current_language_bidi get_language_info get_language_info_list localize ' +\n          'endlocalize localtime endlocaltime timezone endtimezone get_current_timezone ' +\n          'verbatim',\n        contains: [FILTER]\n      },\n      {\n        className: 'variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: [FILTER]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('dns', function(hljs) {\n  return {\n    aliases: ['bind', 'zone'],\n    keywords: {\n      keyword:\n        'IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX ' +\n        'LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT'\n    },\n    contains: [\n      hljs.COMMENT(';', '$'),\n      {\n        className: 'operator',\n        beginKeywords: '$TTL $GENERATE $INCLUDE $ORIGIN'\n      },\n      // IPv6\n      {\n        className: 'number',\n        begin: '((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))'\n      },\n      // IPv4\n      {\n        className: 'number',\n        begin: '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('dockerfile', function(hljs) {\n  return {\n    aliases: ['docker'],\n    case_insensitive: true,\n    keywords: {\n      built_ins: 'from maintainer cmd expose add copy entrypoint volume user workdir onbuild run env'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        keywords : {\n          built_in: 'run cmd entrypoint volume add copy workdir onbuild'\n        },\n        begin: /^ *(onbuild +)?(run|cmd|entrypoint|volume|add|copy|workdir) +/,\n        starts: {\n          end: /[^\\\\]\\n/,\n          subLanguage: 'bash'\n        }\n      },\n      {\n        keywords: {\n          built_in: 'from maintainer expose env user onbuild'\n        },\n        begin: /^ *(onbuild +)?(from|maintainer|expose|env|user|onbuild) +/, end: /[^\\\\]\\n/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.NUMBER_MODE,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('dos', function(hljs) {\n  var COMMENT = hljs.COMMENT(\n    /@?rem\\b/, /$/,\n    {\n      relevance: 10\n    }\n  );\n  var LABEL = {\n    className: 'label',\n    begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)',\n    relevance: 0\n  };\n  return {\n    aliases: ['bat', 'cmd'],\n    case_insensitive: true,\n    keywords: {\n      flow: 'if else goto for in do call exit not exist errorlevel defined',\n      operator: 'equ neq lss leq gtr geq',\n      keyword: 'shift cd dir echo setlocal endlocal set pause copy',\n      stream: 'prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux',\n      winutils: 'ping net ipconfig taskkill xcopy ren del',\n      built_in: 'append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color ' +\n        'comp compact convert date dir diskcomp diskcopy doskey erase fs ' +\n        'find findstr format ftype graftabl help keyb label md mkdir mode more move path ' +\n        'pause print popd pushd promt rd recover rem rename replace restore rmdir shift' +\n        'sort start subst time title tree type ver verify vol'\n    },\n    contains: [\n      {\n        className: 'envvar', begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/\n      },\n      {\n        className: 'function',\n        begin: LABEL.begin, end: 'goto:eof',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n          COMMENT\n        ]\n      },\n      {\n        className: 'number', begin: '\\\\b\\\\d+',\n        relevance: 0\n      },\n      COMMENT\n    ]\n  };\n});\n\nhljs.registerLanguage('dust', function(hljs) {\n  var EXPRESSION_KEYWORDS = 'if eq ne lt lte gt gte select default math sep';\n  return {\n    aliases: ['dst'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      {\n        className: 'expression',\n        begin: '{', end: '}',\n        relevance: 0,\n        contains: [\n          {\n            className: 'begin-block', begin: '\\#[a-zA-Z\\-\\ \\.]+',\n            keywords: EXPRESSION_KEYWORDS\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"'\n          },\n          {\n            className: 'end-block', begin: '\\\\\\/[a-zA-Z\\-\\ \\.]+',\n            keywords: EXPRESSION_KEYWORDS\n          },\n          {\n            className: 'variable', begin: '[a-zA-Z\\-\\.]+',\n            keywords: EXPRESSION_KEYWORDS,\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('elixir', function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defmodule defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      className: 'constant',\n      begin: '(\\\\b[A-Z_]\\\\w*(.)?)+',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n});\n\nhljs.registerLanguage('elm', function(hljs) {\n  var COMMENT_MODES = [\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT(\n      '{-',\n      '-}',\n      {\n        contains: ['self']\n      }\n    )\n  ];\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    className: 'container',\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'})\n    ].concat(COMMENT_MODES)\n  };\n\n  var RECORD = {\n    className: 'container',\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        className: 'module',\n        begin: '\\\\bmodule\\\\b', end: 'where',\n        keywords: 'module where',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'import',\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import|0 as exposing',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'typedef',\n        begin: '\\\\btype\\\\b', end: '$',\n        keywords: 'type alias',\n        contains: [CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n      },\n      {\n        className: 'infix',\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n      },\n      {\n        className: 'foreign',\n        begin: '\\\\bport\\\\b', end: '$',\n        keywords: 'port',\n        contains: COMMENT_MODES\n      },\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ].concat(COMMENT_MODES)\n  };\n});\n\nhljs.registerLanguage('ruby', function(hljs) {\n  var RUBY_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var RUBY_KEYWORDS =\n    'and false then defined module in return redo if BEGIN retry end for true self when ' +\n    'next until do begin unless END rescue nil else break undef not super class case ' +\n    'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor';\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    className: 'value',\n    begin: '#<', end: '>'\n  };\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [YARDOCTAG]\n      }\n    ),\n    hljs.COMMENT(\n      '^\\\\=begin',\n      '^\\\\=end',\n      {\n        contains: [YARDOCTAG],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: '%[qQwWx]?\\\\(', end: '\\\\)'},\n      {begin: '%[qQwWx]?\\\\[', end: '\\\\]'},\n      {begin: '%[qQwWx]?{', end: '}'},\n      {begin: '%[qQwWx]?<', end: '>'},\n      {begin: '%[qQwWx]?/', end: '/'},\n      {begin: '%[qQwWx]?%', end: '%'},\n      {begin: '%[qQwWx]?-', end: '-'},\n      {begin: '%[qQwWx]?\\\\|', end: '\\\\|'},\n      {\n        // \\B in the beginning suppresses recognition of ?-sequences where ?\n        // is the last character of a preceding identifier, as in: `func?4`\n        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n      }\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    keywords: RUBY_KEYWORDS\n  };\n\n  var RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    IRB_OBJECT,\n    {\n      className: 'class',\n      beginKeywords: 'class module', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n        {\n          className: 'inheritance',\n          begin: '<\\\\s*',\n          contains: [{\n            className: 'parent',\n            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n          }]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def', end: '$|;',\n      relevance: 0,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'constant',\n      begin: '(::)?(\\\\b[A-Z]\\\\w*(::)?)+',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [STRING, {begin: RUBY_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        IRB_OBJECT,\n        {\n          className: 'regexp',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          illegal: /\\n/,\n          variants: [\n            {begin: '/', end: '/[a-z]*'},\n            {begin: '%r{', end: '}[a-z]*'},\n            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n            {begin: '%r!', end: '![a-z]*'},\n            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n          ]\n        }\n      ].concat(COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  var SIMPLE_PROMPT = \"[>?]>\";\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d(p\\\\d+)?[^>]+>\";\n\n  var IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      className: 'status',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'prompt',\n      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  return {\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(RUBY_DEFAULT_CONTAINS)\n  };\n});\n\nhljs.registerLanguage('erb', function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT('<%#', '%>'),\n      {\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('erlang-repl', function(hljs) {\n  return {\n    keywords: {\n      special_functions:\n        'spawn spawn_link self',\n      reserved:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'prompt', begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'constant', begin: '\\\\?(::)?([A-Z]\\\\w*(::)?)+'\n      },\n      {\n        className: 'arrow', begin: '->'\n      },\n      {\n        className: 'ok', begin: 'ok'\n      },\n      {\n        className: 'exclamation_mark', begin: '!'\n      },\n      {\n        className: 'function_or_atom',\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        className: 'variable',\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('erlang', function(hljs) {\n  var BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  var FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  var ERLANG_RESERVED = {\n    keyword:\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +\n      'let not of orelse|10 query receive rem try when xor',\n    literal:\n      'false true'\n  };\n\n  var COMMENT = hljs.COMMENT('%', '$');\n  var NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  var NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  var FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(', end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'function_name', begin: FUNCTION_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: '\\\\(', end: '\\\\)', endsWithParent: true,\n        returnEnd: true,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  var TUPLE = {\n    className: 'tuple',\n    begin: '{', end: '}',\n    relevance: 0\n    // \"contains\" defined later\n  };\n  var VAR1 = {\n    className: 'variable',\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  var VAR2 = {\n    className: 'variable',\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  var RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'record_name',\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n\n  var BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case', end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [\n    COMMENT,\n    NAMED_FUN,\n    hljs.inherit(hljs.APOS_STRING_MODE, {className: ''}),\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n\n  var BASIC_MODES = [\n    COMMENT,\n    NAMED_FUN,\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [\n      {\n        className: 'function',\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(', end: '->',\n        returnBegin: true,\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {begin: BASIC_ATOM_RE})\n        ],\n        starts: {\n          end: ';|\\\\.',\n          keywords: ERLANG_RESERVED,\n          contains: BASIC_MODES\n        }\n      },\n      COMMENT,\n      {\n        className: 'pp',\n        begin: '^-', end: '\\\\.',\n        relevance: 0,\n        excludeEnd: true,\n        returnBegin: true,\n        lexemes: '-' + hljs.IDENT_RE,\n        keywords:\n          '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' +\n          '-import -include -include_lib -compile -define -else -endif -file -behaviour ' +\n          '-behavior -spec',\n        contains: [PARAMS]\n      },\n      NUMBER,\n      hljs.QUOTE_STRING_MODE,\n      RECORD_ACCESS,\n      VAR1, VAR2,\n      TUPLE,\n      {begin: /\\.$/} // relevance booster\n    ]\n  };\n});\n\nhljs.registerLanguage('fix', function(hljs) {\n  return {\n    contains: [\n    {\n      begin: /[^\\u2401\\u0001]+/,\n      end: /[\\u2401\\u0001]/,\n      excludeEnd: true,\n      returnBegin: true,\n      returnEnd: false,\n      contains: [\n      {\n        begin: /([^\\u2401\\u0001=]+)/,\n        end: /=([^\\u2401\\u0001=]+)/,\n        returnEnd: true,\n        returnBegin: false,\n        className: 'attribute'\n      },\n      {\n        begin: /=/,\n        end: /([\\u2401\\u0001])/,\n        excludeEnd: true,\n        excludeBegin: true,\n        className: 'string'\n      }]\n    }],\n    case_insensitive: true\n  };\n});\n\nhljs.registerLanguage('fortran', function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var F_KEYWORDS = {\n    constant: '.False. .True.',\n    type: 'integer real character complex logical dimension allocatable|10 parameter ' +\n      'external implicit|10 none double precision assign intent optional pointer ' +\n      'target in out common equivalence data',\n    keyword: 'kind do while private call intrinsic where elsewhere ' +\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\n      'goto save else use module select case ' +\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\n      'continue format pause cycle exit ' +\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous ' +\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure',\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of'  +\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image'\n  };\n  return {\n    case_insensitive: true,\n    aliases: ['f90', 'f95'],\n    keywords: F_KEYWORDS,\n    contains: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE,{className: 'string', relevance: 0}),\n      {\n        className: 'function',\n        beginKeywords: 'subroutine function program',\n        illegal: '[${=\\\\n]',\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      },\n      hljs.COMMENT('!', '$', {relevance: 0}),\n      {\n        className: 'number',\n        begin: '(?=\\\\b|\\\\+|\\\\-|\\\\.)(?=\\\\.\\\\d|\\\\d)(?:\\\\d+)?(?:\\\\.?\\\\d*)(?:[de][+-]?\\\\d+)?\\\\b\\\\.?',\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('fsharp', function(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    aliases: ['fs'],\n    keywords:\n      // monad builder keywords (at top, matches before non-bang kws)\n      'yield! return! let! do!' +\n      // regular keywords\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    contains: [\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'annotation',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'attribute',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('gcode', function(hljs) {\n    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n    var GCODE_CLOSE_RE = '\\\\%';\n    var GCODE_KEYWORDS = {\n        literal:\n            '',\n        built_in:\n            '',\n        keyword:\n            'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n            'EQ LT GT NE GE LE OR XOR'\n    };\n    var GCODE_START = {\n        className: 'preprocessor',\n        begin: '([O])([0-9]+)'\n    };\n    var GCODE_CODE = [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(/\\(/, /\\)/),\n        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n        {\n            className: 'keyword',\n            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'title',\n            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'title',\n            begin: '(VC|VS|#)',\n            end: '(\\\\d+)'\n        },\n        {\n            className: 'title',\n            begin: '(VZOFX|VZOFY|VZOFZ)'\n        },\n        {\n            className: 'built_in',\n            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n        },\n        {\n            className: 'label',\n            variants: [\n                {\n                    begin: 'N', end: '\\\\d+',\n                    illegal: '\\\\W'\n                }\n            ]\n        }\n    ];\n\n    return {\n        aliases: ['nc'],\n        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n        // However, most prefer all uppercase and uppercase is customary.\n        case_insensitive: true,\n        lexemes: GCODE_IDENT_RE,\n        keywords: GCODE_KEYWORDS,\n        contains: [\n            {\n                className: 'preprocessor',\n                begin: GCODE_CLOSE_RE\n            },\n            GCODE_START\n        ].concat(GCODE_CODE)\n    };\n});\n\nhljs.registerLanguage('gherkin', function (hljs) {\n  return {\n    aliases: ['feature'],\n    keywords: 'Feature Background Ability Business\\ Need Scenario Scenarios Scenario\\ Outline Scenario\\ Template Examples Given And Then But When',\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\*'\n      },\n      hljs.COMMENT('@[^@\\r\\n\\t ]+', '$'),\n      {\n        begin: '\\\\|', end: '\\\\|\\\\w*$',\n        contains: [\n          {\n            className: 'string',\n            begin: '[^|]+'\n          }\n        ]\n      },\n      {\n        className: 'variable',\n        begin: '<', end: '>'\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('glsl', function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        'atomic_uint attribute bool break bvec2 bvec3 bvec4 case centroid coherent const continue default ' +\n        'discard dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 ' +\n        'dmat4x4 do double dvec2 dvec3 dvec4 else flat float for highp if iimage1D iimage1DArray ' +\n        'iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube ' +\n        'iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect ' +\n        'image3D imageBuffer imageCube imageCubeArray in inout int invariant isampler1D isampler1DArray ' +\n        'isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer ' +\n        'isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 layout lowp mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 ' +\n        'mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 mediump noperspective out patch precision readonly restrict ' +\n        'return sample sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray ' +\n        'sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow ' +\n        'sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow smooth ' +\n        'struct subroutine switch uimage1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray ' +\n        'uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint uniform usampler1D usampler1DArray ' +\n        'usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D usamplerBuffer ' +\n        'usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 varying vec2 vec3 vec4 void volatile while writeonly',\n      built_in:\n        'gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial ' +\n        'gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color ' +\n        'gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord ' +\n        'gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor ' +\n        'gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial ' +\n        'gl_FrontSecondaryColor gl_InstanceID gl_InvocationID gl_Layer gl_LightModel ' +\n        'gl_LightSource gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize ' +\n        'gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers ' +\n        'gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs ' +\n        'gl_MaxCombinedTextureImageUnits gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers ' +\n        'gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents ' +\n        'gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers ' +\n        'gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents ' +\n        'gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits ' +\n        'gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents ' +\n        'gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset ' +\n        'gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms ' +\n        'gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits ' +\n        'gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents ' +\n        'gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters ' +\n        'gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents ' +\n        'gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents ' +\n        'gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits ' +\n        'gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors ' +\n        'gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs ' +\n        'gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexTextureImageUnits ' +\n        'gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset'+\n        'gl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose ' +\n        'gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse ' +\n        'gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose ' +\n        'gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 ' +\n        'gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix ' +\n        'gl_NormalScale gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn ' +\n        'gl_PerVertex gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn ' +\n        'gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose ' +\n        'gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition ' +\n        'gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor ' +\n        'gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID ' +\n        'gl_ViewportIndex gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive ' +\n        'abs acos acosh all any asin asinh atan atanh atomicCounter atomicCounterDecrement ' +\n        'atomicCounterIncrement barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ' +\n        'ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward ' +\n        'findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan ' +\n        'greaterThanEqual imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange ' +\n        'imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageStore imulExtended ' +\n        'intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt ' +\n        'isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier ' +\n        'min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 ' +\n        'packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract ' +\n        'round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj ' +\n        'shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture ' +\n        'texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj ' +\n        'texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod ' +\n        'textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod ' +\n        'textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod ' +\n        'textureProjLodOffset textureProjOffset textureQueryLod textureSize transpose trunc uaddCarry ' +\n        'uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 ' +\n        'unpackUnorm2x16 unpackUnorm4x8 usubBorrow gl_TextureMatrix gl_TextureMatrixInverse',\n      literal: 'true false'\n    },\n    illegal: '\"',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('go', function(hljs) {\n  var GO_KEYWORDS = {\n    keyword:\n      'break default func interface select case map struct chan else goto package switch ' +\n      'const fallthrough if range type continue for import return var go defer',\n    constant:\n       'true false iota nil',\n    typename:\n      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n      'uint16 uint32 uint64 int uint uintptr rune',\n    built_in:\n      'append cap close complex copy imag len make new panic print println real recover delete'\n  };\n  return {\n    aliases: [\"golang\"],\n    keywords: GO_KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '[^\\\\\\\\]\\''\n      },\n      {\n        className: 'string',\n        begin: '`', end: '`'\n      },\n      {\n        className: 'number',\n        begin: hljs.C_NUMBER_RE + '[dflsi]?',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('gradle', function(hljs) {\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'task project allprojects subprojects artifacts buildscript configurations ' +\n        'dependencies repositories sourceSets description delete from into include ' +\n        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n        'def abstract break case catch continue default do else extends final finally ' +\n        'for if implements instanceof native new private protected public return static ' +\n        'switch synchronized throw throws transient try volatile while strictfp package ' +\n        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n        'byte char class double float int interface long short void compile runTime ' +\n        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n        'newReader newWriter next plus pop power previous print println push putAt read ' +\n        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n        'withStream withWriter withWriterAppend write writeLine'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.REGEXP_MODE\n\n    ]\n  }\n});\n\nhljs.registerLanguage('groovy', function(hljs) {\n    return {\n        keywords: {\n            typename: 'byte short char int long boolean float double void',\n            literal : 'true false null',\n            keyword:\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'super this abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n\n        contains: [\n            hljs.COMMENT(\n                '/\\\\*\\\\*',\n                '\\\\*/',\n                {\n                    relevance : 0,\n                    contains : [{\n                        className : 'doctag',\n                        begin : '@[A-Za-z]+'\n                    }]\n                }\n            ),\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n                className: 'string',\n                begin: '\"\"\"', end: '\"\"\"'\n            },\n            {\n                className: 'string',\n                begin: \"'''\", end: \"'''\"\n            },\n            {\n                className: 'string',\n                begin: \"\\\\$/\", end: \"/\\\\$\",\n                relevance: 10\n            },\n            hljs.APOS_STRING_MODE,\n            {\n                className: 'regexp',\n                begin: /~?\\/[^\\/\\n]+\\//,\n                contains: [\n                    hljs.BACKSLASH_ESCAPE\n                ]\n            },\n            hljs.QUOTE_STRING_MODE,\n            {\n                className: 'shebang',\n                begin: \"^#!/usr/bin/env\", end: '$',\n                illegal: '\\n'\n            },\n            hljs.BINARY_NUMBER_MODE,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: '{',\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE,\n                ]\n            },\n            hljs.C_NUMBER_MODE,\n            {\n                className: 'annotation', begin: '@[A-Za-z]+'\n            },\n            {\n                // highlight map keys and named parameters as strings\n                className: 'string', begin: /[^\\?]{0}[A-Za-z0-9_$]+ *:/\n            },\n            {\n                // catch middle element of the ternary operator\n                // to avoid highlight it as a label, named parameter, or map key\n                begin: /\\?/, end: /\\:/\n            },\n            {\n                // highlight labeled statements\n                className: 'label', begin: '^\\\\s*[A-Za-z0-9_$]+:',\n                relevance: 0\n            },\n        ],\n        illegal: /#/\n    }\n});\n\nhljs.registerLanguage('haml', // TODO support filter tags like :javascript, support inline HTML\nfunction(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'doctype',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'title',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'value',\n            begin: '[#\\\\.][\\\\w-]+'\n          },\n          {\n            begin: '{\\\\s*',\n            end: '\\\\s*}',\n            excludeEnd: true,\n            contains: [\n              {\n                //className: 'attribute',\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'symbol',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                //className: 'attribute',\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attribute',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        className: 'bullet',\n        begin: '^\\\\s*[=~]\\\\s*',\n        relevance: 0\n      },\n      {\n        begin: '#{',\n        starts: {\n          end: '}',\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('handlebars', function(hljs) {\n  var EXPRESSION_KEYWORDS = 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield';\n  return {\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      {\n        className: 'expression',\n        begin: '{{', end: '}}',\n        contains: [\n          {\n            className: 'begin-block', begin: '\\#[a-zA-Z\\-\\ \\.]+',\n            keywords: EXPRESSION_KEYWORDS\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"'\n          },\n          {\n            className: 'end-block', begin: '\\\\\\/[a-zA-Z\\-\\ \\.]+',\n            keywords: EXPRESSION_KEYWORDS\n          },\n          {\n            className: 'variable', begin: '[a-zA-Z\\-\\.]+',\n            keywords: EXPRESSION_KEYWORDS\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('haskell', function(hljs) {\n  var COMMENT_MODES = [\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT(\n      '{-',\n      '-}',\n      {\n        contains: ['self']\n      }\n    )\n  ];\n\n  var PRAGMA = {\n    className: 'pragma',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'preprocessor',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    className: 'container',\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'})\n    ].concat(COMMENT_MODES)\n  };\n\n  var RECORD = {\n    className: 'container',\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        className: 'module',\n        begin: '\\\\bmodule\\\\b', end: 'where',\n        keywords: 'module where',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'import',\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import|0 qualified as hiding',\n        contains: [LIST].concat(COMMENT_MODES),\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n      },\n      {\n        className: 'typedef',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD].concat(COMMENT_MODES)\n      },\n      {\n        className: 'default',\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST].concat(COMMENT_MODES)\n      },\n      {\n        className: 'infix',\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE].concat(COMMENT_MODES)\n      },\n      {\n        className: 'foreign',\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE].concat(COMMENT_MODES)\n      },\n      {\n        className: 'shebang',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ].concat(COMMENT_MODES)\n  };\n});\n\nhljs.registerLanguage('haxe', function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break callback case cast catch class continue default do dynamic else enum extends extern ' +\n    'for function here if implements import in inline interface never new override package private ' +\n    'public return static super switch this throw trace try typedef untyped using var while',\n      literal: 'true false null'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$',\n        keywords: 'if else elseif end error'\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          {\n            className: 'type',\n            begin: ':',\n            end: IDENT_FUNC_RETURN_TYPE_RE,\n            relevance: 10\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('http', function(hljs) {\n  return {\n    aliases: ['https'],\n    illegal: '\\\\S',\n    contains: [\n      {\n        className: 'status',\n        begin: '^HTTP/[0-9\\\\.]+', end: '$',\n        contains: [{className: 'number', begin: '\\\\b\\\\d{3}\\\\b'}]\n      },\n      {\n        className: 'request',\n        begin: '^[A-Z]+ (.*?) HTTP/[0-9\\\\.]+$', returnBegin: true, end: '$',\n        contains: [\n          {\n            className: 'string',\n            begin: ' ', end: ' ',\n            excludeBegin: true, excludeEnd: true\n          }\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: '^\\\\w', end: ': ', excludeEnd: true,\n        illegal: '\\\\n|\\\\s|=',\n        starts: {className: 'string', end: '$'}\n      },\n      {\n        begin: '\\\\n\\\\n',\n        starts: {subLanguage: [], endsWithParent: true}\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('inform7', function(hljs) {\n  var START_BRACKET = '\\\\[';\n  var END_BRACKET = '\\\\]';\n  return {\n    aliases: ['i7'],\n    case_insensitive: true,\n    keywords: {\n      // Some keywords more or less unique to I7, for relevance.\n      keyword:\n        // kind:\n        'thing|10 room|10 person|10 man|10 woman|10 animal|10 container ' +\n        'supporter|10 backdrop|10 door|10 ' +\n        // characteristic:\n        'scenery|10 open closed|10 locked|10 inside|10 gender|10 ' +\n        // verb:\n        'is are say|10 understand|10 ' +\n        // misc keyword:\n        'kind|10 of rule|10'\n    },\n    contains: [\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        relevance: 0,\n        contains: [\n          {\n            className: 'subst',\n            begin: START_BRACKET, end: END_BRACKET\n          }\n        ]\n      },\n      {\n        className: 'title',\n        beginKeywords: '^Volume ^Book ^Part ^Chapter ^Section',\n        end: '$',\n        relevance: 10\n      },\n      {\n        // Table\n        className: 'title',\n        beginKeywords: '^Table',\n        end: '$',\n        relevance: 10\n      },\n      {\n        // Rule definition\n        // This is here for relevance.\n        begin: '^\\\\b(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)',\n        end: ':',\n        contains: [\n          {\n            //Rule name\n            begin: '\\\\b\\\\(This',\n            end: '\\\\)',\n            relevance: 10\n          }\n        ],\n        relevance: 10\n      },\n      {\n        className: 'comment',\n        begin: START_BRACKET, end: END_BRACKET,\n        contains: ['self']\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('ini', function(hljs) {\n  var STRING = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: \"'''\", end: \"'''\",\n        relevance: 10\n      }, {\n        begin: '\"\"\"', end: '\"\"\"',\n        relevance: 10\n      }, {\n        begin: '\"', end: '\"'\n      }, {\n        begin: \"'\", end: \"'\"\n      }\n    ]\n  };\n  return {\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT(';', '$'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'title',\n        begin: /^\\s*\\[+/, end: /\\]+/\n      },\n      {\n        className: 'setting',\n        begin: /^[a-z0-9\\[\\]_-]+\\s*=\\s*/, end: '$',\n        contains: [\n          {\n            className: 'value',\n            endsWithParent: true,\n            keywords: 'on off true false yes no',\n            contains: [\n              {\n                className: 'variable',\n                variants: [\n                  {begin: /\\$[\\w\\d\"][\\w\\d_]*/},\n                  {begin: /\\$\\{(.*?)}/}\n                ]\n              },\n              STRING,\n              {\n                className: 'number',\n                begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/\n              },\n              hljs.NUMBER_MODE\n            ],\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('java', function(hljs) {\n  var GENERIC_IDENT_RE = hljs.UNDERSCORE_IDENT_RE + '(<' + hljs.UNDERSCORE_IDENT_RE + '>)?';\n  var KEYWORDS =\n    'false synchronized int abstract float private char boolean static null if const ' +\n    'for true while long strictfp finally protected import native final void ' +\n    'enum else break transient catch instanceof byte super volatile case assert short ' +\n    'package default double public try this switch continue throws protected public private';\n\n  // https://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html\n  var JAVA_NUMBER_RE = '\\\\b' +\n    '(' +\n      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n      '|' +\n      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n      '|' +\n      '(' +\n        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n        '|' +\n        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n      ')' +\n      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n    ')' +\n    '[lLfF]?';\n  var JAVA_NUMBER_MODE = {\n    className: 'number',\n    begin: JAVA_NUMBER_RE,\n    relevance: 0\n  };\n\n  return {\n    aliases: ['jsp'],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: /[{;=]/, excludeEnd: true,\n        keywords: 'class interface',\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      JAVA_NUMBER_MODE,\n      {\n        className: 'annotation', begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('javascript', function(hljs) {\n  return {\n    aliases: ['js'],\n    keywords: {\n      keyword:\n        'in of if for while finally var new function do return void else break catch ' +\n        'instanceof with throw case default try this switch continue typeof delete ' +\n        'let yield const export super debugger as async await',\n      literal:\n        'true false null undefined NaN Infinity',\n      built_in:\n        'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n        'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n        'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n        'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n        'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n        'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n        'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n        'Promise'\n    },\n    contains: [\n      {\n        className: 'pi',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</, end: />\\s*[);\\]]/,\n            relevance: 0,\n            subLanguage: 'xml'\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ],\n            illegal: /[\"'\\(]/\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      },\n      // ECMAScript 6 modules import\n      {\n        beginKeywords: 'import', end: '[;$]',\n        keywords: 'import from as',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /#/\n  };\n});\n\nhljs.registerLanguage('json', function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    className: 'value',\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attribute',\n        begin: '\\\\s*\"', end: '\"\\\\s*:\\\\s*', excludeBegin: true, excludeEnd: true,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n        starts: VALUE_CONTAINER\n      }\n    ],\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER, {className: null})], // inherit is also a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n});\n\nhljs.registerLanguage('julia', function(hljs) {\n  // Since there are numerous special names in Julia, it is too much trouble\n  // to maintain them by hand. Hence these names (i.e. keywords, literals and\n  // built-ins) are automatically generated from Julia (v0.3.0) itself through\n  // following scripts for each.\n\n  var KEYWORDS = {\n    // # keyword generator\n    // println(\"\\\"in\\\",\")\n    // for kw in Base.REPLCompletions.complete_keyword(\"\")\n    //     println(\"\\\"$kw\\\",\")\n    // end\n    keyword:\n      'in abstract baremodule begin bitstype break catch ccall const continue do else elseif end export ' +\n      'finally for function global if immutable import importall let local macro module quote return try type ' +\n      'typealias using while',\n\n    // # literal generator\n    // println(\"\\\"true\\\",\\n\\\"false\\\"\")\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         s = symbol(name)\n    //         v = eval(s)\n    //         if !isa(v, Function) &&\n    //            !isa(v, DataType) &&\n    //            !issubtype(typeof(v), Tuple) &&\n    //            !isa(v, UnionType) &&\n    //            !isa(v, Module) &&\n    //            !isa(v, TypeConstructor) &&\n    //            !isa(v, Colon)\n    //             println(\"\\\"$name\\\",\")\n    //         end\n    //     end\n    // end\n    literal:\n      'true false ANY ARGS CPU_CORES C_NULL DL_LOAD_PATH DevNull ENDIAN_BOM ENV I|0 Inf Inf16 Inf32 ' +\n      'InsertionSort JULIA_HOME LOAD_PATH MS_ASYNC MS_INVALIDATE MS_SYNC MergeSort NaN NaN16 NaN32 OS_NAME QuickSort ' +\n      'RTLD_DEEPBIND RTLD_FIRST RTLD_GLOBAL RTLD_LAZY RTLD_LOCAL RTLD_NODELETE RTLD_NOLOAD RTLD_NOW RoundDown ' +\n      'RoundFromZero RoundNearest RoundToZero RoundUp STDERR STDIN STDOUT VERSION WORD_SIZE catalan cglobal e eu ' +\n      'eulergamma golden im nothing pi γ π φ',\n\n    // # built_in generator:\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(symbol(name))\n    //         if isa(v, DataType)\n    //             println(\"\\\"$name\\\",\")\n    //         end\n    //     end\n    // end\n    built_in:\n      'ASCIIString AbstractArray AbstractRNG AbstractSparseArray Any ArgumentError Array Associative Base64Pipe ' +\n      'Bidiagonal BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError Box CFILE Cchar Cdouble Cfloat Char ' +\n      'CharString Cint Clong Clonglong ClusterManager Cmd Coff_t Colon Complex Complex128 Complex32 Complex64 ' +\n      'Condition Cptrdiff_t Cshort Csize_t Cssize_t Cuchar Cuint Culong Culonglong Cushort Cwchar_t DArray DataType ' +\n      'DenseArray Diagonal Dict DimensionMismatch DirectIndexString Display DivideError DomainError EOFError ' +\n      'EachLine Enumerate ErrorException Exception Expr Factorization FileMonitor FileOffset Filter Float16 Float32 ' +\n      'Float64 FloatRange FloatingPoint Function GetfieldNode GotoNode Hermitian IO IOBuffer IOStream IPv4 IPv6 ' +\n      'InexactError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException IntrinsicFunction KeyError ' +\n      'LabelNode LambdaStaticData LineNumberNode LoadError LocalProcess MIME MathConst MemoryError MersenneTwister ' +\n      'Method MethodError MethodTable Module NTuple NewvarNode Nothing Number ObjectIdDict OrdinalRange ' +\n      'OverflowError ParseError PollingFileWatcher ProcessExitedException ProcessGroup Ptr QuoteNode Range Range1 ' +\n      'Ranges Rational RawFD Real Regex RegexMatch RemoteRef RepString RevString RopeString RoundingMode Set ' +\n      'SharedArray Signed SparseMatrixCSC StackOverflowError Stat StatStruct StepRange String SubArray SubString ' +\n      'SymTridiagonal Symbol SymbolNode Symmetric SystemError Task TextDisplay Timer TmStruct TopNode Triangular ' +\n      'Tridiagonal Type TypeConstructor TypeError TypeName TypeVar UTF16String UTF32String UTF8String UdpSocket ' +\n      'Uint Uint128 Uint16 Uint32 Uint64 Uint8 UndefRefError UndefVarError UniformScaling UnionType UnitRange ' +\n      'Unsigned Vararg VersionNumber WString WeakKeyDict WeakRef Woodbury Zip'\n  };\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\n  var VARIABLE_NAME_RE = \"[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*\";\n\n  // placeholder for recursive self-reference\n  var DEFAULT = { lexemes: VARIABLE_NAME_RE, keywords: KEYWORDS };\n\n  var TYPE_ANNOTATION = {\n    className: \"type-annotation\",\n    begin: /::/\n  };\n\n  var SUBTYPE = {\n    className: \"subtype\",\n    begin: /<:/\n  };\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\n  var NUMBER = {\n    className: \"number\",\n    // supported numeric literals:\n    //  * binary literal (e.g. 0x10)\n    //  * octal literal (e.g. 0o76543210)\n    //  * hexadecimal literal (e.g. 0xfedcba876543210)\n    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n    //  * decimal literal (e.g. 9876543210, 100_000_000)\n    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n    relevance: 0\n  };\n\n  var CHAR = {\n    className: \"char\",\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n  };\n\n  var INTERPOLATION = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    keywords: KEYWORDS\n  };\n\n  var INTERPOLATED_VARIABLE = {\n    className: 'variable',\n    begin: \"\\\\$\" + VARIABLE_NAME_RE\n  };\n\n  // TODO: neatly escape normal code in string literal\n  var STRING = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    variants: [\n      { begin: /\\w*\"/, end: /\"\\w*/ },\n      { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/ }\n    ]\n  };\n\n  var COMMAND = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    begin: '`', end: '`'\n  };\n\n  var MACROCALL = {\n    className: \"macrocall\",\n    begin: \"@\" + VARIABLE_NAME_RE\n  };\n\n  var COMMENT = {\n    className: \"comment\",\n    variants: [\n      { begin: \"#=\", end: \"=#\", relevance: 10 },\n      { begin: '#', end: '$' }\n    ]\n  };\n\n  DEFAULT.contains = [\n    NUMBER,\n    CHAR,\n    TYPE_ANNOTATION,\n    SUBTYPE,\n    STRING,\n    COMMAND,\n    MACROCALL,\n    COMMENT,\n    hljs.HASH_COMMENT_MODE\n  ];\n  INTERPOLATION.contains = DEFAULT.contains;\n\n  return DEFAULT;\n});\n\nhljs.registerLanguage('kotlin', function (hljs) {\n  var KEYWORDS = 'val var get set class trait object public open private protected ' +\n    'final enum if else do while for when break continue throw try catch finally ' +\n    'import package is as in return fun override default companion reified inline volatile transient native';\n\n  return {\n    keywords: {\n      typename: 'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n      literal: 'true false null',\n      keyword: KEYWORDS\n    },\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'type',\n        begin: /</, end: />/,\n        returnBegin: true,\n        excludeEnd: false,\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fun', end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'type',\n            begin: /</, end: />/, keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            illegal: /\\([^\\(,\\s:]+,/,\n            contains: [\n              {\n                className: 'typename',\n                begin: /:\\s*/, end: /\\s*[=\\)]/, excludeBegin: true, returnEnd: true,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class trait', end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</, end: />/, excludeBegin: true, excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'typename',\n            begin: /[,:]\\s*/, end: /[<\\(,]|$/, excludeBegin: true, returnEnd: true\n          }\n        ]\n      },\n      {\n        className: 'variable', beginKeywords: 'var val', end: /\\s*[=:$]/, excludeEnd: true\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'shebang',\n        begin: \"^#!/usr/bin/env\", end: '$',\n        illegal: '\\n'\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('lasso', function(hljs) {\n  var LASSO_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*';\n  var LASSO_ANGLE_RE = '<\\\\?(lasso(script)?|=)';\n  var LASSO_CLOSE_RE = '\\\\]|\\\\?>';\n  var LASSO_KEYWORDS = {\n    literal:\n      'true false none minimal full all void ' +\n      'bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft',\n    built_in:\n      'array date decimal duration integer map pair string tag xml null ' +\n      'boolean bytes keyword list locale queue set stack staticarray ' +\n      'local var variable global data self inherited currentcapture givenblock',\n    keyword:\n      'error_code error_msg error_pop error_push error_reset cache ' +\n      'database_names database_schemanames database_tablenames define_tag ' +\n      'define_type email_batch encode_set html_comment handle handle_error ' +\n      'header if inline iterate ljax_target link link_currentaction ' +\n      'link_currentgroup link_currentrecord link_detail link_firstgroup ' +\n      'link_firstrecord link_lastgroup link_lastrecord link_nextgroup ' +\n      'link_nextrecord link_prevgroup link_prevrecord log loop ' +\n      'namespace_using output_none portal private protect records referer ' +\n      'referrer repeating resultset rows search_args search_arguments ' +\n      'select sort_args sort_arguments thread_atomic value_list while ' +\n      'abort case else if_empty if_false if_null if_true loop_abort ' +\n      'loop_continue loop_count params params_up return return_value ' +\n      'run_children soap_definetag soap_lastrequest soap_lastresponse ' +\n      'tag_name ascending average by define descending do equals ' +\n      'frozen group handle_failure import in into join let match max ' +\n      'min on order parent protected provide public require returnhome ' +\n      'skip split_thread sum take thread to trait type where with ' +\n      'yield yieldhome'\n  };\n  var HTML_COMMENT = hljs.COMMENT(\n    '<!--',\n    '-->',\n    {\n      relevance: 0\n    }\n  );\n  var LASSO_NOPROCESS = {\n    className: 'preprocessor',\n    begin: '\\\\[noprocess\\\\]',\n    starts: {\n      className: 'markup',\n      end: '\\\\[/noprocess\\\\]',\n      returnEnd: true,\n      contains: [HTML_COMMENT]\n    }\n  };\n  var LASSO_START = {\n    className: 'preprocessor',\n    begin: '\\\\[/noprocess|' + LASSO_ANGLE_RE\n  };\n  var LASSO_DATAMEMBER = {\n    className: 'variable',\n    begin: '\\'' + LASSO_IDENT_RE + '\\''\n  };\n  var LASSO_CODE = [\n    hljs.COMMENT(\n      '/\\\\*\\\\*!',\n      '\\\\*/'\n    ),\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {begin: hljs.C_NUMBER_RE + '|(infinity|nan)\\\\b'}),\n    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n    {\n      className: 'string',\n      begin: '`', end: '`'\n    },\n    {\n      className: 'variable',\n      variants: [\n        {\n          begin: '[#$]' + LASSO_IDENT_RE\n        },\n        {\n          begin: '#', end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    },\n    {\n      className: 'tag',\n      begin: '::\\\\s*', end: LASSO_IDENT_RE,\n      illegal: '\\\\W'\n    },\n    {\n      className: 'attribute',\n      variants: [\n        {\n          begin: '-(?!infinity)' + hljs.UNDERSCORE_IDENT_RE,\n          relevance: 0\n        },\n        {\n          begin: '(\\\\.\\\\.\\\\.)'\n        }\n      ]\n    },\n    {\n      className: 'subst',\n      variants: [\n        {\n          begin: '->\\\\s*',\n          contains: [LASSO_DATAMEMBER]\n        },\n        {\n          begin: '->|\\\\\\\\|&&?|\\\\|\\\\||!(?!=|>)|(and|or|not)\\\\b',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'built_in',\n      begin: '\\\\.\\\\.?\\\\s*',\n      relevance: 0,\n      contains: [LASSO_DATAMEMBER]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'define',\n      returnEnd: true, end: '\\\\(|=>',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: hljs.UNDERSCORE_IDENT_RE + '(=(?!>))?'})\n      ]\n    }\n  ];\n  return {\n    aliases: ['ls', 'lassoscript'],\n    case_insensitive: true,\n    lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n    keywords: LASSO_KEYWORDS,\n    contains: [\n      {\n        className: 'preprocessor',\n        begin: LASSO_CLOSE_RE,\n        relevance: 0,\n        starts: {\n          className: 'markup',\n          end: '\\\\[|' + LASSO_ANGLE_RE,\n          returnEnd: true,\n          relevance: 0,\n          contains: [HTML_COMMENT]\n        }\n      },\n      LASSO_NOPROCESS,\n      LASSO_START,\n      {\n        className: 'preprocessor',\n        begin: '\\\\[no_square_brackets',\n        starts: {\n          end: '\\\\[/no_square_brackets\\\\]', // not implemented in the language\n          lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n          keywords: LASSO_KEYWORDS,\n          contains: [\n            {\n              className: 'preprocessor',\n              begin: LASSO_CLOSE_RE,\n              relevance: 0,\n              starts: {\n                className: 'markup',\n                end: '\\\\[noprocess\\\\]|' + LASSO_ANGLE_RE,\n                returnEnd: true,\n                contains: [HTML_COMMENT]\n              }\n            },\n            LASSO_NOPROCESS,\n            LASSO_START\n          ].concat(LASSO_CODE)\n        }\n      },\n      {\n        className: 'preprocessor',\n        begin: '\\\\[',\n        relevance: 0\n      },\n      {\n        className: 'shebang',\n        begin: '^#!.+lasso9\\\\b',\n        relevance: 10\n      }\n    ].concat(LASSO_CODE)\n  };\n});\n\nhljs.registerLanguage('less', function(hljs) {\n  var IDENT_RE        = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  var INTERP_IDENT_RE = '(' + IDENT_RE + '|@{' + IDENT_RE + '})';\n\n  /* Generic Modes */\n\n  var RULES = [], VALUE = []; // forward def. for recursive modes\n\n  var STRING_MODE = function(c) { return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n    className: 'string', begin: '~?' + c + '.*?' + c\n  };};\n\n  var IDENT_MODE = function(name, begin, relevance) { return {\n    className: name, begin: begin, relevance: relevance\n  };};\n\n  var FUNCT_MODE = function(name, ident, obj) {\n    return hljs.inherit({\n        className: name, begin: ident + '\\\\(', end: '\\\\(',\n        returnBegin: true, excludeEnd: true, relevance: 0\n    }, obj);\n  };\n\n  var PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(', end: '\\\\)', contains: VALUE, relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    IDENT_MODE('hexcolor', '#[0-9A-Fa-f]+\\\\b'),\n    FUNCT_MODE('function', '(url|data-uri)', {\n      starts: {className: 'string', end: '[\\\\)\\\\n]', excludeEnd: true}\n    }),\n    FUNCT_MODE('function', IDENT_RE),\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute', begin: IDENT_RE + '\\\\s*:', end: ':', returnBegin: true, excludeEnd: true\n    }\n  );\n\n  var VALUE_WITH_RULESETS = VALUE.concat({\n    begin: '{', end: '}', contains: RULES\n  });\n\n  var MIXIN_GUARD_MODE = {\n    beginKeywords: 'when', endsWithParent: true,\n    contains: [{beginKeywords: 'and not'}].concat(VALUE) // using this form to override VALUE’s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  var RULE_MODE = {\n    className: 'attribute',\n    begin: INTERP_IDENT_RE, end: ':', excludeEnd: true,\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE],\n    illegal: /\\S/,\n    starts: {end: '[;}]', returnEnd: true, contains: VALUE, illegal: '[<=$]'}\n  };\n\n  var AT_RULE_MODE = {\n    className: 'at_rule', // highlight only at-rule keyword\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {end: '[;{}]', returnEnd: true, contains: VALUE, relevance: 0}\n  };\n\n  // variable definitions and calls\n  var VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {begin: '@' + IDENT_RE + '\\\\s*:', relevance: 15},\n      {begin: '@' + IDENT_RE}\n    ],\n    starts: {end: '[;}]', returnEnd: true, contains: VALUE_WITH_RULESETS}\n  };\n\n  var SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [{\n      begin: '[\\\\.#:&\\\\[]', end: '[;{}]'  // mixin calls end with ';'\n      }, {\n      begin: INTERP_IDENT_RE + '[^;]*{',\n      end: '{'\n    }],\n    returnBegin: true,\n    returnEnd:   true,\n    illegal: '[<=\\'$\"]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword',  'all\\\\b'),\n      IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),     // otherwise it’s identified as tag\n      IDENT_MODE('tag',       INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes \"tags\"\n      IDENT_MODE('id',       '#'   + INTERP_IDENT_RE),\n      IDENT_MODE('class',    '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('keyword',  '&', 0),\n      FUNCT_MODE('pseudo',   ':not'),\n      FUNCT_MODE('keyword',  ':extend'),\n      IDENT_MODE('pseudo',   '::?' + INTERP_IDENT_RE),\n      {className: 'attr_selector', begin: '\\\\[', end: '\\\\]'},\n      {begin: '\\\\(', end: '\\\\)', contains: VALUE_WITH_RULESETS}, // argument list of parametric mixins\n      {begin: '!important'} // eat !important after mixin call or it will be colored as tag\n    ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    SELECTOR_MODE,\n    RULE_MODE\n  );\n\n  return {\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n});\n\nhljs.registerLanguage('lisp', function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'shebang',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'keyword',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    className: 'quoted',\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: 'quote'\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    className: 'quoted',\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    className: 'list',\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'keyword',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n});\n\nhljs.registerLanguage('livecodeserver', function(hljs) {\n  var VARIABLE = {\n    className: 'variable', begin: '\\\\b[gtps][A-Z]+[A-Za-z0-9_\\\\-]*\\\\b|\\\\$_[A-Z]+',\n    relevance: 0\n  };\n  var COMMENT_MODES = [\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT('[^:]//', '$')\n  ];\n  var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {\n    variants: [\n      {begin: '\\\\b_*rig[A-Z]+[A-Za-z0-9_\\\\-]*'},\n      {begin: '\\\\b_[a-z0-9\\\\-]+'}\n    ]\n  });\n  var TITLE2 = hljs.inherit(hljs.TITLE_MODE, {begin: '\\\\b([A-Za-z0-9_\\\\-]+)\\\\b'});\n  return {\n    case_insensitive: false,\n    keywords: {\n      keyword:\n        '$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER ' +\n        'codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph ' +\n        'after byte bytes english the until http forever descending using line real8 with seventh ' +\n        'for stdout finally element word words fourth before black ninth sixth characters chars stderr ' +\n        'uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid ' +\n        'at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 ' +\n        'int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat ' +\n        'end repeat URL in try into switch to words https token binfile each tenth as ticks tick ' +\n        'system real4 by dateItems without char character ascending eighth whole dateTime numeric short ' +\n        'first ftp integer abbreviated abbr abbrev private case while if',\n      constant:\n        'SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE ' +\n        'QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO ' +\n        'six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five ' +\n        'quote empty one true return cr linefeed right backslash null seven tab three two ' +\n        'RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK ' +\n        'FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK',\n      operator:\n        'div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within ' +\n        'contains ends with begins the keys of keys',\n      built_in:\n        'put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode ' +\n        'base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum ' +\n        'cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress ' +\n        'constantNames cos date dateFormat decompress directories ' +\n        'diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global ' +\n        'globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset ' +\n        'keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders ' +\n        'libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 ' +\n        'longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec ' +\n        'millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar ' +\n        'numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets ' +\n        'paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation ' +\n        'populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile ' +\n        'revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull ' +\n        'revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered ' +\n        'revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames ' +\n        'revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull ' +\n        'revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections ' +\n        'revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype ' +\n        'revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext ' +\n        'revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames ' +\n        'revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase ' +\n        'revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute ' +\n        'revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces ' +\n        'revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode ' +\n        'revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling ' +\n        'revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error ' +\n        'revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute ' +\n        'revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort ' +\n        'revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree ' +\n        'revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance ' +\n        'sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound ' +\n        'stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper ' +\n        'transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames ' +\n        'variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet ' +\n        'xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process ' +\n        'combine constant convert create new alias folder directory decrypt delete variable word line folder ' +\n        'directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile ' +\n        'libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback ' +\n        'libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime ' +\n        'libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename ' +\n        'replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase ' +\n        'revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees ' +\n        'revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord ' +\n        'revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase ' +\n        'revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD ' +\n        'revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost ' +\n        'revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData ' +\n        'revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel ' +\n        'revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback ' +\n        'revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop ' +\n        'subtract union unload wait write'\n    },\n    contains: [\n      VARIABLE,\n      {\n        className: 'keyword',\n        begin: '\\\\bend\\\\sif\\\\b'\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '$',\n        contains: [\n          VARIABLE,\n          TITLE2,\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.BINARY_NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          TITLE1\n        ]\n      },\n      {\n        className: 'function',\n        begin: '\\\\bend\\\\s+', end: '$',\n        keywords: 'end',\n        contains: [\n          TITLE2,\n          TITLE1\n        ]\n      },\n      {\n        className: 'command',\n        beginKeywords: 'command on', end: '$',\n        contains: [\n          VARIABLE,\n          TITLE2,\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.BINARY_NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          TITLE1\n        ]\n      },\n      {\n        className: 'preprocessor',\n        variants: [\n          {\n            begin: '<\\\\?(rev|lc|livecode)',\n            relevance: 10\n          },\n          { begin: '<\\\\?' },\n          { begin: '\\\\?>' }\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.BINARY_NUMBER_MODE,\n      hljs.C_NUMBER_MODE,\n      TITLE1\n    ].concat(COMMENT_MODES),\n    illegal: ';$|^\\\\[|^='\n  };\n});\n\nhljs.registerLanguage('livescript', function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger case default function var with ' +\n      // LiveScript keywords\n      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n      'case default function var void const let enum export import native ' +\n      '__hasProp __extends __slice __bind __indexOf',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // LiveScript literals\n      'yes no on off it that void',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'pi',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      className: 'property',\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n});\n\nhljs.registerLanguage('lua', function(hljs) {\n  var OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  var CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  var LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n    contains: ['self']\n  };\n  var COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [LONG_BRACKETS],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: {\n      keyword:\n        'and break do else elseif end false for if in local nil not or repeat return then ' +\n        'true until while',\n      built_in:\n        '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' +\n        'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' +\n        'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' +\n        'io math os package string table'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n          {\n            className: 'params',\n            begin: '\\\\(', endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n        contains: [LONG_BRACKETS],\n        relevance: 5\n      }\n    ])\n  };\n});\n\nhljs.registerLanguage('makefile', function(hljs) {\n  var VARIABLE = {\n    className: 'variable',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        begin: /^\\w+\\s*\\W*=/, returnBegin: true,\n        relevance: 0,\n        starts: {\n          className: 'constant',\n          end: /\\s*\\W*=/, excludeEnd: true,\n          starts: {\n            end: /$/,\n            relevance: 0,\n            contains: [\n              VARIABLE\n            ]\n          }\n        }\n      },\n      {\n        className: 'title',\n        begin: /^[\\w]+:\\s*$/\n      },\n      {\n        className: 'phony',\n        begin: /^\\.PHONY:/, end: /$/,\n        keywords: '.PHONY', lexemes: /[\\.\\w]+/\n      },\n      {\n        begin: /^\\t+/, end: /$/,\n        relevance: 0,\n        contains: [\n          hljs.QUOTE_STRING_MODE,\n          VARIABLE\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('mathematica', function(hljs) {\n  return {\n    aliases: ['mma'],\n    lexemes: '(\\\\$|\\\\b)' + hljs.IDENT_RE + '\\\\b',\n    keywords: 'AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis ' +\n      'BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering ' +\n      'C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements ' +\n      'ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition ' +\n      'D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform ' +\n      'DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions ' +\n      'E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution ' +\n      'FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve ' +\n      'FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance ' +\n      'GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion ' +\n      'GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution ' +\n      'HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData ' +\n      'I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction ' +\n      'InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess ' +\n      'JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition ' +\n      'K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter ' +\n      'Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions ' +\n      'LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy ' +\n      'MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution ' +\n      'N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator ' +\n      'NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot ' +\n      'O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues ' +\n      'PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList ' +\n      'PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions ' +\n      'QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder ' +\n      'RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity ' +\n      'SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity ' +\n      'SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders ' +\n      'SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub ' +\n      'Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine ' +\n      'Transparent ' +\n      'UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd ' +\n      'V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution ' +\n      'WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian ' +\n      'XMLElement XMLObject Xnor Xor ' +\n      'Yellow YuleDissimilarity ' +\n      'ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform ' +\n      '$Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber',\n    contains: [\n      {\n        className: \"comment\",\n        begin: /\\(\\*/, end: /\\*\\)/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'list',\n        begin: /\\{/, end: /\\}/,\n        illegal: /:/\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('matlab', function(hljs) {\n  var COMMON_CONTAINS = [\n    hljs.C_NUMBER_MODE,\n    {\n      className: 'string',\n      begin: '\\'', end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n    }\n  ];\n  var TRANSPOSE = {\n    relevance: 0,\n    contains: [\n      {\n        className: 'operator', begin: /'['\\.]*/\n      }\n    ]\n  };\n\n  return {\n    keywords: {\n      keyword:\n        'break case catch classdef continue else elseif end enumerated events for function ' +\n        'global if methods otherwise parfor persistent properties return spmd switch try while',\n      built_in:\n        'sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan ' +\n        'atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot ' +\n        'cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog ' +\n        'realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal ' +\n        'cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli ' +\n        'besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma ' +\n        'gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms ' +\n        'nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones ' +\n        'eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ' +\n        'ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril ' +\n        'triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute ' +\n        'shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan ' +\n        'isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal ' +\n        'rosser toeplitz vander wilkinson'\n    },\n    illegal: '(//|\"|#|/\\\\*|\\\\s+/\\\\w+)',\n    contains: [\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '$',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n              className: 'params',\n              begin: '\\\\(', end: '\\\\)'\n          },\n          {\n              className: 'params',\n              begin: '\\\\[', end: '\\\\]'\n          }\n        ]\n      },\n      {\n        begin: /[a-zA-Z_][a-zA-Z_0-9]*'['\\.]*/,\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {begin: /[a-zA-Z_][a-zA-Z_0-9]*/, relevance: 0},\n          TRANSPOSE.contains[0]\n        ]\n      },\n      {\n        className: 'matrix',\n        begin: '\\\\[', end: '\\\\]',\n        contains: COMMON_CONTAINS,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      {\n        className: 'cell',\n        begin: '\\\\{', end: /}/,\n        contains: COMMON_CONTAINS,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      {\n        // transpose operators at the end of a function call\n        begin: /\\)/,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      hljs.COMMENT('^\\\\s*\\\\%\\\\{\\\\s*$', '^\\\\s*\\\\%\\\\}\\\\s*$'),\n      hljs.COMMENT('\\\\%', '$')\n    ].concat(COMMON_CONTAINS)\n  };\n});\n\nhljs.registerLanguage('mel', function(hljs) {\n  return {\n    keywords:\n      'int float string vector matrix if else switch case default while do for in break ' +\n      'continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic ' +\n      'addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey ' +\n      'affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve ' +\n      'alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor ' +\n      'animDisplay animView annotate appendStringArray applicationName applyAttrPreset ' +\n      'applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx ' +\n      'artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu ' +\n      'artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand ' +\n      'assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface ' +\n      'attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu ' +\n      'attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp ' +\n      'attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery ' +\n      'autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults ' +\n      'bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership ' +\n      'bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType ' +\n      'boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu ' +\n      'buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge ' +\n      'cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch ' +\n      'catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox ' +\n      'character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp ' +\n      'checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip ' +\n      'clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore ' +\n      'closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter ' +\n      'cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color ' +\n      'colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp ' +\n      'colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem ' +\n      'componentEditor compositingInterop computePolysetVolume condition cone confirmDialog ' +\n      'connectAttr connectControl connectDynamic connectJoint connectionInfo constrain ' +\n      'constrainValue constructionHistory container containsMultibyte contextInfo control ' +\n      'convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation ' +\n      'convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache ' +\n      'cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel ' +\n      'cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver ' +\n      'cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor ' +\n      'createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer ' +\n      'createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse ' +\n      'currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx ' +\n      'curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface ' +\n      'curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox ' +\n      'defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete ' +\n      'deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes ' +\n      'delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo ' +\n      'dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable ' +\n      'disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected ' +\n      'displayColor displayCull displayLevelOfDetail displayPref displayRGBColor ' +\n      'displaySmoothness displayStats displayString displaySurface distanceDimContext ' +\n      'distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct ' +\n      'doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator ' +\n      'duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression ' +\n      'dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor ' +\n      'dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers ' +\n      'editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor ' +\n      'editorTemplate effector emit emitter enableDevice encodeString endString endsWith env ' +\n      'equivalent equivalentTol erf error eval evalDeferred evalEcho event ' +\n      'exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp ' +\n      'expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof ' +\n      'fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo ' +\n      'filetest filletCurve filter filterCurve filterExpand filterStudioImport ' +\n      'findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster ' +\n      'finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar ' +\n      'floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo ' +\n      'fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint ' +\n      'frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss ' +\n      'geometryConstraint getApplicationVersionAsFloat getAttr getClassification ' +\n      'getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes ' +\n      'getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender ' +\n      'glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl ' +\n      'gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid ' +\n      'gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap ' +\n      'HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor ' +\n      'HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached ' +\n      'HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel ' +\n      'headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey ' +\n      'hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender ' +\n      'hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox ' +\n      'iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ' +\n      'ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ' +\n      'ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform ' +\n      'insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance ' +\n      'instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp ' +\n      'interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf ' +\n      'isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect ' +\n      'itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx ' +\n      'jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner ' +\n      'keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx ' +\n      'keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx ' +\n      'keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx ' +\n      'keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor ' +\n      'layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList ' +\n      'lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep ' +\n      'listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory ' +\n      'listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation ' +\n      'listNodeTypes listPanelCategories listRelatives listSets listTransforms ' +\n      'listUnselected listerEditor loadFluid loadNewShelf loadPlugin ' +\n      'loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log ' +\n      'longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive ' +\n      'makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext ' +\n      'manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx ' +\n      'manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout ' +\n      'menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp ' +\n      'mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move ' +\n      'moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute ' +\n      'nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast ' +\n      'nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint ' +\n      'normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect ' +\n      'nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref ' +\n      'nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType ' +\n      'objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface ' +\n      'offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit ' +\n      'orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier ' +\n      'paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration ' +\n      'panelHistory paramDimContext paramDimension paramLocator parent parentConstraint ' +\n      'particle particleExists particleInstancer particleRenderInfo partition pasteKey ' +\n      'pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture ' +\n      'pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo ' +\n      'pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult ' +\n      'pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend ' +\n      'polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal ' +\n      'polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge ' +\n      'polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge ' +\n      'polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet ' +\n      'polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet ' +\n      'polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection ' +\n      'polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge ' +\n      'polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet ' +\n      'polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix ' +\n      'polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut ' +\n      'polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet ' +\n      'polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge ' +\n      'polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex ' +\n      'polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection ' +\n      'polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection ' +\n      'polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint ' +\n      'polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate ' +\n      'polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge ' +\n      'polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing ' +\n      'polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet ' +\n      'polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace ' +\n      'popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer ' +\n      'projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx ' +\n      'propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd ' +\n      'python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection ' +\n      'radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl ' +\n      'readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference ' +\n      'referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE ' +\n      'registerPluginResource rehash reloadImage removeJoint removeMultiInstance ' +\n      'removePanelCategory rename renameAttr renameSelectionList renameUI render ' +\n      'renderGlobalsNode renderInfo renderLayerButton renderLayerParent ' +\n      'renderLayerPostProcess renderLayerUnparent renderManip renderPartition ' +\n      'renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor ' +\n      'renderWindowSelectContext renderer reorder reorderDeformers requires reroot ' +\n      'resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget ' +\n      'reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx ' +\n      'rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout ' +\n      'runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage ' +\n      'saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale ' +\n      'scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor ' +\n      'sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable ' +\n      'scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt ' +\n      'searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey ' +\n      'selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType ' +\n      'selectedNodes selectionConnection separator setAttr setAttrEnumResource ' +\n      'setAttrMapping setAttrNiceNameResource setConstraintRestPosition ' +\n      'setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr ' +\n      'setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe ' +\n      'setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag ' +\n      'setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject ' +\n      'setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets ' +\n      'shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare ' +\n      'shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField ' +\n      'shortNameOf showHelp showHidden showManipCtx showSelectionInTitle ' +\n      'showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface ' +\n      'size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep ' +\n      'snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound ' +\n      'soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort ' +\n      'spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString ' +\n      'startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp ' +\n      'stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex ' +\n      'stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex ' +\n      'stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString ' +\n      'stringToStringArray strip stripPrefixFromName stroke subdAutoProjection ' +\n      'subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV ' +\n      'subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror ' +\n      'subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease ' +\n      'subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring ' +\n      'surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton ' +\n      'symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext ' +\n      'texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext ' +\n      'texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text ' +\n      'textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList ' +\n      'textToShelf textureDisplacePlane textureHairColor texturePlacementContext ' +\n      'textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath ' +\n      'toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower ' +\n      'toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper ' +\n      'trace track trackCtx transferAttributes transformCompare transformLimits translator ' +\n      'trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence ' +\n      'twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit ' +\n      'unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink ' +\n      'uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane ' +\n      'viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex ' +\n      'waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire ' +\n      'wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform',\n    illegal: '</',\n    contains: [\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'variable',\n        variants: [\n          {begin: '\\\\$\\\\d'},\n          {begin: '[\\\\$\\\\%\\\\@](\\\\^\\\\w\\\\b|#\\\\w+|[^\\\\s\\\\w{]|{\\\\w+}|\\\\w+)'},\n          {begin: '\\\\*(\\\\^\\\\w\\\\b|#\\\\w+|[^\\\\s\\\\w{]|{\\\\w+}|\\\\w+)', relevance: 0}\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('mercury', function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'module use_module import_module include_module end_module initialise ' +\n      'mutable initialize finalize finalise interface implementation pred ' +\n      'mode func type inst solver any_pred any_func is semidet det nondet ' +\n      'multi erroneous failure cc_nondet cc_multi typeclass instance where ' +\n      'pragma promise external trace atomic or_else require_complete_switch ' +\n      'require_det require_semidet require_multi require_nondet ' +\n      'require_cc_multi require_cc_nondet require_erroneous require_failure',\n    pragma:\n      'inline no_inline type_spec source_file fact_table obsolete memo ' +\n      'loop_check minimal_model terminates does_not_terminate ' +\n      'check_termination promise_equivalent_clauses',\n    preprocessor:\n      'foreign_proc foreign_decl foreign_code foreign_type ' +\n      'foreign_import_module foreign_export_enum foreign_export ' +\n      'foreign_enum may_call_mercury will_not_call_mercury thread_safe ' +\n      'not_thread_safe maybe_thread_safe promise_pure promise_semipure ' +\n      'tabled_for_io local untrailed trailed attach_to_io_state ' +\n      'can_pass_as_mercury_type stable will_not_throw_exception ' +\n      'may_modify_trail will_not_modify_trail may_duplicate ' +\n      'may_not_duplicate affects_liveness does_not_affect_liveness ' +\n      'doesnt_affect_liveness no_sharing unknown_sharing sharing',\n    built_in:\n      'some all not if then else true fail false try catch catch_any ' +\n      'semidet_true semidet_false semidet_fail impure_true impure semipure'\n  };\n\n  var TODO = {\n    className: 'label',\n    begin: 'XXX', end: '$', endsWithParent: true,\n    relevance: 0\n  };\n  var COMMENT = hljs.inherit(hljs.C_LINE_COMMENT_MODE, {begin: '%'});\n  var CCOMMENT = hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {relevance: 0});\n  COMMENT.contains.push(TODO);\n  CCOMMENT.contains.push(TODO);\n\n  var NUMCODE = {\n    className: 'number',\n    begin: \"0'.\\\\|0[box][0-9a-fA-F]*\"\n  };\n\n  var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, {relevance: 0});\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {relevance: 0});\n  var STRING_FMT = {\n    className: 'constant',\n    begin: '\\\\\\\\[abfnrtv]\\\\|\\\\\\\\x[0-9a-fA-F]*\\\\\\\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]',\n    relevance: 0\n  };\n  STRING.contains.push(STRING_FMT);\n\n  var IMPLICATION = {\n    className: 'built_in',\n    variants: [\n      {begin: '<=>'},\n      {begin: '<=', relevance: 0},\n      {begin: '=>', relevance: 0},\n      {begin: '/\\\\\\\\'},\n      {begin: '\\\\\\\\/'}\n    ]\n  };\n\n  var HEAD_BODY_CONJUNCTION = {\n    className: 'built_in',\n    variants: [\n      {begin: ':-\\\\|-->'},\n      {begin: '=', relevance: 0}\n    ]\n  };\n\n  return {\n    aliases: ['m', 'moo'],\n    keywords: KEYWORDS,\n    contains: [\n      IMPLICATION,\n      HEAD_BODY_CONJUNCTION,\n      COMMENT,\n      CCOMMENT,\n      NUMCODE,\n      hljs.NUMBER_MODE,\n      ATOM,\n      STRING,\n      {begin: /:-/} // relevance booster\n    ]\n  };\n});\n\nhljs.registerLanguage('mizar', function(hljs) {\n  return {\n    keywords:\n      'environ vocabularies notations constructors definitions ' +\n      'registrations theorems schemes requirements begin end definition ' +\n      'registration cluster existence pred func defpred deffunc theorem ' +\n      'proof let take assume then thus hence ex for st holds consider ' +\n      'reconsider such that and in provided of as from be being by means ' +\n      'equals implies iff redefine define now not or attr is mode ' +\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\n      'correctness compatibility coherence symmetry assymetry ' +\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\n      'idempotence involutiveness projectivity',\n    contains: [\n      hljs.COMMENT('::', '$')\n    ]\n  };\n});\n\nhljs.registerLanguage('perl', function(hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{', end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{', end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$\\d/},\n      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n    ]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      '^\\\\=\\\\w',\n      '\\\\=cut',\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q', end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'', end: '\\'',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '`', end: '`',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '{\\\\w+}',\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: '(m|qr)?/', end: '/[a-z]*',\n          contains: [hljs.BACKSLASH_ESCAPE],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'sub',\n      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      relevance: 5\n    },\n    {\n      className: 'operator',\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n            begin: \"^@@.*\",\n            end: \"$\",\n            className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['pl'],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n});\n\nhljs.registerLanguage('mojolicious', function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      {\n        className: 'preprocessor',\n        begin: '^__(END|DATA)__$'\n      },\n    // mojolicious line\n      {\n        begin: \"^\\\\s*%{1,2}={0,2}\", end: '$',\n        subLanguage: 'perl'\n      },\n    // mojolicious block\n      {\n        begin: \"<%{1,2}={0,2}\",\n        end: \"={0,1}%>\",\n        subLanguage: 'perl',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('monkey', function(hljs) {\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {\n        begin: '[$][a-fA-F0-9]+'\n      },\n      hljs.NUMBER_MODE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword: 'public private property continue exit extern new try catch ' +\n        'eachin not abstract final select case default const local global field ' +\n        'end if then else elseif endif while wend repeat until forever for to step next return module inline throw',\n\n      built_in: 'DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil ' +\n        'Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI',\n\n      literal: 'true false null and or shl shr mod'\n    },\n    contains: [\n      hljs.COMMENT('#rem', '#end'),\n      hljs.COMMENT(\n        \"'\",\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'function',\n        beginKeywords: 'function method', end: '[(=:]|$',\n        illegal: /\\n/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '$',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'variable',\n        begin: '\\\\b(self|super)\\\\b'\n      },\n      {\n        className: 'preprocessor',\n        beginKeywords: 'import',\n        end: '$'\n      },\n      {\n        className: 'preprocessor',\n        begin: '\\\\s*#', end: '$',\n        keywords: 'if else elseif endif end then'\n      },\n      {\n        className: 'pi',\n        begin: '^\\\\s*strict\\\\b'\n      },\n      {\n        beginKeywords: 'alias', end: '=',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      hljs.QUOTE_STRING_MODE,\n      NUMBER\n    ]\n  }\n});\n\nhljs.registerLanguage('nginx', function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$\\d+/},\n      {begin: /\\$\\{/, end: /}/},\n      {begin: '[\\\\$\\\\@]' + hljs.UNDERSCORE_IDENT_RE}\n    ]\n  };\n  var DEFAULT = {\n    endsWithParent: true,\n    lexemes: '[a-z/_]+',\n    keywords: {\n      built_in:\n        'on off yes no true false none blocked debug info notice warn error crit ' +\n        'select break last permanent redirect kqueue rtsig epoll poll /dev/poll'\n    },\n    relevance: 0,\n    illegal: '=>',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n        variants: [\n          {begin: /\"/, end: /\"/},\n          {begin: /'/, end: /'/}\n        ]\n      },\n      {\n        className: 'url',\n        begin: '([a-z]+):/', end: '\\\\s', endsWithParent: true, excludeEnd: true,\n        contains: [VAR]\n      },\n      {\n        className: 'regexp',\n        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n        variants: [\n          {begin: \"\\\\s\\\\^\", end: \"\\\\s|{|;\", returnEnd: true},\n          // regexp locations (~, ~*)\n          {begin: \"~\\\\*?\\\\s+\", end: \"\\\\s|{|;\", returnEnd: true},\n          // *.example.com\n          {begin: \"\\\\*(\\\\.[a-z\\\\-]+)+\"},\n          // sub.example.*\n          {begin: \"([a-z\\\\-]+\\\\.)+\\\\*\"}\n        ]\n      },\n      // IP\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n      },\n      // units\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+[kKmMgGdshdwy]*\\\\b',\n        relevance: 0\n      },\n      VAR\n    ]\n  };\n\n  return {\n    aliases: ['nginxconf'],\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s', end: ';|{', returnBegin: true,\n        contains: [\n          {\n            className: 'title',\n            begin: hljs.UNDERSCORE_IDENT_RE,\n            starts: DEFAULT\n          }\n        ],\n        relevance: 0\n      }\n    ],\n    illegal: '[^\\\\s\\\\}]'\n  };\n});\n\nhljs.registerLanguage('nimrod', function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword: 'addr and as asm bind block break|0 case|0 cast const|0 continue|0 converter discard distinct|10 div do elif else|0 end|0 enum|0 except export finally for from generic if|0 import|0 in include|0 interface is isnot|10 iterator|10 let|0 macro method|10 mixin mod nil not notin|10 object|0 of or out proc|10 ptr raise ref|10 return shl shr static template|10 try|0 tuple type|0 using|0 var|0 when while|0 with without xor yield',\n      literal: 'shared guarded stdin stdout stderr result|10 true false'\n    },\n    contains: [ {\n        className: 'decorator', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'type',\n        begin: /\\b(int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|float32|float64|bool|char|string|cstring|pointer|expr|stmt|void|auto|any|range|array|openarray|varargs|seq|set|clong|culong|cchar|cschar|cshort|cint|csize|clonglong|cfloat|cdouble|clongdouble|cuchar|cushort|cuint|culonglong|cstringarray|semistatic)\\b/\n      }, {\n        className: 'number',\n        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/,\n        relevance: 0\n      }, {\n        className: 'number',\n        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/,\n        relevance: 0\n      }, {\n        className: 'number',\n        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/,\n        relevance: 0\n      }, {\n        className: 'number',\n        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/,\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n});\n\nhljs.registerLanguage('nix', function(hljs) {\n  var NIX_KEYWORDS = {\n    keyword: 'rec with let in inherit assert if else then',\n    constant: 'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw toString derivation'\n  };\n  var ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /}/,\n    keywords: NIX_KEYWORDS\n  };\n  var ATTRS = {\n    className: 'variable',\n    // TODO: we have to figure out a way how to exclude \\s*=\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    relevance: 0\n  };\n  var SINGLE_QUOTE = {\n    className: 'string',\n    begin: \"''\",\n    end: \"''\",\n    contains: [\n      ANTIQUOTE\n    ]\n  };\n  var DOUBLE_QUOTE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [\n      ANTIQUOTE\n    ]\n  };\n  var EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    SINGLE_QUOTE,\n    DOUBLE_QUOTE,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n});\n\nhljs.registerLanguage('nsis', function(hljs) {\n  var CONSTANTS = {\n    className: 'symbol',\n    begin: '\\\\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)'\n  };\n\n  var DEFINES = {\n    // ${defines}\n    className: 'constant',\n    begin: '\\\\$+{[a-zA-Z0-9_]+}'\n  };\n\n  var VARIABLES = {\n    // $variables\n    className: 'variable',\n    begin: '\\\\$+[a-zA-Z0-9_]+',\n    illegal: '\\\\(\\\\){}'\n  };\n\n  var LANGUAGES = {\n    // $(language_strings)\n    className: 'constant',\n    begin: '\\\\$+\\\\([a-zA-Z0-9_]+\\\\)'\n  };\n\n  var PARAMETERS = {\n    // command parameters\n    className: 'params',\n    begin: '(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)'\n  };\n\n  var COMPILER ={\n    // !compiler_flags\n    className: 'constant',\n    begin: '\\\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)'\n  };\n\n  return {\n    case_insensitive: false,\n    keywords: {\n      keyword:\n      'Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText IntCmp IntCmpU IntFmt IntOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetPluginUnload SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption SubSectionEnd Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegStr WriteUninstaller XPStyle',\n      literal:\n      'admin all auto both colored current false force hide highest lastused leave listonly none normal notset off on open print show silent silentlog smooth textonly true user '\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [\n          { // $\\n, $\\r, $\\t, $$\n            className: 'symbol',\n            begin: '\\\\$(\\\\\\\\(n|r|t)|\\\\$)'\n          },\n          CONSTANTS,\n          DEFINES,\n          VARIABLES,\n          LANGUAGES\n        ]\n      },\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'function',\n        beginKeywords: 'Function PageEx Section SectionGroup SubSection', end: '$'\n      },\n      COMPILER,\n      DEFINES,\n      VARIABLES,\n      LANGUAGES,\n      PARAMETERS,\n      hljs.NUMBER_MODE,\n      { // plug::ins\n        className: 'literal',\n        begin: hljs.IDENT_RE + '::' + hljs.IDENT_RE\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('objectivec', function(hljs) {\n  var API_CLASS = {\n    className: 'built_in',\n    begin: '(AV|CA|CF|CG|CI|MK|MP|NS|UI)\\\\w+',\n  };\n  var OBJC_KEYWORDS = {\n    keyword:\n      'int float while char export sizeof typedef const struct for union ' +\n      'unsigned long volatile static bool mutable if do return goto void ' +\n      'enum else break extern asm case short default double register explicit ' +\n      'signed typename this switch continue wchar_t inline readonly assign ' +\n      'readwrite self @synchronized id typeof ' +\n      'nonatomic super unichar IBOutlet IBAction strong weak copy ' +\n      'in out inout bycopy byref oneway __strong __weak __block __autoreleasing ' +\n      '@private @protected @public @try @property @end @throw @catch @finally ' +\n      '@autoreleasepool @synthesize @dynamic @selector @optional @required',\n    literal:\n      'false true FALSE TRUE nil YES NO NULL',\n    built_in:\n      'BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once'\n  };\n  var LEXEMES = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  var CLASS_KEYWORDS = '@interface @class @protocol @implementation';\n  return {\n    aliases: ['mm', 'objc', 'obj-c'],\n    keywords: OBJC_KEYWORDS,\n    lexemes: LEXEMES,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"', end: '\"',\n            illegal: '\\\\n',\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          {\n            begin: '\\'', end: '[^\\\\\\\\]\\'',\n            illegal: '[^\\\\\\\\][^\\']'\n          }\n        ]\n      },\n      {\n        className: 'preprocessor',\n        begin: '#',\n        end: '$',\n        contains: [\n          {\n            className: 'title',\n            variants: [\n              { begin: '\\\"', end: '\\\"' },\n              { begin: '<', end: '>' }\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.split(' ').join('|') + ')\\\\b', end: '({|$)', excludeEnd: true,\n        keywords: CLASS_KEYWORDS, lexemes: LEXEMES,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'variable',\n        begin: '\\\\.'+hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('ocaml', function(hljs) {\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        'and as assert asr begin class constraint do done downto else end ' +\n        'exception external for fun function functor if in include ' +\n        'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +\n        'mod module mutable new object of open! open or private rec sig struct ' +\n        'then to try type val! val virtual when while with ' +\n        /* camlp4 */\n        'parser value',\n      built_in:\n        /* built-in types */\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\n        /* (some) types in Pervasives */\n        'in_channel out_channel ref',\n      literal:\n        'true false'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)'\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'tag',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'char', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('openscad', function(hljs) {\n\tvar SPECIAL_VARS = {\n\t\tclassName: 'keyword',\n\t\tbegin: '\\\\$(f[asn]|t|vp[rtd]|children)'\n\t},\n\tLITERALS = {\n\t\tclassName: 'literal',\n\t\tbegin: 'false|true|PI|undef'\n\t},\n\tNUMBERS = {\n\t\tclassName: 'number',\n\t\tbegin: '\\\\b\\\\d+(\\\\.\\\\d+)?(e-?\\\\d+)?', //adds 1e5, 1e-10\n\t\trelevance: 0\n\t},\n\tSTRING = hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal: null}),\n\tPREPRO = {\n\t\tclassName: 'preprocessor',\n\t\tkeywords: 'include use',\n\t\tbegin: 'include|use <',\n\t\tend: '>'\n\t},\n\tPARAMS = {\n\t\tclassName: 'params',\n\t\tbegin: '\\\\(', end: '\\\\)',\n\t\tcontains: ['self', NUMBERS, STRING, SPECIAL_VARS, LITERALS]\n\t},\n\tMODIFIERS = {\n\t\tclassName: 'built_in',\n\t\tbegin: '[*!#%]',\n\t\trelevance: 0\n\t},\n\tFUNCTIONS = {\n\t\tclassName: 'function',\n\t\tbeginKeywords: 'module function',\n\t\tend: '\\\\=|\\\\{',\n\t\tcontains: [PARAMS, hljs.UNDERSCORE_TITLE_MODE]\n\t};\n\n\treturn {\n\t\taliases: ['scad'],\n\t\tkeywords: {\n\t\t\tkeyword: 'function module include use for intersection_for if else \\\\%',\n\t\t\tliteral: 'false true PI undef',\n\t\t\tbuilt_in: 'circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign'\n\t\t},\n\t\tcontains: [\n\t\t\thljs.C_LINE_COMMENT_MODE,\n\t\t\thljs.C_BLOCK_COMMENT_MODE,\n\t\t\tNUMBERS,\n\t\t\tPREPRO,\n\t\t\tSTRING,\n\t\t\tPARAMS,\n\t\t\tSPECIAL_VARS,\n\t\t\tMODIFIERS,\n\t\t\tFUNCTIONS\n\t\t]\n\t}\n});\n\nhljs.registerLanguage('oxygene', function(hljs) {\n  var OXYGENE_KEYWORDS = 'abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue '+\n    'create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false '+\n    'final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited '+\n    'inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of '+\n    'old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly '+\n    'record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple '+\n    'type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal '+\n    'register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained';\n  var CURLY_COMMENT =  hljs.COMMENT(\n    '{',\n    '}',\n    {\n      relevance: 0\n    }\n  );\n  var PAREN_COMMENT = hljs.COMMENT(\n    '\\\\(\\\\*',\n    '\\\\*\\\\)',\n    {\n      relevance: 10\n    }\n  );\n  var STRING = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [{begin: '\\'\\''}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: '(#\\\\d+)+'\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure method', end: '[:;]',\n    keywords: 'function constructor|10 destructor|10 procedure|10 method|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: '\\\\(', end: '\\\\)',\n        keywords: OXYGENE_KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      },\n      CURLY_COMMENT, PAREN_COMMENT\n    ]\n  };\n  return {\n    case_insensitive: true,\n    keywords: OXYGENE_KEYWORDS,\n    illegal: '(\"|\\\\$[G-Zg-z]|\\\\/\\\\*|</|=>|->)',\n    contains: [\n      CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      FUNCTION,\n      {\n        className: 'class',\n        begin: '=\\\\bclass\\\\b', end: 'end;',\n        keywords: OXYGENE_KEYWORDS,\n        contains: [\n          STRING, CHAR_STRING,\n          CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n          FUNCTION\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('parser3', function(hljs) {\n  var CURLY_SUBCOMMENT = hljs.COMMENT(\n    '{',\n    '}',\n    {\n      contains: ['self']\n    }\n  );\n  return {\n    subLanguage: 'xml', relevance: 0,\n    contains: [\n      hljs.COMMENT('^#', '$'),\n      hljs.COMMENT(\n        '\\\\^rem{',\n        '}',\n        {\n          relevance: 10,\n          contains: [\n            CURLY_SUBCOMMENT\n          ]\n        }\n      ),\n      {\n        className: 'preprocessor',\n        begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',\n        relevance: 10\n      },\n      {\n        className: 'title',\n        begin: '@[\\\\w\\\\-]+\\\\[[\\\\w^;\\\\-]*\\\\](?:\\\\[[\\\\w^;\\\\-]*\\\\])?(?:.*)$'\n      },\n      {\n        className: 'variable',\n        begin: '\\\\$\\\\{?[\\\\w\\\\-\\\\.\\\\:]+\\\\}?'\n      },\n      {\n        className: 'keyword',\n        begin: '\\\\^[\\\\w\\\\-\\\\.\\\\:]+'\n      },\n      {\n        className: 'number',\n        begin: '\\\\^#[0-9a-fA-F]+'\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('pf', function(hljs) {\n  var MACRO = {\n    className: 'variable',\n    begin: /\\$[\\w\\d#@][\\w\\d_]*/\n  };\n  var TABLE = {\n    className: 'variable',\n    begin: /</, end: />/\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/\n  };\n\n  return {\n    aliases: ['pf.conf'],\n    lexemes: /[a-z0-9_<>-]+/,\n    keywords: {\n      built_in: /* block match pass are \"actions\" in pf.conf(5), the rest are\n                 * lexically similar top-level commands.\n                 */\n        'block match pass load anchor|5 antispoof|10 set table',\n      keyword:\n        'in out log quick on rdomain inet inet6 proto from port os to route' +\n        'allow-opts divert-packet divert-reply divert-to flags group icmp-type' +\n        'icmp6-type label once probability recieved-on rtable prio queue' +\n        'tos tag tagged user keep fragment for os drop' +\n        'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin' +\n        'source-hash static-port' +\n        'dup-to reply-to route-to' +\n        'parent bandwidth default min max qlimit' +\n        'block-policy debug fingerprints hostid limit loginterface optimization' +\n        'reassemble ruleset-optimization basic none profile skip state-defaults' +\n        'state-policy timeout' +\n        'const counters persist' +\n        'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy' +\n        'source-track global rule max-src-nodes max-src-states max-src-conn' +\n        'max-src-conn-rate overload flush' +\n        'scrub|5 max-mss min-ttl no-df|10 random-id',\n      literal:\n        'all any no-route self urpf-failed egress|5 unknown',\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      MACRO,\n      TABLE,\n    ]\n  };\n});\n\nhljs.registerLanguage('php', function(hljs) {\n  var VARIABLE = {\n    className: 'variable', begin: '\\\\$+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*'\n  };\n  var PREPROCESSOR = {\n    className: 'preprocessor', begin: /<\\?(php)?|\\?>/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],\n    variants: [\n      {\n        begin: 'b\"', end: '\"'\n      },\n      {\n        begin: 'b\\'', end: '\\''\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  return {\n    aliases: ['php3', 'php4', 'php5', 'php6'],\n    case_insensitive: true,\n    keywords:\n      'and include_once list abstract global private echo interface as static endswitch ' +\n      'array null if endwhile or const for endforeach self var while isset public ' +\n      'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n      'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n      'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n      'enddeclare final try switch continue endfor endif declare unset true false ' +\n      'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n      'yield finally',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            },\n            PREPROCESSOR\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler',\n          lexemes: hljs.UNDERSCORE_IDENT_RE\n        }\n      ),\n      {\n        className: 'string',\n        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      PREPROCESSOR,\n      VARIABLE,\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              'self',\n              VARIABLE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n});\n\nhljs.registerLanguage('powershell', function(hljs) {\n  var backtickEscape = {\n    begin: '`[\\\\s\\\\S]',\n    relevance: 0\n  };\n  var dollarEscape = {\n    begin: '\\\\$\\\\$[\\\\s\\\\S]',\n    relevance: 0\n  };\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d][\\w\\d_:]*/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      backtickEscape,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$[A-z]/, end: /[^A-z]/\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['ps'],\n    lexemes: /-?[A-z\\.\\-]+/,\n    case_insensitive: true,\n    keywords: {\n      keyword: 'if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch',\n      literal: '$null $true $false',\n      built_in: 'Add-Content Add-History Add-Member Add-PSSnapin Clear-Content Clear-Item Clear-Item Property Clear-Variable Compare-Object ConvertFrom-SecureString Convert-Path ConvertTo-Html ConvertTo-SecureString Copy-Item Copy-ItemProperty Export-Alias Export-Clixml Export-Console Export-Csv ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-Content Get-Credential Get-Culture Get-Date Get-EventLog Get-ExecutionPolicy Get-Help Get-History Get-Host Get-Item Get-ItemProperty Get-Location Get-Member Get-PfxCertificate Get-Process Get-PSDrive Get-PSProvider Get-PSSnapin Get-Service Get-TraceSource Get-UICulture Get-Unique Get-Variable Get-WmiObject Group-Object Import-Alias Import-Clixml Import-Csv Invoke-Expression Invoke-History Invoke-Item Join-Path Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Item New-ItemProperty New-Object New-PSDrive New-Service New-TimeSpan New-Variable Out-Default Out-File Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Remove-Item Remove-ItemProperty Remove-PSDrive Remove-PSSnapin Remove-Variable Rename-Item Rename-ItemProperty Resolve-Path Restart-Service Resume-Service Select-Object Select-String Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-Location Set-PSDebug Set-Service Set-TraceSource Set-Variable Sort-Object Split-Path Start-Service Start-Sleep Start-Transcript Stop-Process Stop-Service Stop-Transcript Suspend-Service Tee-Object Test-Path Trace-Command Update-FormatData Update-TypeData Where-Object Write-Debug Write-Error Write-Host Write-Output Write-Progress Write-Verbose Write-Warning',\n      operator: '-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n});\n\nhljs.registerLanguage('processing', function(hljs) {\n  return {\n    keywords: {\n      keyword: 'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' +\n        'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' +\n        'Object StringDict StringList Table TableRow XML ' +\n        // Java keywords\n        'false synchronized int abstract float private char boolean static null if const ' +\n        'for true while long throw strictfp finally protected import native final return void ' +\n        'enum else break transient new catch instanceof byte super volatile case assert short ' +\n        'package default double public try this switch continue throws protected public private',\n      constant: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',\n      variable: 'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' +\n        'keyCode pixels focused frameCount frameRate height width',\n      title: 'setup draw',\n      built_in: 'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' +\n        'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' +\n        'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' +\n        'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' +\n        'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' +\n        'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' +\n        'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' +\n        'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' +\n        'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' +\n        'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' +\n        'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' +\n        'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' +\n        'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' +\n        'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' +\n        'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' +\n        'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' +\n        'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' +\n        'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' +\n        'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' +\n        'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' +\n        'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' +\n        'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('profile', function(hljs) {\n  return {\n    contains: [\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'built_in',\n        begin: '{', end: '}$',\n        excludeBegin: true, excludeEnd: true,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE],\n        relevance: 0\n      },\n      {\n        className: 'filename',\n        begin: '[a-zA-Z_][\\\\da-zA-Z_]+\\\\.[\\\\da-zA-Z_]{1,3}', end: ':',\n        excludeEnd: true\n      },\n      {\n        className: 'header',\n        begin: '(ncalls|tottime|cumtime)', end: '$',\n        keywords: 'ncalls tottime|10 cumtime|10 filename',\n        relevance: 10\n      },\n      {\n        className: 'summary',\n        begin: 'function calls', end: '$',\n        contains: [hljs.C_NUMBER_MODE],\n        relevance: 10\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'function',\n        begin: '\\\\(', end: '\\\\)$',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ],\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('prolog', function(hljs) {\n\n  var ATOM = {\n\n    className: 'atom',\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n\n  var VAR = {\n\n    className: 'name',\n    variants: [\n      {begin: /[A-Z][a-zA-Z0-9_]*/},\n      {begin: /_[A-Za-z0-9_]*/},\n    ],\n    relevance: 0\n  };\n\n  var PARENTED = {\n\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n\n  var LIST = {\n\n    begin: /\\[/,\n    end: /\\]/\n  };\n\n  var LINE_COMMENT = {\n\n    className: 'comment',\n    begin: /%/, end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n\n  var BACKTICK_STRING = {\n\n    className: 'string',\n    begin: /`/, end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var CHAR_CODE = {\n\n    className: 'string', // 0'a etc.\n    begin: /0\\'(\\\\\\'|.)/\n  };\n\n  var SPACE_CODE = {\n\n    className: 'string',\n    begin: /0\\'\\\\s/ // 0'\\s\n  };\n\n  var PRED_OP = { // relevance booster\n    begin: /:-/\n  };\n\n  var inner = [\n\n    ATOM,\n    VAR,\n    PARENTED,\n    PRED_OP,\n    LIST,\n    LINE_COMMENT,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.APOS_STRING_MODE,\n    BACKTICK_STRING,\n    CHAR_CODE,\n    SPACE_CODE,\n    hljs.C_NUMBER_MODE\n  ];\n\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n\n  return {\n    contains: inner.concat([\n      {begin: /\\.$/} // relevance booster\n    ])\n  };\n});\n\nhljs.registerLanguage('protobuf', function(hljs) {\n  return {\n    keywords: {\n      keyword: 'package import option optional required repeated group',\n      built_in: 'double float int32 int64 uint32 uint64 sint32 sint64 ' +\n        'fixed32 fixed64 sfixed32 sfixed64 bool string bytes',\n      literal: 'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'message enum service', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'rpc',\n        end: /;/, excludeEnd: true,\n        keywords: 'rpc returns'\n      },\n      {\n        className: 'constant',\n        begin: /^\\s*[A-Z_]+/,\n        end: /\\s*=/, excludeEnd: true\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('puppet', function(hljs) {\n\n  var PUPPET_KEYWORDS = {\n    keyword:\n    /* language keywords */\n      'and case default else elsif false if in import enherits node or true undef unless main settings $string ',\n    literal:\n    /* metaparameters */\n      'alias audit before loglevel noop require subscribe tag ' +\n    /* normal attributes */\n      'owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check ' +\n      'en_address ip_address realname command environment hour monute month monthday special target weekday '+\n      'creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore ' +\n      'links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source ' +\n      'souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid '+\n      'ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel ' +\n      'native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options ' +\n      'device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use ' +\n      'message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform ' +\n      'responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running ' +\n      'start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age ' +\n      'password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled ' +\n      'enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist ' +\n      'priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey ' +\n      'sslverify mounted',\n    built_in:\n    /* core facts */\n      'architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers ' +\n      'domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces '+\n      'ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion ' +\n      'kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease ' +\n      'lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major ' +\n      'macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease '+\n      'operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion '+\n      'rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced '+\n      'selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime '+\n      'uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version'\n  };\n\n  var COMMENT = hljs.COMMENT('#', '$');\n\n  var IDENT_RE = '([A-Za-z_]|::)(\\\\w|::)*';\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE});\n\n  var VARIABLE = {className: 'variable', begin: '\\\\$' + IDENT_RE};\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/}\n    ]\n  };\n\n  return {\n    aliases: ['pp'],\n    contains: [\n      COMMENT,\n      VARIABLE,\n      STRING,\n      {\n        beginKeywords: 'class', end: '\\\\{|;',\n        illegal: /=/,\n        contains: [TITLE, COMMENT]\n      },\n      {\n        beginKeywords: 'define', end: /\\{/,\n        contains: [\n          {\n            className: 'title', begin: hljs.IDENT_RE, endsParent: true\n          }\n        ]\n      },\n      {\n        begin: hljs.IDENT_RE + '\\\\s+\\\\{', returnBegin: true,\n        end: /\\S/,\n        contains: [\n          {\n            className: 'name',\n            begin: hljs.IDENT_RE\n          },\n          {\n            begin: /\\{/, end: /\\}/,\n            keywords: PUPPET_KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              COMMENT,\n              {\n                begin:'[a-zA-Z_]+\\\\s*=>'\n              },\n              {\n                className: 'number',\n                begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n                relevance: 0\n              },\n              VARIABLE\n            ]\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('python', function(hljs) {\n  var PROMPT = {\n    className: 'prompt',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: {\n      keyword:\n        'and elif is global as in if from raise for except finally print import pass return ' +\n        'exec else break not with class assert yield try while continue del or def lambda ' +\n        'nonlocal|10 None True False',\n      built_in:\n        'Ellipsis NotImplemented'\n    },\n    illegal: /(<\\/|->|\\?)/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def', relevance: 10},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      },\n      {\n        className: 'decorator',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('q', function(hljs) {\n  var Q_KEYWORDS = {\n  keyword:\n    'do while select delete by update from',\n  constant:\n    '0b 1b',\n  built_in:\n    'neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum',\n  typename:\n    '`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid'\n  };\n  return {\n  aliases:['k', 'kdb'],\n  keywords: Q_KEYWORDS,\n  lexemes: /\\b(`?)[A-Za-z0-9_]+\\b/,\n  contains: [\n  hljs.C_LINE_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n     ]\n  };\n});\n\nhljs.registerLanguage('r', function(hljs) {\n  var IDENT_RE = '([a-zA-Z]|\\\\.[a-zA-Z.])[a-zA-Z0-9._]*';\n\n  return {\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        begin: IDENT_RE,\n        lexemes: IDENT_RE,\n        keywords: {\n          keyword:\n            'function if in break next repeat else for return switch while try tryCatch ' +\n            'stop warning require library attach detach source setMethod setGeneric ' +\n            'setGroupGeneric setClass ...',\n          literal:\n            'NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 ' +\n            'NA_complex_|10'\n        },\n        relevance: 0\n      },\n      {\n        // hex value\n        className: 'number',\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n        relevance: 0\n      },\n      {\n        // explicit integer\n        className: 'number',\n        begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with trailing decimal\n        className: 'number',\n        begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n        relevance: 0\n      },\n      {\n        // number\n        className: 'number',\n        begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with leading decimal\n        className: 'number',\n        begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      },\n\n      {\n        // escaped identifier\n        begin: '`',\n        end: '`',\n        relevance: 0\n      },\n\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          {begin: '\"', end: '\"'},\n          {begin: \"'\", end: \"'\"}\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('rib', function(hljs) {\n  return {\n    keywords:\n      'ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis ' +\n      'Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone ' +\n      'CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail ' +\n      'DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format ' +\n      'FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry ' +\n      'Hider Hyperboloid Identity Illuminate Imager Interior LightSource ' +\n      'MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte ' +\n      'MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option ' +\n      'Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples ' +\n      'PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection ' +\n      'Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ' +\n      'ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere ' +\n      'SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd ' +\n      'TransformPoints Translate TrimCurve WorldBegin WorldEnd',\n    illegal: '</',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('roboconf', function(hljs) {\n  var IDENTIFIER = '[a-zA-Z-_][^\\n{\\r\\n]+\\\\{';\n\n  return {\n    aliases: ['graph', 'instances'],\n    case_insensitive: true,\n    keywords: 'import',\n    contains: [\n      // Facet sections\n      {\n        className: 'facet',\n        begin: '^facet ' + IDENTIFIER,\n        end: '}',\n        keywords: 'facet installer exports children extends',\n        contains: [\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Instance sections\n      {\n        className: 'instance-of',\n        begin: '^instance of ' + IDENTIFIER,\n        end: '}',\n        keywords: 'name count channels instance-data instance-state instance of',\n        contains: [\n          // Instance overridden properties\n          {\n            className: 'keyword',\n            begin: '[a-zA-Z-_]+( |\\t)*:'\n          },\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Component sections\n      {\n        className: 'component',\n        begin: '^' + IDENTIFIER,\n        end: '}',\n        lexemes: '\\\\(?[a-zA-Z]+\\\\)?',\n        keywords: 'installer exports children extends imports facets alias (optional)',\n        contains: [\n          // Imported component variables\n          {\n            className: 'string',\n            begin: '\\\\.[a-zA-Z-_]+',\n            end: '\\\\s|,|;',\n            excludeEnd: true\n          },\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Comments\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('rsl', function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        'float color point normal vector matrix while for if do return else break extern continue',\n      built_in:\n        'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' +\n        'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' +\n        'faceforward filterstep floor format fresnel incident length lightsource log match ' +\n        'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' +\n        'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' +\n        'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' +\n        'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$'\n      },\n      {\n        className: 'shader',\n        beginKeywords: 'surface displacement light volume imager', end: '\\\\('\n      },\n      {\n        className: 'shading',\n        beginKeywords: 'illuminate illuminance gather', end: '\\\\('\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('ruleslanguage', function(hljs) {\n  return {\n    keywords: {\n       keyword: 'BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE ' +\n         'INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 ' +\n         'INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 ' +\n         'INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 ' +\n         'INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 ' +\n         'INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 ' +\n         'INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 ' +\n         'INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 ' +\n         'INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 ' +\n         'INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 ' +\n         'INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 ' +\n         'INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 ' +\n         'INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 ' +\n         'INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 ' +\n         'INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 ' +\n         'MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER ' +\n         'OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE ' +\n         'NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH ' +\n         'IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND ' +\n         'UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ' +\n         'ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE ' +\n         'GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE ' +\n         'SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING ' +\n         'DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF ' +\n         'MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY ' +\n         'YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE ' +\n         'COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR ' +\n         'READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ' +\n         'ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE ' +\n         'EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE ' +\n         'SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL ' +\n         'COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN ' +\n         'MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING ' +\n         'FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM ' +\n         'NUMDAYS READ_DATE STAGING',\n       built_in: 'IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML ' +\n         'DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT ' +\n         'DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE ' +\n         'DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT ' +\n         'DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'array',\n        variants: [\n          {begin: '#\\\\s+[a-zA-Z\\\\ \\\\.]*', relevance: 0}, // looks like #-comment\n          {begin: '#[a-zA-Z\\\\ \\\\.]+'}\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('rust', function(hljs) {\n  var NUM_SUFFIX = '([uif](8|16|32|64|size))\\?';\n  var BLOCK_COMMENT = hljs.inherit(hljs.C_BLOCK_COMMENT_MODE);\n  BLOCK_COMMENT.contains.push('self');\n  return {\n    aliases: ['rs'],\n    keywords: {\n      keyword:\n        'alignof as be box break const continue crate do else enum extern ' +\n        'false fn for if impl in let loop match mod mut offsetof once priv ' +\n        'proc pub pure ref return self Self sizeof static struct super trait true ' +\n        'type typeof unsafe unsized use virtual while where yield ' +\n        'int i8 i16 i32 i64 ' +\n        'uint u8 u32 u64 ' +\n        'float f32 f64 ' +\n        'str char bool',\n      built_in:\n        'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n        'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n        'include_bin! include_str! line! local_data_key! module_path! ' +\n        'option_env! print! println! select! stringify! try! unimplemented! ' +\n        'unreachable! vec! write! writeln!'\n    },\n    lexemes: hljs.IDENT_RE + '!?',\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      BLOCK_COMMENT,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        variants: [\n           { begin: /r(#*)\".*?\"\\1(?!#)/ },\n           { begin: /'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ },\n           { begin: /'[a-zA-Z_][a-zA-Z0-9_]*/ }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn', end: '(\\\\(|<)', excludeEnd: true,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        className: 'preprocessor',\n        begin: '#\\\\!?\\\\[', end: '\\\\]'\n      },\n      {\n        beginKeywords: 'type', end: '(=|<)',\n        contains: [hljs.UNDERSCORE_TITLE_MODE],\n        illegal: '\\\\S'\n      },\n      {\n        beginKeywords: 'trait enum', end: '{',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::'\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('scala', function(hljs) {\n\n  var ANNOTATION = {\n    className: 'annotation', begin: '@[A-Za-z]+'\n  };\n\n  var STRING = {\n    className: 'string',\n    begin: 'u?r?\"\"\"', end: '\"\"\"',\n    relevance: 10\n  };\n\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n  };\n\n  var TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n    relevance: 0\n  };\n\n  var NAME = {\n    className: 'title',\n    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n    relevance: 0\n  };\n\n  var CLASS = {\n    className: 'class',\n    beginKeywords: 'class object trait type',\n    end: /[:={\\[(\\n;]/,\n    contains: [{className: 'keyword', beginKeywords: 'extends with', relevance: 10}, NAME]\n  };\n\n  var METHOD = {\n    className: 'function',\n    beginKeywords: 'def val',\n    end: /[:={\\[(\\n;]/,\n    contains: [NAME]\n  };\n\n  return {\n    keywords: {\n      literal: 'true false null',\n      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      hljs.QUOTE_STRING_MODE,\n      SYMBOL,\n      TYPE,\n      METHOD,\n      CLASS,\n      hljs.C_NUMBER_MODE,\n      ANNOTATION\n    ]\n  };\n});\n\nhljs.registerLanguage('scheme', function(hljs) {\n  var SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n  var SCHEME_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';\n  var SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n  var BUILTINS = {\n    built_in:\n      'case-lambda call/cc class define-class exit-handler field import ' +\n      'inherit init-field interface let*-values let-values let/ec mixin ' +\n      'opt-lambda override protect provide public rename require ' +\n      'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +\n      'when with-syntax and begin call-with-current-continuation ' +\n      'call-with-input-file call-with-output-file case cond define ' +\n      'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +\n      'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / ' +\n      '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +\n      'boolean? caar cadr call-with-input-file call-with-output-file ' +\n      'call-with-values car cdddar cddddr cdr ceiling char->integer ' +\n      'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +\n      'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +\n      'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +\n      'char? close-input-port close-output-port complex? cons cos ' +\n      'current-input-port current-output-port denominator display eof-object? ' +\n      'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +\n      'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +\n      'integer? interaction-environment lcm length list list->string ' +\n      'list->vector list-ref list-tail list? load log magnitude make-polar ' +\n      'make-rectangular make-string make-vector max member memq memv min ' +\n      'modulo negative? newline not null-environment null? number->string ' +\n      'number? numerator odd? open-input-file open-output-file output-port? ' +\n      'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +\n      'rational? rationalize read read-char real-part real? remainder reverse ' +\n      'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +\n      'string->list string->number string->symbol string-append string-ci<=? ' +\n      'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +\n      'string-fill! string-length string-ref string-set! string<=? string<? ' +\n      'string=? string>=? string>? string? substring symbol->string symbol? ' +\n      'tan transcript-off transcript-on truncate values vector ' +\n      'vector->list vector-fill! vector-length vector-ref vector-set! ' +\n      'with-input-from-file with-output-to-file write write-char zero?'\n  };\n\n  var SHEBANG = {\n    className: 'shebang',\n    begin: '^#!',\n    end: '$'\n  };\n\n  var LITERAL = {\n    className: 'literal',\n    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n  };\n\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },\n      { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },\n      { begin: '#b[0-1]+(/[0-1]+)?' },\n      { begin: '#o[0-7]+(/[0-7]+)?' },\n      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n    ]\n  };\n\n  var STRING = hljs.QUOTE_STRING_MODE;\n\n  var REGULAR_EXPRESSION = {\n    className: 'regexp',\n    begin: '#[pr]x\"',\n    end: '[^\\\\\\\\]\"'\n  };\n\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      ';',\n      '$',\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT('#\\\\|', '\\\\|#')\n  ];\n\n  var IDENT = {\n    begin: SCHEME_IDENT_RE,\n    relevance: 0\n  };\n\n  var QUOTED_IDENT = {\n    className: 'variable',\n    begin: '\\'' + SCHEME_IDENT_RE\n  };\n\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n\n  var LIST = {\n    className: 'list',\n    variants: [\n      { begin: '\\\\(', end: '\\\\)' },\n      { begin: '\\\\[', end: '\\\\]' }\n    ],\n    contains: [\n      {\n        className: 'keyword',\n        begin: SCHEME_IDENT_RE,\n        lexemes: SCHEME_IDENT_RE,\n        keywords: BUILTINS\n      },\n      BODY\n    ]\n  };\n\n  BODY.contains = [LITERAL, NUMBER, STRING, IDENT, QUOTED_IDENT, LIST].concat(COMMENT_MODES);\n\n  return {\n    illegal: /\\S/,\n    contains: [SHEBANG, NUMBER, STRING, QUOTED_IDENT, LIST].concat(COMMENT_MODES)\n  };\n});\n\nhljs.registerLanguage('scilab', function(hljs) {\n\n  var COMMON_CONTAINS = [\n    hljs.C_NUMBER_MODE,\n    {\n      className: 'string',\n      begin: '\\'|\\\"', end: '\\'|\\\"',\n      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n    }\n  ];\n\n  return {\n    aliases: ['sci'],\n    keywords: {\n      keyword: 'abort break case clear catch continue do elseif else endfunction end for function'+\n        'global if pause return resume select try then while'+\n        '%f %F %t %T %pi %eps %inf %nan %e %i %z %s',\n      built_in: // Scilab has more than 2000 functions. Just list the most commons\n       'abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error'+\n       'exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty'+\n       'isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log'+\n       'max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real'+\n       'round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan'+\n       'type typename warning zeros matrix'\n    },\n    illegal: '(\"|#|/\\\\*|\\\\s+/\\\\w+)',\n    contains: [\n      {\n        className: 'function',\n        beginKeywords: 'function endfunction', end: '$',\n        keywords: 'function endfunction|10',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'transposed_variable',\n        begin: '[a-zA-Z_][a-zA-Z_0-9]*(\\'+[\\\\.\\']*|[\\\\.\\']+)', end: '',\n        relevance: 0\n      },\n      {\n        className: 'matrix',\n        begin: '\\\\[', end: '\\\\]\\'*[\\\\.\\']*',\n        relevance: 0,\n        contains: COMMON_CONTAINS\n      },\n      hljs.COMMENT('//', '$')\n    ].concat(COMMON_CONTAINS)\n  };\n});\n\nhljs.registerLanguage('scss', function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b'\n  };\n  var FUNCTION = {\n    className: 'function',\n    begin: IDENT_RE + '\\\\(',\n    returnBegin: true,\n    excludeEnd: true,\n    end: '\\\\('\n  };\n  var HEXCOLOR = {\n    className: 'hexcolor', begin: '#[0-9A-Fa-f]+'\n  };\n  var DEF_INTERNALS = {\n    className: 'attribute',\n    begin: '[A-Z\\\\_\\\\.\\\\-]+', end: ':',\n    excludeEnd: true,\n    illegal: '[^\\\\s]',\n    starts: {\n      className: 'value',\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION,\n        HEXCOLOR,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'important', begin: '!important'\n        }\n      ]\n    }\n  };\n  return {\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      FUNCTION,\n      {\n        className: 'id', begin: '\\\\#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'class', begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'attr_selector',\n        begin: '\\\\[', end: '\\\\]',\n        illegal: '$'\n      },\n      {\n        className: 'tag', // begin: IDENT_RE, end: '[,|\\\\s]'\n        begin: '\\\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\\\b',\n        relevance: 0\n      },\n      {\n        className: 'pseudo',\n        begin: ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'\n      },\n      {\n        className: 'pseudo',\n        begin: '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)'\n      },\n      VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\\\b',\n        illegal: '[^\\\\s]'\n      },\n      {\n        className: 'value',\n        begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b'\n      },\n      {\n        className: 'value',\n        begin: ':', end: ';',\n        contains: [\n          FUNCTION,\n          VARIABLE,\n          HEXCOLOR,\n          hljs.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            className: 'important', begin: '!important'\n          }\n        ]\n      },\n      {\n        className: 'at_rule',\n        begin: '@', end: '[{;]',\n        keywords: 'mixin include extend for if else each while charset import debug media page content font-face namespace warn',\n        contains: [\n          FUNCTION,\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          HEXCOLOR,\n          hljs.CSS_NUMBER_MODE,\n          {\n            className: 'preprocessor',\n            begin: '\\\\s[A-Za-z0-9_.-]+',\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('smali', function(hljs) {\n  var smali_instr_low_prio = ['add', 'and', 'cmp', 'cmpg', 'cmpl', 'const', 'div', 'double', 'float', 'goto', 'if', 'int', 'long', 'move', 'mul', 'neg', 'new', 'nop', 'not', 'or', 'rem', 'return', 'shl', 'shr', 'sput', 'sub', 'throw', 'ushr', 'xor'];\n  var smali_instr_high_prio = ['aget', 'aput', 'array', 'check', 'execute', 'fill', 'filled', 'goto/16', 'goto/32', 'iget', 'instance', 'invoke', 'iput', 'monitor', 'packed', 'sget', 'sparse'];\n  var smali_keywords = ['transient', 'constructor', 'abstract', 'final', 'synthetic', 'public', 'private', 'protected', 'static', 'bridge', 'system'];\n  return {\n    aliases: ['smali'],\n    contains: [\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '#',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'keyword',\n        begin: '\\\\s*\\\\.end\\\\s[a-zA-Z0-9]*',\n        relevance: 1\n      },\n      {\n        className: 'keyword',\n        begin: '^[ ]*\\\\.[a-zA-Z]*',\n        relevance: 0\n      },\n      {\n        className: 'keyword',\n        begin: '\\\\s:[a-zA-Z_0-9]*',\n        relevance: 0\n      },\n      {\n        className: 'keyword',\n        begin: '\\\\s('+smali_keywords.join('|')+')',\n        relevance: 1\n      },\n      {\n        className: 'keyword',\n        begin: '\\\\[',\n        relevance: 0\n      },\n      {\n        className: 'instruction',\n        begin: '\\\\s('+smali_instr_low_prio.join('|')+')\\\\s',\n        relevance: 1\n      },\n      {\n        className: 'instruction',\n        begin: '\\\\s('+smali_instr_low_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)+\\\\s',\n        relevance: 10\n      },\n      {\n        className: 'instruction',\n        begin: '\\\\s('+smali_instr_high_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)*\\\\s',\n        relevance: 10\n      },\n      {\n        className: 'class',\n        begin: 'L[^\\(;:\\n]*;',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '( |->)[^(\\n ;\"]*\\\\(',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '\\\\)',\n        relevance: 0\n      },\n      {\n        className: 'variable',\n        begin: '[vp][0-9]+',\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('smalltalk', function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'char',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'class',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        className: 'method',\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        className: 'localvars',\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        className: 'array',\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('sml', function(hljs) {\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype ' +\n        'exception fn fun functor handle if in include infix infixr ' +\n        'let local nonfix of op open orelse raise rec sharing sig ' +\n        'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)'\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'tag',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'char', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('sql', function(hljs) {\n  var COMMENT_MODE = hljs.COMMENT('--', '$');\n  return {\n    case_insensitive: true,\n    illegal: /[<>]/,\n    contains: [\n      {\n        className: 'operator',\n        beginKeywords:\n          'begin end start commit rollback savepoint lock alter create drop rename call ' +\n          'delete do handler insert load replace select truncate update set show pragma grant ' +\n          'merge describe use explain help declare prepare execute deallocate savepoint release|0 ' +\n          'unlock purge reset change stop analyze cache flush optimize repair kill ' +\n          'install uninstall checksum restore check backup revoke',\n        end: /;/, endsWithParent: true,\n        keywords: {\n          keyword:\n            'abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +\n            'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +\n            'allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply ' +\n            'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +\n            'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +\n            'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +\n            'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +\n            'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +\n            'buffer_cache buffer_pool build bulk by byte byteordermark bytes c cache caching call calling cancel ' +\n            'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +\n            'char_length character_length characters characterset charindex charset charsetform charsetid check ' +\n            'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +\n            'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +\n            'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +\n            'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +\n            'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +\n            'consider consistent constant constraint constraints constructor container content contents context ' +\n            'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +\n            'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +\n            'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +\n            'cursor curtime customdatum cycle d data database databases datafile datafiles datalength date_add ' +\n            'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +\n            'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +\n            'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +\n            'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +\n            'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +\n            'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +\n            'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +\n            'do document domain dotnet double downgrade drop dumpfile duplicate duration e each edition editionable ' +\n            'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +\n            'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +\n            'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +\n            'execu execut execute exempt exists exit exp expire explain export export_set extended extent external ' +\n            'external_1 external_2 externally extract f failed failed_login_attempts failover failure far fast ' +\n            'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +\n            'finish first first_value fixed flash_cache flashback floor flush following follows for forall force ' +\n            'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +\n            'ftp full function g general generated get get_format get_lock getdate getutcdate global global_name ' +\n            'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +\n            'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +\n            'hierarchy high high_priority hosts hour http i id ident_current ident_incr ident_seed identified ' +\n            'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +\n            'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +\n            'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +\n            'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +\n            'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +\n            'k keep keep_duplicates key keys kill l language large last|0 last_day last_insert_id last_value lax lcase ' +\n            'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +\n            'lines link|0 list|0 listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +\n            'locator lock|0 locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +\n            'logoff logon logs long loop|0 low low_priority lower lpad lrtrim ltrim m main make_set makedate maketime ' +\n            'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +\n            'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +\n            'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +\n            'minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month ' +\n            'months mount move movement multiset mutex n name name_const names nan national native natural nav nchar ' +\n            'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +\n            'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +\n            'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +\n            'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +\n            'noswitch not nothing notice notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +\n            'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +\n            'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +\n            'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +\n            'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +\n            'out outer outfile outline output over overflow overriding p package pad parallel parallel_enable ' +\n            'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +\n            'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +\n            'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +\n            'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +\n            'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +\n            'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +\n            'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +\n            'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +\n            'quotename radians raise|0 rand range rank raw read reads readsize rebuild record records ' +\n            'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +\n            'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +\n            'reject rekey relational relative relaylog release|0 release_lock relies_on relocate rely rem remainder ' +\n            'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +\n            'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +\n            'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +\n            'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +\n            'sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment ' +\n            'self sequence sequential serializable server servererror session session_user sessions_per_user set ' +\n            'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +\n            'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +\n            'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +\n            'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +\n            'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +\n            'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +\n            'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +\n            'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +\n            'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +\n            'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +\n            'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +\n            'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime t table tables tablespace tan tdo ' +\n            'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +\n            'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +\n            'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +\n            'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +\n            'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +\n            'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unpivot ' +\n            'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +\n            'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +\n            'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +\n            'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +\n            'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +\n            'wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped ' +\n            'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +\n            'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',\n          literal:\n            'true false null',\n          built_in:\n            'array bigint binary bit blob boolean char character date dec decimal float int int8 integer interval number ' +\n            'numeric real record serial serial8 smallint text varchar varying void'\n        },\n        contains: [\n          {\n            className: 'string',\n            begin: '\\'', end: '\\'',\n            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"',\n            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\"\"'}]\n          },\n          {\n            className: 'string',\n            begin: '`', end: '`',\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          COMMENT_MODE\n        ]\n      },\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('stata', function(hljs) {\n  return {\n    aliases: ['do', 'ado'],\n    case_insensitive: true,\n    keywords: 'if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5',\n        contains: [\n      {\n        className: 'label',\n        variants: [\n          {begin: \"\\\\$\\\\{?[a-zA-Z0-9_]+\\\\}?\"},\n          {begin: \"`[a-zA-Z0-9_]+'\"}\n\n        ]\n      },\n      {\n        className: 'string',\n        variants: [\n          {begin: '`\"[^\\r\\n]*?\"\\''},\n          {begin: '\"[^\\r\\n\"]*\"'}\n        ]\n      },\n\n      {\n        className: 'literal',\n        variants: [\n          {\n            begin: '\\\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\\\(|$)'\n          }\n        ]\n      },\n\n      hljs.COMMENT('^[ \\t]*\\\\*.*$', false),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('step21', function(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_CLOSE_RE = 'END-ISO-10303-21;';\n  var STEP21_KEYWORDS = {\n    literal: '',\n    built_in: '',\n    keyword:\n    'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'preprocessor',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n    hljs.C_NUMBER_MODE,\n    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n    {\n      className: 'string',\n      begin: \"'\", end: \"'\"\n    },\n    {\n      className: 'label',\n      variants: [\n        {\n          begin: '#', end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    }\n  ];\n\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      {\n        className: 'preprocessor',\n        begin: STEP21_CLOSE_RE,\n        relevance: 10\n      },\n      STEP21_START\n    ].concat(STEP21_CODE)\n  };\n});\n\nhljs.registerLanguage('stylus', function(hljs) {\n\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.IDENT_RE\n  };\n\n  var HEX_COLOR = {\n    className: 'hexcolor',\n    begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})',\n    relevance: 10\n  };\n\n  var AT_KEYWORDS = [\n    'charset',\n    'css',\n    'debug',\n    'extend',\n    'font-face',\n    'for',\n    'import',\n    'include',\n    'media',\n    'mixin',\n    'page',\n    'warn',\n    'while'\n  ];\n\n  var PSEUDO_SELECTORS = [\n    'after',\n    'before',\n    'first-letter',\n    'first-line',\n    'active',\n    'first-child',\n    'focus',\n    'hover',\n    'lang',\n    'link',\n    'visited'\n  ];\n\n  var TAGS = [\n    'a',\n    'abbr',\n    'address',\n    'article',\n    'aside',\n    'audio',\n    'b',\n    'blockquote',\n    'body',\n    'button',\n    'canvas',\n    'caption',\n    'cite',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'dfn',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'hgroup',\n    'html',\n    'i',\n    'iframe',\n    'img',\n    'input',\n    'ins',\n    'kbd',\n    'label',\n    'legend',\n    'li',\n    'mark',\n    'menu',\n    'nav',\n    'object',\n    'ol',\n    'p',\n    'q',\n    'quote',\n    'samp',\n    'section',\n    'span',\n    'strong',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'textarea',\n    'tfoot',\n    'th',\n    'thead',\n    'time',\n    'tr',\n    'ul',\n    'var',\n    'video'\n  ];\n\n  var TAG_END = '[\\\\.\\\\s\\\\n\\\\[\\\\:,]';\n\n  var ATTRIBUTES = [\n    'align-content',\n    'align-items',\n    'align-self',\n    'animation',\n    'animation-delay',\n    'animation-direction',\n    'animation-duration',\n    'animation-fill-mode',\n    'animation-iteration-count',\n    'animation-name',\n    'animation-play-state',\n    'animation-timing-function',\n    'auto',\n    'backface-visibility',\n    'background',\n    'background-attachment',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-repeat',\n    'background-size',\n    'border',\n    'border-bottom',\n    'border-bottom-color',\n    'border-bottom-left-radius',\n    'border-bottom-right-radius',\n    'border-bottom-style',\n    'border-bottom-width',\n    'border-collapse',\n    'border-color',\n    'border-image',\n    'border-image-outset',\n    'border-image-repeat',\n    'border-image-slice',\n    'border-image-source',\n    'border-image-width',\n    'border-left',\n    'border-left-color',\n    'border-left-style',\n    'border-left-width',\n    'border-radius',\n    'border-right',\n    'border-right-color',\n    'border-right-style',\n    'border-right-width',\n    'border-spacing',\n    'border-style',\n    'border-top',\n    'border-top-color',\n    'border-top-left-radius',\n    'border-top-right-radius',\n    'border-top-style',\n    'border-top-width',\n    'border-width',\n    'bottom',\n    'box-decoration-break',\n    'box-shadow',\n    'box-sizing',\n    'break-after',\n    'break-before',\n    'break-inside',\n    'caption-side',\n    'clear',\n    'clip',\n    'clip-path',\n    'color',\n    'column-count',\n    'column-fill',\n    'column-gap',\n    'column-rule',\n    'column-rule-color',\n    'column-rule-style',\n    'column-rule-width',\n    'column-span',\n    'column-width',\n    'columns',\n    'content',\n    'counter-increment',\n    'counter-reset',\n    'cursor',\n    'direction',\n    'display',\n    'empty-cells',\n    'filter',\n    'flex',\n    'flex-basis',\n    'flex-direction',\n    'flex-flow',\n    'flex-grow',\n    'flex-shrink',\n    'flex-wrap',\n    'float',\n    'font',\n    'font-family',\n    'font-feature-settings',\n    'font-kerning',\n    'font-language-override',\n    'font-size',\n    'font-size-adjust',\n    'font-stretch',\n    'font-style',\n    'font-variant',\n    'font-variant-ligatures',\n    'font-weight',\n    'height',\n    'hyphens',\n    'icon',\n    'image-orientation',\n    'image-rendering',\n    'image-resolution',\n    'ime-mode',\n    'inherit',\n    'initial',\n    'justify-content',\n    'left',\n    'letter-spacing',\n    'line-height',\n    'list-style',\n    'list-style-image',\n    'list-style-position',\n    'list-style-type',\n    'margin',\n    'margin-bottom',\n    'margin-left',\n    'margin-right',\n    'margin-top',\n    'marks',\n    'mask',\n    'max-height',\n    'max-width',\n    'min-height',\n    'min-width',\n    'nav-down',\n    'nav-index',\n    'nav-left',\n    'nav-right',\n    'nav-up',\n    'none',\n    'normal',\n    'object-fit',\n    'object-position',\n    'opacity',\n    'order',\n    'orphans',\n    'outline',\n    'outline-color',\n    'outline-offset',\n    'outline-style',\n    'outline-width',\n    'overflow',\n    'overflow-wrap',\n    'overflow-x',\n    'overflow-y',\n    'padding',\n    'padding-bottom',\n    'padding-left',\n    'padding-right',\n    'padding-top',\n    'page-break-after',\n    'page-break-before',\n    'page-break-inside',\n    'perspective',\n    'perspective-origin',\n    'pointer-events',\n    'position',\n    'quotes',\n    'resize',\n    'right',\n    'tab-size',\n    'table-layout',\n    'text-align',\n    'text-align-last',\n    'text-decoration',\n    'text-decoration-color',\n    'text-decoration-line',\n    'text-decoration-style',\n    'text-indent',\n    'text-overflow',\n    'text-rendering',\n    'text-shadow',\n    'text-transform',\n    'text-underline-position',\n    'top',\n    'transform',\n    'transform-origin',\n    'transform-style',\n    'transition',\n    'transition-delay',\n    'transition-duration',\n    'transition-property',\n    'transition-timing-function',\n    'unicode-bidi',\n    'vertical-align',\n    'visibility',\n    'white-space',\n    'widows',\n    'width',\n    'word-break',\n    'word-spacing',\n    'word-wrap',\n    'z-index'\n  ];\n\n  // illegals\n  var ILLEGAL = [\n    '\\\\{',\n    '\\\\}',\n    '\\\\?',\n    '(\\\\bReturn\\\\b)', // monkey\n    '(\\\\bEnd\\\\b)', // monkey\n    '(\\\\bend\\\\b)', // vbscript\n    ';', // sql\n    '#\\\\s', // markdown\n    '\\\\*\\\\s', // markdown\n    '===\\\\s', // markdown\n    '\\\\|',\n    '%', // prolog\n  ];\n\n  return {\n    aliases: ['styl'],\n    case_insensitive: false,\n    illegal: '(' + ILLEGAL.join('|') + ')',\n    keywords: 'if else for in',\n    contains: [\n\n      // strings\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n\n      // comments\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n\n      // hex colors\n      HEX_COLOR,\n\n      // class tag\n      {\n        begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'class', begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // id tag\n      {\n        begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'id', begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // tags\n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'tag', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // psuedo selectors\n      {\n        className: 'pseudo',\n        begin: '&?:?:\\\\b(' + PSEUDO_SELECTORS.join('|') + ')' + TAG_END\n      },\n\n      // @ keywords\n      {\n        className: 'at_rule',\n        begin: '\\@(' + AT_KEYWORDS.join('|') + ')\\\\b'\n      },\n\n      // variables\n      VARIABLE,\n\n      // dimension\n      hljs.CSS_NUMBER_MODE,\n\n      // number\n      hljs.NUMBER_MODE,\n\n      // functions\n      //  - only from beginning of line + whitespace\n      {\n        className: 'function',\n        begin: '\\\\b[a-zA-Z][a-zA-Z0-9_\\-]*\\\\(.*\\\\)',\n        illegal: '[\\\\n]',\n        returnBegin: true,\n        contains: [\n          {className: 'title', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_\\-]*'},\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              HEX_COLOR,\n              VARIABLE,\n              hljs.APOS_STRING_MODE,\n              hljs.CSS_NUMBER_MODE,\n              hljs.NUMBER_MODE,\n              hljs.QUOTE_STRING_MODE\n            ]\n          }\n        ]\n      },\n\n      // attributes\n      //  - only from beginning of line + whitespace\n      //  - must have whitespace after it\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.reverse().join('|') + ')\\\\b'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('swift', function(hljs) {\n  var SWIFT_KEYWORDS = {\n      keyword: 'class deinit enum extension func import init let protocol static ' +\n        'struct subscript typealias var break case continue default do ' +\n        'else fallthrough if in for return switch where while as dynamicType ' +\n        'is new super self Self Type __COLUMN__ __FILE__ __FUNCTION__ ' +\n        '__LINE__ associativity didSet get infix inout left mutating none ' +\n        'nonmutating operator override postfix precedence prefix right set '+\n        'unowned unowned safe unsafe weak willSet',\n      literal: 'true false nil',\n      built_in: 'abs advance alignof alignofValue assert bridgeFromObjectiveC ' +\n        'bridgeFromObjectiveCUnconditional bridgeToObjectiveC ' +\n        'bridgeToObjectiveCUnconditional c contains count countElements ' +\n        'countLeadingZeros debugPrint debugPrintln distance dropFirst dropLast dump ' +\n        'encodeBitsAsWords enumerate equal filter find getBridgedObjectiveCType ' +\n        'getVaList indices insertionSort isBridgedToObjectiveC ' +\n        'isBridgedVerbatimToObjectiveC isUniquelyReferenced join ' +\n        'lexicographicalCompare map max maxElement min minElement numericCast ' +\n        'partition posix print println quickSort reduce reflect reinterpretCast ' +\n        'reverse roundUpToAlignment sizeof sizeofValue sort split startsWith strideof ' +\n        'strideofValue swap swift toString transcode underestimateCount ' +\n        'unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer ' +\n        'withUnsafePointerToObject withUnsafePointers withVaList'\n    };\n\n  var TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    relevance: 0\n  };\n  var BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    {\n      contains: ['self']\n    }\n  );\n  var SUBST = {\n    className: 'subst',\n    begin: /\\\\\\(/, end: '\\\\)',\n    keywords: SWIFT_KEYWORDS,\n    contains: [] // assigned later\n  };\n  var NUMBERS = {\n      className: 'number',\n      begin: '\\\\b([\\\\d_]+(\\\\.[\\\\deE_]+)?|0x[a-fA-F0-9_]+(\\\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\\\b',\n      relevance: 0\n  };\n  var QUOTE_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    contains: [SUBST, hljs.BACKSLASH_ESCAPE]\n  });\n  SUBST.contains = [NUMBERS];\n\n  return {\n    keywords: SWIFT_KEYWORDS,\n    contains: [\n      QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      BLOCK_COMMENT,\n      TYPE,\n      NUMBERS,\n      {\n        className: 'func',\n        beginKeywords: 'func', end: '{', excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/,\n            illegal: /\\(/\n          }),\n          {\n            className: 'generics',\n            begin: /</, end: />/,\n            illegal: />/\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/, endsParent: true,\n            keywords: SWIFT_KEYWORDS,\n            contains: [\n              'self',\n              NUMBERS,\n              QUOTE_STRING_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              {begin: ':'} // relevance booster\n            ],\n            illegal: /[\"']/\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct protocol class extension enum',\n        keywords: SWIFT_KEYWORDS,\n        end: '\\\\{',\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/})\n        ]\n      },\n      {\n        className: 'preprocessor', // @attributes\n        begin: '(@assignment|@class_protocol|@exported|@final|@lazy|@noreturn|' +\n                  '@NSCopying|@NSManaged|@objc|@optional|@required|@auto_closure|' +\n                  '@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|' +\n                  '@infix|@prefix|@postfix)'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('tcl', function(hljs) {\n  return {\n    aliases: ['tk'],\n    keywords: 'after append apply array auto_execok auto_import auto_load auto_mkindex ' +\n      'auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock ' +\n      'close concat continue dde dict encoding eof error eval exec exit expr fblocked ' +\n      'fconfigure fcopy file fileevent filename flush for foreach format gets glob global ' +\n      'history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list ' +\n      'llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 '+\n      'mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex '+\n      'platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename '+\n      'return safe scan seek set socket source split string subst switch tcl_endOfWord '+\n      'tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter '+\n      'tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update '+\n      'uplevel upvar variable vwait while',\n    contains: [\n      hljs.COMMENT(';[ \\\\t]*#', '$'),\n      hljs.COMMENT('^[ \\\\t]*#', '$'),\n      {\n        beginKeywords: 'proc',\n        end: '[\\\\{]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'symbol',\n            begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '[ \\\\t\\\\n\\\\r]',\n            endsWithParent: true,\n            excludeEnd: true\n          }\n        ]\n      },\n      {\n        className: 'variable',\n        excludeEnd: true,\n        variants: [\n          {\n            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\\\(([a-zA-Z0-9_])*\\\\)',\n            end: '[^a-zA-Z0-9_\\\\}\\\\$]'\n          },\n          {\n            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '(\\\\))?[^a-zA-Z0-9_\\\\}\\\\$]'\n          }\n        ]\n      },\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n        ]\n      },\n      {\n        className: 'number',\n        variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n      }\n    ]\n  }\n});\n\nhljs.registerLanguage('tex', function(hljs) {\n  var COMMAND1 = {\n    className: 'command',\n    begin: '\\\\\\\\[a-zA-Zа-яА-я]+[\\\\*]?'\n  };\n  var COMMAND2 = {\n    className: 'command',\n    begin: '\\\\\\\\[^a-zA-Zа-яА-я0-9]'\n  };\n  var SPECIAL = {\n    className: 'special',\n    begin: '[{}\\\\[\\\\]\\\\&#~]',\n    relevance: 0\n  };\n\n  return {\n    contains: [\n      { // parameter\n        begin: '\\\\\\\\[a-zA-Zа-яА-я]+[\\\\*]? *= *-?\\\\d*\\\\.?\\\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?',\n        returnBegin: true,\n        contains: [\n          COMMAND1, COMMAND2,\n          {\n            className: 'number',\n            begin: ' *=', end: '-?\\\\d*\\\\.?\\\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?',\n            excludeBegin: true\n          }\n        ],\n        relevance: 10\n      },\n      COMMAND1, COMMAND2,\n      SPECIAL,\n      {\n        className: 'formula',\n        begin: '\\\\$\\\\$', end: '\\\\$\\\\$',\n        contains: [COMMAND1, COMMAND2, SPECIAL],\n        relevance: 0\n      },\n      {\n        className: 'formula',\n        begin: '\\\\$', end: '\\\\$',\n        contains: [COMMAND1, COMMAND2, SPECIAL],\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '%',\n        '$',\n        {\n          relevance: 0\n        }\n      )\n    ]\n  };\n});\n\nhljs.registerLanguage('thrift', function(hljs) {\n  var BUILT_IN_TYPES = 'bool byte i16 i32 i64 double string binary';\n  return {\n    keywords: {\n      keyword:\n        'namespace const typedef struct enum service exception void oneway set list map required optional',\n      built_in:\n        BUILT_IN_TYPES,\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<', end: '>',\n        keywords: BUILT_IN_TYPES,\n        contains: ['self']\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('tp', function(hljs) {\n  var TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  }\n  var TPLABEL = {\n    className: 'comment',\n    begin: ':[^\\\\]]+'\n  }\n  var TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|\\\n    TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[', end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  var TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[', end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  return {\n    keywords: {\n      keyword:\n        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\n        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\n        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\n        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\n        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\n        'SUBSTR FINDSTR VOFFSET',\n      constant:\n        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET',\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('twig', function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\n                  'max min parent random range source template_from_string';\n\n  var FUNCTIONS = {\n    className: 'function',\n    beginKeywords: FUNCTION_NAMES,\n    relevance: 0,\n    contains: [\n      PARAMS\n    ]\n  };\n\n  var FILTER = {\n    className: 'filter',\n    begin: /\\|[A-Za-z_]+:?/,\n    keywords:\n      'abs batch capitalize convert_encoding date date_modify default ' +\n      'escape first format join json_encode keys last length lower ' +\n      'merge nl2br number_format raw replace reverse round slice sort split ' +\n      'striptags title trim upper url_encode',\n    contains: [\n      FUNCTIONS\n    ]\n  };\n\n  var TAGS = 'autoescape block do embed extends filter flush for ' +\n    'if import include macro sandbox set spaceless use verbatim';\n\n  TAGS = TAGS + ' ' + TAGS.split(' ').map(function(t){return 'end' + t}).join(' ');\n\n  return {\n    aliases: ['craftcms'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template_tag',\n        begin: /\\{%/, end: /%}/,\n        keywords: TAGS,\n        contains: [FILTER, FUNCTIONS]\n      },\n      {\n        className: 'variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: [FILTER, FUNCTIONS]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('typescript', function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'in if for while finally var new function|0 do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const class public private get set super ' +\n      'static implements enum export import declare type protected',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document any number boolean string void'\n  };\n\n  return {\n    aliases: ['ts'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'pi',\n        begin: /^\\s*['\"]use strict['\"]/,\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: 'function', end: /[\\{;]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ],\n            illegal: /[\"'\\(]/\n          }\n        ],\n        illegal: /\\[|%/,\n        relevance: 0 // () => {} is more typical in TypeScript\n      },\n      {\n        className: 'constructor',\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true,\n        relevance: 10\n      },\n      {\n        className: 'module',\n        beginKeywords: 'module', end: /\\{/, excludeEnd: true\n      },\n      {\n        className: 'interface',\n        beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n        keywords: 'interface extends'\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('vala', function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        // Value types\n        'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +\n        'uint16 uint32 uint64 float double bool struct enum string void ' +\n        // Reference types\n        'weak unowned owned ' +\n        // Modifiers\n        'async signal static abstract interface override ' +\n        // Control Structures\n        'while do for foreach else switch case break default return try catch ' +\n        // Visibility\n        'public private protected internal ' +\n        // Other\n        'using new this get set const stdout stdin stderr var',\n      built_in:\n        'DBus GLib CCode Gee Object',\n      literal:\n        'false true null'\n    },\n    contains: [\n      {\n        className: 'class',\n        beginKeywords: 'class interface delegate namespace', end: '{', excludeEnd: true,\n        illegal: '[^,:\\\\n\\\\s\\\\.]',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"',\n        relevance: 5\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'preprocessor',\n        begin: '^#', end: '$',\n        relevance: 2\n      },\n      {\n        className: 'constant',\n        begin: ' [A-Z_]+ ',\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('vbnet', function(hljs) {\n  return {\n    aliases: ['vb'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval ' + /* a-b */\n        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\n        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\n        'get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue ' + /* g-i */\n        'join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass ' + /* j-m */\n        'namespace narrowing new next not notinheritable notoverridable ' + /* n */\n        'of off on operator option optional or order orelse overloads overridable overrides ' + /* o */\n        'paramarray partial preserve private property protected public ' + /* p */\n        'raiseevent readonly redim rem removehandler resume return ' + /* r */\n        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\n        'take text then throw to try unicode until using when where while widening with withevents writeonly xor', /* t-x */\n      built_in:\n        'boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype ' +  /* b-c */\n        'date decimal directcast double gettype getxmlnamespace iif integer long object ' + /* d-o */\n        'sbyte short single string trycast typeof uinteger ulong ushort', /* s-u */\n      literal:\n        'true false nothing'\n    },\n    illegal: '//|{|}|endif|gosub|variant|wend', /* reserved deprecated keywords */\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        '\\'',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'xmlDocTag',\n              begin: '\\'\\'\\'|<!--|-->',\n              contains: [hljs.PHRASAL_WORDS_MODE]\n            },\n            {\n              className: 'xmlDocTag',\n              begin: '</?', end: '>',\n              contains: [hljs.PHRASAL_WORDS_MODE]\n            }\n          ]\n        }\n      ),\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'preprocessor',\n        begin: '#', end: '$',\n        keywords: 'if else elseif end region externalsource'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('vbscript', function(hljs) {\n  return {\n    aliases: ['vbs'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'call class const dim do loop erase execute executeglobal exit for each next function ' +\n        'if then else on error option explicit new private property let get public randomize ' +\n        'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +\n        'class_initialize class_terminate default preserve in me byval byref step resume goto',\n      built_in:\n        'lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +\n        'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +\n        'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +\n        'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +\n        'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +\n        'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +\n        'strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion ' +\n        'scriptengine split scriptengineminorversion cint sin datepart ltrim sqr ' +\n        'scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw ' +\n        'chrw regexp server response request cstr err',\n      literal:\n        'true false null nothing empty'\n    },\n    illegal: '//',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        /'/,\n        /$/,\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('vbscript-html', function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: '<%', end: '%>',\n        subLanguage: 'vbscript'\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('verilog', function(hljs) {\n  return {\n    aliases: ['v'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'always and assign begin buf bufif0 bufif1 case casex casez cmos deassign ' +\n        'default defparam disable edge else end endcase endfunction endmodule ' +\n        'endprimitive endspecify endtable endtask event for force forever fork ' +\n        'function if ifnone initial inout input join macromodule module nand ' +\n        'negedge nmos nor not notif0 notif1 or output parameter pmos posedge ' +\n        'primitive pulldown pullup rcmos release repeat rnmos rpmos rtran ' +\n        'rtranif0 rtranif1 specify specparam table task timescale tran ' +\n        'tranif0 tranif1 wait while xnor xor',\n      typename:\n        'highz0 highz1 integer large medium pull0 pull1 real realtime reg ' +\n        'scalared signed small strong0 strong1 supply0 supply0 supply1 supply1 ' +\n        'time tri tri0 tri1 triand trior trireg vectored wand weak0 weak1 wire wor'\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+\\'(b|h|o|d|B|H|O|D))?[0-9xzXZ]+',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        relevance: 0\n      },\n      /* ports in instances */\n      {\n        className: 'typename',\n        begin: '\\\\.\\\\w+',\n        relevance: 0\n      },\n      /* parameters to instances */\n      {\n        className: 'value',\n        begin: '#\\\\((?!parameter).+\\\\)'\n      },\n      /* operators */\n      {\n        className: 'keyword',\n        begin: '\\\\+|-|\\\\*|/|%|<|>|=|#|`|\\\\!|&|\\\\||@|:|\\\\^|~|\\\\{|\\\\}',\n        relevance: 0\n      }\n    ]\n  }; // return\n});\n\nhljs.registerLanguage('vhdl', function(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  var BASED_INTEGER_RE = '\\\\w+';\n  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'abs access after alias all and architecture array assert attribute begin block ' +\n        'body buffer bus case component configuration constant context cover disconnect ' +\n        'downto default else elsif end entity exit fairness file for force function generate ' +\n        'generic group guarded if impure in inertial inout is label library linkage literal ' +\n        'loop map mod nand new next nor not null of on open or others out package port ' +\n        'postponed procedure process property protected pure range record register reject ' +\n        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\n        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\n        'unaffected units until use variable vmode vprop vunit wait when while with xnor xor',\n      typename:\n        'boolean bit character severity_level integer time delay_length natural positive ' +\n        'string bit_vector file_open_kind file_open_status std_ulogic std_ulogic_vector ' +\n        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\n        'real_vector time_vector'\n    },\n    illegal: '{',\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,        // VHDL-2008 block commenting.\n      hljs.COMMENT('--', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'attribute',\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('vim', function(hljs) {\n  return {\n    lexemes: /[!#@\\w]+/,\n    keywords: {\n      keyword: //ex command\n        // express version except: ! & * < = > !! # @ @@\n        'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+\n        'cp cpf cq cr cs cst cu cuna cunme cw d|0 delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu g|0 go gr grepa gu gv ha h|0 helpf helpg helpt hi hid his i|0 ia iabc if ij il im imapc '+\n        'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs n|0 new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+\n        'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf q|0 quita qa r|0 rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv s|0 sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+\n        'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync t|0 tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+\n        'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up v|0 ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+\n        // full version\n        'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+\n        'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+\n        'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+\n        'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+\n        'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+\n        'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+\n        'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+\n        'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+\n        'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+\n        'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+\n        'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',\n      built_in: //built in func\n        'abs acos add and append argc argidx argv asin atan atan2 browse browsedir bufexists buflisted bufloaded bufname bufnr bufwinnr byte2line byteidx call ceil changenr char2nr cindent clearmatches col complete complete_add complete_check confirm copy cos cosh count cscope_connection cursor '+\n        'deepcopy delete did_filetype diff_filler diff_hlID empty escape eval eventhandler executable exists exp expand extend feedkeys filereadable filewritable filter finddir findfile float2nr floor fmod fnameescape fnamemodify foldclosed foldclosedend foldlevel foldtext foldtextresult foreground function '+\n        'garbagecollect get getbufline getbufvar getchar getcharmod getcmdline getcmdpos getcmdtype getcwd getfontname getfperm getfsize getftime getftype getline getloclist getmatches getpid getpos getqflist getreg getregtype gettabvar gettabwinvar getwinposx getwinposy getwinvar glob globpath has has_key '+\n        'haslocaldir hasmapto histadd histdel histget histnr hlexists hlID hostname iconv indent index input inputdialog inputlist inputrestore inputsave inputsecret insert invert isdirectory islocked items join keys len libcall libcallnr line line2byte lispindent localtime log log10 luaeval map maparg mapcheck '+\n        'match matchadd matcharg matchdelete matchend matchlist matchstr max min mkdir mode mzeval nextnonblank nr2char or pathshorten pow prevnonblank printf pumvisible py3eval pyeval range readfile reltime reltimestr remote_expr remote_foreground remote_peek remote_read remote_send remove rename repeat '+\n        'resolve reverse round screenattr screenchar screencol screenrow search searchdecl searchpair searchpairpos searchpos server2client serverlist setbufvar setcmdpos setline setloclist setmatches setpos setqflist setreg settabvar settabwinvar setwinvar sha256 shellescape shiftwidth simplify sin '+\n        'sinh sort soundfold spellbadword spellsuggest split sqrt str2float str2nr strchars strdisplaywidth strftime stridx string strlen strpart strridx strtrans strwidth submatch substitute synconcealed synID synIDattr '+\n        'synIDtrans synstack system tabpagebuflist tabpagenr tabpagewinnr tagfiles taglist tan tanh tempname tolower toupper tr trunc type undofile undotree values virtcol visualmode wildmenumode winbufnr wincol winheight winline winnr winrestcmd winrestview winsaveview winwidth writefile xor'\n    },\n    illegal: /[{:]/,\n    contains: [\n      hljs.NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'string',\n        // quote with escape, comment as quote\n        begin: /\"((\\\\\")|[^\"\\n])*(\"|\\n)/\n      },\n      {\n        className: 'variable',\n        begin: /[bwtglsav]:[\\w\\d_]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function function!', end: '$',\n        relevance: 0,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('x86asm', function(hljs) {\n  return {\n    case_insensitive: true,\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      keyword:\n        'lock rep repe repz repne repnz xaquire xrelease bnd nobnd ' +\n        'aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63',\n      literal:\n        // Instruction pointer\n        'ip eip rip ' +\n        // 8-bit registers\n        'al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ' +\n        // 16-bit registers\n        'ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w ' +\n        // 32-bit registers\n        'eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d ' +\n        // 64-bit registers\n        'rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 ' +\n        // Segment registers\n        'cs ds es fs gs ss ' +\n        // Floating point stack registers\n        'st st0 st1 st2 st3 st4 st5 st6 st7 ' +\n        // MMX Registers\n        'mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 ' +\n        // SSE registers\n        'xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 ' +\n        'xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ' +\n        // AVX registers\n        'ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ' +\n        'ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 ' +\n        // AVX-512F registers\n        'zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 ' +\n        'zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 ' +\n        // AVX-512F mask registers\n        'k0 k1 k2 k3 k4 k5 k6 k7 ' +\n        // Bound (MPX) register\n        'bnd0 bnd1 bnd2 bnd3 ' +\n        // Special register\n        'cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 ' +\n        // NASM altreg package\n        'r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b ' +\n        'r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d ' +\n        'r0h r1h r2h r3h ' +\n        'r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l',\n\n      pseudo:\n        'db dw dd dq dt ddq do dy dz ' +\n        'resb resw resd resq rest resdq reso resy resz ' +\n        'incbin equ times',\n\n      preprocessor:\n        '%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif ' +\n        '%ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep ' +\n        '%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment ' +\n        '.nolist ' +\n        'byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr ' +\n        '__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ ' +\n        '__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend ' +\n        'align alignb sectalign daz nodaz up down zero default option assume public ',\n\n      built_in:\n        'bits use16 use32 use64 default section segment absolute extern global common cpu float ' +\n        '__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ ' +\n        '__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ ' +\n        '__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e ' +\n        'float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__'\n    },\n    contains: [\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'number',\n        variants: [\n          // Float number and x87 BCD\n          {\n            begin: '\\\\b(?:([0-9][0-9_]*)?\\\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|' +\n                   '(0[Xx])?[0-9][0-9_]*\\\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\\\b',\n            relevance: 0\n          },\n\n          // Hex number in $\n          { begin: '\\\\$[0-9][0-9A-Fa-f]*', relevance: 0 },\n\n          // Number in H,D,T,Q,O,B,Y suffix\n          { begin: '\\\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\\\b' },\n\n          // Number in X,D,T,Q,O,B,Y prefix\n          { begin: '\\\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\\\b'}\n        ]\n      },\n      // Double quote string\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          // Single-quoted string\n          { begin: '\\'', end: '[^\\\\\\\\]\\'' },\n          // Backquoted string\n          { begin: '`', end: '[^\\\\\\\\]`' },\n          // Section name\n          { begin: '\\\\.[A-Za-z0-9]+' }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'label',\n        variants: [\n          // Global label and local label\n          { begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)' },\n          // Macro-local label\n          { begin: '^\\\\s*%%[A-Za-z0-9_$#@~.?]*:' }\n        ],\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'argument',\n        begin: '%[0-9]+',\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'built_in',\n        begin: '%!\\S+',\n        relevance: 0\n      }\n    ]\n  };\n});\n\nhljs.registerLanguage('xl', function(hljs) {\n  var BUILTIN_MODULES = 'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\n\n  var XL_KEYWORDS = {\n    keyword: 'if then else do while until for loop import with is as where when by data constant',\n    literal: 'true false nil',\n    type: 'integer real text name boolean symbol infix prefix postfix block tree',\n    built_in: 'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin acos atan exp expm1 log log2 log10 log1p pi at',\n    module: BUILTIN_MODULES,\n    id: 'text_length text_range text_find text_replace contains page slide basic_slide title_slide title subtitle fade_in fade_out fade_at clear_color color line_color line_width texture_wrap texture_transform texture scale_?x scale_?y scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y rotate_?z? rectangle circle ellipse sphere path line_to move_to quad_to curve_to theme background contents locally time mouse_?x mouse_?y mouse_buttons'\n  };\n\n  var XL_CONSTANT = {\n    className: 'constant',\n    begin: '[A-Z][A-Z_0-9]+',\n    relevance: 0\n  };\n  var XL_VARIABLE = {\n    className: 'variable',\n    begin: '([A-Z][a-z_0-9]+)+',\n    relevance: 0\n  };\n  var XL_ID = {\n    className: 'id',\n    begin: '[a-z][a-z_0-9]+',\n    relevance: 0\n  };\n\n  var DOUBLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\"', end: '\"', illegal: '\\\\n'\n  };\n  var SINGLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\\'', end: '\\'', illegal: '\\\\n'\n  };\n  var LONG_TEXT = {\n    className: 'string',\n    begin: '<<', end: '>>'\n  };\n  var BASED_NUMBER = {\n    className: 'number',\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?',\n    relevance: 10\n  };\n  var IMPORT = {\n    className: 'import',\n    beginKeywords: 'import', end: '$',\n    keywords: {\n      keyword: 'import',\n      module: BUILTIN_MODULES\n    },\n    relevance: 0,\n    contains: [DOUBLE_QUOTE_TEXT]\n  };\n  var FUNCTION_DEFINITION = {\n    className: 'function',\n    begin: '[a-z].*->'\n  };\n  return {\n    aliases: ['tao'],\n    lexemes: /[a-zA-Z][a-zA-Z0-9_?]*/,\n    keywords: XL_KEYWORDS,\n    contains: [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    DOUBLE_QUOTE_TEXT,\n    SINGLE_QUOTE_TEXT,\n    LONG_TEXT,\n    FUNCTION_DEFINITION,\n    IMPORT,\n    XL_CONSTANT,\n    XL_VARIABLE,\n    XL_ID,\n    BASED_NUMBER,\n    hljs.NUMBER_MODE\n    ]\n  };\n});\n\nhljs.registerLanguage('xquery', function(hljs) {\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\n    'replace value rename copy modify update';\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n  var VAR = {\n    className: 'variable',\n    begin: /\\$[a-zA-Z0-9\\-]+/,\n    relevance: 5\n  };\n\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n    ]\n  };\n\n  var ANNOTATION = {\n    className: 'decorator',\n    begin: '%\\\\w+'\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    begin: '\\\\(:', end: ':\\\\)',\n    relevance: 10,\n    contains: [\n      {\n        className: 'doc', begin: '@\\\\w+'\n      }\n    ]\n  };\n\n  var METHOD = {\n    begin: '{', end: '}'\n  };\n\n  var CONTAINS = [\n    VAR,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    METHOD\n  ];\n  METHOD.contains = CONTAINS;\n\n\n  return {\n    aliases: ['xpath', 'xq'],\n    case_insensitive: false,\n    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n});\n\nhljs.registerLanguage('zephir', function(hljs) {\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: 'b\"', end: '\"'\n      },\n      {\n        begin: 'b\\'', end: '\\''\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  return {\n    aliases: ['zep'],\n    case_insensitive: true,\n    keywords:\n    'and include_once list abstract global private echo interface as static endswitch ' +\n    'array null if endwhile or const for endforeach self var let while isset public ' +\n    'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n    'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n    'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n    'enddeclare final try switch continue endfor endif declare unset true false ' +\n    'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n    'yield finally int uint long ulong char uchar double float bool boolean string' +\n    'likely unlikely',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler',\n          lexemes: hljs.UNDERSCORE_IDENT_RE\n        }\n      ),\n      {\n        className: 'string',\n        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              'self',\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n});\n\n  return hljs;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/highlightjs/highlight.pack.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * @license AngularJS v1.2.29\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular, undefined) {'use strict';\n\n/* jshint maxlen: false */\n\n/**\n * @ngdoc module\n * @name ngAnimate\n * @description\n *\n * # ngAnimate\n *\n * The `ngAnimate` module provides support for JavaScript, CSS3 transition and CSS3 keyframe animation hooks within existing core and custom directives.\n *\n *\n * <div doc-module-components=\"ngAnimate\"></div>\n *\n * # Usage\n *\n * To see animations in action, all that is required is to define the appropriate CSS classes\n * or to register a JavaScript animation via the myModule.animation() function. The directives that support animation automatically are:\n * `ngRepeat`, `ngInclude`, `ngIf`, `ngSwitch`, `ngShow`, `ngHide`, `ngView` and `ngClass`. Custom directives can take advantage of animation\n * by using the `$animate` service.\n *\n * Below is a more detailed breakdown of the supported animation events provided by pre-existing ng directives:\n *\n * | Directive                                                 | Supported Animations                               |\n * |---------------------------------------------------------- |----------------------------------------------------|\n * | {@link ng.directive:ngRepeat#usage_animations ngRepeat}         | enter, leave and move                              |\n * | {@link ngRoute.directive:ngView#usage_animations ngView}        | enter and leave                                    |\n * | {@link ng.directive:ngInclude#usage_animations ngInclude}       | enter and leave                                    |\n * | {@link ng.directive:ngSwitch#usage_animations ngSwitch}         | enter and leave                                    |\n * | {@link ng.directive:ngIf#usage_animations ngIf}                 | enter and leave                                    |\n * | {@link ng.directive:ngClass#usage_animations ngClass}           | add and remove                                     |\n * | {@link ng.directive:ngShow#usage_animations ngShow & ngHide}    | add and remove (the ng-hide class value)           |\n * | {@link ng.directive:form#usage_animations form}                 | add and remove (dirty, pristine, valid, invalid & all other validations)                |\n * | {@link ng.directive:ngModel#usage_animations ngModel}           | add and remove (dirty, pristine, valid, invalid & all other validations)                |\n *\n * You can find out more information about animations upon visiting each directive page.\n *\n * Below is an example of how to apply animations to a directive that supports animation hooks:\n *\n * ```html\n * <style type=\"text/css\">\n * .slide.ng-enter, .slide.ng-leave {\n *   -webkit-transition:0.5s linear all;\n *   transition:0.5s linear all;\n * }\n *\n * .slide.ng-enter { }        /&#42; starting animations for enter &#42;/\n * .slide.ng-enter.ng-enter-active { } /&#42; terminal animations for enter &#42;/\n * .slide.ng-leave { }        /&#42; starting animations for leave &#42;/\n * .slide.ng-leave.ng-leave-active { } /&#42; terminal animations for leave &#42;/\n * </style>\n *\n * <!--\n * the animate service will automatically add .ng-enter and .ng-leave to the element\n * to trigger the CSS transition/animations\n * -->\n * <ANY class=\"slide\" ng-include=\"...\"></ANY>\n * ```\n *\n * Keep in mind that, by default, if an animation is running, any child elements cannot be animated\n * until the parent element's animation has completed. This blocking feature can be overridden by\n * placing the `ng-animate-children` attribute on a parent container tag.\n *\n * ```html\n * <div class=\"slide-animation\" ng-if=\"on\" ng-animate-children>\n *   <div class=\"fade-animation\" ng-if=\"on\">\n *     <div class=\"explode-animation\" ng-if=\"on\">\n *        ...\n *     </div>\n *   </div>\n * </div>\n * ```\n *\n * When the `on` expression value changes and an animation is triggered then each of the elements within\n * will all animate without the block being applied to child elements.\n *\n * <h2>CSS-defined Animations</h2>\n * The animate service will automatically apply two CSS classes to the animated element and these two CSS classes\n * are designed to contain the start and end CSS styling. Both CSS transitions and keyframe animations are supported\n * and can be used to play along with this naming structure.\n *\n * The following code below demonstrates how to perform animations using **CSS transitions** with Angular:\n *\n * ```html\n * <style type=\"text/css\">\n * /&#42;\n *  The animate class is apart of the element and the ng-enter class\n *  is attached to the element once the enter animation event is triggered\n * &#42;/\n * .reveal-animation.ng-enter {\n *  -webkit-transition: 1s linear all; /&#42; Safari/Chrome &#42;/\n *  transition: 1s linear all; /&#42; All other modern browsers and IE10+ &#42;/\n *\n *  /&#42; The animation preparation code &#42;/\n *  opacity: 0;\n * }\n *\n * /&#42;\n *  Keep in mind that you want to combine both CSS\n *  classes together to avoid any CSS-specificity\n *  conflicts\n * &#42;/\n * .reveal-animation.ng-enter.ng-enter-active {\n *  /&#42; The animation code itself &#42;/\n *  opacity: 1;\n * }\n * </style>\n *\n * <div class=\"view-container\">\n *   <div ng-view class=\"reveal-animation\"></div>\n * </div>\n * ```\n *\n * The following code below demonstrates how to perform animations using **CSS animations** with Angular:\n *\n * ```html\n * <style type=\"text/css\">\n * .reveal-animation.ng-enter {\n *   -webkit-animation: enter_sequence 1s linear; /&#42; Safari/Chrome &#42;/\n *   animation: enter_sequence 1s linear; /&#42; IE10+ and Future Browsers &#42;/\n * }\n * @-webkit-keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * @keyframes enter_sequence {\n *   from { opacity:0; }\n *   to { opacity:1; }\n * }\n * </style>\n *\n * <div class=\"view-container\">\n *   <div ng-view class=\"reveal-animation\"></div>\n * </div>\n * ```\n *\n * Both CSS3 animations and transitions can be used together and the animate service will figure out the correct duration and delay timing.\n *\n * Upon DOM mutation, the event class is added first (something like `ng-enter`), then the browser prepares itself to add\n * the active class (in this case `ng-enter-active`) which then triggers the animation. The animation module will automatically\n * detect the CSS code to determine when the animation ends. Once the animation is over then both CSS classes will be\n * removed from the DOM. If a browser does not support CSS transitions or CSS animations then the animation will start and end\n * immediately resulting in a DOM element that is at its final state. This final state is when the DOM element\n * has no CSS transition/animation classes applied to it.\n *\n * <h3>CSS Staggering Animations</h3>\n * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n * curtain-like effect. The ngAnimate module, as of 1.2.0, supports staggering animations and the stagger effect can be\n * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n *\n * ```css\n * .my-animation.ng-enter {\n *   /&#42; standard transition code &#42;/\n *   -webkit-transition: 1s linear all;\n *   transition: 1s linear all;\n *   opacity:0;\n * }\n * .my-animation.ng-enter-stagger {\n *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n *   -webkit-transition-delay: 0.1s;\n *   transition-delay: 0.1s;\n *\n *   /&#42; in case the stagger doesn't work then these two values\n *    must be set to 0 to avoid an accidental CSS inheritance &#42;/\n *   -webkit-transition-duration: 0s;\n *   transition-duration: 0s;\n * }\n * .my-animation.ng-enter.ng-enter-active {\n *   /&#42; standard transition styles &#42;/\n *   opacity:1;\n * }\n * ```\n *\n * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n * will also be reset if more than 10ms has passed after the last animation has been fired.\n *\n * The following code will issue the **ng-leave-stagger** event on the element provided:\n *\n * ```js\n * var kids = parent.children();\n *\n * $animate.leave(kids[0]); //stagger index=0\n * $animate.leave(kids[1]); //stagger index=1\n * $animate.leave(kids[2]); //stagger index=2\n * $animate.leave(kids[3]); //stagger index=3\n * $animate.leave(kids[4]); //stagger index=4\n *\n * $timeout(function() {\n *   //stagger has reset itself\n *   $animate.leave(kids[5]); //stagger index=0\n *   $animate.leave(kids[6]); //stagger index=1\n * }, 100, false);\n * ```\n *\n * Stagger animations are currently only supported within CSS-defined animations.\n *\n * <h2>JavaScript-defined Animations</h2>\n * In the event that you do not want to use CSS3 transitions or CSS3 animations or if you wish to offer animations on browsers that do not\n * yet support CSS transitions/animations, then you can make use of JavaScript animations defined inside of your AngularJS module.\n *\n * ```js\n * //!annotate=\"YourApp\" Your AngularJS Module|Replace this or ngModule with the module that you used to define your application.\n * var ngModule = angular.module('YourApp', ['ngAnimate']);\n * ngModule.animation('.my-crazy-animation', function() {\n *   return {\n *     enter: function(element, done) {\n *       //run the animation here and call done when the animation is complete\n *       return function(cancelled) {\n *         //this (optional) function will be called when the animation\n *         //completes or when the animation is cancelled (the cancelled\n *         //flag will be set to true if cancelled).\n *       };\n *     },\n *     leave: function(element, done) { },\n *     move: function(element, done) { },\n *\n *     //animation that can be triggered before the class is added\n *     beforeAddClass: function(element, className, done) { },\n *\n *     //animation that can be triggered after the class is added\n *     addClass: function(element, className, done) { },\n *\n *     //animation that can be triggered before the class is removed\n *     beforeRemoveClass: function(element, className, done) { },\n *\n *     //animation that can be triggered after the class is removed\n *     removeClass: function(element, className, done) { }\n *   };\n * });\n * ```\n *\n * JavaScript-defined animations are created with a CSS-like class selector and a collection of events which are set to run\n * a javascript callback function. When an animation is triggered, $animate will look for a matching animation which fits\n * the element's CSS class attribute value and then run the matching animation event function (if found).\n * In other words, if the CSS classes present on the animated element match any of the JavaScript animations then the callback function will\n * be executed. It should be also noted that only simple, single class selectors are allowed (compound class selectors are not supported).\n *\n * Within a JavaScript animation, an object containing various event callback animation functions is expected to be returned.\n * As explained above, these callbacks are triggered based on the animation event. Therefore if an enter animation is run,\n * and the JavaScript animation is found, then the enter callback will handle that animation (in addition to the CSS keyframe animation\n * or transition code that is defined via a stylesheet).\n *\n */\n\nangular.module('ngAnimate', ['ng'])\n\n  /**\n   * @ngdoc provider\n   * @name $animateProvider\n   * @description\n   *\n   * The `$animateProvider` allows developers to register JavaScript animation event handlers directly inside of a module.\n   * When an animation is triggered, the $animate service will query the $animate service to find any animations that match\n   * the provided name value.\n   *\n   * Requires the {@link ngAnimate `ngAnimate`} module to be installed.\n   *\n   * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.\n   *\n   */\n  .directive('ngAnimateChildren', function() {\n    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';\n    return function(scope, element, attrs) {\n      var val = attrs.ngAnimateChildren;\n      if(angular.isString(val) && val.length === 0) { //empty attribute\n        element.data(NG_ANIMATE_CHILDREN, true);\n      } else {\n        scope.$watch(val, function(value) {\n          element.data(NG_ANIMATE_CHILDREN, !!value);\n        });\n      }\n    };\n  })\n\n  //this private service is only used within CSS-enabled animations\n  //IE8 + IE9 do not support rAF natively, but that is fine since they\n  //also don't support transitions and keyframes which means that the code\n  //below will never be used by the two browsers.\n  .factory('$$animateReflow', ['$$rAF', '$document', function($$rAF, $document) {\n    var bod = $document[0].body;\n    return function(fn) {\n      //the returned function acts as the cancellation function\n      return $$rAF(function() {\n        //the line below will force the browser to perform a repaint\n        //so that all the animated elements within the animation frame\n        //will be properly updated and drawn on screen. This is\n        //required to perform multi-class CSS based animations with\n        //Firefox. DO NOT REMOVE THIS LINE. DO NOT OPTIMIZE THIS LINE.\n        //THE MINIFIER WILL REMOVE IT OTHERWISE WHICH WILL RESULT IN AN\n        //UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND WILL\n        //TAKE YEARS AWAY FROM YOUR LIFE!\n        fn(bod.offsetWidth);\n      });\n    };\n  }])\n\n  .config(['$provide', '$animateProvider', function($provide, $animateProvider) {\n    var noop = angular.noop;\n    var forEach = angular.forEach;\n    var selectors = $animateProvider.$$selectors;\n\n    var ELEMENT_NODE = 1;\n    var NG_ANIMATE_STATE = '$$ngAnimateState';\n    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';\n    var NG_ANIMATE_CLASS_NAME = 'ng-animate';\n    var rootAnimateState = {running: true};\n\n    function extractElementNode(element) {\n      for(var i = 0; i < element.length; i++) {\n        var elm = element[i];\n        if(elm.nodeType == ELEMENT_NODE) {\n          return elm;\n        }\n      }\n    }\n\n    function prepareElement(element) {\n      return element && angular.element(element);\n    }\n\n    function stripCommentsFromElement(element) {\n      return angular.element(extractElementNode(element));\n    }\n\n    function isMatchingElement(elm1, elm2) {\n      return extractElementNode(elm1) == extractElementNode(elm2);\n    }\n\n    $provide.decorator('$animate', ['$delegate', '$injector', '$sniffer', '$rootElement', '$$asyncCallback', '$rootScope', '$document',\n                            function($delegate,   $injector,   $sniffer,   $rootElement,   $$asyncCallback,    $rootScope,   $document) {\n\n      var globalAnimationCounter = 0;\n      $rootElement.data(NG_ANIMATE_STATE, rootAnimateState);\n\n      // disable animations during bootstrap, but once we bootstrapped, wait again\n      // for another digest until enabling animations. The reason why we digest twice\n      // is because all structural animations (enter, leave and move) all perform a\n      // post digest operation before animating. If we only wait for a single digest\n      // to pass then the structural animation would render its animation on page load.\n      // (which is what we're trying to avoid when the application first boots up.)\n      $rootScope.$$postDigest(function() {\n        $rootScope.$$postDigest(function() {\n          rootAnimateState.running = false;\n        });\n      });\n\n      var classNameFilter = $animateProvider.classNameFilter();\n      var isAnimatableClassName = !classNameFilter\n              ? function() { return true; }\n              : function(className) {\n                return classNameFilter.test(className);\n              };\n\n      function blockElementAnimations(element) {\n        var data = element.data(NG_ANIMATE_STATE) || {};\n        data.running = true;\n        element.data(NG_ANIMATE_STATE, data);\n      }\n\n      function lookup(name) {\n        if (name) {\n          var matches = [],\n              flagMap = {},\n              classes = name.substr(1).split('.');\n\n          //the empty string value is the default animation\n          //operation which performs CSS transition and keyframe\n          //animations sniffing. This is always included for each\n          //element animation procedure if the browser supports\n          //transitions and/or keyframe animations. The default\n          //animation is added to the top of the list to prevent\n          //any previous animations from affecting the element styling\n          //prior to the element being animated.\n          if ($sniffer.transitions || $sniffer.animations) {\n            matches.push($injector.get(selectors['']));\n          }\n\n          for(var i=0; i < classes.length; i++) {\n            var klass = classes[i],\n                selectorFactoryName = selectors[klass];\n            if(selectorFactoryName && !flagMap[klass]) {\n              matches.push($injector.get(selectorFactoryName));\n              flagMap[klass] = true;\n            }\n          }\n          return matches;\n        }\n      }\n\n      function animationRunner(element, animationEvent, className) {\n        //transcluded directives may sometimes fire an animation using only comment nodes\n        //best to catch this early on to prevent any animation operations from occurring\n        var node = element[0];\n        if(!node) {\n          return;\n        }\n\n        var isSetClassOperation = animationEvent == 'setClass';\n        var isClassBased = isSetClassOperation ||\n                           animationEvent == 'addClass' ||\n                           animationEvent == 'removeClass';\n\n        var classNameAdd, classNameRemove;\n        if(angular.isArray(className)) {\n          classNameAdd = className[0];\n          classNameRemove = className[1];\n          className = classNameAdd + ' ' + classNameRemove;\n        }\n\n        var currentClassName = element.attr('class');\n        var classes = currentClassName + ' ' + className;\n        if(!isAnimatableClassName(classes)) {\n          return;\n        }\n\n        var beforeComplete = noop,\n            beforeCancel = [],\n            before = [],\n            afterComplete = noop,\n            afterCancel = [],\n            after = [];\n\n        var animationLookup = (' ' + classes).replace(/\\s+/g,'.');\n        forEach(lookup(animationLookup), function(animationFactory) {\n          var created = registerAnimation(animationFactory, animationEvent);\n          if(!created && isSetClassOperation) {\n            registerAnimation(animationFactory, 'addClass');\n            registerAnimation(animationFactory, 'removeClass');\n          }\n        });\n\n        function registerAnimation(animationFactory, event) {\n          var afterFn = animationFactory[event];\n          var beforeFn = animationFactory['before' + event.charAt(0).toUpperCase() + event.substr(1)];\n          if(afterFn || beforeFn) {\n            if(event == 'leave') {\n              beforeFn = afterFn;\n              //when set as null then animation knows to skip this phase\n              afterFn = null;\n            }\n            after.push({\n              event : event, fn : afterFn\n            });\n            before.push({\n              event : event, fn : beforeFn\n            });\n            return true;\n          }\n        }\n\n        function run(fns, cancellations, allCompleteFn) {\n          var animations = [];\n          forEach(fns, function(animation) {\n            animation.fn && animations.push(animation);\n          });\n\n          var count = 0;\n          function afterAnimationComplete(index) {\n            if(cancellations) {\n              (cancellations[index] || noop)();\n              if(++count < animations.length) return;\n              cancellations = null;\n            }\n            allCompleteFn();\n          }\n\n          //The code below adds directly to the array in order to work with\n          //both sync and async animations. Sync animations are when the done()\n          //operation is called right away. DO NOT REFACTOR!\n          forEach(animations, function(animation, index) {\n            var progress = function() {\n              afterAnimationComplete(index);\n            };\n            switch(animation.event) {\n              case 'setClass':\n                cancellations.push(animation.fn(element, classNameAdd, classNameRemove, progress));\n                break;\n              case 'addClass':\n                cancellations.push(animation.fn(element, classNameAdd || className,     progress));\n                break;\n              case 'removeClass':\n                cancellations.push(animation.fn(element, classNameRemove || className,  progress));\n                break;\n              default:\n                cancellations.push(animation.fn(element, progress));\n                break;\n            }\n          });\n\n          if(cancellations && cancellations.length === 0) {\n            allCompleteFn();\n          }\n        }\n\n        return {\n          node : node,\n          event : animationEvent,\n          className : className,\n          isClassBased : isClassBased,\n          isSetClassOperation : isSetClassOperation,\n          before : function(allCompleteFn) {\n            beforeComplete = allCompleteFn;\n            run(before, beforeCancel, function() {\n              beforeComplete = noop;\n              allCompleteFn();\n            });\n          },\n          after : function(allCompleteFn) {\n            afterComplete = allCompleteFn;\n            run(after, afterCancel, function() {\n              afterComplete = noop;\n              allCompleteFn();\n            });\n          },\n          cancel : function() {\n            if(beforeCancel) {\n              forEach(beforeCancel, function(cancelFn) {\n                (cancelFn || noop)(true);\n              });\n              beforeComplete(true);\n            }\n            if(afterCancel) {\n              forEach(afterCancel, function(cancelFn) {\n                (cancelFn || noop)(true);\n              });\n              afterComplete(true);\n            }\n          }\n        };\n      }\n\n      /**\n       * @ngdoc service\n       * @name $animate\n       * @kind function\n       *\n       * @description\n       * The `$animate` service provides animation detection support while performing DOM operations (enter, leave and move) as well as during addClass and removeClass operations.\n       * When any of these operations are run, the $animate service\n       * will examine any JavaScript-defined animations (which are defined by using the $animateProvider provider object)\n       * as well as any CSS-defined animations against the CSS classes present on the element once the DOM operation is run.\n       *\n       * The `$animate` service is used behind the scenes with pre-existing directives and animation with these directives\n       * will work out of the box without any extra configuration.\n       *\n       * Requires the {@link ngAnimate `ngAnimate`} module to be installed.\n       *\n       * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.\n       *\n       */\n      return {\n        /**\n         * @ngdoc method\n         * @name $animate#enter\n         * @kind function\n         *\n         * @description\n         * Appends the element to the parentElement element that resides in the document and then runs the enter animation. Once\n         * the animation is started, the following CSS classes will be present on the element for the duration of the animation:\n         *\n         * Below is a breakdown of each step that occurs during enter animation:\n         *\n         * | Animation Step                                                                               | What the element class attribute looks like |\n         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n         * | 1. $animate.enter(...) is called                                                             | class=\"my-animation\"                        |\n         * | 2. element is inserted into the parentElement element or beside the afterElement element     | class=\"my-animation\"                        |\n         * | 3. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n         * | 4. the .ng-enter class is added to the element                                               | class=\"my-animation ng-animate ng-enter\"    |\n         * | 5. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-enter\"    |\n         * | 6. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-enter\"    |\n         * | 7. the .ng-enter-active and .ng-animate-active classes are added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-enter ng-enter-active\" |\n         * | 8. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-enter ng-enter-active\" |\n         * | 9. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n         * | 10. The doneCallback() callback is fired (if provided)                                       | class=\"my-animation\"                        |\n         *\n         * @param {DOMElement} element the element that will be the focus of the enter animation\n         * @param {DOMElement} parentElement the parent element of the element that will be the focus of the enter animation\n         * @param {DOMElement} afterElement the sibling element (which is the previous element) of the element that will be the focus of the enter animation\n         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n        */\n        enter : function(element, parentElement, afterElement, doneCallback) {\n          element = angular.element(element);\n          parentElement = prepareElement(parentElement);\n          afterElement = prepareElement(afterElement);\n\n          blockElementAnimations(element);\n          $delegate.enter(element, parentElement, afterElement);\n          $rootScope.$$postDigest(function() {\n            element = stripCommentsFromElement(element);\n            performAnimation('enter', 'ng-enter', element, parentElement, afterElement, noop, doneCallback);\n          });\n        },\n\n        /**\n         * @ngdoc method\n         * @name $animate#leave\n         * @kind function\n         *\n         * @description\n         * Runs the leave animation operation and, upon completion, removes the element from the DOM. Once\n         * the animation is started, the following CSS classes will be added for the duration of the animation:\n         *\n         * Below is a breakdown of each step that occurs during leave animation:\n         *\n         * | Animation Step                                                                               | What the element class attribute looks like |\n         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n         * | 1. $animate.leave(...) is called                                                             | class=\"my-animation\"                        |\n         * | 2. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n         * | 3. the .ng-leave class is added to the element                                               | class=\"my-animation ng-animate ng-leave\"    |\n         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-leave\"    |\n         * | 5. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-leave\"    |\n         * | 6. the .ng-leave-active and .ng-animate-active classes is added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-leave ng-leave-active\" |\n         * | 7. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-leave ng-leave-active\" |\n         * | 8. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n         * | 9. The element is removed from the DOM                                                       | ...                                         |\n         * | 10. The doneCallback() callback is fired (if provided)                                       | ...                                         |\n         *\n         * @param {DOMElement} element the element that will be the focus of the leave animation\n         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n        */\n        leave : function(element, doneCallback) {\n          element = angular.element(element);\n          cancelChildAnimations(element);\n          blockElementAnimations(element);\n          $rootScope.$$postDigest(function() {\n            performAnimation('leave', 'ng-leave', stripCommentsFromElement(element), null, null, function() {\n              $delegate.leave(element);\n            }, doneCallback);\n          });\n        },\n\n        /**\n         * @ngdoc method\n         * @name $animate#move\n         * @kind function\n         *\n         * @description\n         * Fires the move DOM operation. Just before the animation starts, the animate service will either append it into the parentElement container or\n         * add the element directly after the afterElement element if present. Then the move animation will be run. Once\n         * the animation is started, the following CSS classes will be added for the duration of the animation:\n         *\n         * Below is a breakdown of each step that occurs during move animation:\n         *\n         * | Animation Step                                                                               | What the element class attribute looks like |\n         * |----------------------------------------------------------------------------------------------|---------------------------------------------|\n         * | 1. $animate.move(...) is called                                                              | class=\"my-animation\"                        |\n         * | 2. element is moved into the parentElement element or beside the afterElement element        | class=\"my-animation\"                        |\n         * | 3. $animate runs any JavaScript-defined animations on the element                            | class=\"my-animation ng-animate\"             |\n         * | 4. the .ng-move class is added to the element                                                | class=\"my-animation ng-animate ng-move\"     |\n         * | 5. $animate scans the element styles to get the CSS transition/animation duration and delay  | class=\"my-animation ng-animate ng-move\"     |\n         * | 6. $animate waits for 10ms (this performs a reflow)                                          | class=\"my-animation ng-animate ng-move\"     |\n         * | 7. the .ng-move-active and .ng-animate-active classes is added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active ng-move ng-move-active\" |\n         * | 8. $animate waits for X milliseconds for the animation to complete                           | class=\"my-animation ng-animate ng-animate-active ng-move ng-move-active\" |\n         * | 9. The animation ends and all generated CSS classes are removed from the element             | class=\"my-animation\"                        |\n         * | 10. The doneCallback() callback is fired (if provided)                                       | class=\"my-animation\"                        |\n         *\n         * @param {DOMElement} element the element that will be the focus of the move animation\n         * @param {DOMElement} parentElement the parentElement element of the element that will be the focus of the move animation\n         * @param {DOMElement} afterElement the sibling element (which is the previous element) of the element that will be the focus of the move animation\n         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n        */\n        move : function(element, parentElement, afterElement, doneCallback) {\n          element = angular.element(element);\n          parentElement = prepareElement(parentElement);\n          afterElement = prepareElement(afterElement);\n\n          cancelChildAnimations(element);\n          blockElementAnimations(element);\n          $delegate.move(element, parentElement, afterElement);\n          $rootScope.$$postDigest(function() {\n            element = stripCommentsFromElement(element);\n            performAnimation('move', 'ng-move', element, parentElement, afterElement, noop, doneCallback);\n          });\n        },\n\n        /**\n         * @ngdoc method\n         * @name $animate#addClass\n         *\n         * @description\n         * Triggers a custom animation event based off the className variable and then attaches the className value to the element as a CSS class.\n         * Unlike the other animation methods, the animate service will suffix the className value with {@type -add} in order to provide\n         * the animate service the setup and active CSS classes in order to trigger the animation (this will be skipped if no CSS transitions\n         * or keyframes are defined on the -add or base CSS class).\n         *\n         * Below is a breakdown of each step that occurs during addClass animation:\n         *\n         * | Animation Step                                                                                 | What the element class attribute looks like |\n         * |------------------------------------------------------------------------------------------------|---------------------------------------------|\n         * | 1. $animate.addClass(element, 'super') is called                                               | class=\"my-animation\"                        |\n         * | 2. $animate runs any JavaScript-defined animations on the element                              | class=\"my-animation ng-animate\"             |\n         * | 3. the .super-add class are added to the element                                               | class=\"my-animation ng-animate super-add\"   |\n         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay    | class=\"my-animation ng-animate super-add\"   |\n         * | 5. $animate waits for 10ms (this performs a reflow)                                            | class=\"my-animation ng-animate super-add\"   |\n         * | 6. the .super, .super-add-active and .ng-animate-active classes are added (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active super super-add super-add-active\"          |\n         * | 7. $animate waits for X milliseconds for the animation to complete                             | class=\"my-animation super super-add super-add-active\"  |\n         * | 8. The animation ends and all generated CSS classes are removed from the element               | class=\"my-animation super\"                  |\n         * | 9. The super class is kept on the element                                                      | class=\"my-animation super\"                  |\n         * | 10. The doneCallback() callback is fired (if provided)                                         | class=\"my-animation super\"                  |\n         *\n         * @param {DOMElement} element the element that will be animated\n         * @param {string} className the CSS class that will be added to the element and then animated\n         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n        */\n        addClass : function(element, className, doneCallback) {\n          element = angular.element(element);\n          element = stripCommentsFromElement(element);\n          performAnimation('addClass', className, element, null, null, function() {\n            $delegate.addClass(element, className);\n          }, doneCallback);\n        },\n\n        /**\n         * @ngdoc method\n         * @name $animate#removeClass\n         *\n         * @description\n         * Triggers a custom animation event based off the className variable and then removes the CSS class provided by the className value\n         * from the element. Unlike the other animation methods, the animate service will suffix the className value with {@type -remove} in\n         * order to provide the animate service the setup and active CSS classes in order to trigger the animation (this will be skipped if\n         * no CSS transitions or keyframes are defined on the -remove or base CSS classes).\n         *\n         * Below is a breakdown of each step that occurs during removeClass animation:\n         *\n         * | Animation Step                                                                                | What the element class attribute looks like     |\n         * |-----------------------------------------------------------------------------------------------|---------------------------------------------|\n         * | 1. $animate.removeClass(element, 'super') is called                                           | class=\"my-animation super\"                  |\n         * | 2. $animate runs any JavaScript-defined animations on the element                             | class=\"my-animation super ng-animate\"       |\n         * | 3. the .super-remove class are added to the element                                           | class=\"my-animation super ng-animate super-remove\"|\n         * | 4. $animate scans the element styles to get the CSS transition/animation duration and delay   | class=\"my-animation super ng-animate super-remove\"   |\n         * | 5. $animate waits for 10ms (this performs a reflow)                                           | class=\"my-animation super ng-animate super-remove\"   |\n         * | 6. the .super-remove-active and .ng-animate-active classes are added and .super is removed (this triggers the CSS transition/animation) | class=\"my-animation ng-animate ng-animate-active super-remove super-remove-active\"          |\n         * | 7. $animate waits for X milliseconds for the animation to complete                            | class=\"my-animation ng-animate ng-animate-active super-remove super-remove-active\"   |\n         * | 8. The animation ends and all generated CSS classes are removed from the element              | class=\"my-animation\"                        |\n         * | 9. The doneCallback() callback is fired (if provided)                                         | class=\"my-animation\"                        |\n         *\n         *\n         * @param {DOMElement} element the element that will be animated\n         * @param {string} className the CSS class that will be animated and then removed from the element\n         * @param {function()=} doneCallback the callback function that will be called once the animation is complete\n        */\n        removeClass : function(element, className, doneCallback) {\n          element = angular.element(element);\n          element = stripCommentsFromElement(element);\n          performAnimation('removeClass', className, element, null, null, function() {\n            $delegate.removeClass(element, className);\n          }, doneCallback);\n        },\n\n          /**\n           *\n           * @ngdoc function\n           * @name $animate#setClass\n           * @function\n           * @description Adds and/or removes the given CSS classes to and from the element.\n           * Once complete, the done() callback will be fired (if provided).\n           * @param {DOMElement} element the element which will its CSS classes changed\n           *   removed from it\n           * @param {string} add the CSS classes which will be added to the element\n           * @param {string} remove the CSS class which will be removed from the element\n           * @param {Function=} done the callback function (if provided) that will be fired after the\n           *   CSS classes have been set on the element\n           */\n        setClass : function(element, add, remove, doneCallback) {\n          element = angular.element(element);\n          element = stripCommentsFromElement(element);\n          performAnimation('setClass', [add, remove], element, null, null, function() {\n            $delegate.setClass(element, add, remove);\n          }, doneCallback);\n        },\n\n        /**\n         * @ngdoc method\n         * @name $animate#enabled\n         * @kind function\n         *\n         * @param {boolean=} value If provided then set the animation on or off.\n         * @param {DOMElement=} element If provided then the element will be used to represent the enable/disable operation\n         * @return {boolean} Current animation state.\n         *\n         * @description\n         * Globally enables/disables animations.\n         *\n        */\n        enabled : function(value, element) {\n          switch(arguments.length) {\n            case 2:\n              if(value) {\n                cleanup(element);\n              } else {\n                var data = element.data(NG_ANIMATE_STATE) || {};\n                data.disabled = true;\n                element.data(NG_ANIMATE_STATE, data);\n              }\n            break;\n\n            case 1:\n              rootAnimateState.disabled = !value;\n            break;\n\n            default:\n              value = !rootAnimateState.disabled;\n            break;\n          }\n          return !!value;\n         }\n      };\n\n      /*\n        all animations call this shared animation triggering function internally.\n        The animationEvent variable refers to the JavaScript animation event that will be triggered\n        and the className value is the name of the animation that will be applied within the\n        CSS code. Element, parentElement and afterElement are provided DOM elements for the animation\n        and the onComplete callback will be fired once the animation is fully complete.\n      */\n      function performAnimation(animationEvent, className, element, parentElement, afterElement, domOperation, doneCallback) {\n\n        var runner = animationRunner(element, animationEvent, className);\n        if(!runner) {\n          fireDOMOperation();\n          fireBeforeCallbackAsync();\n          fireAfterCallbackAsync();\n          closeAnimation();\n          return;\n        }\n\n        className = runner.className;\n        var elementEvents = angular.element._data(runner.node);\n        elementEvents = elementEvents && elementEvents.events;\n\n        if (!parentElement) {\n          parentElement = afterElement ? afterElement.parent() : element.parent();\n        }\n\n        var ngAnimateState  = element.data(NG_ANIMATE_STATE) || {};\n        var runningAnimations     = ngAnimateState.active || {};\n        var totalActiveAnimations = ngAnimateState.totalActive || 0;\n        var lastAnimation         = ngAnimateState.last;\n\n        //only allow animations if the currently running animation is not structural\n        //or if there is no animation running at all\n        var skipAnimations;\n        if (runner.isClassBased) {\n          skipAnimations = ngAnimateState.running ||\n                           ngAnimateState.disabled ||\n                           (lastAnimation && !lastAnimation.isClassBased);\n        }\n\n        //skip the animation if animations are disabled, a parent is already being animated,\n        //the element is not currently attached to the document body or then completely close\n        //the animation if any matching animations are not found at all.\n        //NOTE: IE8 + IE9 should close properly (run closeAnimation()) in case an animation was found.\n        if (skipAnimations || animationsDisabled(element, parentElement)) {\n          fireDOMOperation();\n          fireBeforeCallbackAsync();\n          fireAfterCallbackAsync();\n          closeAnimation();\n          return;\n        }\n\n        var skipAnimation = false;\n        if(totalActiveAnimations > 0) {\n          var animationsToCancel = [];\n          if(!runner.isClassBased) {\n            if(animationEvent == 'leave' && runningAnimations['ng-leave']) {\n              skipAnimation = true;\n            } else {\n              //cancel all animations when a structural animation takes place\n              for(var klass in runningAnimations) {\n                animationsToCancel.push(runningAnimations[klass]);\n                cleanup(element, klass);\n              }\n              runningAnimations = {};\n              totalActiveAnimations = 0;\n            }\n          } else if(lastAnimation.event == 'setClass') {\n            animationsToCancel.push(lastAnimation);\n            cleanup(element, className);\n          }\n          else if(runningAnimations[className]) {\n            var current = runningAnimations[className];\n            if(current.event == animationEvent) {\n              skipAnimation = true;\n            } else {\n              animationsToCancel.push(current);\n              cleanup(element, className);\n            }\n          }\n\n          if(animationsToCancel.length > 0) {\n            forEach(animationsToCancel, function(operation) {\n              operation.cancel();\n            });\n          }\n        }\n\n        if(runner.isClassBased && !runner.isSetClassOperation && !skipAnimation) {\n          skipAnimation = (animationEvent == 'addClass') == element.hasClass(className); //opposite of XOR\n        }\n\n        if(skipAnimation) {\n          fireDOMOperation();\n          fireBeforeCallbackAsync();\n          fireAfterCallbackAsync();\n          fireDoneCallbackAsync();\n          return;\n        }\n\n        if(animationEvent == 'leave') {\n          //there's no need to ever remove the listener since the element\n          //will be removed (destroyed) after the leave animation ends or\n          //is cancelled midway\n          element.one('$destroy', function(e) {\n            var element = angular.element(this);\n            var state = element.data(NG_ANIMATE_STATE);\n            if(state) {\n              var activeLeaveAnimation = state.active['ng-leave'];\n              if(activeLeaveAnimation) {\n                activeLeaveAnimation.cancel();\n                cleanup(element, 'ng-leave');\n              }\n            }\n          });\n        }\n\n        //the ng-animate class does nothing, but it's here to allow for\n        //parent animations to find and cancel child animations when needed\n        element.addClass(NG_ANIMATE_CLASS_NAME);\n\n        var localAnimationCount = globalAnimationCounter++;\n        totalActiveAnimations++;\n        runningAnimations[className] = runner;\n\n        element.data(NG_ANIMATE_STATE, {\n          last : runner,\n          active : runningAnimations,\n          index : localAnimationCount,\n          totalActive : totalActiveAnimations\n        });\n\n        //first we run the before animations and when all of those are complete\n        //then we perform the DOM operation and run the next set of animations\n        fireBeforeCallbackAsync();\n        runner.before(function(cancelled) {\n          var data = element.data(NG_ANIMATE_STATE);\n          cancelled = cancelled ||\n                        !data || !data.active[className] ||\n                        (runner.isClassBased && data.active[className].event != animationEvent);\n\n          fireDOMOperation();\n          if(cancelled === true) {\n            closeAnimation();\n          } else {\n            fireAfterCallbackAsync();\n            runner.after(closeAnimation);\n          }\n        });\n\n        function fireDOMCallback(animationPhase) {\n          var eventName = '$animate:' + animationPhase;\n          if(elementEvents && elementEvents[eventName] && elementEvents[eventName].length > 0) {\n            $$asyncCallback(function() {\n              element.triggerHandler(eventName, {\n                event : animationEvent,\n                className : className\n              });\n            });\n          }\n        }\n\n        function fireBeforeCallbackAsync() {\n          fireDOMCallback('before');\n        }\n\n        function fireAfterCallbackAsync() {\n          fireDOMCallback('after');\n        }\n\n        function fireDoneCallbackAsync() {\n          fireDOMCallback('close');\n          if(doneCallback) {\n            $$asyncCallback(function() {\n              doneCallback();\n            });\n          }\n        }\n\n        //it is less complicated to use a flag than managing and canceling\n        //timeouts containing multiple callbacks.\n        function fireDOMOperation() {\n          if(!fireDOMOperation.hasBeenRun) {\n            fireDOMOperation.hasBeenRun = true;\n            domOperation();\n          }\n        }\n\n        function closeAnimation() {\n          if(!closeAnimation.hasBeenRun) {\n            closeAnimation.hasBeenRun = true;\n            var data = element.data(NG_ANIMATE_STATE);\n            if(data) {\n              /* only structural animations wait for reflow before removing an\n                 animation, but class-based animations don't. An example of this\n                 failing would be when a parent HTML tag has a ng-class attribute\n                 causing ALL directives below to skip animations during the digest */\n              if(runner && runner.isClassBased) {\n                cleanup(element, className);\n              } else {\n                $$asyncCallback(function() {\n                  var data = element.data(NG_ANIMATE_STATE) || {};\n                  if(localAnimationCount == data.index) {\n                    cleanup(element, className, animationEvent);\n                  }\n                });\n                element.data(NG_ANIMATE_STATE, data);\n              }\n            }\n            fireDoneCallbackAsync();\n          }\n        }\n      }\n\n      function cancelChildAnimations(element) {\n        var node = extractElementNode(element);\n        if (node) {\n          var nodes = angular.isFunction(node.getElementsByClassName) ?\n            node.getElementsByClassName(NG_ANIMATE_CLASS_NAME) :\n            node.querySelectorAll('.' + NG_ANIMATE_CLASS_NAME);\n          forEach(nodes, function(element) {\n            element = angular.element(element);\n            var data = element.data(NG_ANIMATE_STATE);\n            if(data && data.active) {\n              forEach(data.active, function(runner) {\n                runner.cancel();\n              });\n            }\n          });\n        }\n      }\n\n      function cleanup(element, className) {\n        if(isMatchingElement(element, $rootElement)) {\n          if(!rootAnimateState.disabled) {\n            rootAnimateState.running = false;\n            rootAnimateState.structural = false;\n          }\n        } else if(className) {\n          var data = element.data(NG_ANIMATE_STATE) || {};\n\n          var removeAnimations = className === true;\n          if(!removeAnimations && data.active && data.active[className]) {\n            data.totalActive--;\n            delete data.active[className];\n          }\n\n          if(removeAnimations || !data.totalActive) {\n            element.removeClass(NG_ANIMATE_CLASS_NAME);\n            element.removeData(NG_ANIMATE_STATE);\n          }\n        }\n      }\n\n      function animationsDisabled(element, parentElement) {\n        if (rootAnimateState.disabled) {\n          return true;\n        }\n\n        if (isMatchingElement(element, $rootElement)) {\n          return rootAnimateState.running;\n        }\n\n        var allowChildAnimations, parentRunningAnimation, hasParent;\n        do {\n          //the element did not reach the root element which means that it\n          //is not apart of the DOM. Therefore there is no reason to do\n          //any animations on it\n          if (parentElement.length === 0) break;\n\n          var isRoot = isMatchingElement(parentElement, $rootElement);\n          var state = isRoot ? rootAnimateState : (parentElement.data(NG_ANIMATE_STATE) || {});\n          if (state.disabled) {\n            return true;\n          }\n\n          //no matter what, for an animation to work it must reach the root element\n          //this implies that the element is attached to the DOM when the animation is run\n          if (isRoot) {\n            hasParent = true;\n          }\n\n          //once a flag is found that is strictly false then everything before\n          //it will be discarded and all child animations will be restricted\n          if (allowChildAnimations !== false) {\n            var animateChildrenFlag = parentElement.data(NG_ANIMATE_CHILDREN);\n            if(angular.isDefined(animateChildrenFlag)) {\n              allowChildAnimations = animateChildrenFlag;\n            }\n          }\n\n          parentRunningAnimation = parentRunningAnimation ||\n                                   state.running ||\n                                   (state.last && !state.last.isClassBased);\n        }\n        while(parentElement = parentElement.parent());\n\n        return !hasParent || (!allowChildAnimations && parentRunningAnimation);\n      }\n    }]);\n\n    $animateProvider.register('', ['$window', '$sniffer', '$timeout', '$$animateReflow',\n                           function($window,   $sniffer,   $timeout,   $$animateReflow) {\n      // Detect proper transitionend/animationend event names.\n      var CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\n      // If unprefixed events are not supported but webkit-prefixed are, use the latter.\n      // Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n      // Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n      // but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n      // Register both events in case `window.onanimationend` is not supported because of that,\n      // do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n      // Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n      // therefore there is no reason to test anymore for other vendor prefixes: http://caniuse.com/#search=transition\n      if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n        CSS_PREFIX = '-webkit-';\n        TRANSITION_PROP = 'WebkitTransition';\n        TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n      } else {\n        TRANSITION_PROP = 'transition';\n        TRANSITIONEND_EVENT = 'transitionend';\n      }\n\n      if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n        CSS_PREFIX = '-webkit-';\n        ANIMATION_PROP = 'WebkitAnimation';\n        ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n      } else {\n        ANIMATION_PROP = 'animation';\n        ANIMATIONEND_EVENT = 'animationend';\n      }\n\n      var DURATION_KEY = 'Duration';\n      var PROPERTY_KEY = 'Property';\n      var DELAY_KEY = 'Delay';\n      var ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\n      var NG_ANIMATE_PARENT_KEY = '$$ngAnimateKey';\n      var NG_ANIMATE_CSS_DATA_KEY = '$$ngAnimateCSS3Data';\n      var NG_ANIMATE_BLOCK_CLASS_NAME = 'ng-animate-block-transitions';\n      var ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\n      var CLOSING_TIME_BUFFER = 1.5;\n      var ONE_SECOND = 1000;\n\n      var lookupCache = {};\n      var parentCounter = 0;\n      var animationReflowQueue = [];\n      var cancelAnimationReflow;\n      function clearCacheAfterReflow() {\n        if (!cancelAnimationReflow) {\n          cancelAnimationReflow = $$animateReflow(function() {\n            animationReflowQueue = [];\n            cancelAnimationReflow = null;\n            lookupCache = {};\n          });\n        }\n      }\n\n      function afterReflow(element, callback) {\n        if(cancelAnimationReflow) {\n          cancelAnimationReflow();\n        }\n        animationReflowQueue.push(callback);\n        cancelAnimationReflow = $$animateReflow(function() {\n          forEach(animationReflowQueue, function(fn) {\n            fn();\n          });\n\n          animationReflowQueue = [];\n          cancelAnimationReflow = null;\n          lookupCache = {};\n        });\n      }\n\n      var closingTimer = null;\n      var closingTimestamp = 0;\n      var animationElementQueue = [];\n      function animationCloseHandler(element, totalTime) {\n        var node = extractElementNode(element);\n        element = angular.element(node);\n\n        //this item will be garbage collected by the closing\n        //animation timeout\n        animationElementQueue.push(element);\n\n        //but it may not need to cancel out the existing timeout\n        //if the timestamp is less than the previous one\n        var futureTimestamp = Date.now() + totalTime;\n        if(futureTimestamp <= closingTimestamp) {\n          return;\n        }\n\n        $timeout.cancel(closingTimer);\n\n        closingTimestamp = futureTimestamp;\n        closingTimer = $timeout(function() {\n          closeAllAnimations(animationElementQueue);\n          animationElementQueue = [];\n        }, totalTime, false);\n      }\n\n      function closeAllAnimations(elements) {\n        forEach(elements, function(element) {\n          var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);\n          if(elementData) {\n            (elementData.closeAnimationFn || noop)();\n          }\n        });\n      }\n\n      function getElementAnimationDetails(element, cacheKey) {\n        var data = cacheKey ? lookupCache[cacheKey] : null;\n        if(!data) {\n          var transitionDuration = 0;\n          var transitionDelay = 0;\n          var animationDuration = 0;\n          var animationDelay = 0;\n          var transitionDelayStyle;\n          var animationDelayStyle;\n          var transitionDurationStyle;\n          var transitionPropertyStyle;\n\n          //we want all the styles defined before and after\n          forEach(element, function(element) {\n            if (element.nodeType == ELEMENT_NODE) {\n              var elementStyles = $window.getComputedStyle(element) || {};\n\n              transitionDurationStyle = elementStyles[TRANSITION_PROP + DURATION_KEY];\n\n              transitionDuration = Math.max(parseMaxTime(transitionDurationStyle), transitionDuration);\n\n              transitionPropertyStyle = elementStyles[TRANSITION_PROP + PROPERTY_KEY];\n\n              transitionDelayStyle = elementStyles[TRANSITION_PROP + DELAY_KEY];\n\n              transitionDelay  = Math.max(parseMaxTime(transitionDelayStyle), transitionDelay);\n\n              animationDelayStyle = elementStyles[ANIMATION_PROP + DELAY_KEY];\n\n              animationDelay   = Math.max(parseMaxTime(animationDelayStyle), animationDelay);\n\n              var aDuration  = parseMaxTime(elementStyles[ANIMATION_PROP + DURATION_KEY]);\n\n              if(aDuration > 0) {\n                aDuration *= parseInt(elementStyles[ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY], 10) || 1;\n              }\n\n              animationDuration = Math.max(aDuration, animationDuration);\n            }\n          });\n          data = {\n            total : 0,\n            transitionPropertyStyle: transitionPropertyStyle,\n            transitionDurationStyle: transitionDurationStyle,\n            transitionDelayStyle: transitionDelayStyle,\n            transitionDelay: transitionDelay,\n            transitionDuration: transitionDuration,\n            animationDelayStyle: animationDelayStyle,\n            animationDelay: animationDelay,\n            animationDuration: animationDuration\n          };\n          if(cacheKey) {\n            lookupCache[cacheKey] = data;\n          }\n        }\n        return data;\n      }\n\n      function parseMaxTime(str) {\n        var maxValue = 0;\n        var values = angular.isString(str) ?\n          str.split(/\\s*,\\s*/) :\n          [];\n        forEach(values, function(value) {\n          maxValue = Math.max(parseFloat(value) || 0, maxValue);\n        });\n        return maxValue;\n      }\n\n      function getCacheKey(element) {\n        var parentElement = element.parent();\n        var parentID = parentElement.data(NG_ANIMATE_PARENT_KEY);\n        if(!parentID) {\n          parentElement.data(NG_ANIMATE_PARENT_KEY, ++parentCounter);\n          parentID = parentCounter;\n        }\n        return parentID + '-' + extractElementNode(element).getAttribute('class');\n      }\n\n      function animateSetup(animationEvent, element, className, calculationDecorator) {\n        var cacheKey = getCacheKey(element);\n        var eventCacheKey = cacheKey + ' ' + className;\n        var itemIndex = lookupCache[eventCacheKey] ? ++lookupCache[eventCacheKey].total : 0;\n\n        var stagger = {};\n        if(itemIndex > 0) {\n          var staggerClassName = className + '-stagger';\n          var staggerCacheKey = cacheKey + ' ' + staggerClassName;\n          var applyClasses = !lookupCache[staggerCacheKey];\n\n          applyClasses && element.addClass(staggerClassName);\n\n          stagger = getElementAnimationDetails(element, staggerCacheKey);\n\n          applyClasses && element.removeClass(staggerClassName);\n        }\n\n        /* the animation itself may need to add/remove special CSS classes\n         * before calculating the anmation styles */\n        calculationDecorator = calculationDecorator ||\n                               function(fn) { return fn(); };\n\n        element.addClass(className);\n\n        var formerData = element.data(NG_ANIMATE_CSS_DATA_KEY) || {};\n\n        var timings = calculationDecorator(function() {\n          return getElementAnimationDetails(element, eventCacheKey);\n        });\n\n        var transitionDuration = timings.transitionDuration;\n        var animationDuration = timings.animationDuration;\n        if(transitionDuration === 0 && animationDuration === 0) {\n          element.removeClass(className);\n          return false;\n        }\n\n        element.data(NG_ANIMATE_CSS_DATA_KEY, {\n          running : formerData.running || 0,\n          itemIndex : itemIndex,\n          stagger : stagger,\n          timings : timings,\n          closeAnimationFn : noop\n        });\n\n        //temporarily disable the transition so that the enter styles\n        //don't animate twice (this is here to avoid a bug in Chrome/FF).\n        var isCurrentlyAnimating = formerData.running > 0 || animationEvent == 'setClass';\n        if(transitionDuration > 0) {\n          blockTransitions(element, className, isCurrentlyAnimating);\n        }\n\n        //staggering keyframe animations work by adjusting the `animation-delay` CSS property\n        //on the given element, however, the delay value can only calculated after the reflow\n        //since by that time $animate knows how many elements are being animated. Therefore,\n        //until the reflow occurs the element needs to be blocked (where the keyframe animation\n        //is set to `none 0s`). This blocking mechanism should only be set for when a stagger\n        //animation is detected and when the element item index is greater than 0.\n        if(animationDuration > 0 && stagger.animationDelay > 0 && stagger.animationDuration === 0) {\n          blockKeyframeAnimations(element);\n        }\n\n        return true;\n      }\n\n      function isStructuralAnimation(className) {\n        return className == 'ng-enter' || className == 'ng-move' || className == 'ng-leave';\n      }\n\n      function blockTransitions(element, className, isAnimating) {\n        if(isStructuralAnimation(className) || !isAnimating) {\n          extractElementNode(element).style[TRANSITION_PROP + PROPERTY_KEY] = 'none';\n        } else {\n          element.addClass(NG_ANIMATE_BLOCK_CLASS_NAME);\n        }\n      }\n\n      function blockKeyframeAnimations(element) {\n        extractElementNode(element).style[ANIMATION_PROP] = 'none 0s';\n      }\n\n      function unblockTransitions(element, className) {\n        var prop = TRANSITION_PROP + PROPERTY_KEY;\n        var node = extractElementNode(element);\n        if(node.style[prop] && node.style[prop].length > 0) {\n          node.style[prop] = '';\n        }\n        element.removeClass(NG_ANIMATE_BLOCK_CLASS_NAME);\n      }\n\n      function unblockKeyframeAnimations(element) {\n        var prop = ANIMATION_PROP;\n        var node = extractElementNode(element);\n        if(node.style[prop] && node.style[prop].length > 0) {\n          node.style[prop] = '';\n        }\n      }\n\n      function animateRun(animationEvent, element, className, activeAnimationComplete) {\n        var node = extractElementNode(element);\n        var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);\n        if(node.getAttribute('class').indexOf(className) == -1 || !elementData) {\n          activeAnimationComplete();\n          return;\n        }\n\n        var activeClassName = '';\n        forEach(className.split(' '), function(klass, i) {\n          activeClassName += (i > 0 ? ' ' : '') + klass + '-active';\n        });\n\n        var stagger = elementData.stagger;\n        var timings = elementData.timings;\n        var itemIndex = elementData.itemIndex;\n        var maxDuration = Math.max(timings.transitionDuration, timings.animationDuration);\n        var maxDelay = Math.max(timings.transitionDelay, timings.animationDelay);\n        var maxDelayTime = maxDelay * ONE_SECOND;\n\n        var startTime = Date.now();\n        var css3AnimationEvents = ANIMATIONEND_EVENT + ' ' + TRANSITIONEND_EVENT;\n\n        var style = '', appliedStyles = [];\n        if(timings.transitionDuration > 0) {\n          var propertyStyle = timings.transitionPropertyStyle;\n          if(propertyStyle.indexOf('all') == -1) {\n            style += CSS_PREFIX + 'transition-property: ' + propertyStyle + ';';\n            style += CSS_PREFIX + 'transition-duration: ' + timings.transitionDurationStyle + ';';\n            appliedStyles.push(CSS_PREFIX + 'transition-property');\n            appliedStyles.push(CSS_PREFIX + 'transition-duration');\n          }\n        }\n\n        if(itemIndex > 0) {\n          if(stagger.transitionDelay > 0 && stagger.transitionDuration === 0) {\n            var delayStyle = timings.transitionDelayStyle;\n            style += CSS_PREFIX + 'transition-delay: ' +\n                     prepareStaggerDelay(delayStyle, stagger.transitionDelay, itemIndex) + '; ';\n            appliedStyles.push(CSS_PREFIX + 'transition-delay');\n          }\n\n          if(stagger.animationDelay > 0 && stagger.animationDuration === 0) {\n            style += CSS_PREFIX + 'animation-delay: ' +\n                     prepareStaggerDelay(timings.animationDelayStyle, stagger.animationDelay, itemIndex) + '; ';\n            appliedStyles.push(CSS_PREFIX + 'animation-delay');\n          }\n        }\n\n        if(appliedStyles.length > 0) {\n          //the element being animated may sometimes contain comment nodes in\n          //the jqLite object, so we're safe to use a single variable to house\n          //the styles since there is always only one element being animated\n          var oldStyle = node.getAttribute('style') || '';\n          node.setAttribute('style', oldStyle + '; ' + style);\n        }\n\n        element.on(css3AnimationEvents, onAnimationProgress);\n        element.addClass(activeClassName);\n        elementData.closeAnimationFn = function() {\n          onEnd();\n          activeAnimationComplete();\n        };\n\n        var staggerTime       = itemIndex * (Math.max(stagger.animationDelay, stagger.transitionDelay) || 0);\n        var animationTime     = (maxDelay + maxDuration) * CLOSING_TIME_BUFFER;\n        var totalTime         = (staggerTime + animationTime) * ONE_SECOND;\n\n        elementData.running++;\n        animationCloseHandler(element, totalTime);\n        return onEnd;\n\n        // This will automatically be called by $animate so\n        // there is no need to attach this internally to the\n        // timeout done method.\n        function onEnd(cancelled) {\n          element.off(css3AnimationEvents, onAnimationProgress);\n          element.removeClass(activeClassName);\n          animateClose(element, className);\n          var node = extractElementNode(element);\n          for (var i in appliedStyles) {\n            node.style.removeProperty(appliedStyles[i]);\n          }\n        }\n\n        function onAnimationProgress(event) {\n          event.stopPropagation();\n          var ev = event.originalEvent || event;\n          var timeStamp = ev.$manualTimeStamp || ev.timeStamp || Date.now();\n\n          /* Firefox (or possibly just Gecko) likes to not round values up\n           * when a ms measurement is used for the animation */\n          var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\n          /* $manualTimeStamp is a mocked timeStamp value which is set\n           * within browserTrigger(). This is only here so that tests can\n           * mock animations properly. Real events fallback to event.timeStamp,\n           * or, if they don't, then a timeStamp is automatically created for them.\n           * We're checking to see if the timeStamp surpasses the expected delay,\n           * but we're using elapsedTime instead of the timeStamp on the 2nd\n           * pre-condition since animations sometimes close off early */\n          if(Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n            activeAnimationComplete();\n          }\n        }\n      }\n\n      function prepareStaggerDelay(delayStyle, staggerDelay, index) {\n        var style = '';\n        forEach(delayStyle.split(','), function(val, i) {\n          style += (i > 0 ? ',' : '') +\n                   (index * staggerDelay + parseInt(val, 10)) + 's';\n        });\n        return style;\n      }\n\n      function animateBefore(animationEvent, element, className, calculationDecorator) {\n        if(animateSetup(animationEvent, element, className, calculationDecorator)) {\n          return function(cancelled) {\n            cancelled && animateClose(element, className);\n          };\n        }\n      }\n\n      function animateAfter(animationEvent, element, className, afterAnimationComplete) {\n        if(element.data(NG_ANIMATE_CSS_DATA_KEY)) {\n          return animateRun(animationEvent, element, className, afterAnimationComplete);\n        } else {\n          animateClose(element, className);\n          afterAnimationComplete();\n        }\n      }\n\n      function animate(animationEvent, element, className, animationComplete) {\n        //If the animateSetup function doesn't bother returning a\n        //cancellation function then it means that there is no animation\n        //to perform at all\n        var preReflowCancellation = animateBefore(animationEvent, element, className);\n        if (!preReflowCancellation) {\n          clearCacheAfterReflow();\n          animationComplete();\n          return;\n        }\n\n        //There are two cancellation functions: one is before the first\n        //reflow animation and the second is during the active state\n        //animation. The first function will take care of removing the\n        //data from the element which will not make the 2nd animation\n        //happen in the first place\n        var cancel = preReflowCancellation;\n        afterReflow(element, function() {\n          unblockTransitions(element, className);\n          unblockKeyframeAnimations(element);\n          //once the reflow is complete then we point cancel to\n          //the new cancellation function which will remove all of the\n          //animation properties from the active animation\n          cancel = animateAfter(animationEvent, element, className, animationComplete);\n        });\n\n        return function(cancelled) {\n          (cancel || noop)(cancelled);\n        };\n      }\n\n      function animateClose(element, className) {\n        element.removeClass(className);\n        var data = element.data(NG_ANIMATE_CSS_DATA_KEY);\n        if(data) {\n          if(data.running) {\n            data.running--;\n          }\n          if(!data.running || data.running === 0) {\n            element.removeData(NG_ANIMATE_CSS_DATA_KEY);\n          }\n        }\n      }\n\n      return {\n        enter : function(element, animationCompleted) {\n          return animate('enter', element, 'ng-enter', animationCompleted);\n        },\n\n        leave : function(element, animationCompleted) {\n          return animate('leave', element, 'ng-leave', animationCompleted);\n        },\n\n        move : function(element, animationCompleted) {\n          return animate('move', element, 'ng-move', animationCompleted);\n        },\n\n        beforeSetClass : function(element, add, remove, animationCompleted) {\n          var className = suffixClasses(remove, '-remove') + ' ' +\n                          suffixClasses(add, '-add');\n          var cancellationMethod = animateBefore('setClass', element, className, function(fn) {\n            /* when classes are removed from an element then the transition style\n             * that is applied is the transition defined on the element without the\n             * CSS class being there. This is how CSS3 functions outside of ngAnimate.\n             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */\n            var klass = element.attr('class');\n            element.removeClass(remove);\n            element.addClass(add);\n            var timings = fn();\n            element.attr('class', klass);\n            return timings;\n          });\n\n          if(cancellationMethod) {\n            afterReflow(element, function() {\n              unblockTransitions(element, className);\n              unblockKeyframeAnimations(element);\n              animationCompleted();\n            });\n            return cancellationMethod;\n          }\n          clearCacheAfterReflow();\n          animationCompleted();\n        },\n\n        beforeAddClass : function(element, className, animationCompleted) {\n          var cancellationMethod = animateBefore('addClass', element, suffixClasses(className, '-add'), function(fn) {\n\n            /* when a CSS class is added to an element then the transition style that\n             * is applied is the transition defined on the element when the CSS class\n             * is added at the time of the animation. This is how CSS3 functions\n             * outside of ngAnimate. */\n            element.addClass(className);\n            var timings = fn();\n            element.removeClass(className);\n            return timings;\n          });\n\n          if(cancellationMethod) {\n            afterReflow(element, function() {\n              unblockTransitions(element, className);\n              unblockKeyframeAnimations(element);\n              animationCompleted();\n            });\n            return cancellationMethod;\n          }\n          clearCacheAfterReflow();\n          animationCompleted();\n        },\n\n        setClass : function(element, add, remove, animationCompleted) {\n          remove = suffixClasses(remove, '-remove');\n          add = suffixClasses(add, '-add');\n          var className = remove + ' ' + add;\n          return animateAfter('setClass', element, className, animationCompleted);\n        },\n\n        addClass : function(element, className, animationCompleted) {\n          return animateAfter('addClass', element, suffixClasses(className, '-add'), animationCompleted);\n        },\n\n        beforeRemoveClass : function(element, className, animationCompleted) {\n          var cancellationMethod = animateBefore('removeClass', element, suffixClasses(className, '-remove'), function(fn) {\n            /* when classes are removed from an element then the transition style\n             * that is applied is the transition defined on the element without the\n             * CSS class being there. This is how CSS3 functions outside of ngAnimate.\n             * http://plnkr.co/edit/j8OzgTNxHTb4n3zLyjGW?p=preview */\n            var klass = element.attr('class');\n            element.removeClass(className);\n            var timings = fn();\n            element.attr('class', klass);\n            return timings;\n          });\n\n          if(cancellationMethod) {\n            afterReflow(element, function() {\n              unblockTransitions(element, className);\n              unblockKeyframeAnimations(element);\n              animationCompleted();\n            });\n            return cancellationMethod;\n          }\n          animationCompleted();\n        },\n\n        removeClass : function(element, className, animationCompleted) {\n          return animateAfter('removeClass', element, suffixClasses(className, '-remove'), animationCompleted);\n        }\n      };\n\n      function suffixClasses(classes, suffix) {\n        var className = '';\n        classes = angular.isArray(classes) ? classes : classes.split(/\\s+/);\n        forEach(classes, function(klass, i) {\n          if(klass && klass.length > 0) {\n            className += (i > 0 ? ' ' : '') + klass + suffix;\n          }\n        });\n        return className;\n      }\n    }]);\n  }]);\n\n\n})(window, window.angular);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular-animate/angular-animate.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * @license AngularJS v1.2.29\n * (c) 2010-2014 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, document, undefined) {'use strict';\n\n/**\n * @description\n *\n * This object provides a utility for producing rich Error messages within\n * Angular. It can be called as follows:\n *\n * var exampleMinErr = minErr('example');\n * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);\n *\n * The above creates an instance of minErr in the example namespace. The\n * resulting error will have a namespaced error code of example.one.  The\n * resulting error will replace {0} with the value of foo, and {1} with the\n * value of bar. The object is not restricted in the number of arguments it can\n * take.\n *\n * If fewer arguments are specified than necessary for interpolation, the extra\n * interpolation markers will be preserved in the final string.\n *\n * Since data will be parsed statically during a build step, some restrictions\n * are applied with respect to how minErr instances are created and called.\n * Instances should have names of the form namespaceMinErr for a minErr created\n * using minErr('namespace') . Error codes, namespaces and template strings\n * should all be static strings, not variables or general expressions.\n *\n * @param {string} module The namespace to use for the new minErr instance.\n * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance\n */\n\nfunction minErr(module) {\n  return function () {\n    var code = arguments[0],\n      prefix = '[' + (module ? module + ':' : '') + code + '] ',\n      template = arguments[1],\n      templateArgs = arguments,\n      stringify = function (obj) {\n        if (typeof obj === 'function') {\n          return obj.toString().replace(/ \\{[\\s\\S]*$/, '');\n        } else if (typeof obj === 'undefined') {\n          return 'undefined';\n        } else if (typeof obj !== 'string') {\n          return JSON.stringify(obj);\n        }\n        return obj;\n      },\n      message, i;\n\n    message = prefix + template.replace(/\\{\\d+\\}/g, function (match) {\n      var index = +match.slice(1, -1), arg;\n\n      if (index + 2 < templateArgs.length) {\n        arg = templateArgs[index + 2];\n        if (typeof arg === 'function') {\n          return arg.toString().replace(/ ?\\{[\\s\\S]*$/, '');\n        } else if (typeof arg === 'undefined') {\n          return 'undefined';\n        } else if (typeof arg !== 'string') {\n          return toJson(arg);\n        }\n        return arg;\n      }\n      return match;\n    });\n\n    message = message + '\\nhttp://errors.angularjs.org/1.2.29/' +\n      (module ? module + '/' : '') + code;\n    for (i = 2; i < arguments.length; i++) {\n      message = message + (i == 2 ? '?' : '&') + 'p' + (i-2) + '=' +\n        encodeURIComponent(stringify(arguments[i]));\n    }\n\n    return new Error(message);\n  };\n}\n\n/* We need to tell jshint what variables are being exported */\n/* global angular: true,\n    msie: true,\n    jqLite: true,\n    jQuery: true,\n    slice: true,\n    push: true,\n    toString: true,\n    ngMinErr: true,\n    angularModule: true,\n    nodeName_: true,\n    uid: true,\n    VALIDITY_STATE_PROPERTY: true,\n\n    lowercase: true,\n    uppercase: true,\n    manualLowercase: true,\n    manualUppercase: true,\n    nodeName_: true,\n    isArrayLike: true,\n    forEach: true,\n    sortedKeys: true,\n    forEachSorted: true,\n    reverseParams: true,\n    nextUid: true,\n    setHashKey: true,\n    extend: true,\n    int: true,\n    inherit: true,\n    noop: true,\n    identity: true,\n    valueFn: true,\n    isUndefined: true,\n    isDefined: true,\n    isObject: true,\n    isString: true,\n    isNumber: true,\n    isDate: true,\n    isArray: true,\n    isFunction: true,\n    isRegExp: true,\n    isWindow: true,\n    isScope: true,\n    isFile: true,\n    isBlob: true,\n    isBoolean: true,\n    isPromiseLike: true,\n    trim: true,\n    isElement: true,\n    makeMap: true,\n    map: true,\n    size: true,\n    includes: true,\n    indexOf: true,\n    arrayRemove: true,\n    isLeafNode: true,\n    copy: true,\n    shallowCopy: true,\n    equals: true,\n    csp: true,\n    concat: true,\n    sliceArgs: true,\n    bind: true,\n    toJsonReplacer: true,\n    toJson: true,\n    fromJson: true,\n    toBoolean: true,\n    startingTag: true,\n    tryDecodeURIComponent: true,\n    parseKeyValue: true,\n    toKeyValue: true,\n    encodeUriSegment: true,\n    encodeUriQuery: true,\n    angularInit: true,\n    bootstrap: true,\n    snake_case: true,\n    bindJQuery: true,\n    assertArg: true,\n    assertArgFn: true,\n    assertNotHasOwnProperty: true,\n    getter: true,\n    getBlockElements: true,\n    hasOwnProperty: true,\n*/\n\n////////////////////////////////////\n\n/**\n * @ngdoc module\n * @name ng\n * @module ng\n * @description\n *\n * # ng (core module)\n * The ng module is loaded by default when an AngularJS application is started. The module itself\n * contains the essential components for an AngularJS application to function. The table below\n * lists a high level breakdown of each of the services/factories, filters, directives and testing\n * components available within this core module.\n *\n * <div doc-module-components=\"ng\"></div>\n */\n\n// The name of a form control's ValidityState property.\n// This is used so that it's possible for internal tests to create mock ValidityStates.\nvar VALIDITY_STATE_PROPERTY = 'validity';\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @module ng\n * @kind function\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @module ng\n * @kind function\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  /* jshint bitwise: false */\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n};\nvar manualUppercase = function(s) {\n  /* jshint bitwise: false */\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives.\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar\n    msie,             // holds major version number for IE, or NaN if UA is not IE.\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n    ngMinErr          = minErr('ng'),\n\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    nodeName_,\n    uid               = ['0', '0', '0'];\n\n/**\n * IE 11 changed the format of the UserAgent string.\n * See http://msdn.microsoft.com/en-us/library/ms537503.aspx\n */\nmsie = int((/msie (\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);\nif (isNaN(msie)) {\n  msie = int((/trident\\/.*; rv:(\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]);\n}\n\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n *                   String ...)\n */\nfunction isArrayLike(obj) {\n  if (obj == null || isWindow(obj)) {\n    return false;\n  }\n\n  var length = obj.length;\n\n  if (obj.nodeType === 1 && length) {\n    return true;\n  }\n\n  return isString(obj) || isArray(obj) || length === 0 ||\n         typeof length === 'number' && length > 0 && (length - 1) in obj;\n}\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @module ng\n * @kind function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\n * is the value of an object property or an array element and `key` is the object property key or\n * array element index. Specifying a `context` for the function is optional.\n *\n * It is worth noting that `.forEach` does not iterate over inherited properties because it filters\n * using the `hasOwnProperty` method.\n *\n   ```js\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key) {\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender: male']);\n   ```\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\nfunction forEach(obj, iterator, context) {\n  var key;\n  if (obj) {\n    if (isFunction(obj)) {\n      for (key in obj) {\n        // Need to check if hasOwnProperty exists,\n        // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\n        if (key != 'prototype' && key != 'length' && key != 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    } else if (isArray(obj) || isArrayLike(obj)) {\n      for (key = 0; key < obj.length; key++) {\n        iterator.call(context, obj[key], key);\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n        obj.forEach(iterator, context);\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction sortedKeys(obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n  return keys.sort();\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = sortedKeys(obj);\n  for ( var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) { iteratorFn(key, value); };\n}\n\n/**\n * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric\n * characters such as '012ABC'. The reason why we are not using simply a number counter is that\n * the number string gets longer over time, and it can also overflow, where as the nextId\n * will grow much slower, it is a string, and it will never overflow.\n *\n * @returns {string} an unique alpha-numeric string\n */\nfunction nextUid() {\n  var index = uid.length;\n  var digit;\n\n  while(index) {\n    index--;\n    digit = uid[index].charCodeAt(0);\n    if (digit == 57 /*'9'*/) {\n      uid[index] = 'A';\n      return uid.join('');\n    }\n    if (digit == 90  /*'Z'*/) {\n      uid[index] = '0';\n    } else {\n      uid[index] = String.fromCharCode(digit + 1);\n      return uid.join('');\n    }\n  }\n  uid.unshift('0');\n  return uid.join('');\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object\n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  }\n  else {\n    delete obj.$$hashKey;\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @module ng\n * @kind function\n *\n * @description\n * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects.\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  var h = dst.$$hashKey;\n  forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      forEach(obj, function(value, key) {\n        dst[key] = value;\n      });\n    }\n  });\n\n  setHashKey(dst,h);\n  return dst;\n}\n\nfunction int(str) {\n  return parseInt(str, 10);\n}\n\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, {prototype:parent}))(), extra);\n}\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @module ng\n * @kind function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   ```js\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   ```\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @module ng\n * @kind function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   ```js\n     function transformer(transformationFn, value) {\n       return (transformationFn || angular.identity)(value);\n     };\n   ```\n  * @param {*} value to be returned.\n  * @returns {*} the value passed in.\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function() {return value;};}\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value){return typeof value === 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value){return typeof value !== 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects. Note that JavaScript arrays are objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value){return value != null && typeof value === 'object';}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value){return typeof value === 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value){return typeof value === 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is an `Array`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nvar isArray = (function() {\n  if (!isFunction(Array.isArray)) {\n    return function(value) {\n      return toString.call(value) === '[object Array]';\n    };\n  }\n  return Array.isArray;\n})();\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value){return typeof value === 'function';}\n\n\n/**\n * Determines if a value is a regular expression object.\n *\n * @private\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `RegExp`.\n */\nfunction isRegExp(value) {\n  return toString.call(value) === '[object RegExp]';\n}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.document && obj.location && obj.alert && obj.setInterval;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.call(obj) === '[object File]';\n}\n\n\nfunction isBlob(obj) {\n  return toString.call(obj) === '[object Blob]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\n\nfunction isPromiseLike(obj) {\n  return obj && isFunction(obj.then);\n}\n\n\nvar trim = (function() {\n  // native trim is way faster: http://jsperf.com/angular-trim-test\n  // but IE doesn't have it... :-(\n  // TODO: we should move this into IE/ES5 polyfill\n  if (!String.prototype.trim) {\n    return function(value) {\n      return isString(value) ? value.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') : value;\n    };\n  }\n  return function(value) {\n    return isString(value) ? value.trim() : value;\n  };\n})();\n\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @module ng\n * @kind function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return !!(node &&\n    (node.nodeName  // we are a direct element\n    || (node.prop && node.attr && node.find)));  // we have an on and find method part of jQuery API\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str) {\n  var obj = {}, items = str.split(\",\"), i;\n  for ( i = 0; i < items.length; i++ )\n    obj[ items[i] ] = true;\n  return obj;\n}\n\n\nif (msie < 9) {\n  nodeName_ = function(element) {\n    element = element.nodeName ? element : element[0];\n    return (element.scopeName && element.scopeName != 'HTML')\n      ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;\n  };\n} else {\n  nodeName_ = function(element) {\n    return element.nodeName ? element.nodeName : element[0].nodeName;\n  };\n}\n\n\nfunction map(obj, iterator, context) {\n  var results = [];\n  forEach(obj, function(value, index, list) {\n    results.push(iterator.call(context, value, index, list));\n  });\n  return results;\n}\n\n\n/**\n * @description\n * Determines the number of elements in an array, the number of properties an object has, or\n * the length of a string.\n *\n * Note: This function is used to augment the Object type in Angular expressions. See\n * {@link angular.Object} for more information about Angular arrays.\n *\n * @param {Object|Array|string} obj Object, array, or string to inspect.\n * @param {boolean} [ownPropsOnly=false] Count only \"own\" properties in an object\n * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.\n */\nfunction size(obj, ownPropsOnly) {\n  var count = 0, key;\n\n  if (isArray(obj) || isString(obj)) {\n    return obj.length;\n  } else if (isObject(obj)) {\n    for (key in obj)\n      if (!ownPropsOnly || obj.hasOwnProperty(key))\n        count++;\n  }\n\n  return count;\n}\n\n\nfunction includes(array, obj) {\n  return indexOf(array, obj) != -1;\n}\n\nfunction indexOf(array, obj) {\n  if (array.indexOf) return array.indexOf(obj);\n\n  for (var i = 0; i < array.length; i++) {\n    if (obj === array[i]) return i;\n  }\n  return -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = indexOf(array, value);\n  if (index >=0)\n    array.splice(index, 1);\n  return value;\n}\n\nfunction isLeafNode (node) {\n  if (node) {\n    switch (node.nodeName) {\n    case \"OPTION\":\n    case \"PRE\":\n    case \"TITLE\":\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @module ng\n * @kind function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for array) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.\n * * If `source` is identical to 'destination' an exception will be thrown.\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n *\n * @example\n <example module=\"copyExample\">\n <file name=\"index.html\">\n <div ng-controller=\"ExampleController\">\n <form novalidate class=\"simple-form\">\n Name: <input type=\"text\" ng-model=\"user.name\" /><br />\n E-mail: <input type=\"email\" ng-model=\"user.email\" /><br />\n Gender: <input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male\n <input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female<br />\n <button ng-click=\"reset()\">RESET</button>\n <button ng-click=\"update(user)\">SAVE</button>\n </form>\n <pre>form = {{user | json}}</pre>\n <pre>master = {{master | json}}</pre>\n </div>\n\n <script>\n  angular.module('copyExample', [])\n    .controller('ExampleController', ['$scope', function($scope) {\n      $scope.master= {};\n\n      $scope.update = function(user) {\n        // Example with 1 argument\n        $scope.master= angular.copy(user);\n      };\n\n      $scope.reset = function() {\n        // Example with 2 arguments\n        angular.copy($scope.master, $scope.user);\n      };\n\n      $scope.reset();\n    }]);\n </script>\n </file>\n </example>\n */\nfunction copy(source, destination, stackSource, stackDest) {\n  if (isWindow(source) || isScope(source)) {\n    throw ngMinErr('cpws',\n      \"Can't copy! Making copies of Window or Scope instances is not supported.\");\n  }\n\n  if (!destination) {\n    destination = source;\n    if (source) {\n      if (isArray(source)) {\n        destination = copy(source, [], stackSource, stackDest);\n      } else if (isDate(source)) {\n        destination = new Date(source.getTime());\n      } else if (isRegExp(source)) {\n        destination = new RegExp(source.source, source.toString().match(/[^\\/]*$/)[0]);\n        destination.lastIndex = source.lastIndex;\n      } else if (isObject(source)) {\n        destination = copy(source, {}, stackSource, stackDest);\n      }\n    }\n  } else {\n    if (source === destination) throw ngMinErr('cpi',\n      \"Can't copy! Source and destination are identical.\");\n\n    stackSource = stackSource || [];\n    stackDest = stackDest || [];\n\n    if (isObject(source)) {\n      var index = indexOf(stackSource, source);\n      if (index !== -1) return stackDest[index];\n\n      stackSource.push(source);\n      stackDest.push(destination);\n    }\n\n    var result;\n    if (isArray(source)) {\n      destination.length = 0;\n      for ( var i = 0; i < source.length; i++) {\n        result = copy(source[i], null, stackSource, stackDest);\n        if (isObject(source[i])) {\n          stackSource.push(source[i]);\n          stackDest.push(result);\n        }\n        destination.push(result);\n      }\n    } else {\n      var h = destination.$$hashKey;\n      if (isArray(destination)) {\n        destination.length = 0;\n      } else {\n        forEach(destination, function(value, key) {\n          delete destination[key];\n        });\n      }\n      for ( var key in source) {\n        result = copy(source[key], null, stackSource, stackDest);\n        if (isObject(source[key])) {\n          stackSource.push(source[key]);\n          stackDest.push(result);\n        }\n        destination[key] = result;\n      }\n      setHashKey(destination,h);\n    }\n\n  }\n  return destination;\n}\n\n/**\n * Creates a shallow copy of an object, an array or a primitive\n */\nfunction shallowCopy(src, dst) {\n  if (isArray(src)) {\n    dst = dst || [];\n\n    for ( var i = 0; i < src.length; i++) {\n      dst[i] = src[i];\n    }\n  } else if (isObject(src)) {\n    dst = dst || {};\n\n    for (var key in src) {\n      if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst || src;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @module ng\n * @kind function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, regular\n * expressions, arrays and objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `angular.equals`.\n * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)\n * * Both values represent the same regular expression (In JavaScript,\n *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\n *   representation matches).\n *\n * During a property comparison, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 == t2) {\n    if (t1 == 'object') {\n      if (isArray(o1)) {\n        if (!isArray(o2)) return false;\n        if ((length = o1.length) == o2.length) {\n          for(key=0; key<length; key++) {\n            if (!equals(o1[key], o2[key])) return false;\n          }\n          return true;\n        }\n      } else if (isDate(o1)) {\n        if (!isDate(o2)) return false;\n        return (isNaN(o1.getTime()) && isNaN(o2.getTime())) || (o1.getTime() === o2.getTime());\n      } else if (isRegExp(o1) && isRegExp(o2)) {\n        return o1.toString() == o2.toString();\n      } else {\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2)) return false;\n        keySet = {};\n        for(key in o1) {\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n          if (!equals(o1[key], o2[key])) return false;\n          keySet[key] = true;\n        }\n        for(key in o2) {\n          if (!keySet.hasOwnProperty(key) &&\n              key.charAt(0) !== '$' &&\n              o2[key] !== undefined &&\n              !isFunction(o2[key])) return false;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nvar csp = function() {\n  if (isDefined(csp.isActive_)) return csp.isActive_;\n\n  var active = !!(document.querySelector('[ng-csp]') ||\n                  document.querySelector('[data-ng-csp]'));\n\n  if (!active) {\n    try {\n      /* jshint -W031, -W054 */\n      new Function('');\n      /* jshint +W031, +W054 */\n    } catch (e) {\n      active = true;\n    }\n  }\n\n  return (csp.isActive_ = active);\n};\n\n\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/* jshint -W101 */\n/**\n * @ngdoc function\n * @name angular.bind\n * @module ng\n * @kind function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as\n * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\n/* jshint +W101 */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (typeof key === 'string' && key.charAt(0) === '$') {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @module ng\n * @kind function\n *\n * @description\n * Serializes input into a JSON-formatted string. Properties with leading $ characters will be\n * stripped since angular uses this notation internally.\n *\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.\n * @returns {string|undefined} JSON-ified string representing `obj`.\n */\nfunction toJson(obj, pretty) {\n  if (typeof obj === 'undefined') return undefined;\n  return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @module ng\n * @kind function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|string|number} Deserialized thingy.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\nfunction toBoolean(value) {\n  if (typeof value === 'function') {\n    value = true;\n  } else if (value && value.length !== 0) {\n    var v = lowercase(\"\" + value);\n    value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');\n  } else {\n    value = false;\n  }\n  return value;\n}\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.empty();\n  } catch(e) {}\n  // As Per DOM Standards\n  var TEXT_NODE = 3;\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n  } catch(e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Tries to decode the URI component without throwing an exception.\n *\n * @private\n * @param str value potential URI component to check.\n * @returns {boolean} True if `value` can be decoded\n * with the decodeURIComponent function.\n */\nfunction tryDecodeURIComponent(value) {\n  try {\n    return decodeURIComponent(value);\n  } catch(e) {\n    // Ignore any invalid uri component\n  }\n}\n\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns {Object.<string,boolean|Array>}\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {}, key_value, key;\n  forEach((keyValue || \"\").split('&'), function(keyValue) {\n    if ( keyValue ) {\n      key_value = keyValue.replace(/\\+/g,'%20').split('=');\n      key = tryDecodeURIComponent(key_value[0]);\n      if ( isDefined(key) ) {\n        var val = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\n        if (!hasOwnProperty.call(obj, key)) {\n          obj[key] = val;\n        } else if(isArray(obj[key])) {\n          obj[key].push(val);\n        } else {\n          obj[key] = [obj[key],val];\n        }\n      }\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    if (isArray(value)) {\n      forEach(value, function(arrayValue) {\n        parts.push(encodeUriQuery(key, true) +\n                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));\n      });\n    } else {\n    parts.push(encodeUriQuery(key, true) +\n               (value === true ? '' : '=' + encodeUriQuery(value, true)));\n    }\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too aggressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query       = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\n\n/**\n * @ngdoc directive\n * @name ngApp\n * @module ng\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n *\n * @description\n *\n * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive\n * designates the **root element** of the application and is typically placed near the root element\n * of the page - e.g. on the `<body>` or `<html>` tags.\n *\n * Only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`\n * found in the document will be used to define the root element to auto-bootstrap as an\n * application. To run multiple applications in an HTML document you must manually bootstrap them using\n * {@link angular.bootstrap} instead. AngularJS applications cannot be nested within each other.\n *\n * You can specify an **AngularJS module** to be used as the root module for the application.  This\n * module will be loaded into the {@link auto.$injector} when the application is bootstrapped and\n * should contain the application code needed or have dependencies on other modules that will\n * contain the code. See {@link angular.module} for more information.\n *\n * In the example below if the `ngApp` directive were not placed on the `html` element then the\n * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`\n * would not be resolved to `3`.\n *\n * `ngApp` is the easiest, and most common, way to bootstrap an application.\n *\n <example module=\"ngAppDemo\">\n   <file name=\"index.html\">\n   <div ng-controller=\"ngAppDemoController\">\n     I can add: {{a}} + {{b}} =  {{ a+b }}\n   </div>\n   </file>\n   <file name=\"script.js\">\n   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {\n     $scope.a = 1;\n     $scope.b = 2;\n   });\n   </file>\n </example>\n *\n */\nfunction angularInit(element, bootstrap) {\n  var elements = [element],\n      appElement,\n      module,\n      names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n      NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/;\n\n  function append(element) {\n    element && elements.push(element);\n  }\n\n  forEach(names, function(name) {\n    names[name] = true;\n    append(document.getElementById(name));\n    name = name.replace(':', '\\\\:');\n    if (element.querySelectorAll) {\n      forEach(element.querySelectorAll('.' + name), append);\n      forEach(element.querySelectorAll('.' + name + '\\\\:'), append);\n      forEach(element.querySelectorAll('[' + name + ']'), append);\n    }\n  });\n\n  forEach(elements, function(element) {\n    if (!appElement) {\n      var className = ' ' + element.className + ' ';\n      var match = NG_APP_CLASS_REGEXP.exec(className);\n      if (match) {\n        appElement = element;\n        module = (match[2] || '').replace(/\\s+/g, ',');\n      } else {\n        forEach(element.attributes, function(attr) {\n          if (!appElement && names[attr.name]) {\n            appElement = element;\n            module = attr.value;\n          }\n        });\n      }\n    }\n  });\n  if (appElement) {\n    bootstrap(appElement, module ? [module] : []);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @module ng\n * @description\n * Use this function to manually start up angular application.\n *\n * See: {@link guide/bootstrap Bootstrap}\n *\n * Note that ngScenario-based end-to-end tests cannot use this function to bootstrap manually.\n * They must use {@link ng.directive:ngApp ngApp}.\n *\n * Angular will detect if it has been loaded into the browser more than once and only allow the\n * first loaded script to be bootstrapped and will report a warning to the browser console for\n * each of the subsequent scripts. This prevents strange results in applications, where otherwise\n * multiple instances of Angular try to work on the DOM.\n *\n * <example name=\"multi-bootstrap\" module=\"multi-bootstrap\">\n * <file name=\"index.html\">\n * <script src=\"../../../angular.js\"></script>\n * <div ng-controller=\"BrokenTable\">\n *   <table>\n *   <tr>\n *     <th ng-repeat=\"heading in headings\">{{heading}}</th>\n *   </tr>\n *   <tr ng-repeat=\"filling in fillings\">\n *     <td ng-repeat=\"fill in filling\">{{fill}}</td>\n *   </tr>\n * </table>\n * </div>\n * </file>\n * <file name=\"controller.js\">\n * var app = angular.module('multi-bootstrap', [])\n *\n * .controller('BrokenTable', function($scope) {\n *     $scope.headings = ['One', 'Two', 'Three'];\n *     $scope.fillings = [[1, 2, 3], ['A', 'B', 'C'], [7, 8, 9]];\n * });\n * </file>\n * <file name=\"protractor.js\" type=\"protractor\">\n * it('should only insert one table cell for each item in $scope.fillings', function() {\n *  expect(element.all(by.css('td')).count())\n *      .toBe(9);\n * });\n * </file>\n * </example>\n *\n * @param {DOMElement} element DOM element which is the root of angular application.\n * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.\n *     Each item in the array should be the name of a predefined module or a (DI annotated)\n *     function that will be invoked by the injector as a run block.\n *     See: {@link angular.module modules}\n * @returns {auto.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules) {\n  var doBootstrap = function() {\n    element = jqLite(element);\n\n    if (element.injector()) {\n      var tag = (element[0] === document) ? 'document' : startingTag(element);\n      //Encode angle brackets to prevent input from being sanitized to empty string #8683\n      throw ngMinErr(\n          'btstrpd',\n          \"App Already Bootstrapped with this Element '{0}'\",\n          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));\n    }\n\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n    modules.unshift('ng');\n    var injector = createInjector(modules);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector', '$animate',\n       function(scope, element, compile, injector, animate) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n      }]\n    );\n    return injector;\n  };\n\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return doBootstrap();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    doBootstrap();\n  };\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator) {\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nfunction bindJQuery() {\n  // bind to jQuery if present;\n  jQuery = window.jQuery;\n  // Use jQuery if it exists with proper functionality, otherwise default to us.\n  // Angular 1.2+ requires jQuery 1.7.1+ for on()/off() support.\n  if (jQuery && jQuery.fn.on) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      isolateScope: JQLitePrototype.isolateScope,\n      controller: JQLitePrototype.controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n    // Method signature:\n    //     jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments)\n    jqLitePatchJQueryRemove('remove', true, true, false);\n    jqLitePatchJQueryRemove('empty', false, false, false);\n    jqLitePatchJQueryRemove('html', false, false, true);\n  } else {\n    jqLite = JQLite;\n  }\n  angular.element = jqLite;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', \"Argument '{0}' is {1}\", (name || '?'), (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * throw error if the name given is hasOwnProperty\n * @param  {String} name    the name to test\n * @param  {String} context the context in which the name is used, such as module or directive\n */\nfunction assertNotHasOwnProperty(name, context) {\n  if (name === 'hasOwnProperty') {\n    throw ngMinErr('badname', \"hasOwnProperty is not a valid {0} name\", context);\n  }\n}\n\n/**\n * Return the value accessible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {String} path path to traverse\n * @param {boolean} [bindFnToScope=true]\n * @returns {Object} value as accessible by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\n/**\n * Return the DOM siblings between the first and last node in the given array.\n * @param {Array} array like object\n * @returns {DOMElement} object containing the elements\n */\nfunction getBlockElements(nodes) {\n  var startNode = nodes[0],\n      endNode = nodes[nodes.length - 1];\n  if (startNode === endNode) {\n    return jqLite(startNode);\n  }\n\n  var element = startNode;\n  var elements = [element];\n\n  do {\n    element = element.nextSibling;\n    if (!element) break;\n    elements.push(element);\n  } while (element !== endNode);\n\n  return jqLite(elements);\n}\n\n/**\n * @ngdoc type\n * @name angular.Module\n * @module ng\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  var $injectorMinErr = minErr('$injector');\n  var ngMinErr = minErr('ng');\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  var angular = ensure(window, 'angular', Object);\n\n  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap\n  angular.$$minErr = angular.$$minErr || minErr;\n\n  return ensure(angular, 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @module ng\n     * @description\n     *\n     * The `angular.module` is a global place for creating, registering and retrieving Angular\n     * modules.\n     * All modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     * When passed two or more arguments, a new module is created.  If passed only one argument, an\n     * existing module (the name passed as the first argument to `module`) is retrieved.\n     *\n     *\n     * # Module\n     *\n     * A module is a collection of services, directives, controllers, filters, and configuration information.\n     * `angular.module` is used to configure the {@link auto.$injector $injector}.\n     *\n     * ```js\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(['$locationProvider', function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * }]);\n     * ```\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * ```js\n     * var injector = angular.injector(['ng', 'myModule'])\n     * ```\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {!Array.<string>=} requires If specified then new module is being created. If\n     *        unspecified then the module is being retrieved for further configuration.\n     * @param {Function=} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      var assertNotHasOwnProperty = function(name, context) {\n        if (name === 'hasOwnProperty') {\n          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);\n        }\n      };\n\n      assertNotHasOwnProperty(name, 'module');\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw $injectorMinErr('nomod', \"Module '{0}' is not available! You either misspelled \" +\n             \"the module name or forgot to load it. If registering a module ensure that you \" +\n             \"specify the dependencies as the second argument.\", name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke');\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @module ng\n           *\n           * @description\n           * Holds the list of modules which the injector will load before the current module is\n           * loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @module ng\n           *\n           * @description\n           * Name of the module.\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the\n           *                                service.\n           * @description\n           * See {@link auto.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLater('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link auto.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLater('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @module ng\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link auto.$provide#service $provide.service()}.\n           */\n          service: invokeLater('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @module ng\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link auto.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @module ng\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constant are fixed, they get applied before other provide methods.\n           * See {@link auto.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#animation\n           * @module ng\n           * @param {string} name animation name\n           * @param {Function} animationFactory Factory function for creating new instance of an\n           *                                    animation.\n           * @description\n           *\n           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.\n           *\n           *\n           * Defines an animation hook that can be later used with\n           * {@link ngAnimate.$animate $animate} service and directives that use this service.\n           *\n           * ```js\n           * module.animation('.animation-name', function($inject1, $inject2) {\n           *   return {\n           *     eventName : function(element, done) {\n           *       //code to run the animation\n           *       //once complete, then run done()\n           *       return function cancellationFunction(element) {\n           *         //code to cancel the animation\n           *       }\n           *     }\n           *   }\n           * })\n           * ```\n           *\n           * See {@link ngAnimate.$animateProvider#register $animateProvider.register()} and\n           * {@link ngAnimate ngAnimate module} for more information.\n           */\n          animation: invokeLater('$animateProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @module ng\n           * @param {string} name Filter name.\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           */\n          filter: invokeLater('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @module ng\n           * @param {string|Object} name Controller name, or an object map of controllers where the\n           *    keys are the names and the values are the constructors.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLater('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @module ng\n           * @param {string|Object} name Directive name, or an object map of directives where the\n           *    keys are the names and the values are the factories.\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLater('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @module ng\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           * For more about how to configure services, see\n           * {@link providers#providers_provider-recipe Provider Recipe}.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @module ng\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return  moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod) {\n          return function() {\n            invokeQueue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          };\n        }\n      });\n    };\n  });\n\n}\n\n/* global angularModule: true,\n  version: true,\n\n  $LocaleProvider,\n  $CompileProvider,\n\n    htmlAnchorDirective,\n    inputDirective,\n    inputDirective,\n    formDirective,\n    scriptDirective,\n    selectDirective,\n    styleDirective,\n    optionDirective,\n    ngBindDirective,\n    ngBindHtmlDirective,\n    ngBindTemplateDirective,\n    ngClassDirective,\n    ngClassEvenDirective,\n    ngClassOddDirective,\n    ngCspDirective,\n    ngCloakDirective,\n    ngControllerDirective,\n    ngFormDirective,\n    ngHideDirective,\n    ngIfDirective,\n    ngIncludeDirective,\n    ngIncludeFillContentDirective,\n    ngInitDirective,\n    ngNonBindableDirective,\n    ngPluralizeDirective,\n    ngRepeatDirective,\n    ngShowDirective,\n    ngStyleDirective,\n    ngSwitchDirective,\n    ngSwitchWhenDirective,\n    ngSwitchDefaultDirective,\n    ngOptionsDirective,\n    ngTranscludeDirective,\n    ngModelDirective,\n    ngListDirective,\n    ngChangeDirective,\n    requiredDirective,\n    requiredDirective,\n    ngValueDirective,\n    ngAttributeAliasDirectives,\n    ngEventDirectives,\n\n    $AnchorScrollProvider,\n    $AnimateProvider,\n    $BrowserProvider,\n    $CacheFactoryProvider,\n    $ControllerProvider,\n    $DocumentProvider,\n    $ExceptionHandlerProvider,\n    $FilterProvider,\n    $InterpolateProvider,\n    $IntervalProvider,\n    $HttpProvider,\n    $HttpBackendProvider,\n    $LocationProvider,\n    $LogProvider,\n    $ParseProvider,\n    $RootScopeProvider,\n    $QProvider,\n    $$SanitizeUriProvider,\n    $SceProvider,\n    $SceDelegateProvider,\n    $SnifferProvider,\n    $TemplateCacheProvider,\n    $TimeoutProvider,\n    $$RAFProvider,\n    $$AsyncCallbackProvider,\n    $WindowProvider\n*/\n\n\n/**\n * @ngdoc object\n * @name angular.version\n * @module ng\n * @description\n * An object that contains information about the current AngularJS version. This object has the\n * following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  full: '1.2.29',    // all of these placeholder strings will be replaced by grunt's\n  major: 1,    // package task\n  minor: 2,\n  dot: 29,\n  codeName: 'ultimate-deprecation'\n};\n\n\nfunction publishExternalAPI(angular){\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop': noop,\n    'bind': bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity': identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {counter: 0},\n    '$$minErr': minErr,\n    '$$csp': csp\n  });\n\n  angularModule = setupModuleLoader(window);\n  try {\n    angularModule('ngLocale');\n  } catch (e) {\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n  }\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.\n      $provide.provider({\n        $$sanitizeUri: $$SanitizeUriProvider\n      });\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            style: styleDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtml: ngBindHtmlDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngIf: ngIfDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            ngValue: ngValueDirective\n        }).\n        directive({\n          ngInclude: ngIncludeFillContentDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $animate: $AnimateProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $interpolate: $InterpolateProvider,\n        $interval: $IntervalProvider,\n        $http: $HttpProvider,\n        $httpBackend: $HttpBackendProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $sce: $SceProvider,\n        $sceDelegate: $SceDelegateProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider,\n        $$rAF: $$RAFProvider,\n        $$asyncCallback : $$AsyncCallbackProvider\n      });\n    }\n  ]);\n}\n\n/* global JQLitePrototype: true,\n  addEventListenerFn: true,\n  removeEventListenerFn: true,\n  BOOLEAN_ATTR: true\n*/\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @module ng\n * @kind function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n *\n * If jQuery is available, `angular.element` is an alias for the\n * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`\n * delegates to Angular's built-in subset of jQuery, called \"jQuery lite\" or \"jqLite.\"\n *\n * <div class=\"alert alert-success\">jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM in a cross-browser compatible way. **jqLite** implements only the most\n * commonly needed functionality with the goal of having a very small footprint.</div>\n *\n * To use jQuery, simply load it before `DOMContentLoaded` event fired.\n *\n * <div class=\"alert\">**Note:** all element references in Angular are always wrapped with jQuery or\n * jqLite; they are never raw DOM references.</div>\n *\n * ## Angular's jqLite\n * jqLite provides only the following jQuery methods:\n *\n * - [`addClass()`](http://api.jquery.com/addClass/)\n * - [`after()`](http://api.jquery.com/after/)\n * - [`append()`](http://api.jquery.com/append/)\n * - [`attr()`](http://api.jquery.com/attr/)\n * - [`bind()`](http://api.jquery.com/bind/) - Does not support namespaces, selectors or eventData\n * - [`children()`](http://api.jquery.com/children/) - Does not support selectors\n * - [`clone()`](http://api.jquery.com/clone/)\n * - [`contents()`](http://api.jquery.com/contents/)\n * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyles()`\n * - [`data()`](http://api.jquery.com/data/)\n * - [`empty()`](http://api.jquery.com/empty/)\n * - [`eq()`](http://api.jquery.com/eq/)\n * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [`hasClass()`](http://api.jquery.com/hasClass/)\n * - [`html()`](http://api.jquery.com/html/)\n * - [`next()`](http://api.jquery.com/next/) - Does not support selectors\n * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData\n * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces or selectors\n * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors\n * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors\n * - [`prepend()`](http://api.jquery.com/prepend/)\n * - [`prop()`](http://api.jquery.com/prop/)\n * - [`ready()`](http://api.jquery.com/ready/)\n * - [`remove()`](http://api.jquery.com/remove/)\n * - [`removeAttr()`](http://api.jquery.com/removeAttr/)\n * - [`removeClass()`](http://api.jquery.com/removeClass/)\n * - [`removeData()`](http://api.jquery.com/removeData/)\n * - [`replaceWith()`](http://api.jquery.com/replaceWith/)\n * - [`text()`](http://api.jquery.com/text/)\n * - [`toggleClass()`](http://api.jquery.com/toggleClass/)\n * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers.\n * - [`unbind()`](http://api.jquery.com/unbind/) - Does not support namespaces\n * - [`val()`](http://api.jquery.com/val/)\n * - [`wrap()`](http://api.jquery.com/wrap/)\n *\n * ## jQuery/jqLite Extras\n * Angular also provides the following additional methods and events to both jQuery and jqLite:\n *\n * ### Events\n * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\n *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM\n *    element before it is removed.\n *\n * ### Methods\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current\n *   element or its parent.\n * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the\n *   current element. This getter should be used only on elements that contain a directive which starts a new isolate\n *   scope. Calling `scope()` on this element always returns the original non-isolate scope.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nJQLite.expando = 'ng339';\n\nvar jqCache = JQLite.cache = {},\n    jqId = 1,\n    addEventListenerFn = (window.document.addEventListener\n      ? function(element, type, fn) {element.addEventListener(type, fn, false);}\n      : function(element, type, fn) {element.attachEvent('on' + type, fn);}),\n    removeEventListenerFn = (window.document.removeEventListener\n      ? function(element, type, fn) {element.removeEventListener(type, fn, false); }\n      : function(element, type, fn) {element.detachEvent('on' + type, fn); });\n\n/*\n * !!! This is an undocumented \"private\" function !!!\n */\nvar jqData = JQLite._data = function(node) {\n  //jQuery always returns an object on cache miss\n  return this.cache[node[this.expando]] || {};\n};\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\nvar jqLiteMinErr = minErr('jqLite');\n\n/**\n * Converts snake_case to camelCase.\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction camelCase(name) {\n  return name.\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n      return offset ? letter.toUpperCase() : letter;\n    }).\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\n}\n\n/////////////////////////////////////////////\n// jQuery mutation patch\n//\n// In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a\n// $destroy event on all DOM nodes being removed.\n//\n/////////////////////////////////////////////\n\nfunction jqLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments) {\n  var originalJqFn = jQuery.fn[name];\n  originalJqFn = originalJqFn.$original || originalJqFn;\n  removePatch.$original = originalJqFn;\n  jQuery.fn[name] = removePatch;\n\n  function removePatch(param) {\n    // jshint -W040\n    var list = filterElems && param ? [this.filter(param)] : [this],\n        fireEvent = dispatchThis,\n        set, setIndex, setLength,\n        element, childIndex, childLength, children;\n\n    if (!getterIfNoArguments || param != null) {\n      while(list.length) {\n        set = list.shift();\n        for(setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {\n          element = jqLite(set[setIndex]);\n          if (fireEvent) {\n            element.triggerHandler('$destroy');\n          } else {\n            fireEvent = !fireEvent;\n          }\n          for(childIndex = 0, childLength = (children = element.children()).length;\n              childIndex < childLength;\n              childIndex++) {\n            list.push(jQuery(children[childIndex]));\n          }\n        }\n      }\n    }\n    return originalJqFn.apply(this, arguments);\n  }\n}\n\nvar SINGLE_TAG_REGEXP = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nvar HTML_REGEXP = /<|&#?\\w+;/;\nvar TAG_NAME_REGEXP = /<([\\w:]+)/;\nvar XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\n\nvar wrapMap = {\n  'option': [1, '<select multiple=\"multiple\">', '</select>'],\n\n  'thead': [1, '<table>', '</table>'],\n  'col': [2, '<table><colgroup>', '</colgroup></table>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'td': [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  '_default': [0, \"\", \"\"]\n};\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\nfunction jqLiteIsTextNode(html) {\n  return !HTML_REGEXP.test(html);\n}\n\nfunction jqLiteBuildFragment(html, context) {\n  var elem, tmp, tag, wrap,\n      fragment = context.createDocumentFragment(),\n      nodes = [], i, j, jj;\n\n  if (jqLiteIsTextNode(html)) {\n    // Convert non-html into a text node\n    nodes.push(context.createTextNode(html));\n  } else {\n    tmp = fragment.appendChild(context.createElement('div'));\n    // Convert html into DOM nodes\n    tag = (TAG_NAME_REGEXP.exec(html) || [\"\", \"\"])[1].toLowerCase();\n    wrap = wrapMap[tag] || wrapMap._default;\n    tmp.innerHTML = '<div>&#160;</div>' +\n      wrap[1] + html.replace(XHTML_TAG_REGEXP, \"<$1></$2>\") + wrap[2];\n    tmp.removeChild(tmp.firstChild);\n\n    // Descend through wrappers to the right content\n    i = wrap[0];\n    while (i--) {\n      tmp = tmp.lastChild;\n    }\n\n    for (j=0, jj=tmp.childNodes.length; j<jj; ++j) nodes.push(tmp.childNodes[j]);\n\n    tmp = fragment.firstChild;\n    tmp.textContent = \"\";\n  }\n\n  // Remove wrapper from fragment\n  fragment.textContent = \"\";\n  fragment.innerHTML = \"\"; // Clear inner HTML\n  return nodes;\n}\n\nfunction jqLiteParseHTML(html, context) {\n  context = context || document;\n  var parsed;\n\n  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {\n    return [context.createElement(parsed[1])];\n  }\n\n  return jqLiteBuildFragment(html, context);\n}\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n  if (isString(element)) {\n    element = trim(element);\n  }\n  if (!(this instanceof JQLite)) {\n    if (isString(element) && element.charAt(0) != '<') {\n      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');\n    }\n    return new JQLite(element);\n  }\n\n  if (isString(element)) {\n    jqLiteAddNodes(this, jqLiteParseHTML(element));\n    var fragment = jqLite(document.createDocumentFragment());\n    fragment.append(this);\n  } else {\n    jqLiteAddNodes(this, element);\n  }\n}\n\nfunction jqLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction jqLiteDealoc(element){\n  jqLiteRemoveData(element);\n  for ( var i = 0, children = element.childNodes || []; i < children.length; i++) {\n    jqLiteDealoc(children[i]);\n  }\n}\n\nfunction jqLiteOff(element, type, fn, unsupported) {\n  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');\n\n  var events = jqLiteExpandoStore(element, 'events'),\n      handle = jqLiteExpandoStore(element, 'handle');\n\n  if (!handle) return; //no listeners registered\n\n  if (isUndefined(type)) {\n    forEach(events, function(eventHandler, type) {\n      removeEventListenerFn(element, type, eventHandler);\n      delete events[type];\n    });\n  } else {\n    forEach(type.split(' '), function(type) {\n      if (isUndefined(fn)) {\n        removeEventListenerFn(element, type, events[type]);\n        delete events[type];\n      } else {\n        arrayRemove(events[type] || [], fn);\n      }\n    });\n  }\n}\n\nfunction jqLiteRemoveData(element, name) {\n  var expandoId = element.ng339,\n      expandoStore = jqCache[expandoId];\n\n  if (expandoStore) {\n    if (name) {\n      delete jqCache[expandoId].data[name];\n      return;\n    }\n\n    if (expandoStore.handle) {\n      expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');\n      jqLiteOff(element);\n    }\n    delete jqCache[expandoId];\n    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it\n  }\n}\n\nfunction jqLiteExpandoStore(element, key, value) {\n  var expandoId = element.ng339,\n      expandoStore = jqCache[expandoId || -1];\n\n  if (isDefined(value)) {\n    if (!expandoStore) {\n      element.ng339 = expandoId = jqNextId();\n      expandoStore = jqCache[expandoId] = {};\n    }\n    expandoStore[key] = value;\n  } else {\n    return expandoStore && expandoStore[key];\n  }\n}\n\nfunction jqLiteData(element, key, value) {\n  var data = jqLiteExpandoStore(element, 'data'),\n      isSetter = isDefined(value),\n      keyDefined = !isSetter && isDefined(key),\n      isSimpleGetter = keyDefined && !isObject(key);\n\n  if (!data && !isSimpleGetter) {\n    jqLiteExpandoStore(element, 'data', data = {});\n  }\n\n  if (isSetter) {\n    data[key] = value;\n  } else {\n    if (keyDefined) {\n      if (isSimpleGetter) {\n        // don't create data in this case.\n        return data && data[key];\n      } else {\n        extend(data, key);\n      }\n    } else {\n      return data;\n    }\n  }\n}\n\nfunction jqLiteHasClass(element, selector) {\n  if (!element.getAttribute) return false;\n  return ((\" \" + (element.getAttribute('class') || '') + \" \").replace(/[\\n\\t]/g, \" \").\n      indexOf( \" \" + selector + \" \" ) > -1);\n}\n\nfunction jqLiteRemoveClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.setAttribute('class', trim(\n          (\" \" + (element.getAttribute('class') || '') + \" \")\n          .replace(/[\\n\\t]/g, \" \")\n          .replace(\" \" + trim(cssClass) + \" \", \" \"))\n      );\n    });\n  }\n}\n\nfunction jqLiteAddClass(element, cssClasses) {\n  if (cssClasses && element.setAttribute) {\n    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')\n                            .replace(/[\\n\\t]/g, \" \");\n\n    forEach(cssClasses.split(' '), function(cssClass) {\n      cssClass = trim(cssClass);\n      if (existingClasses.indexOf(' ' + cssClass + ' ') === -1) {\n        existingClasses += cssClass + ' ';\n      }\n    });\n\n    element.setAttribute('class', trim(existingClasses));\n  }\n}\n\nfunction jqLiteAddNodes(root, elements) {\n  if (elements) {\n    elements = (!elements.nodeName && isDefined(elements.length) && !isWindow(elements))\n      ? elements\n      : [ elements ];\n    for(var i=0; i < elements.length; i++) {\n      root.push(elements[i]);\n    }\n  }\n}\n\nfunction jqLiteController(element, name) {\n  return jqLiteInheritedData(element, '$' + (name || 'ngController' ) + 'Controller');\n}\n\nfunction jqLiteInheritedData(element, name, value) {\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if(element.nodeType == 9) {\n    element = element.documentElement;\n  }\n  var names = isArray(name) ? name : [name];\n\n  while (element) {\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      if ((value = jqLite.data(element, names[i])) !== undefined) return value;\n    }\n\n    // If dealing with a document fragment node with a host element, and no parent, use the host\n    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM\n    // to lookup parent controllers.\n    element = element.parentNode || (element.nodeType === 11 && element.host);\n  }\n}\n\nfunction jqLiteEmpty(element) {\n  for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n    jqLiteDealoc(childNodes[i]);\n  }\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: function(fn) {\n    var fired = false;\n\n    function trigger() {\n      if (fired) return;\n      fired = true;\n      fn();\n    }\n\n    // check if document already is loaded\n    if (document.readyState === 'complete'){\n      setTimeout(trigger);\n    } else {\n      this.on('DOMContentLoaded', trigger); // works for modern browsers and IE9\n      // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n      // jshint -W064\n      JQLite(window).on('load', trigger); // fallback to window.onload for others\n      // jshint +W064\n    }\n  },\n  toString: function() {\n    var value = [];\n    forEach(this, function(e){ value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form,details'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[uppercase(value)] = true;\n});\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;\n}\n\nforEach({\n  data: jqLiteData,\n  removeData: jqLiteRemoveData\n}, function(fn, name) {\n  JQLite[name] = fn;\n});\n\nforEach({\n  data: jqLiteData,\n  inheritedData: jqLiteInheritedData,\n\n  scope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);\n  },\n\n  isolateScope: function(element) {\n    // Can't use jqLiteData here directly so we stay compatible with jQuery!\n    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');\n  },\n\n  controller: jqLiteController,\n\n  injector: function(element) {\n    return jqLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element,name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: jqLiteHasClass,\n\n  css: function(element, name, value) {\n    name = camelCase(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      var val;\n\n      if (msie <= 8) {\n        // this is some IE specific weirdness that jQuery 1.6.4 does not sure why\n        val = element.currentStyle && element.currentStyle[name];\n        if (val === '') val = 'auto';\n      }\n\n      val = val || element.style[name];\n\n      if (msie <= 8) {\n        // jquery weirdness :-/\n        val = (val === '') ? undefined : val;\n      }\n\n      return  val;\n    }\n  },\n\n  attr: function(element, name, value){\n    var lowercasedName = lowercase(name);\n    if (BOOLEAN_ATTR[lowercasedName]) {\n      if (isDefined(value)) {\n        if (!!value) {\n          element[name] = true;\n          element.setAttribute(name, lowercasedName);\n        } else {\n          element[name] = false;\n          element.removeAttribute(lowercasedName);\n        }\n      } else {\n        return (element[name] ||\n                 (element.attributes.getNamedItem(name)|| noop).specified)\n               ? lowercasedName\n               : undefined;\n      }\n    } else if (isDefined(value)) {\n      element.setAttribute(name, value);\n    } else if (element.getAttribute) {\n      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n      // some elements (e.g. Document) don't have get attribute, so return undefined\n      var ret = element.getAttribute(name, 2);\n      // normalize non-existing attributes to undefined (as jQuery)\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: (function() {\n    var NODE_TYPE_TEXT_PROPERTY = [];\n    if (msie < 9) {\n      NODE_TYPE_TEXT_PROPERTY[1] = 'innerText';    /** Element **/\n      NODE_TYPE_TEXT_PROPERTY[3] = 'nodeValue';    /** Text **/\n    } else {\n      NODE_TYPE_TEXT_PROPERTY[1] =                 /** Element **/\n      NODE_TYPE_TEXT_PROPERTY[3] = 'textContent';  /** Text **/\n    }\n    getText.$dv = '';\n    return getText;\n\n    function getText(element, value) {\n      var textProp = NODE_TYPE_TEXT_PROPERTY[element.nodeType];\n      if (isUndefined(value)) {\n        return textProp ? element[textProp] : '';\n      }\n      element[textProp] = value;\n    }\n  })(),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      if (nodeName_(element) === 'SELECT' && element.multiple) {\n        var result = [];\n        forEach(element.options, function (option) {\n          if (option.selected) {\n            result.push(option.value || option.text);\n          }\n        });\n        return result.length === 0 ? null : result;\n      }\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n      jqLiteDealoc(childNodes[i]);\n    }\n    element.innerHTML = value;\n  },\n\n  empty: jqLiteEmpty\n}, function(fn, name){\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n    var nodeCount = this.length;\n\n    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    // jqLiteEmpty takes no arguments but is a setter.\n    if (fn !== jqLiteEmpty &&\n        (((fn.length == 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2) === undefined)) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for (i = 0; i < nodeCount; i++) {\n          if (fn === jqLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        // TODO: do we still need this?\n        var value = fn.$dv;\n        // Only if we have $dv do we iterate over all, otherwise it is just the first element.\n        var jj = (value === undefined) ? Math.min(nodeCount, 1) : nodeCount;\n        for (var j = 0; j < jj; j++) {\n          var nodeValue = fn(this[j], arg1, arg2);\n          value = value ? value + nodeValue : nodeValue;\n        }\n        return value;\n      }\n    } else {\n      // we are a write, so apply to all children\n      for (i = 0; i < nodeCount; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function (event, type) {\n    if (!event.preventDefault) {\n      event.preventDefault = function() {\n        event.returnValue = false; //ie\n      };\n    }\n\n    if (!event.stopPropagation) {\n      event.stopPropagation = function() {\n        event.cancelBubble = true; //ie\n      };\n    }\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    if (isUndefined(event.defaultPrevented)) {\n      var prevent = event.preventDefault;\n      event.preventDefault = function() {\n        event.defaultPrevented = true;\n        prevent.call(event);\n      };\n      event.defaultPrevented = false;\n    }\n\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented || event.returnValue === false;\n    };\n\n    // Copy event handlers in case event handlers array is modified during execution.\n    var eventHandlersCopy = shallowCopy(events[type || event.type] || []);\n\n    forEach(eventHandlersCopy, function(fn) {\n      fn.call(element, event);\n    });\n\n    // Remove monkey-patched methods (IE),\n    // as they would cause memory leaks in IE8.\n    if (msie <= 8) {\n      // IE7/8 does not allow to delete property on native object\n      event.preventDefault = null;\n      event.stopPropagation = null;\n      event.isDefaultPrevented = null;\n    } else {\n      // It shouldn't affect normal browsers (native methods are defined on prototype).\n      delete event.preventDefault;\n      delete event.stopPropagation;\n      delete event.isDefaultPrevented;\n    }\n  };\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: jqLiteRemoveData,\n\n  dealoc: jqLiteDealoc,\n\n  on: function onFn(element, type, fn, unsupported){\n    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');\n\n    var events = jqLiteExpandoStore(element, 'events'),\n        handle = jqLiteExpandoStore(element, 'handle');\n\n    if (!events) jqLiteExpandoStore(element, 'events', events = {});\n    if (!handle) jqLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));\n\n    forEach(type.split(' '), function(type){\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        if (type == 'mouseenter' || type == 'mouseleave') {\n          var contains = document.body.contains || document.body.compareDocumentPosition ?\n          function( a, b ) {\n            // jshint bitwise: false\n            var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a === bup || !!( bup && bup.nodeType === 1 && (\n              adown.contains ?\n              adown.contains( bup ) :\n              a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n              ));\n            } :\n            function( a, b ) {\n              if ( b ) {\n                while ( (b = b.parentNode) ) {\n                  if ( b === a ) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            };\n\n          events[type] = [];\n\n          // Refer to jQuery's implementation of mouseenter & mouseleave\n          // Read about mouseenter and mouseleave:\n          // http://www.quirksmode.org/js/events_mouse.html#link8\n          var eventmap = { mouseleave : \"mouseout\", mouseenter : \"mouseover\"};\n\n          onFn(element, eventmap[type], function(event) {\n            var target = this, related = event.relatedTarget;\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if ( !related || (related !== target && !contains(target, related)) ){\n              handle(event, type);\n            }\n          });\n\n        } else {\n          addEventListenerFn(element, type, handle);\n          events[type] = [];\n        }\n        eventFns = events[type];\n      }\n      eventFns.push(fn);\n    });\n  },\n\n  off: jqLiteOff,\n\n  one: function(element, type, fn) {\n    element = jqLite(element);\n\n    //add the listener twice so that when it is called\n    //you can remove the original function and still be\n    //able to call element.off(ev, fn) normally\n    element.on(type, function onFn() {\n      element.off(type, fn);\n      element.off(type, onFn);\n    });\n    element.on(type, fn);\n  },\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    jqLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node){\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element){\n      if (element.nodeType === 1)\n        children.push(element);\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.contentDocument || element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    forEach(new JQLite(node), function(child){\n      if (element.nodeType === 1 || element.nodeType === 11) {\n        element.appendChild(child);\n      }\n    });\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === 1) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child){\n        element.insertBefore(child, index);\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    wrapNode = jqLite(wrapNode)[0];\n    var parent = element.parentNode;\n    if (parent) {\n      parent.replaceChild(wrapNode, element);\n    }\n    wrapNode.appendChild(element);\n  },\n\n  remove: function(element) {\n    jqLiteDealoc(element);\n    var parent = element.parentNode;\n    if (parent) parent.removeChild(element);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n    forEach(new JQLite(newElement), function(node){\n      parent.insertBefore(node, index.nextSibling);\n      index = node;\n    });\n  },\n\n  addClass: jqLiteAddClass,\n  removeClass: jqLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (selector) {\n      forEach(selector.split(' '), function(className){\n        var classCondition = condition;\n        if (isUndefined(classCondition)) {\n          classCondition = !jqLiteHasClass(element, className);\n        }\n        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);\n      });\n    }\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== 11 ? parent : null;\n  },\n\n  next: function(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    }\n\n    // IE8 doesn't have nextElementSibling\n    var elm = element.nextSibling;\n    while (elm != null && elm.nodeType !== 1) {\n      elm = elm.nextSibling;\n    }\n    return elm;\n  },\n\n  find: function(element, selector) {\n    if (element.getElementsByTagName) {\n      return element.getElementsByTagName(selector);\n    } else {\n      return [];\n    }\n  },\n\n  clone: jqLiteClone,\n\n  triggerHandler: function(element, event, extraParameters) {\n\n    var dummyEvent, eventFnsCopy, handlerArgs;\n    var eventName = event.type || event;\n    var eventFns = (jqLiteExpandoStore(element, 'events') || {})[eventName];\n\n    if (eventFns) {\n\n      // Create a dummy event to pass to the handlers\n      dummyEvent = {\n        preventDefault: function() { this.defaultPrevented = true; },\n        isDefaultPrevented: function() { return this.defaultPrevented === true; },\n        stopPropagation: noop,\n        type: eventName,\n        target: element\n      };\n\n      // If a custom event was provided then extend our dummy event with it\n      if (event.type) {\n        dummyEvent = extend(dummyEvent, event);\n      }\n\n      // Copy event handlers in case event handlers array is modified during execution.\n      eventFnsCopy = shallowCopy(eventFns);\n      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];\n\n      forEach(eventFnsCopy, function(fn) {\n        fn.apply(element, handlerArgs);\n      });\n\n    }\n  }\n}, function(fn, name){\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2, arg3) {\n    var value;\n    for(var i=0; i < this.length; i++) {\n      if (isUndefined(value)) {\n        value = fn(this[i], arg1, arg2, arg3);\n        if (isDefined(value)) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));\n      }\n    }\n    return isDefined(value) ? value : this;\n  };\n\n  // bind legacy bind/unbind to on/off\n  JQLite.prototype.bind = JQLite.prototype.on;\n  JQLite.prototype.unbind = JQLite.prototype.off;\n});\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj, nextUidFn) {\n  var objType = typeof obj,\n      key;\n\n  if (objType == 'function' || (objType == 'object' && obj !== null)) {\n    if (typeof (key = obj.$$hashKey) == 'function') {\n      // must invoke on object to keep the right this\n      key = obj.$$hashKey();\n    } else if (key === undefined) {\n      key = obj.$$hashKey = (nextUidFn || nextUid)();\n    }\n  } else {\n    key = obj;\n  }\n\n  return objType + ':' + key;\n}\n\n/**\n * HashMap which can use objects as keys\n */\nfunction HashMap(array, isolatedUid) {\n  if (isolatedUid) {\n    var uid = 0;\n    this.nextUid = function() {\n      return ++uid;\n    };\n  }\n  forEach(array, this.put, this);\n}\nHashMap.prototype = {\n  /**\n   * Store key value pair\n   * @param key key to store can be any type\n   * @param value value to store can be any type\n   */\n  put: function(key, value) {\n    this[hashKey(key, this.nextUid)] = value;\n  },\n\n  /**\n   * @param key\n   * @returns {Object} the value for the key\n   */\n  get: function(key) {\n    return this[hashKey(key, this.nextUid)];\n  },\n\n  /**\n   * Remove the key/value pair\n   * @param key\n   */\n  remove: function(key) {\n    var value = this[key = hashKey(key, this.nextUid)];\n    delete this[key];\n    return value;\n  }\n};\n\n/**\n * @ngdoc function\n * @module ng\n * @name angular.injector\n * @kind function\n *\n * @description\n * Creates an injector object that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *        {@link angular.module}. The `ng` module must be explicitly added.\n * @returns {injector} Injector object. See {@link auto.$injector $injector}.\n *\n * @example\n * Typical usage\n * ```js\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document){\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * ```\n *\n * Sometimes you want to get access to the injector of a currently running Angular app\n * from outside Angular. Perhaps, you want to inject and compile some markup after the\n * application has been bootstrapped. You can do this using the extra `injector()` added\n * to JQuery/jqLite elements. See {@link angular.element}.\n *\n * *This is fairly rare but could be the case if a third party library is injecting the\n * markup.*\n *\n * In the following example a new block of HTML containing a `ng-controller`\n * directive is added to the end of the document body by JQuery. We then compile and link\n * it into the current AngularJS scope.\n *\n * ```js\n * var $div = $('<div ng-controller=\"MyCtrl\">{{content.label}}</div>');\n * $(document.body).append($div);\n *\n * angular.element(document).injector().invoke(function($compile) {\n *   var scope = angular.element($div).scope();\n *   $compile($div)(scope);\n * });\n * ```\n */\n\n\n/**\n * @ngdoc module\n * @name auto\n * @description\n *\n * Implicit module which gets automatically added to each {@link auto.$injector $injector}.\n */\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar $injectorMinErr = minErr('$injector');\nfunction annotate(fn) {\n  var $inject,\n      fnText,\n      argDecl,\n      last;\n\n  if (typeof fn === 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      if (fn.length) {\n        fnText = fn.toString().replace(STRIP_COMMENTS, '');\n        argDecl = fnText.match(FN_ARGS);\n        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){\n          arg.replace(FN_ARG, function(all, underscore, name){\n            $inject.push(name);\n          });\n        });\n      }\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $injector\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link auto.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * ```js\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector){\n *     return $injector;\n *   })).toBe($injector);\n * ```\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * ```js\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * ```\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition\n * can then be parsed and the function arguments can be extracted. *NOTE:* This does not work with\n * minification, and obfuscation tools since these tools change the argument names.\n *\n * ## `$inject` Annotation\n * By adding an `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name $injector#get\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name $injector#invoke\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {!Function} fn The function to invoke. Function parameters are injected according to the\n *   {@link guide/di $inject Annotation} rules.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n *                         object first, before the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name $injector#has\n *\n * @description\n * Allows the user to query if the particular service exists.\n *\n * @param {string} name Name of the service to query.\n * @returns {boolean} `true` if injector has given service.\n */\n\n/**\n * @ngdoc method\n * @name $injector#instantiate\n * @description\n * Create a new instance of JS type. The method takes a constructor function, invokes the new\n * operator, and supplies all of the arguments to the constructor function as specified by the\n * constructor annotation.\n *\n * @param {Function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this\n * object first, before the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name $injector#annotate\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is\n * used by the injector to determine which services need to be injected into the function when the\n * function is invoked. There are three ways in which the function can be annotated with the needed\n * dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done\n * by converting the function into a string using `toString()` method and extracting the argument\n * names.\n * ```js\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * This method does not work with code minification / obfuscation. For this reason the following\n * annotation strategies are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings\n * represent names of services to be injected into the function.\n * ```js\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController['$inject'] = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * ```\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property\n * is very inconvenient. In these situations using the array notation to specify the dependencies in\n * a way that survives minification is a better choice:\n *\n * ```js\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * ```\n *\n * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to\n * be retrieved as described above.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n\n/**\n * @ngdoc service\n * @name $provide\n *\n * @description\n *\n * The {@link auto.$provide $provide} service has a number of methods for registering components\n * with the {@link auto.$injector $injector}. Many of these functions are also exposed on\n * {@link angular.Module}.\n *\n * An Angular **service** is a singleton object created by a **service factory**.  These **service\n * factories** are functions which, in turn, are created by a **service provider**.\n * The **service providers** are constructor functions. When instantiated they must contain a\n * property called `$get`, which holds the **service factory** function.\n *\n * When you request a service, the {@link auto.$injector $injector} is responsible for finding the\n * correct **service provider**, instantiating it and then calling its `$get` **service factory**\n * function to get the instance of the **service**.\n *\n * Often services have no configuration options and there is no need to add methods to the service\n * provider.  The provider will be no more than a constructor function with a `$get` property. For\n * these cases the {@link auto.$provide $provide} service has additional helper methods to register\n * services without specifying a provider.\n *\n * * {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n *     {@link auto.$injector $injector}\n * * {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n *     providers and services.\n * * {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n *     services, not providers.\n * * {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n *     that will be wrapped in a **service provider** object, whose `$get` property will contain the\n *     given factory function.\n * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n *      a new object using the given constructor function.\n *\n * See the individual methods for more information and examples.\n */\n\n/**\n * @ngdoc method\n * @name $provide#provider\n * @description\n *\n * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\n * are constructor functions, whose instances are responsible for \"providing\" a factory for a\n * service.\n *\n * Service provider names start with the name of the service they provide followed by `Provider`.\n * For example, the {@link ng.$log $log} service has a provider called\n * {@link ng.$logProvider $logProvider}.\n *\n * Service provider objects can have additional methods which allow configuration of the provider\n * and its service. Importantly, you can configure what kind of service is created by the `$get`\n * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\n * method {@link ng.$logProvider#debugEnabled debugEnabled}\n * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the\n * console or not.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name +\n                        'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n\n * @example\n *\n * The following example shows how to create a simple event tracking service and register it using\n * {@link auto.$provide#provider $provide.provider()}.\n *\n * ```js\n *  // Define the eventTracker provider\n *  function EventTrackerProvider() {\n *    var trackingUrl = '/track';\n *\n *    // A provider method for configuring where the tracked events should been saved\n *    this.setTrackingUrl = function(url) {\n *      trackingUrl = url;\n *    };\n *\n *    // The service factory function\n *    this.$get = ['$http', function($http) {\n *      var trackedEvents = {};\n *      return {\n *        // Call this to track an event\n *        event: function(event) {\n *          var count = trackedEvents[event] || 0;\n *          count += 1;\n *          trackedEvents[event] = count;\n *          return count;\n *        },\n *        // Call this to save the tracked events to the trackingUrl\n *        save: function() {\n *          $http.post(trackingUrl, trackedEvents);\n *        }\n *      };\n *    }];\n *  }\n *\n *  describe('eventTracker', function() {\n *    var postSpy;\n *\n *    beforeEach(module(function($provide) {\n *      // Register the eventTracker provider\n *      $provide.provider('eventTracker', EventTrackerProvider);\n *    }));\n *\n *    beforeEach(module(function(eventTrackerProvider) {\n *      // Configure eventTracker provider\n *      eventTrackerProvider.setTrackingUrl('/custom-track');\n *    }));\n *\n *    it('tracks events', inject(function(eventTracker) {\n *      expect(eventTracker.event('login')).toEqual(1);\n *      expect(eventTracker.event('login')).toEqual(2);\n *    }));\n *\n *    it('saves to the tracking url', inject(function(eventTracker, $http) {\n *      postSpy = spyOn($http, 'post');\n *      eventTracker.event('login');\n *      eventTracker.save();\n *      expect(postSpy).toHaveBeenCalled();\n *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n *    }));\n *  });\n * ```\n */\n\n/**\n * @ngdoc method\n * @name $provide#factory\n * @description\n *\n * Register a **service factory**, which will be called to return the service instance.\n * This is short for registering a service where its provider consists of only a `$get` property,\n * which is the given service factory function.\n * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\n * configure your service in a provider.\n *\n * @param {string} name The name of the instance.\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand\n *                            for `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service\n * ```js\n *   $provide.factory('ping', ['$http', function($http) {\n *     return function ping() {\n *       return $http.send('/ping');\n *     };\n *   }]);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#service\n * @description\n *\n * Register a **service constructor**, which will be invoked with `new` to create the service\n * instance.\n * This is short for registering a service where its provider's `$get` property is the service\n * constructor function that will be used to instantiate the service instance.\n *\n * You should use {@link auto.$provide#service $provide.service(class)} if you define your service\n * as a type/class.\n *\n * @param {string} name The name of the instance.\n * @param {Function} constructor A class (constructor function) that will be instantiated.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here is an example of registering a service using\n * {@link auto.$provide#service $provide.service(class)}.\n * ```js\n *   var Ping = function($http) {\n *     this.$http = $http;\n *   };\n *\n *   Ping.$inject = ['$http'];\n *\n *   Ping.prototype.send = function() {\n *     return this.$http.get('/ping');\n *   };\n *   $provide.service('ping', Ping);\n * ```\n * You would then inject and use this service like this:\n * ```js\n *   someModule.controller('Ctrl', ['ping', function(ping) {\n *     ping.send();\n *   }]);\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#value\n * @description\n *\n * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\n * number, an array, an object or a function.  This is short for registering a service where its\n * provider's `$get` property is a factory function that takes no arguments and returns the **value\n * service**.\n *\n * Value services are similar to constant services, except that they cannot be injected into a\n * module configuration function (see {@link angular.Module#config}) but they can be overridden by\n * an Angular\n * {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n *\n * @example\n * Here are some examples of creating value services.\n * ```js\n *   $provide.value('ADMIN_USER', 'admin');\n *\n *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n *\n *   $provide.value('halfOf', function(value) {\n *     return value / 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#constant\n * @description\n *\n * Register a **constant service**, such as a string, a number, an array, an object or a function,\n * with the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\n * injected into a module configuration function (see {@link angular.Module#config}) and it cannot\n * be overridden by an Angular {@link auto.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n *\n * @example\n * Here a some examples of creating constants:\n * ```js\n *   $provide.constant('SHARD_HEIGHT', 306);\n *\n *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n *\n *   $provide.constant('double', function(value) {\n *     return value * 2;\n *   });\n * ```\n */\n\n\n/**\n * @ngdoc method\n * @name $provide#decorator\n * @description\n *\n * Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\n * intercepts the creation of a service, allowing it to override or modify the behaviour of the\n * service. The object returned by the decorator may be the original service, or a new service\n * object which replaces or wraps and delegates to the original service.\n *\n * @param {string} name The name of the service to decorate.\n * @param {function()} decorator This function will be invoked when the service needs to be\n *    instantiated and should return the decorated service instance. The function is called using\n *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n *    Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n *      decorated or delegated to.\n *\n * @example\n * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\n * calls to {@link ng.$log#error $log.warn()}.\n * ```js\n *   $provide.decorator('$log', ['$delegate', function($delegate) {\n *     $delegate.warn = $delegate.error;\n *     return $delegate;\n *   }]);\n * ```\n */\n\n\nfunction createInjector(modulesToLoad) {\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new HashMap([], true),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = (providerCache.$injector =\n          createInternalInjector(providerCache, function() {\n            throw $injectorMinErr('unpr', \"Unknown provider: {0}\", path.join(' <- '));\n          })),\n      instanceCache = {},\n      instanceInjector = (instanceCache.$injector =\n          createInternalInjector(instanceCache, function(servicename) {\n            var provider = providerInjector.get(servicename + providerSuffix);\n            return instanceInjector.invoke(provider.$get, provider);\n          }));\n\n\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    };\n  }\n\n  function provider(name, provider_) {\n    assertNotHasOwnProperty(name, 'service');\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw $injectorMinErr('pget', \"Provider '{0}' must define $get factory method.\", name);\n    }\n    return providerCache[name + providerSuffix] = provider_;\n  }\n\n  function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, val) { return factory(name, valueFn(val)); }\n\n  function constant(name, value) {\n    assertNotHasOwnProperty(name, 'constant');\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad){\n    var runBlocks = [], moduleFn, invokeQueue, i, ii;\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.put(module, true);\n\n      try {\n        if (isString(module)) {\n          moduleFn = angularModule(module);\n          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n\n          for(invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {\n            var invokeArgs = invokeQueue[i],\n                provider = providerInjector.get(invokeArgs[0]);\n\n            provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n          }\n        } else if (isFunction(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else if (isArray(module)) {\n            runBlocks.push(providerInjector.invoke(module));\n        } else {\n          assertArgFn(module, 'module');\n        }\n      } catch (e) {\n        if (isArray(module)) {\n          module = module[module.length - 1];\n        }\n        if (e.message && e.stack && e.stack.indexOf(e.message) == -1) {\n          // Safari & FF's stack traces don't contain error.message content\n          // unlike those of Chrome and IE\n          // So if stack doesn't contain message, we create a new string that contains both.\n          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.\n          /* jshint -W022 */\n          e = e.message + '\\n' + e.stack;\n        }\n        throw $injectorMinErr('modulerr', \"Failed to instantiate module {0} due to:\\n{1}\",\n                  module, e.stack || e.message || e);\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName) {\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',\n                    serviceName + ' <- ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          return cache[serviceName] = factory(serviceName);\n        } catch (err) {\n          if (cache[serviceName] === INSTANTIATING) {\n            delete cache[serviceName];\n          }\n          throw err;\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n    function invoke(fn, self, locals){\n      var args = [],\n          $inject = annotate(fn),\n          length, i,\n          key;\n\n      for(i = 0, length = $inject.length; i < length; i++) {\n        key = $inject[i];\n        if (typeof key !== 'string') {\n          throw $injectorMinErr('itkn',\n                  'Incorrect injection token! Expected service name as string, got {0}', key);\n        }\n        args.push(\n          locals && locals.hasOwnProperty(key)\n          ? locals[key]\n          : getService(key)\n        );\n      }\n      if (isArray(fn)) {\n        fn = fn[length];\n      }\n\n      // http://jsperf.com/angularjs-invoke-apply-vs-switch\n      // #5388\n      return fn.apply(self, args);\n    }\n\n    function instantiate(Type, locals) {\n      var Constructor = function() {},\n          instance, returnedValue;\n\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;\n      instance = new Constructor();\n      returnedValue = invoke(Type, instance, locals);\n\n      return isObject(returnedValue) || isFunction(returnedValue) ? returnedValue : instance;\n    }\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: annotate,\n      has: function(name) {\n        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);\n      }\n    };\n  }\n}\n\n/**\n * @ngdoc service\n * @name $anchorScroll\n * @kind function\n * @requires $window\n * @requires $location\n * @requires $rootScope\n *\n * @description\n * When called, it checks current value of `$location.hash()` and scrolls to the related element,\n * according to rules specified in\n * [Html5 spec](http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document).\n *\n * It also watches the `$location.hash()` and scrolls whenever it changes to match any anchor.\n * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <div id=\"scrollArea\" ng-controller=\"ScrollCtrl\">\n         <a ng-click=\"gotoBottom()\">Go to bottom</a>\n         <a id=\"bottom\"></a> You're at the bottom!\n       </div>\n     </file>\n     <file name=\"script.js\">\n       function ScrollCtrl($scope, $location, $anchorScroll) {\n         $scope.gotoBottom = function (){\n           // set the location.hash to the id of\n           // the element you wish to scroll to.\n           $location.hash('bottom');\n\n           // call $anchorScroll()\n           $anchorScroll();\n         };\n       }\n     </file>\n     <file name=\"style.css\">\n       #scrollArea {\n         height: 350px;\n         overflow: auto;\n       }\n\n       #bottom {\n         display: block;\n         margin-top: 2000px;\n       }\n     </file>\n   </example>\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $anchorScrollProvider#disableAutoScrolling\n   *\n   * @description\n   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\n   * Use this method to disable automatic scrolling.\n   *\n   * If automatic scrolling is disabled, one must explicitly call\n   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\n   * current hash.\n   */\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // helper function to get first anchor from a NodeList\n    // can't use filter.filter, as it accepts only instances of Array\n    // and IE can't convert NodeList to an array using [].slice\n    // TODO(vojta): use filter if we change it to accept lists as well\n    function getFirstAnchor(list) {\n      var result = null;\n      forEach(list, function(element) {\n        if (!result && lowercase(element.nodeName) === 'a') result = element;\n      });\n      return result;\n    }\n\n    function scroll() {\n      var hash = $location.hash(), elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) $window.scrollTo(0, 0);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) elm.scrollIntoView();\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();\n\n      // no element and hash == 'top', scroll to the top of the page\n      else if (hash === 'top') $window.scrollTo(0, 0);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction() {\n          $rootScope.$evalAsync(scroll);\n        });\n    }\n\n    return scroll;\n  }];\n}\n\nvar $animateMinErr = minErr('$animate');\n\n/**\n * @ngdoc provider\n * @name $animateProvider\n *\n * @description\n * Default implementation of $animate that doesn't perform any animations, instead just\n * synchronously performs DOM\n * updates and calls done() callbacks.\n *\n * In order to enable animations the ngAnimate module has to be loaded.\n *\n * To see the functional implementation check out src/ngAnimate/animate.js\n */\nvar $AnimateProvider = ['$provide', function($provide) {\n\n\n  this.$$selectors = {};\n\n\n  /**\n   * @ngdoc method\n   * @name $animateProvider#register\n   *\n   * @description\n   * Registers a new injectable animation factory function. The factory function produces the\n   * animation object which contains callback functions for each event that is expected to be\n   * animated.\n   *\n   *   * `eventFn`: `function(Element, doneFunction)` The element to animate, the `doneFunction`\n   *   must be called once the element animation is complete. If a function is returned then the\n   *   animation service will use this function to cancel the animation whenever a cancel event is\n   *   triggered.\n   *\n   *\n   * ```js\n   *   return {\n     *     eventFn : function(element, done) {\n     *       //code to run the animation\n     *       //once complete, then run done()\n     *       return function cancellationFunction() {\n     *         //code to cancel the animation\n     *       }\n     *     }\n     *   }\n   * ```\n   *\n   * @param {string} name The name of the animation.\n   * @param {Function} factory The factory function that will be executed to return the animation\n   *                           object.\n   */\n  this.register = function(name, factory) {\n    var key = name + '-animation';\n    if (name && name.charAt(0) != '.') throw $animateMinErr('notcsel',\n        \"Expecting class selector starting with '.' got '{0}'.\", name);\n    this.$$selectors[name.substr(1)] = key;\n    $provide.factory(key, factory);\n  };\n\n  /**\n   * @ngdoc method\n   * @name $animateProvider#classNameFilter\n   *\n   * @description\n   * Sets and/or returns the CSS class regular expression that is checked when performing\n   * an animation. Upon bootstrap the classNameFilter value is not set at all and will\n   * therefore enable $animate to attempt to perform an animation on any element.\n   * When setting the classNameFilter value, animations will only be performed on elements\n   * that successfully match the filter expression. This in turn can boost performance\n   * for low-powered devices as well as applications containing a lot of structural operations.\n   * @param {RegExp=} expression The className expression which will be checked against all animations\n   * @return {RegExp} The current CSS className expression value. If null then there is no expression value\n   */\n  this.classNameFilter = function(expression) {\n    if(arguments.length === 1) {\n      this.$$classNameFilter = (expression instanceof RegExp) ? expression : null;\n    }\n    return this.$$classNameFilter;\n  };\n\n  this.$get = ['$timeout', '$$asyncCallback', function($timeout, $$asyncCallback) {\n\n    function async(fn) {\n      fn && $$asyncCallback(fn);\n    }\n\n    /**\n     *\n     * @ngdoc service\n     * @name $animate\n     * @description The $animate service provides rudimentary DOM manipulation functions to\n     * insert, remove and move elements within the DOM, as well as adding and removing classes.\n     * This service is the core service used by the ngAnimate $animator service which provides\n     * high-level animation hooks for CSS and JavaScript.\n     *\n     * $animate is available in the AngularJS core, however, the ngAnimate module must be included\n     * to enable full out animation support. Otherwise, $animate will only perform simple DOM\n     * manipulation operations.\n     *\n     * To learn more about enabling animation support, click here to visit the {@link ngAnimate\n     * ngAnimate module page} as well as the {@link ngAnimate.$animate ngAnimate $animate service\n     * page}.\n     */\n    return {\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#enter\n       * @kind function\n       * @description Inserts the element into the DOM either after the `after` element or within\n       *   the `parent` element. Once complete, the done() callback will be fired (if provided).\n       * @param {DOMElement} element the element which will be inserted into the DOM\n       * @param {DOMElement} parent the parent element which will append the element as\n       *   a child (if the after element is not present)\n       * @param {DOMElement} after the sibling element which will append the element\n       *   after itself\n       * @param {Function=} done callback function that will be called after the element has been\n       *   inserted into the DOM\n       */\n      enter : function(element, parent, after, done) {\n        if (after) {\n          after.after(element);\n        } else {\n          if (!parent || !parent[0]) {\n            parent = after.parent();\n          }\n          parent.append(element);\n        }\n        async(done);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#leave\n       * @kind function\n       * @description Removes the element from the DOM. Once complete, the done() callback will be\n       *   fired (if provided).\n       * @param {DOMElement} element the element which will be removed from the DOM\n       * @param {Function=} done callback function that will be called after the element has been\n       *   removed from the DOM\n       */\n      leave : function(element, done) {\n        element.remove();\n        async(done);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#move\n       * @kind function\n       * @description Moves the position of the provided element within the DOM to be placed\n       * either after the `after` element or inside of the `parent` element. Once complete, the\n       * done() callback will be fired (if provided).\n       *\n       * @param {DOMElement} element the element which will be moved around within the\n       *   DOM\n       * @param {DOMElement} parent the parent element where the element will be\n       *   inserted into (if the after element is not present)\n       * @param {DOMElement} after the sibling element where the element will be\n       *   positioned next to\n       * @param {Function=} done the callback function (if provided) that will be fired after the\n       *   element has been moved to its new position\n       */\n      move : function(element, parent, after, done) {\n        // Do not remove element before insert. Removing will cause data associated with the\n        // element to be dropped. Insert will implicitly do the remove.\n        this.enter(element, parent, after, done);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#addClass\n       * @kind function\n       * @description Adds the provided className CSS class value to the provided element. Once\n       * complete, the done() callback will be fired (if provided).\n       * @param {DOMElement} element the element which will have the className value\n       *   added to it\n       * @param {string} className the CSS class which will be added to the element\n       * @param {Function=} done the callback function (if provided) that will be fired after the\n       *   className value has been added to the element\n       */\n      addClass : function(element, className, done) {\n        className = isString(className) ?\n                      className :\n                      isArray(className) ? className.join(' ') : '';\n        forEach(element, function (element) {\n          jqLiteAddClass(element, className);\n        });\n        async(done);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#removeClass\n       * @kind function\n       * @description Removes the provided className CSS class value from the provided element.\n       * Once complete, the done() callback will be fired (if provided).\n       * @param {DOMElement} element the element which will have the className value\n       *   removed from it\n       * @param {string} className the CSS class which will be removed from the element\n       * @param {Function=} done the callback function (if provided) that will be fired after the\n       *   className value has been removed from the element\n       */\n      removeClass : function(element, className, done) {\n        className = isString(className) ?\n                      className :\n                      isArray(className) ? className.join(' ') : '';\n        forEach(element, function (element) {\n          jqLiteRemoveClass(element, className);\n        });\n        async(done);\n      },\n\n      /**\n       *\n       * @ngdoc method\n       * @name $animate#setClass\n       * @kind function\n       * @description Adds and/or removes the given CSS classes to and from the element.\n       * Once complete, the done() callback will be fired (if provided).\n       * @param {DOMElement} element the element which will have its CSS classes changed\n       *   removed from it\n       * @param {string} add the CSS classes which will be added to the element\n       * @param {string} remove the CSS class which will be removed from the element\n       * @param {Function=} done the callback function (if provided) that will be fired after the\n       *   CSS classes have been set on the element\n       */\n      setClass : function(element, add, remove, done) {\n        forEach(element, function (element) {\n          jqLiteAddClass(element, add);\n          jqLiteRemoveClass(element, remove);\n        });\n        async(done);\n      },\n\n      enabled : noop\n    };\n  }];\n}];\n\nfunction $$AsyncCallbackProvider(){\n  this.$get = ['$$rAF', '$timeout', function($$rAF, $timeout) {\n    return $$rAF.supported\n      ? function(fn) { return $$rAF(fn); }\n      : function(fn) {\n        return $timeout(fn, 0, false);\n      };\n  }];\n}\n\n/* global stripHash: true */\n\n/**\n * ! This is a private undocumented service !\n *\n * @name $browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {function()} XHR XMLHttpRequest constructor.\n * @param {object} $log console.log or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      rawDocument = document[0],\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while(outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  function getHash(url) {\n    var index = url.indexOf('#');\n    return index === -1 ? '' : url.substr(index + 1);\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n    // regular poller would result in flaky tests.\n    forEach(pollFns, function(pollFn){ pollFn(); });\n\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Poll Watcher API\n  //////////////////////////////////////////////////////////////\n  var pollFns = [],\n      pollTimeout;\n\n  /**\n   * @name $browser#addPollFn\n   *\n   * @param {function()} fn Poll function to add\n   *\n   * @description\n   * Adds a function to the list of functions that poller periodically executes,\n   * and starts polling if not started yet.\n   *\n   * @returns {function()} the added function\n   */\n  self.addPollFn = function(fn) {\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n    pollFns.push(fn);\n    return fn;\n  };\n\n  /**\n   * @param {number} interval How often should browser call poll functions (ms)\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n   *\n   * @description\n   * Configures the poller to run in the specified intervals, using the specified\n   * setTimeout fn and kicks it off.\n   */\n  function startPoller(interval, setTimeout) {\n    (function check() {\n      forEach(pollFns, function(pollFn){ pollFn(); });\n      pollTimeout = setTimeout(check, interval);\n    })();\n  }\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var lastBrowserUrl = location.href,\n      baseElement = document.find('base'),\n      reloadLocation = null;\n\n  /**\n   * @name $browser#url\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record ?\n   */\n  self.url = function(url, replace) {\n    // Android Browser BFCache causes location, history reference to become stale.\n    if (location !== window.location) location = window.location;\n    if (history !== window.history) history = window.history;\n\n    // setter\n    if (url) {\n      if (lastBrowserUrl == url) return;\n      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);\n      lastBrowserUrl = url;\n      // Don't use history API if only the hash changed\n      // due to a bug in IE10/IE11 which leads\n      // to not firing a `hashchange` nor `popstate` event\n      // in some cases (see #9143).\n      if (!sameBase && $sniffer.history) {\n        if (replace) history.replaceState(null, '', url);\n        else {\n          history.pushState(null, '', url);\n          // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462\n          baseElement.attr('href', baseElement.attr('href'));\n        }\n      } else {\n        if (!sameBase) {\n          reloadLocation = url;\n        }\n        if (replace) {\n          location.replace(url);\n        } else if (!sameBase) {\n          location.href = url;\n        } else {\n          location.hash = getHash(url);\n        }\n      }\n      return self;\n    // getter\n    } else {\n      // - reloadLocation is needed as browsers don't allow to read out\n      //   the new location.href if a reload happened.\n      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return reloadLocation || location.href.replace(/%27/g,\"'\");\n    }\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function fireUrlChange() {\n    if (lastBrowserUrl == self.url()) return;\n\n    lastBrowserUrl = self.url();\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url());\n    });\n  }\n\n  /**\n   * @name $browser#onUrlChange\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed from outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    // TODO(vojta): refactor to use node's syntax for events\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).on('popstate', fireUrlChange);\n      // hashchange event\n      if ($sniffer.hashchange) jqLite(window).on('hashchange', fireUrlChange);\n      // polling\n      else self.addPollFn(fireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  /**\n   * Checks whether the url has changed outside of Angular.\n   * Needs to be exported to be able to check for changes that have been done in sync,\n   * as hashchange/popstate events fire in async.\n   */\n  self.$$checkUrlChange = fireUrlChange;\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * @name $browser#baseHref\n   *\n   * @description\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string} The current base href\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^(https?\\:)?\\/\\/[^\\/]*/, '') : '';\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Cookies API\n  //////////////////////////////////////////////////////////////\n  var lastCookies = {};\n  var lastCookieString = '';\n  var cookiePath = self.baseHref();\n\n  /**\n   * @name $browser#cookies\n   *\n   * @param {string=} name Cookie name\n   * @param {string=} value Cookie value\n   *\n   * @description\n   * The cookies method provides a 'private' low level access to browser cookies.\n   * It is not meant to be used directly, use the $cookie service instead.\n   *\n   * The return values vary depending on the arguments that the method was called with as follows:\n   *\n   * - cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify\n   *   it\n   * - cookies(name, value) -> set name to value, if value is undefined delete the cookie\n   * - cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that\n   *   way)\n   *\n   * @returns {Object} Hash of all cookies (if called without any parameter)\n   */\n  self.cookies = function(name, value) {\n    /* global escape: false, unescape: false */\n    var cookieLength, cookieArray, cookie, i, index;\n\n    if (name) {\n      if (value === undefined) {\n        rawDocument.cookie = escape(name) + \"=;path=\" + cookiePath +\n                                \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n      } else {\n        if (isString(value)) {\n          cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) +\n                                ';path=' + cookiePath).length + 1;\n\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n          // - 300 cookies\n          // - 20 cookies per unique domain\n          // - 4096 bytes per cookie\n          if (cookieLength > 4096) {\n            $log.warn(\"Cookie '\"+ name +\n              \"' possibly not set or overflowed because it was too large (\"+\n              cookieLength + \" > 4096 bytes)!\");\n          }\n        }\n      }\n    } else {\n      if (rawDocument.cookie !== lastCookieString) {\n        lastCookieString = rawDocument.cookie;\n        cookieArray = lastCookieString.split(\"; \");\n        lastCookies = {};\n\n        for (i = 0; i < cookieArray.length; i++) {\n          cookie = cookieArray[i];\n          index = cookie.indexOf('=');\n          if (index > 0) { //ignore nameless cookies\n            name = unescape(cookie.substring(0, index));\n            // the first value that is seen for a cookie is the most\n            // specific one.  values for the same cookie name that\n            // follow are for less specific paths.\n            if (lastCookies[name] === undefined) {\n              lastCookies[name] = unescape(cookie.substring(index + 1));\n            }\n          }\n        }\n      }\n      return lastCookies;\n    }\n  };\n\n\n  /**\n   * @name $browser#defer\n   * @param {function()} fn A function, who's execution should be deferred.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchronously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name $browser#defer.cancel\n   *\n   * @description\n   * Cancels a deferred task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n   *                    canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\nfunction $BrowserProvider(){\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function( $window,   $log,   $sniffer,   $document){\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc service\n * @name $cacheFactory\n *\n * @description\n * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\n * them.\n *\n * ```js\n *\n *  var cache = $cacheFactory('cacheId');\n *  expect($cacheFactory.get('cacheId')).toBe(cache);\n *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n *\n *  cache.put(\"key\", \"value\");\n *  cache.put(\"another key\", \"another value\");\n *\n *  // We've specified no options on creation\n *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n *\n * ```\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n *   it.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n * @example\n   <example module=\"cacheExampleApp\">\n     <file name=\"index.html\">\n       <div ng-controller=\"CacheController\">\n         <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n         <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n         <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\n         <p ng-if=\"keys.length\">Cached Values</p>\n         <div ng-repeat=\"key in keys\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"cache.get(key)\"></b>\n         </div>\n\n         <p>Cache Info</p>\n         <div ng-repeat=\"(key, value) in cache.info()\">\n           <span ng-bind=\"key\"></span>\n           <span>: </span>\n           <b ng-bind=\"value\"></b>\n         </div>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('cacheExampleApp', []).\n         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n           $scope.keys = [];\n           $scope.cache = $cacheFactory('cacheId');\n           $scope.put = function(key, value) {\n             if ($scope.cache.get(key) === undefined) {\n               $scope.keys.push(key);\n             }\n             $scope.cache.put(key, value === undefined ? null : value);\n           };\n         }]);\n     </file>\n     <file name=\"style.css\">\n       p {\n         margin: 10px 0 3px;\n       }\n     </file>\n   </example>\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw minErr('$cacheFactory')('iid', \"CacheId '{0}' is already taken!\", cacheId);\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = {},\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = {},\n          freshEnd = null,\n          staleEnd = null;\n\n      /**\n       * @ngdoc type\n       * @name $cacheFactory.Cache\n       *\n       * @description\n       * A cache object used to store and retrieve data, primarily used by\n       * {@link $http $http} and the {@link ng.directive:script script} directive to cache\n       * templates and other data.\n       *\n       * ```js\n       *  angular.module('superCache')\n       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n       *      return $cacheFactory('super-cache');\n       *    }]);\n       * ```\n       *\n       * Example test:\n       *\n       * ```js\n       *  it('should behave like a cache', inject(function(superCache) {\n       *    superCache.put('key', 'value');\n       *    superCache.put('another key', 'another value');\n       *\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 2\n       *    });\n       *\n       *    superCache.remove('another key');\n       *    expect(superCache.get('another key')).toBeUndefined();\n       *\n       *    superCache.removeAll();\n       *    expect(superCache.info()).toEqual({\n       *      id: 'super-cache',\n       *      size: 0\n       *    });\n       *  }));\n       * ```\n       */\n      return caches[cacheId] = {\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#put\n         * @kind function\n         *\n         * @description\n         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\n         * retrieved later, and incrementing the size of the cache if the key was not already\n         * present in the cache. If behaving like an LRU cache, it will also remove stale\n         * entries from the set.\n         *\n         * It will not insert undefined values into the cache.\n         *\n         * @param {string} key the key under which the cached data is stored.\n         * @param {*} value the value to store alongside the key. If it is undefined, the key\n         *    will not be stored.\n         * @returns {*} the value stored.\n         */\n        put: function(key, value) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n            refresh(lruEntry);\n          }\n\n          if (isUndefined(value)) return;\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n\n          return value;\n        },\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#get\n         * @kind function\n         *\n         * @description\n         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the data to be retrieved\n         * @returns {*} the value stored.\n         */\n        get: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            refresh(lruEntry);\n          }\n\n          return data[key];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#remove\n         * @kind function\n         *\n         * @description\n         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.\n         *\n         * @param {string} key the key of the entry to be removed\n         */\n        remove: function(key) {\n          if (capacity < Number.MAX_VALUE) {\n            var lruEntry = lruHash[key];\n\n            if (!lruEntry) return;\n\n            if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n            if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n            link(lruEntry.n,lruEntry.p);\n\n            delete lruHash[key];\n          }\n\n          delete data[key];\n          size--;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#removeAll\n         * @kind function\n         *\n         * @description\n         * Clears the cache object of any entries.\n         */\n        removeAll: function() {\n          data = {};\n          size = 0;\n          lruHash = {};\n          freshEnd = staleEnd = null;\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#destroy\n         * @kind function\n         *\n         * @description\n         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,\n         * removing it from the {@link $cacheFactory $cacheFactory} set.\n         */\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        /**\n         * @ngdoc method\n         * @name $cacheFactory.Cache#info\n         * @kind function\n         *\n         * @description\n         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.\n         *\n         * @returns {object} an object with the following properties:\n         *   <ul>\n         *     <li>**id**: the id of the cache instance</li>\n         *     <li>**size**: the number of entries kept in the cache instance</li>\n         *     <li>**...**: any additional properties from the options object when creating the\n         *       cache.</li>\n         *   </ul>\n         */\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      };\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry != freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd == entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry != prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#info\n   *\n   * @description\n   * Get information about all the caches that have been created\n   *\n   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\n   */\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n  /**\n   * @ngdoc method\n   * @name $cacheFactory#get\n   *\n   * @description\n   * Get access to a cache object by the `cacheId` used when it was created.\n   *\n   * @param {string} cacheId Name or id of a cache to access.\n   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\n   */\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc service\n * @name $templateCache\n *\n * @description\n * The first time a template is used, it is loaded in the template cache for quick retrieval. You\n * can load templates directly into the cache in a `script` tag, or by consuming the\n * `$templateCache` service directly.\n *\n * Adding via the `script` tag:\n *\n * ```html\n *   <script type=\"text/ng-template\" id=\"templateId.html\">\n *     <p>This is the content of the template</p>\n *   </script>\n * ```\n *\n * **Note:** the `script` tag containing the template does not need to be included in the `head` of\n * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\n * element with ng-app attribute), otherwise the template will be ignored.\n *\n * Adding via the $templateCache service:\n *\n * ```js\n * var myApp = angular.module('myApp', []);\n * myApp.run(function($templateCache) {\n *   $templateCache.put('templateId.html', 'This is the content of the template');\n * });\n * ```\n *\n * To retrieve the template later, simply use it in your HTML:\n * ```html\n * <div ng-include=\" 'templateId.html' \"></div>\n * ```\n *\n * or get it via Javascript:\n * ```js\n * $templateCache.get('templateId.html')\n * ```\n *\n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\n/**\n * @ngdoc service\n * @name $compile\n * @kind function\n *\n * @description\n * Compiles an HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n *\n * The compilation is a process of walking the DOM tree and matching DOM elements to\n * {@link ng.$compileProvider#directive directives}.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** This document is an in-depth reference of all directive options.\n * For a gentle introduction to directives with examples of common use cases,\n * see the {@link guide/directive directive guide}.\n * </div>\n *\n * ## Comprehensive Directive API\n *\n * There are many different options for a directive.\n *\n * The difference resides in the return value of the factory function.\n * You can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\n * or just the `postLink` function (all other properties will have the default values).\n *\n * <div class=\"alert alert-success\">\n * **Best Practice:** It's recommended to use the \"directive definition object\" form.\n * </div>\n *\n * Here's an example directive declared with a Directive Definition Object:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       priority: 0,\n *       template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n *       // or\n *       // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n *       transclude: false,\n *       restrict: 'A',\n *       scope: false,\n *       controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n *       controllerAs: 'stringAlias',\n *       require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n *       compile: function compile(tElement, tAttrs, transclude) {\n *         return {\n *           pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n *           post: function postLink(scope, iElement, iAttrs, controller) { ... }\n *         }\n *         // or\n *         // return function postLink( ... ) { ... }\n *       },\n *       // or\n *       // link: {\n *       //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n *       //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n *       // }\n *       // or\n *       // link: function postLink( ... ) { ... }\n *     };\n *     return directiveDefinitionObject;\n *   });\n * ```\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Any unspecified options will use the default value. You can see the default values below.\n * </div>\n *\n * Therefore the above can be simplified as:\n *\n * ```js\n *   var myModule = angular.module(...);\n *\n *   myModule.directive('directiveName', function factory(injectables) {\n *     var directiveDefinitionObject = {\n *       link: function postLink(scope, iElement, iAttrs) { ... }\n *     };\n *     return directiveDefinitionObject;\n *     // or\n *     // return function postLink(scope, iElement, iAttrs) { ... }\n *   });\n * ```\n *\n *\n *\n * ### Directive Definition Object\n *\n * The directive definition object provides instructions to the {@link ng.$compile\n * compiler}. The attributes are:\n *\n * #### `priority`\n * When there are multiple directives defined on a single DOM element, sometimes it\n * is necessary to specify the order in which the directives are applied. The `priority` is used\n * to sort the directives before their `compile` functions get called. Priority is defined as a\n * number. Directives with greater numerical `priority` are compiled first. Pre-link functions\n * are also run in priority order, but post-link functions are run in reverse order. The order\n * of directives with the same priority is undefined. The default priority is `0`.\n *\n * #### `terminal`\n * If set to true then the current `priority` will be the last set of directives\n * which will execute (any directives at the current priority will still execute\n * as the order of execution on same `priority` is undefined).\n *\n * #### `scope`\n * **If set to `true`,** then a new scope will be created for this directive. If multiple directives on the\n * same element request a new scope, only one new scope is created. The new scope rule does not\n * apply for the root of the template since the root of the template always gets a new scope.\n *\n * **If set to `{}` (object hash),** then a new \"isolate\" scope is created. The 'isolate' scope differs from\n * normal scope in that it does not prototypically inherit from the parent scope. This is useful\n * when creating reusable components, which should not accidentally read or modify data in the\n * parent scope.\n *\n * The 'isolate' scope takes an object hash which defines a set of local scope properties\n * derived from the parent scope. These local properties are useful for aliasing values for\n * templates. Locals definition is a hash of local scope property to its source:\n *\n * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n *   always a string since DOM attributes are strings. If no `attr` name is specified  then the\n *   attribute name is assumed to be the same as the local name.\n *   Given `<widget my-attr=\"hello {{name}}\">` and widget definition\n *   of `scope: { localName:'@myAttr' }`, then widget scope property `localName` will reflect\n *   the interpolated value of `hello {{name}}`. As the `name` attribute changes so will the\n *   `localName` property on the widget scope. The `name` is read from the parent scope (not\n *   component scope).\n *\n * * `=` or `=attr` - set up bi-directional binding between a local scope property and the\n *   parent scope property of name defined via the value of the `attr` attribute. If no `attr`\n *   name is specified then the attribute name is assumed to be the same as the local name.\n *   Given `<widget my-attr=\"parentModel\">` and widget definition of\n *   `scope: { localModel:'=myAttr' }`, then widget scope property `localModel` will reflect the\n *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n *   in `localModel` and any changes in `localModel` will reflect in `parentModel`. If the parent\n *   scope property doesn't exist, it will throw a NON_ASSIGNABLE_MODEL_EXPRESSION exception. You\n *   can avoid this behavior using `=?` or `=?attr` in order to flag the property as optional.\n *\n * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope.\n *   If no `attr` name is specified then the attribute name is assumed to be the same as the\n *   local name. Given `<widget my-attr=\"count = count + value\">` and widget definition of\n *   `scope: { localFn:'&myAttr' }`, then isolate scope property `localFn` will point to\n *   a function wrapper for the `count = count + value` expression. Often it's desirable to\n *   pass data from the isolated scope via an expression to the parent scope, this can be\n *   done by passing a map of local variable names and values into the expression wrapper fn.\n *   For example, if the expression is `increment(amount)` then we can specify the amount value\n *   by calling the `localFn` as `localFn({amount: 22})`.\n *\n *\n *\n * #### `controller`\n * Controller constructor function. The controller is instantiated before the\n * pre-linking phase and it is shared with other directives (see\n * `require` attribute). This allows the directives to communicate with each other and augment\n * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n *\n * * `$scope` - Current scope associated with the element\n * * `$element` - Current element\n * * `$attrs` - Current attributes object for the element\n * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope.\n *    The scope can be overridden by an optional first argument.\n *   `function([scope], cloneLinkingFn)`.\n *\n *\n * #### `require`\n * Require another directive and inject its controller as the fourth argument to the linking function. The\n * `require` takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the\n * injected argument will be an array in corresponding order. If no such directive can be\n * found, or if the directive does not have a controller, then an error is raised. The name can be prefixed with:\n *\n * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n *   `null` to the `link` fn if not found.\n *\n *\n * #### `controllerAs`\n * Controller alias at the directive scope. An alias for the controller so it\n * can be referenced at the directive template. The directive needs to define a scope for this\n * configuration to be used. Useful in the case when directive is used as component.\n *\n *\n * #### `restrict`\n * String of subset of `EACM` which restricts the directive to a specific directive\n * declaration style. If omitted, the default (attributes only) is used.\n *\n * * `E` - Element name: `<my-directive></my-directive>`\n * * `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n * * `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n * * `M` - Comment: `<!-- directive: my-directive exp -->`\n *\n *\n * #### `template`\n * HTML markup that may:\n * * Replace the contents of the directive's element (default).\n * * Replace the directive's element itself (if `replace` is true - DEPRECATED).\n * * Wrap the contents of the directive's element (if `transclude` is true).\n *\n * Value may be:\n *\n * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n *   function api below) and returns a string value.\n *\n *\n * #### `templateUrl`\n * Same as `template` but the template is loaded from the specified URL. Because\n * the template loading is asynchronous the compilation/linking is suspended until the template\n * is loaded.\n *\n * You can specify `templateUrl` as a string representing the URL or as a function which takes two\n * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\n * a string value representing the url.  In either case, the template URL is passed through {@link\n * api/ng.$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n *\n *\n * #### `replace` ([*DEPRECATED*!], will be removed in next major release)\n * specify what the template should replace. Defaults to `false`.\n *\n * * `true` - the template will replace the directive's element.\n * * `false` - the template will replace the contents of the directive's element.\n *\n * The replacement process migrates all of the attributes / classes from the old element to the new\n * one. See the {@link guide/directive#creating-custom-directives_creating-directives_template-expanding-directive\n * Directives Guide} for an example.\n *\n * #### `transclude`\n * compile the content of the element and make it available to the directive.\n * Typically used with {@link ng.directive:ngTransclude\n * ngTransclude}. The advantage of transclusion is that the linking function receives a\n * transclusion function which is pre-bound to the correct scope. In a typical setup the widget\n * creates an `isolate` scope, but the transclusion is not a child, but a sibling of the `isolate`\n * scope. This makes it possible for the widget to have private state, and the transclusion to\n * be bound to the parent (pre-`isolate`) scope.\n *\n * There are two kinds of transclusion depending upon whether you want to transclude just the contents of the\n * directive's element or the entire element:\n *\n * * `true` - transclude the content (i.e. the child nodes) of the directive's element.\n * * `'element'` - transclude the whole of the directive's element including any directives on this\n *   element that defined at a lower priority than this directive. When used, the `template`\n *   property is ignored.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** When testing an element transclude directive you must not place the directive at the root of the\n * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\n * Testing Transclusion Directives}.\n * </div>\n *\n * #### `compile`\n *\n * ```js\n *   function compile(tElement, tAttrs, transclude) { ... }\n * ```\n *\n * The compile function deals with transforming the template DOM. Since most directives do not do\n * template transformation, it is not used often. The compile function takes the following arguments:\n *\n *   * `tElement` - template element - The element where the directive has been declared. It is\n *     safe to do template transformation on the element and child elements only.\n *\n *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n *     between all directive compile functions.\n *\n *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n *\n * <div class=\"alert alert-warning\">\n * **Note:** The template instance and the link instance may be different objects if the template has\n * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that\n * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\n * should be done in a linking function rather than in a compile function.\n * </div>\n\n * <div class=\"alert alert-warning\">\n * **Note:** The compile function cannot handle directives that recursively use themselves in their\n * own templates or compile functions. Compiling these directives results in an infinite loop and a\n * stack overflow errors.\n *\n * This can be avoided by manually using $compile in the postLink function to imperatively compile\n * a directive's template instead of relying on automatic template compilation via `template` or\n * `templateUrl` declaration or manual compilation inside the compile function.\n * </div>\n *\n * <div class=\"alert alert-error\">\n * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n *   e.g. does not know about the right outer scope. Please use the transclude function that is passed\n *   to the link function instead.\n * </div>\n\n * A compile function can have a return value which can be either a function or an object.\n *\n * * returning a (post-link) function - is equivalent to registering the linking function via the\n *   `link` property of the config object when the compile function is empty.\n *\n * * returning an object with function(s) registered via `pre` and `post` properties - allows you to\n *   control when a linking function should be called during the linking phase. See info about\n *   pre-linking and post-linking functions below.\n *\n *\n * #### `link`\n * This property is used only if the `compile` property is not defined.\n *\n * ```js\n *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n * ```\n *\n * The link function is responsible for registering DOM listeners as well as updating the DOM. It is\n * executed after the template has been cloned. This is where most of the directive logic will be\n * put.\n *\n *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n *\n *   * `iElement` - instance element - The element where the directive is to be used. It is safe to\n *     manipulate the children of the element only in `postLink` function since the children have\n *     already been linked.\n *\n *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n *     between all directive linking functions.\n *\n *   * `controller` - a controller instance - A controller instance if at least one directive on the\n *     element defines a controller. The controller is shared among all the directives, which allows\n *     the directives to use the controllers as a communication channel.\n *\n *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n *     The scope can be overridden by an optional first argument. This is the same as the `$transclude`\n *     parameter of directive controllers.\n *     `function([scope], cloneLinkingFn)`.\n *\n *\n * #### Pre-linking function\n *\n * Executed before the child elements are linked. Not safe to do DOM transformation since the\n * compiler linking function will fail to locate the correct elements for linking.\n *\n * #### Post-linking function\n *\n * Executed after the child elements are linked. It is safe to do DOM transformation in the post-linking function.\n *\n * <a name=\"Attributes\"></a>\n * ### Attributes\n *\n * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n * `link()` or `compile()` functions. It has a variety of uses.\n *\n * accessing *Normalized attribute names:*\n * Directives like 'ngBind' can be expressed in many ways: 'ng:bind', `data-ng-bind`, or 'x-ng-bind'.\n * the attributes object allows for normalized access to\n *   the attributes.\n *\n * * *Directive inter-communication:* All directives share the same instance of the attributes\n *   object which allows the directives to use the attributes object as inter directive\n *   communication.\n *\n * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n *   allowing other directives to read the interpolated value.\n *\n * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n *   that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n *   the only way to easily get the actual value because during the linking phase the interpolation\n *   hasn't been evaluated yet and so the value is at this time set to `undefined`.\n *\n * ```js\n * function linkingFn(scope, elm, attrs, ctrl) {\n *   // get the attribute value\n *   console.log(attrs.ngModel);\n *\n *   // change the attribute\n *   attrs.$set('ngModel', 'new value');\n *\n *   // observe changes to interpolated attribute\n *   attrs.$observe('ngModel', function(value) {\n *     console.log('ngModel has changed value to ' + value);\n *   });\n * }\n * ```\n *\n * ## Example\n *\n * <div class=\"alert alert-warning\">\n * **Note**: Typically directives are registered with `module.directive`. The example below is\n * to illustrate how `$compile` works.\n * </div>\n *\n <example module=\"compileExample\">\n   <file name=\"index.html\">\n    <script>\n      angular.module('compileExample', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        });\n      })\n      .controller('GreeterController', ['$scope', function($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }]);\n    </script>\n    <div ng-controller=\"GreeterController\">\n      <input ng-model=\"name\"> <br>\n      <textarea ng-model=\"html\"></textarea> <br>\n      <div compile=\"html\"></div>\n    </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should auto compile', function() {\n       var textarea = $('textarea');\n       var output = $('div[compile]');\n       // The initial state reads 'Hello Angular'.\n       expect(output.getText()).toBe('Hello Angular');\n       textarea.clear();\n       textarea.sendKeys('{{name}}!');\n       expect(output.getText()).toBe('Angular!');\n     });\n   </file>\n </example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives.\n * @param {number} maxPriority only apply directives lower than given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope, cloneAttachFn=)} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *  `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *  called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n * Calling the linking function returns the element of the template. It is either the original\n * element passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   ```js\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   ```\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   ```js\n *     var templateElement = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clonedElement`\n *   ```\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n */\n\nvar $compileMinErr = minErr('$compile');\n\n/**\n * @ngdoc provider\n * @name $compileProvider\n * @kind function\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];\nfunction $CompileProvider($provide, $$sanitizeUriProvider) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\d\\w_\\-]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\d\\w_\\-]+)(?:\\:([^;]+))?;?)/;\n\n  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes\n  // The assumption is that future DOM event attribute names will begin with\n  // 'on' and be composed of only English letters.\n  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#directive\n   * @kind function\n   *\n   * @description\n   * Register a new directive with the compiler.\n   *\n   * @param {string|Object} name Name of the directive in camel-case (i.e. <code>ngBind</code> which\n   *    will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n   *    names and the values are the factories.\n   * @param {Function|Array} directiveFactory An injectable directive factory function. See\n   *    {@link guide/directive} for more info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n   this.directive = function registerDirective(name, directiveFactory) {\n    assertNotHasOwnProperty(name, 'directive');\n    if (isString(name)) {\n      assertArg(directiveFactory, 'directiveFactory');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory, index) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.index = index;\n                directive.name = directive.name || name;\n                directive.require = directive.require || (directive.controller && directive.name);\n                directive.restrict = directive.restrict || 'A';\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#aHrefSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.aHrefSanitizationWhitelist();\n    }\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $compileProvider#imgSrcSanitizationWhitelist\n   * @kind function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      $$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp);\n      return this;\n    } else {\n      return $$sanitizeUriProvider.imgSrcSanitizationWhitelist();\n    }\n  };\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$http', '$templateCache', '$parse',\n            '$controller', '$rootScope', '$document', '$sce', '$animate', '$$sanitizeUri',\n    function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,\n             $controller,   $rootScope,   $document,   $sce,   $animate,   $$sanitizeUri) {\n\n    var Attributes = function(element, attr) {\n      this.$$element = element;\n      this.$attr = attr || {};\n    };\n\n    Attributes.prototype = {\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$normalize\n       * @kind function\n       *\n       * @description\n       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n       * `data-`) to its normalized, camelCase form.\n       *\n       * Also there is special case for Moz prefix starting with upper case letter.\n       *\n       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n       *\n       * @param {string} name Name to normalize\n       */\n      $normalize: directiveNormalize,\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$addClass\n       * @kind function\n       *\n       * @description\n       * Adds the CSS class value specified by the classVal parameter to the element. If animations\n       * are enabled then an animation will be triggered for the class addition.\n       *\n       * @param {string} classVal The className value that will be added to the element\n       */\n      $addClass : function(classVal) {\n        if(classVal && classVal.length > 0) {\n          $animate.addClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$removeClass\n       * @kind function\n       *\n       * @description\n       * Removes the CSS class value specified by the classVal parameter from the element. If\n       * animations are enabled then an animation will be triggered for the class removal.\n       *\n       * @param {string} classVal The className value that will be removed from the element\n       */\n      $removeClass : function(classVal) {\n        if(classVal && classVal.length > 0) {\n          $animate.removeClass(this.$$element, classVal);\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$updateClass\n       * @kind function\n       *\n       * @description\n       * Adds and removes the appropriate CSS class values to the element based on the difference\n       * between the new and old CSS class values (specified as newClasses and oldClasses).\n       *\n       * @param {string} newClasses The current CSS className value\n       * @param {string} oldClasses The former CSS className value\n       */\n      $updateClass : function(newClasses, oldClasses) {\n        var toAdd = tokenDifference(newClasses, oldClasses);\n        var toRemove = tokenDifference(oldClasses, newClasses);\n\n        if(toAdd.length === 0) {\n          $animate.removeClass(this.$$element, toRemove);\n        } else if(toRemove.length === 0) {\n          $animate.addClass(this.$$element, toAdd);\n        } else {\n          $animate.setClass(this.$$element, toAdd, toRemove);\n        }\n      },\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        // TODO: decide whether or not to throw an error if \"class\"\n        //is set through this function since it may cause $updateClass to\n        //become unstable.\n\n        var booleanKey = getBooleanAttrName(this.$$element[0], key),\n            normalizedVal,\n            nodeName;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n        nodeName = nodeName_(this.$$element);\n\n        // sanitize a[href] and img[src] values\n        if ((nodeName === 'A' && key === 'href') ||\n            (nodeName === 'IMG' && key === 'src')) {\n          this[key] = value = $$sanitizeUri(value, key === 'src');\n        }\n\n        if (writeAttr !== false) {\n          if (value === null || value === undefined) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            this.$$element.attr(attrName, value);\n          }\n        }\n\n        // fire observers\n        var $$observers = this.$$observers;\n        $$observers && forEach($$observers[key], function(fn) {\n          try {\n            fn(value);\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        });\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $compile.directive.Attributes#$observe\n       * @kind function\n       *\n       * @description\n       * Observes an interpolated attribute.\n       *\n       * The observer function will be invoked once during the next `$digest` following\n       * compilation. The observer is then invoked whenever the interpolated value\n       * changes.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(interpolatedValue)} fn Function that will be called whenever\n                the interpolated value of the attribute changes.\n       *        See the {@link guide/directive#Attributes Directives} guide for more info.\n       * @returns {function()} the `fn` parameter.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = {})),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n        return fn;\n      }\n    };\n\n    var startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n        },\n        NG_ATTR_BINDING = /^ngAttr[A-Z]/;\n\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,\n                        previousCompileContext) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can\n        // modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      // We can not compile top level text elements since text nodes can be merged and we will\n      // not be able to attach scope data to them, so we will wrap them in <span>\n      forEach($compileNodes, function(node, index){\n        if (node.nodeType == 3 /* text node */ && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n          $compileNodes[index] = node = jqLite(node).wrap('<span></span>').parent()[0];\n        }\n      });\n      var compositeLinkFn =\n              compileNodes($compileNodes, transcludeFn, $compileNodes,\n                           maxPriority, ignoreDirective, previousCompileContext);\n      safeAddClass($compileNodes, 'ng-scope');\n      return function publicLinkFn(scope, cloneConnectFn, transcludeControllers, parentBoundTranscludeFn){\n        assertArg(scope, 'scope');\n        // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n        // and sometimes changes the structure of the DOM.\n        var $linkNode = cloneConnectFn\n          ? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!\n          : $compileNodes;\n\n        forEach(transcludeControllers, function(instance, name) {\n          $linkNode.data('$' + name + 'Controller', instance);\n        });\n\n        // Attach scope only to non-text nodes.\n        for(var i = 0, ii = $linkNode.length; i<ii; i++) {\n          var node = $linkNode[i],\n              nodeType = node.nodeType;\n          if (nodeType === 1 /* element */ || nodeType === 9 /* document */) {\n            $linkNode.eq(i).data('$scope', scope);\n          }\n        }\n\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);\n        return $linkNode;\n      };\n    }\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch(e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then\n     *        the rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} maxPriority Max directive priority.\n     * @returns {Function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,\n                            previousCompileContext) {\n      var linkFns = [],\n          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound;\n\n      for (var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,\n                                        ignoreDirective);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,\n                                      null, [], [], previousCompileContext)\n            : null;\n\n        if (nodeLinkFn && nodeLinkFn.scope) {\n          safeAddClass(attrs.$$element, 'ng-scope');\n        }\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||\n                      !(childNodes = nodeList[i].childNodes) ||\n                      !childNodes.length)\n            ? null\n            : compileNodes(childNodes,\n                 nodeLinkFn ? (\n                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)\n                     && nodeLinkFn.transclude) : transcludeFn);\n\n        linkFns.push(nodeLinkFn, childLinkFn);\n        linkFnFound = linkFnFound || nodeLinkFn || childLinkFn;\n        //use the previous context only for the first element in the virtual group\n        previousCompileContext = null;\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, i, ii, n, childBoundTranscludeFn;\n\n        // copy nodeList so that linking doesn't break due to live list updates.\n        var nodeListLength = nodeList.length,\n            stableNodeList = new Array(nodeListLength);\n        for (i = 0; i < nodeListLength; i++) {\n          stableNodeList[i] = nodeList[i];\n        }\n\n        for(i = 0, n = 0, ii = linkFns.length; i < ii; n++) {\n          node = stableNodeList[n];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new();\n              jqLite.data(node, '$scope', childScope);\n            } else {\n              childScope = scope;\n            }\n\n            if ( nodeLinkFn.transcludeOnThisElement ) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, nodeLinkFn.transclude, parentBoundTranscludeFn);\n\n            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {\n              childBoundTranscludeFn = parentBoundTranscludeFn;\n\n            } else if (!parentBoundTranscludeFn && transcludeFn) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);\n\n            } else {\n              childBoundTranscludeFn = null;\n            }\n\n            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);\n\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);\n          }\n        }\n      }\n    }\n\n    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {\n\n      var boundTranscludeFn = function(transcludedScope, cloneFn, controllers) {\n        var scopeCreated = false;\n\n        if (!transcludedScope) {\n          transcludedScope = scope.$new();\n          transcludedScope.$$transcluded = true;\n          scopeCreated = true;\n        }\n\n        var clone = transcludeFn(transcludedScope, cloneFn, controllers, previousBoundTranscludeFn);\n        if (scopeCreated) {\n          clone.on('$destroy', function() { transcludedScope.$destroy(); });\n        }\n        return clone;\n      };\n\n      return boundTranscludeFn;\n    }\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          className;\n\n      switch(nodeType) {\n        case 1: /* Element */\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority, ignoreDirective);\n\n          // iterate over the attributes\n          for (var attr, name, nName, ngAttrName, value, isNgAttr, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            var attrStartName = false;\n            var attrEndName = false;\n\n            attr = nAttrs[j];\n            if (!msie || msie >= 8 || attr.specified) {\n              name = attr.name;\n              value = trim(attr.value);\n\n              // support ngAttr attribute binding\n              ngAttrName = directiveNormalize(name);\n              if (isNgAttr = NG_ATTR_BINDING.test(ngAttrName)) {\n                name = snake_case(ngAttrName.substr(6), '-');\n              }\n\n              var directiveNName = ngAttrName.replace(/(Start|End)$/, '');\n              if (ngAttrName === directiveNName + 'Start') {\n                attrStartName = name;\n                attrEndName = name.substr(0, name.length - 5) + 'end';\n                name = name.substr(0, name.length - 6);\n              }\n\n              nName = directiveNormalize(name.toLowerCase());\n              attrsMap[nName] = name;\n              if (isNgAttr || !attrs.hasOwnProperty(nName)) {\n                  attrs[nName] = value;\n                  if (getBooleanAttrName(node, nName)) {\n                    attrs[nName] = true; // presence means true\n                  }\n              }\n              addAttrInterpolateDirective(node, directives, value, nName);\n              addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,\n                            attrEndName);\n            }\n          }\n\n          // use class as directive\n          className = node.className;\n          if (isString(className) && className !== '') {\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case 3: /* Text Node */\n          if (msie === 11) {\n            // Workaround for #11781\n            while (node.parentNode && node.nextSibling && node.nextSibling.nodeType === 3 /* Text Node */) {\n              node.nodeValue = node.nodeValue + node.nextSibling.nodeValue;\n              node.parentNode.removeChild(node.nextSibling);\n            }\n          }\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case 8: /* Comment */\n          try {\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n            if (match) {\n              nName = directiveNormalize(match[1]);\n              if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {\n                attrs[nName] = trim(match[2]);\n              }\n            }\n          } catch (e) {\n            // turns out that under some circumstances IE9 throws errors when one attempts to read\n            // comment's node value.\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n          }\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n    /**\n     * Given a node with an directive-start it collects all of the siblings until it finds\n     * directive-end.\n     * @param node\n     * @param attrStart\n     * @param attrEnd\n     * @returns {*}\n     */\n    function groupScan(node, attrStart, attrEnd) {\n      var nodes = [];\n      var depth = 0;\n      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {\n        var startNode = node;\n        do {\n          if (!node) {\n            throw $compileMinErr('uterdir',\n                      \"Unterminated attribute, found '{0}' but no matching '{1}' found.\",\n                      attrStart, attrEnd);\n          }\n          if (node.nodeType == 1 /** Element **/) {\n            if (node.hasAttribute(attrStart)) depth++;\n            if (node.hasAttribute(attrEnd)) depth--;\n          }\n          nodes.push(node);\n          node = node.nextSibling;\n        } while (depth > 0);\n      } else {\n        nodes.push(node);\n      }\n\n      return jqLite(nodes);\n    }\n\n    /**\n     * Wrapper for linking function which converts normal linking function into a grouped\n     * linking function.\n     * @param linkFn\n     * @param attrStart\n     * @param attrEnd\n     * @returns {Function}\n     */\n    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {\n      return function(scope, element, attrs, controllers, transcludeFn) {\n        element = groupScan(element[0], attrStart, attrEnd);\n        return linkFn(scope, element, attrs, controllers, transcludeFn);\n      };\n    }\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the\n     *                                                  scope argument is auto-generated to the new\n     *                                                  child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *                              argument has the root jqLite array so that we can replace nodes\n     *                              on it.\n     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when\n     *                                           compiling the transclusion.\n     * @param {Array.<Function>} preLinkFns\n     * @param {Array.<Function>} postLinkFns\n     * @param {Object} previousCompileContext Context used for previous compilation of the current\n     *                                        node\n     * @returns {Function} linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,\n                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,\n                                   previousCompileContext) {\n      previousCompileContext = previousCompileContext || {};\n\n      var terminalPriority = -Number.MAX_VALUE,\n          newScopeDirective,\n          controllerDirectives = previousCompileContext.controllerDirectives,\n          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,\n          templateDirective = previousCompileContext.templateDirective,\n          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,\n          hasTranscludeDirective = false,\n          hasTemplate = false,\n          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          replaceDirective = originalReplaceDirective,\n          childTranscludeFn = transcludeFn,\n          linkFn,\n          directiveValue;\n\n      // executes all directives on the current element\n      for(var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        var attrStart = directive.$$start;\n        var attrEnd = directive.$$end;\n\n        // collect multiblock sections\n        if (attrStart) {\n          $compileNode = groupScan(compileNode, attrStart, attrEnd);\n        }\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        if (directiveValue = directive.scope) {\n          newScopeDirective = newScopeDirective || directive;\n\n          // skip the check for directives with async templates, we'll check the derived sync\n          // directive when the template arrives\n          if (!directive.templateUrl) {\n            assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,\n                              $compileNode);\n            if (isObject(directiveValue)) {\n              newIsolateScopeDirective = directive;\n            }\n          }\n        }\n\n        directiveName = directive.name;\n\n        if (!directive.templateUrl && directive.controller) {\n          directiveValue = directive.controller;\n          controllerDirectives = controllerDirectives || {};\n          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        if (directiveValue = directive.transclude) {\n          hasTranscludeDirective = true;\n\n          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.\n          // This option should only be used by directives that know how to safely handle element transclusion,\n          // where the transcluded nodes are added or replaced after linking.\n          if (!directive.$$tlb) {\n            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);\n            nonTlbTranscludeDirective = directive;\n          }\n\n          if (directiveValue == 'element') {\n            hasElementTranscludeDirective = true;\n            terminalPriority = directive.priority;\n            $template = $compileNode;\n            $compileNode = templateAttrs.$$element =\n                jqLite(document.createComment(' ' + directiveName + ': ' +\n                                              templateAttrs[directiveName] + ' '));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, sliceArgs($template), compileNode);\n\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority,\n                                        replaceDirective && replaceDirective.name, {\n                                          // Don't pass in:\n                                          // - controllerDirectives - otherwise we'll create duplicates controllers\n                                          // - newIsolateScopeDirective or templateDirective - combining templates with\n                                          //   element transclusion doesn't make sense.\n                                          //\n                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion\n                                          // on the same element more than once.\n                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective\n                                        });\n          } else {\n            $template = jqLite(jqLiteClone(compileNode)).contents();\n            $compileNode.empty(); // clear contents\n            childTranscludeFn = compile($template, transcludeFn);\n          }\n        }\n\n        if (directive.template) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          directiveValue = (isFunction(directive.template))\n              ? directive.template($compileNode, templateAttrs)\n              : directive.template;\n\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            replaceDirective = directive;\n            if (jqLiteIsTextNode(directiveValue)) {\n              $template = [];\n            } else {\n              $template = jqLite(trim(directiveValue));\n            }\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw $compileMinErr('tplrt',\n                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n                  directiveName, '');\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)\n            // - collect directives from the template and sort them by priority\n            // - combine directives as: processed + template + unprocessed\n            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);\n            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));\n\n            if (newIsolateScopeDirective) {\n              markDirectivesAsIsolate(templateDirectives);\n            }\n            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          hasTemplate = true;\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n\n          if (directive.replace) {\n            replaceDirective = directive;\n          }\n\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,\n              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {\n                controllerDirectives: controllerDirectives,\n                newIsolateScopeDirective: newIsolateScopeDirective,\n                templateDirective: templateDirective,\n                nonTlbTranscludeDirective: nonTlbTranscludeDirective\n              });\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            if (isFunction(linkFn)) {\n              addLinkFns(null, linkFn, attrStart, attrEnd);\n            } else if (linkFn) {\n              addLinkFns(linkFn.pre, linkFn.post, attrStart, attrEnd);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;\n      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;\n      nodeLinkFn.templateOnThisElement = hasTemplate;\n      nodeLinkFn.transclude = childTranscludeFn;\n\n      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post, attrStart, attrEnd) {\n        if (pre) {\n          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);\n          pre.require = directive.require;\n          pre.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            pre = cloneAndAnnotateFn(pre, {isolateScope: true});\n          }\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);\n          post.require = directive.require;\n          post.directiveName = directiveName;\n          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {\n            post = cloneAndAnnotateFn(post, {isolateScope: true});\n          }\n          postLinkFns.push(post);\n        }\n      }\n\n\n      function getControllers(directiveName, require, $element, elementControllers) {\n        var value, retrievalMethod = 'data', optional = false;\n        if (isString(require)) {\n          while((value = require.charAt(0)) == '^' || value == '?') {\n            require = require.substr(1);\n            if (value == '^') {\n              retrievalMethod = 'inheritedData';\n            }\n            optional = optional || value == '?';\n          }\n          value = null;\n\n          if (elementControllers && retrievalMethod === 'data') {\n            value = elementControllers[require];\n          }\n          value = value || $element[retrievalMethod]('$' + require + 'Controller');\n\n          if (!value && !optional) {\n            throw $compileMinErr('ctreq',\n                \"Controller '{0}', required by directive '{1}', can't be found!\",\n                require, directiveName);\n          }\n          return value;\n        } else if (isArray(require)) {\n          value = [];\n          forEach(require, function(require) {\n            value.push(getControllers(directiveName, require, $element, elementControllers));\n          });\n        }\n        return value;\n      }\n\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var attrs, $element, i, ii, linkFn, controller, isolateScope, elementControllers = {}, transcludeFn;\n\n        attrs = (compileNode === linkNode)\n          ? templateAttrs\n          : shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));\n        $element = attrs.$$element;\n\n        if (newIsolateScopeDirective) {\n          var LOCAL_REGEXP = /^\\s*([@=&])(\\??)\\s*(\\w*)\\s*$/;\n\n          isolateScope = scope.$new(true);\n\n          if (templateDirective && (templateDirective === newIsolateScopeDirective ||\n              templateDirective === newIsolateScopeDirective.$$originalDirective)) {\n            $element.data('$isolateScope', isolateScope);\n          } else {\n            $element.data('$isolateScopeNoTemplate', isolateScope);\n          }\n\n\n\n          safeAddClass($element, 'ng-isolate-scope');\n\n          forEach(newIsolateScopeDirective.scope, function(definition, scopeName) {\n            var match = definition.match(LOCAL_REGEXP) || [],\n                attrName = match[3] || scopeName,\n                optional = (match[2] == '?'),\n                mode = match[1], // @, =, or &\n                lastValue,\n                parentGet, parentSet, compare;\n\n            isolateScope.$$isolateBindings[scopeName] = mode + attrName;\n\n            switch (mode) {\n\n              case '@':\n                attrs.$observe(attrName, function(value) {\n                  isolateScope[scopeName] = value;\n                });\n                attrs.$$observers[attrName].$$scope = scope;\n                if( attrs[attrName] ) {\n                  // If the attribute has been provided then we trigger an interpolation to ensure\n                  // the value is there for use in the link fn\n                  isolateScope[scopeName] = $interpolate(attrs[attrName])(scope);\n                }\n                break;\n\n              case '=':\n                if (optional && !attrs[attrName]) {\n                  return;\n                }\n                parentGet = $parse(attrs[attrName]);\n                if (parentGet.literal) {\n                  compare = equals;\n                } else {\n                  compare = function(a,b) { return a === b || (a !== a && b !== b); };\n                }\n                parentSet = parentGet.assign || function() {\n                  // reset the change, or we will throw this exception on every $digest\n                  lastValue = isolateScope[scopeName] = parentGet(scope);\n                  throw $compileMinErr('nonassign',\n                      \"Expression '{0}' used with directive '{1}' is non-assignable!\",\n                      attrs[attrName], newIsolateScopeDirective.name);\n                };\n                lastValue = isolateScope[scopeName] = parentGet(scope);\n                isolateScope.$watch(function parentValueWatch() {\n                  var parentValue = parentGet(scope);\n                  if (!compare(parentValue, isolateScope[scopeName])) {\n                    // we are out of sync and need to copy\n                    if (!compare(parentValue, lastValue)) {\n                      // parent changed and it has precedence\n                      isolateScope[scopeName] = parentValue;\n                    } else {\n                      // if the parent can be assigned then do so\n                      parentSet(scope, parentValue = isolateScope[scopeName]);\n                    }\n                  }\n                  return lastValue = parentValue;\n                }, null, parentGet.literal);\n                break;\n\n              case '&':\n                parentGet = $parse(attrs[attrName]);\n                isolateScope[scopeName] = function(locals) {\n                  return parentGet(scope, locals);\n                };\n                break;\n\n              default:\n                throw $compileMinErr('iscp',\n                    \"Invalid isolate scope definition for directive '{0}'.\" +\n                    \" Definition: {... {1}: '{2}' ...}\",\n                    newIsolateScopeDirective.name, scopeName, definition);\n            }\n          });\n        }\n        transcludeFn = boundTranscludeFn && controllersBoundTransclude;\n        if (controllerDirectives) {\n          forEach(controllerDirectives, function(directive) {\n            var locals = {\n              $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,\n              $element: $element,\n              $attrs: attrs,\n              $transclude: transcludeFn\n            }, controllerInstance;\n\n            controller = directive.controller;\n            if (controller == '@') {\n              controller = attrs[directive.name];\n            }\n\n            controllerInstance = $controller(controller, locals);\n            // For directives with element transclusion the element is a comment,\n            // but jQuery .data doesn't support attaching data to comment nodes as it's hard to\n            // clean up (http://bugs.jquery.com/ticket/8335).\n            // Instead, we save the controllers for the element in a local hash and attach to .data\n            // later, once we have the actual element.\n            elementControllers[directive.name] = controllerInstance;\n            if (!hasElementTranscludeDirective) {\n              $element.data('$' + directive.name + 'Controller', controllerInstance);\n            }\n\n            if (directive.controllerAs) {\n              locals.$scope[directive.controllerAs] = controllerInstance;\n            }\n          });\n        }\n\n        // PRELINKING\n        for(i = 0, ii = preLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = preLinkFns[i];\n            linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n\n        // RECURSION\n        // We only pass the isolate scope, if the isolate directive has a template,\n        // otherwise the child elements do not belong to the isolate directive.\n        var scopeToChild = scope;\n        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {\n          scopeToChild = isolateScope;\n        }\n        childLinkFn && childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);\n\n        // POSTLINKING\n        for(i = postLinkFns.length - 1; i >= 0; i--) {\n          try {\n            linkFn = postLinkFns[i];\n            linkFn(linkFn.isolateScope ? isolateScope : scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers), transcludeFn);\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n\n        // This is the function that is injected as `$transclude`.\n        function controllersBoundTransclude(scope, cloneAttachFn) {\n          var transcludeControllers;\n\n          // no scope passed\n          if (arguments.length < 2) {\n            cloneAttachFn = scope;\n            scope = undefined;\n          }\n\n          if (hasElementTranscludeDirective) {\n            transcludeControllers = elementControllers;\n          }\n\n          return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers);\n        }\n      }\n    }\n\n    function markDirectivesAsIsolate(directives) {\n      // mark all directives as needing isolate scope.\n      for (var j = 0, jj = directives.length; j < jj; j++) {\n        directives[j] = inherit(directives[j], {$$isolateScope: true});\n      }\n    }\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns {boolean} true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,\n                          endAttrName) {\n      if (name === ignoreDirective) return null;\n      var match = null;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for(var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i<ii; i++) {\n          try {\n            directive = directives[i];\n            if ( (maxPriority === undefined || maxPriority > directive.priority) &&\n                 directive.restrict.indexOf(location) != -1) {\n              if (startAttrName) {\n                directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});\n              }\n              tDirectives.push(directive);\n              match = directive;\n            }\n          } catch(e) { $exceptionHandler(e); }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr,\n          $element = dst.$$element;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) != '$') {\n          if (src[key] && src[key] !== value) {\n            value += (key === 'style' ? ';' : ' ') + src[key];\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        if (key == 'class') {\n          safeAddClass($element, value);\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n        } else if (key == 'style') {\n          $element.attr('style', $element.attr('style') + ';' + value);\n          dst['style'] = (dst['style'] ? dst['style'] + ';' : '') + value;\n          // `dst` will never contain hasOwnProperty as DOM parser won't let it.\n          // You will get an \"InvalidCharacterError: DOM Exception 5\" error if you\n          // have an attribute like \"has-own-property\" or \"data-has-own-property\", etc.\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n          dst[key] = value;\n          dstAttr[key] = srcAttr[key];\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, $compileNode, tAttrs,\n        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          // The fact that we have to copy and patch the directive seems wrong!\n          derivedSyncDirective = extend({}, origAsyncDirective, {\n            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective\n          }),\n          templateUrl = (isFunction(origAsyncDirective.templateUrl))\n              ? origAsyncDirective.templateUrl($compileNode, tAttrs)\n              : origAsyncDirective.templateUrl;\n\n      $compileNode.empty();\n\n      $http.get($sce.getTrustedResourceUrl(templateUrl), {cache: $templateCache}).\n        success(function(content) {\n          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;\n\n          content = denormalizeTemplate(content);\n\n          if (origAsyncDirective.replace) {\n            if (jqLiteIsTextNode(content)) {\n              $template = [];\n            } else {\n              $template = jqLite(trim(content));\n            }\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw $compileMinErr('tplrt',\n                  \"Template for directive '{0}' must have exactly one root element. {1}\",\n                  origAsyncDirective.name, templateUrl);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);\n\n            if (isObject(origAsyncDirective.scope)) {\n              markDirectivesAsIsolate(templateDirectives);\n            }\n            directives = templateDirectives.concat(directives);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,\n              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,\n              previousCompileContext);\n          forEach($rootElement, function(node, i) {\n            if (node == compileNode) {\n              $rootElement[i] = $compileNode[0];\n            }\n          });\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n          while(linkQueue.length) {\n            var scope = linkQueue.shift(),\n                beforeTemplateLinkNode = linkQueue.shift(),\n                linkRootElement = linkQueue.shift(),\n                boundTranscludeFn = linkQueue.shift(),\n                linkNode = $compileNode[0];\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              var oldClasses = beforeTemplateLinkNode.className;\n\n              if (!(previousCompileContext.hasElementTranscludeDirective &&\n                  origAsyncDirective.replace)) {\n                // it was cloned therefore we have to clone as well.\n                linkNode = jqLiteClone(compileNode);\n              }\n\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n\n              // Copy in CSS classes from original node\n              safeAddClass(jqLite(linkNode), oldClasses);\n            }\n            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n            } else {\n              childBoundTranscludeFn = boundTranscludeFn;\n            }\n            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,\n              childBoundTranscludeFn);\n          }\n          linkQueue = null;\n        }).\n        error(function(response, code, headers, config) {\n          throw $compileMinErr('tpload', 'Failed to load template: {0}', config.url);\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {\n        var childBoundTranscludeFn = boundTranscludeFn;\n        if (linkQueue) {\n          linkQueue.push(scope);\n          linkQueue.push(node);\n          linkQueue.push(rootElement);\n          linkQueue.push(childBoundTranscludeFn);\n        } else {\n          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {\n            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);\n          }\n          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      var diff = b.priority - a.priority;\n      if (diff !== 0) return diff;\n      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;\n      return a.index - b.index;\n    }\n\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n      if (previousDirective) {\n        throw $compileMinErr('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}',\n            previousDirective.name, directive.name, what, startingTag(element));\n      }\n    }\n\n\n      function addTextInterpolateDirective(directives, text) {\n        var interpolateFn = $interpolate(text, true);\n        if (interpolateFn) {\n          directives.push({\n            priority: 0,\n            compile: function textInterpolateCompileFn(templateNode) {\n              // when transcluding a template that has bindings in the root\n              // then we don't have a parent and should do this in the linkFn\n              var parent = templateNode.parent(), hasCompileParent = parent.length;\n              if (hasCompileParent) safeAddClass(templateNode.parent(), 'ng-binding');\n\n              return function textInterpolateLinkFn(scope, node) {\n                var parent = node.parent(),\n                  bindings = parent.data('$binding') || [];\n                bindings.push(interpolateFn);\n                parent.data('$binding', bindings);\n                if (!hasCompileParent) safeAddClass(parent, 'ng-binding');\n                scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n                  node[0].nodeValue = value;\n                });\n              };\n            }\n          });\n        }\n      }\n\n\n    function getTrustedContext(node, attrNormalizedName) {\n      if (attrNormalizedName == \"srcdoc\") {\n        return $sce.HTML;\n      }\n      var tag = nodeName_(node);\n      // maction[xlink:href] can source SVG.  It's not limited to <maction>.\n      if (attrNormalizedName == \"xlinkHref\" ||\n          (tag == \"FORM\" && attrNormalizedName == \"action\") ||\n          (tag != \"IMG\" && (attrNormalizedName == \"src\" ||\n                            attrNormalizedName == \"ngSrc\"))) {\n        return $sce.RESOURCE_URL;\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name) {\n      var interpolateFn = $interpolate(value, true);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n\n      if (name === \"multiple\" && nodeName_(node) === \"SELECT\") {\n        throw $compileMinErr(\"selmulti\",\n            \"Binding to the 'multiple' attribute is not supported. Element: {0}\",\n            startingTag(node));\n      }\n\n      directives.push({\n        priority: 100,\n        compile: function() {\n            return {\n              pre: function attrInterpolatePreLinkFn(scope, element, attr) {\n                var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\n                if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {\n                  throw $compileMinErr('nodomevents',\n                      \"Interpolations for HTML DOM event attributes are disallowed.  Please use the \" +\n                          \"ng- versions (such as ng-click instead of onclick) instead.\");\n                }\n\n                // we need to interpolate again, in case the attribute value has been updated\n                // (e.g. by another directive's compile function)\n                interpolateFn = $interpolate(attr[name], true, getTrustedContext(node, name));\n\n                // if attribute was updated so that there is no interpolation going on we don't want to\n                // register any observers\n                if (!interpolateFn) return;\n\n                // TODO(i): this should likely be attr.$set(name, iterpolateFn(scope) so that we reset the\n                // actual attr value\n                attr[name] = interpolateFn(scope);\n                ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n                (attr.$$observers && attr.$$observers[name].$$scope || scope).\n                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {\n                    //special case for class attribute addition + removal\n                    //so that class changes can tap into the animation\n                    //hooks provided by the $animate service. Be sure to\n                    //skip animations when the first digest occurs (when\n                    //both the new and the old values are the same) since\n                    //the CSS classes are the non-interpolated values\n                    if(name === 'class' && newValue != oldValue) {\n                      attr.$updateClass(newValue, oldValue);\n                    } else {\n                      attr.$set(name, newValue);\n                    }\n                  });\n              }\n            };\n          }\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *                               in the root of the tree.\n     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep\n     *                                  the shell, but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, elementsToRemove, newNode) {\n      var firstElementToRemove = elementsToRemove[0],\n          removeCount = elementsToRemove.length,\n          parent = firstElementToRemove.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for(i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] == firstElementToRemove) {\n            $rootElement[i++] = newNode;\n            for (var j = i, j2 = j + removeCount - 1,\n                     jj = $rootElement.length;\n                 j < jj; j++, j2++) {\n              if (j2 < jj) {\n                $rootElement[j] = $rootElement[j2];\n              } else {\n                delete $rootElement[j];\n              }\n            }\n            $rootElement.length -= removeCount - 1;\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, firstElementToRemove);\n      }\n      var fragment = document.createDocumentFragment();\n      fragment.appendChild(firstElementToRemove);\n      newNode[jqLite.expando] = firstElementToRemove[jqLite.expando];\n      for (var k = 1, kk = elementsToRemove.length; k < kk; k++) {\n        var element = elementsToRemove[k];\n        jqLite(element).remove(); // must do this way to clean up expando\n        fragment.appendChild(element);\n        delete elementsToRemove[k];\n      }\n\n      elementsToRemove[0] = newNode;\n      elementsToRemove.length = 1;\n    }\n\n\n    function cloneAndAnnotateFn(fn, annotation) {\n      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);\n    }\n  }];\n}\n\nvar PREFIX_REGEXP = /^(x[\\:\\-_]|data[\\:\\-_])/i;\n/**\n * Converts all accepted directives format into proper directive name.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\n}\n\n/**\n * @ngdoc type\n * @name $compile.directive.Attributes\n *\n * @description\n * A shared object between directive compile / linking functions which contains normalized DOM\n * element attributes. The values reflect current binding state `{{ }}`. The normalization is\n * needed since all of these are treated as equivalent in Angular:\n *\n * ```\n *    <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n * ```\n */\n\n/**\n * @ngdoc property\n * @name $compile.directive.Attributes#$attr\n *\n * @description\n * A map of DOM element attribute names to the normalized name. This is\n * needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc method\n * @name $compile.directive.Attributes#$set\n * @kind function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to. The value can be an interpolated string.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\nfunction tokenDifference(str1, str2) {\n  var values = '',\n      tokens1 = str1.split(/\\s+/),\n      tokens2 = str2.split(/\\s+/);\n\n  outer:\n  for(var i = 0; i < tokens1.length; i++) {\n    var token = tokens1[i];\n    for(var j = 0; j < tokens2.length; j++) {\n      if(token == tokens2[j]) continue outer;\n    }\n    values += (values.length > 0 ? ' ' : '') + token;\n  }\n  return values;\n}\n\n/**\n * @ngdoc provider\n * @name $controllerProvider\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {},\n      CNTRL_REG = /^(\\S+)(\\s+as\\s+(\\w+))?$/;\n\n\n  /**\n   * @ngdoc method\n   * @name $controllerProvider#register\n   * @param {string|Object} name Controller name, or an object map of controllers where the keys are\n   *    the names and the values are the constructors.\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    assertNotHasOwnProperty(name, 'controller');\n    if (isObject(name)) {\n      extend(controllers, name);\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc service\n     * @name $controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * check `window[constructor]` on the global `window` object\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link auto.$injector $injector}, but extracted into\n     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).\n     */\n    return function(expression, locals) {\n      var instance, match, constructor, identifier;\n\n      if(isString(expression)) {\n        match = expression.match(CNTRL_REG),\n        constructor = match[1],\n        identifier = match[3];\n        expression = controllers.hasOwnProperty(constructor)\n            ? controllers[constructor]\n            : getter(locals.$scope, constructor, true) || getter($window, constructor, true);\n\n        assertArgFn(expression, constructor, true);\n      }\n\n      instance = $injector.instantiate(expression, locals);\n\n      if (identifier) {\n        if (!(locals && typeof locals.$scope === 'object')) {\n          throw minErr('$controller')('noscp',\n              \"Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.\",\n              constructor || expression.name, identifier);\n        }\n\n        locals.$scope[identifier] = instance;\n      }\n\n      return instance;\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $document\n * @requires $window\n *\n * @description\n * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.\n *\n * @example\n   <example module=\"documentExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n         <p>$document title: <b ng-bind=\"title\"></b></p>\n         <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n       </div>\n     </file>\n     <file name=\"script.js\">\n       angular.module('documentExample', [])\n         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n           $scope.title = $document[0].title;\n           $scope.windowTitle = angular.element(window.document)[0].title;\n         }]);\n     </file>\n   </example>\n */\nfunction $DocumentProvider(){\n  this.$get = ['$window', function(window){\n    return jqLite(window.document);\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $exceptionHandler\n * @requires ng.$log\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * ## Example:\n *\n * ```js\n *   angular.module('exceptionOverride', []).factory('$exceptionHandler', function () {\n *     return function (exception, cause) {\n *       exception.message += ' (caused by \"' + cause + '\")';\n *       throw exception;\n *     };\n *   });\n * ```\n *\n * This example will override the normal action of `$exceptionHandler`, to make angular\n * exceptions fail hard when they happen, instead of just logging to the console.\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = {}, key, val, i;\n\n  if (!headers) return parsed;\n\n  forEach(headers.split('\\n'), function(line) {\n    i = line.indexOf(':');\n    key = lowercase(trim(line.substr(0, i)));\n    val = trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with single an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj = isObject(headers) ? headers : undefined;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      return headersObj[lowercase(name)] || null;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers Http headers getter fn.\n * @param {(Function|Array.<Function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, fns) {\n  if (isFunction(fns))\n    return fns(data, headers);\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\n/**\n * @ngdoc provider\n * @name $httpProvider\n * @description\n * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.\n * */\nfunction $HttpProvider() {\n  var JSON_START = /^\\s*(\\[|\\{[^\\{])/,\n      JSON_END = /[\\}\\]]\\s*$/,\n      PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/,\n      CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': 'application/json;charset=utf-8'};\n\n  /**\n   * @ngdoc property\n   * @name $httpProvider#defaults\n   * @description\n   *\n   * Object containing default values for all {@link ng.$http $http} requests.\n   *\n   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\n   * Defaults value is `'XSRF-TOKEN'`.\n   *\n   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\n   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n   *\n   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.\n   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on\n   * setting default headers.\n   *     - **`defaults.headers.common`**\n   *     - **`defaults.headers.post`**\n   *     - **`defaults.headers.put`**\n   *     - **`defaults.headers.patch`**\n   **/\n  var defaults = this.defaults = {\n    // transform incoming response data\n    transformResponse: [function(data) {\n      if (isString(data)) {\n        // strip json vulnerability protection prefix\n        data = data.replace(PROTECTION_PREFIX, '');\n        if (JSON_START.test(data) && JSON_END.test(data))\n          data = fromJson(data);\n      }\n      return data;\n    }],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) && !isBlob(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),\n      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)\n    },\n\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN'\n  };\n\n  /**\n   * @ngdoc property\n   * @name $httpProvider#interceptors\n   * @description\n   *\n   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\n   * pre-processing of request or postprocessing of responses.\n   *\n   * These service factories are ordered by request, i.e. they are applied in the same order as the\n   * array, on request, but reverse order, on response.\n   *\n   * {@link ng.$http#interceptors Interceptors detailed info}\n   **/\n  var interceptorFactories = this.interceptors = [];\n\n  /**\n   * For historical reasons, response interceptors are ordered by the order in which\n   * they are applied to the response. (This is the opposite of interceptorFactories)\n   */\n  var responseInterceptorFactories = this.responseInterceptors = [];\n\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\n    var defaultCache = $cacheFactory('$http');\n\n    /**\n     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.\n     * The reversal is needed so that we can build up the interception chain around the\n     * server request.\n     */\n    var reversedInterceptors = [];\n\n    forEach(interceptorFactories, function(interceptorFactory) {\n      reversedInterceptors.unshift(isString(interceptorFactory)\n          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));\n    });\n\n    forEach(responseInterceptorFactories, function(interceptorFactory, index) {\n      var responseFn = isString(interceptorFactory)\n          ? $injector.get(interceptorFactory)\n          : $injector.invoke(interceptorFactory);\n\n      /**\n       * Response interceptors go before \"around\" interceptors (no real reason, just\n       * had to pick one.) But they are already reversed, so we can't use unshift, hence\n       * the splice.\n       */\n      reversedInterceptors.splice(index, 0, {\n        response: function(response) {\n          return responseFn($q.when(response));\n        },\n        responseError: function(response) {\n          return responseFn($q.reject(response));\n        }\n      });\n    });\n\n\n    /**\n     * @ngdoc service\n     * @kind function\n     * @name $http\n     * @requires ng.$httpBackend\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\n     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * # General usage\n     * The `$http` service is a function which takes a single argument — a configuration object —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n     * with two $http specific methods: `success` and `error`.\n     *\n     * ```js\n     *   $http({method: 'GET', url: '/someUrl'}).\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * ```\n     *\n     * Since the returned value of calling the $http function is a `promise`, you can also use\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n     * an object representing the response. See the API signature and type info below for more\n     * details.\n     *\n     * A response status code between 200 and 299 is considered a success status and\n     * will result in the success callback being called. Note that if the response is a redirect,\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n     * called for such responses.\n     *\n     * # Writing Unit Tests that use $http\n     * When unit testing (using {@link ngMock ngMock}), it is necessary to call\n     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\n     * request using trained responses.\n     *\n     * ```\n     * $httpBackend.expectGET(...);\n     * $http.get(...);\n     * $httpBackend.flush();\n     * ```\n     *\n     * # Shortcut methods\n     *\n     * Shortcut methods are also available. All shortcut methods require passing in the URL, and\n     * request data must be passed in for POST/PUT requests.\n     *\n     * ```js\n     *   $http.get('/someUrl').success(successCallback);\n     *   $http.post('/someUrl', data).success(successCallback);\n     * ```\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     * - {@link ng.$http#patch $http.patch}\n     *\n     *\n     * # Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - `Accept: application/json, text/plain, * / *`\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }.\n     *\n     * The defaults can also be set at runtime via the `$http.defaults` object in the same\n     * fashion. For example:\n     *\n     * ```\n     * module.run(function($http) {\n     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w'\n     * });\n     * ```\n     *\n     * In addition, you can supply a `headers` property in the config object passed when\n     * calling `$http(config)`, which overrides the defaults without changing them globally.\n     *\n     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\n     * Use the `headers` property, setting the desired header to `undefined`. For example:\n     *\n     * ```js\n     * var req = {\n     *  method: 'POST',\n     *  url: 'http://example.com',\n     *  headers: {\n     *    'Content-Type': undefined\n     *  },\n     *  data: { test: 'test' },\n     * }\n     *\n     * $http(req).success(function(){...}).error(function(){...});\n     * ```\n     *\n     * # Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transform functions. By default, Angular\n     * applies these transformations:\n     *\n     * Request transformations:\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it\n     *   into JSON format.\n     *\n     * Response transformations:\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     * To globally augment or override the default transforms, modify the\n     * `$httpProvider.defaults.transformRequest` and `$httpProvider.defaults.transformResponse`\n     * properties. These properties are by default an array of transform functions, which allows you\n     * to `push` or `unshift` a new transformation function into the transformation chain. You can\n     * also decide to completely override any default transformations by assigning your\n     * transformation functions to these properties directly without the array wrapper.  These defaults\n     * are again available on the $http factory at run-time, which may be useful if you have run-time\n     * services you wish to be involved in your transformations.\n     *\n     * Similarly, to locally override the request/response transforms, augment the\n     * `transformRequest` and/or `transformResponse` properties of the configuration object passed\n     * into `$http`.\n     *\n     *\n     * # Caching\n     *\n     * To enable caching, set the request configuration `cache` property to `true` (to use default\n     * cache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\n     * When the cache is enabled, `$http` stores the response from the server in the specified\n     * cache. The next time the same request is made, the response is served from the cache without\n     * sending a request to the server.\n     *\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n     * the same way that real requests are.\n     *\n     * If there are multiple GET requests for the same URL that should be cached using the same\n     * cache, but the cache is not populated yet, only one request to the server will be made and\n     * the remaining requests will be fulfilled using the response from the first request.\n     *\n     * You can change the default cache to a new object (built with\n     * {@link ng.$cacheFactory `$cacheFactory`}) by updating the\n     * {@link ng.$http#properties_defaults `$http.defaults.cache`} property. All requests who set\n     * their `cache` property to `true` will now use this cache object.\n     *\n     * If you set the default cache to `false` then only requests that specify their own custom\n     * cache object will be cached.\n     *\n     * # Interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication, or any kind of synchronous or\n     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be\n     * able to intercept requests before they are handed to the server and\n     * responses before they are handed over to the application code that\n     * initiated these requests. The interceptors leverage the {@link ng.$q\n     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n     *\n     * The interceptors are service factories that are registered with the `$httpProvider` by\n     * adding them to the `$httpProvider.interceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor.\n     *\n     * There are two kinds of interceptors (and two kinds of rejection interceptors):\n     *\n     *   * `request`: interceptors get called with a http `config` object. The function is free to\n     *     modify the `config` object or create a new one. The function needs to return the `config`\n     *     object directly, or a promise containing the `config` or a new `config` object.\n     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *   * `response`: interceptors get called with http `response` object. The function is free to\n     *     modify the `response` object or create a new one. The function needs to return the `response`\n     *     object directly, or as a promise containing the `response` or a new `response` object.\n     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or\n     *     resolved with a rejection.\n     *\n     *\n     * ```js\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return {\n     *       // optional method\n     *       'request': function(config) {\n     *         // do something on success\n     *         return config;\n     *       },\n     *\n     *       // optional method\n     *      'requestError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       },\n     *\n     *\n     *\n     *       // optional method\n     *       'response': function(response) {\n     *         // do something on success\n     *         return response;\n     *       },\n     *\n     *       // optional method\n     *      'responseError': function(rejection) {\n     *         // do something on error\n     *         if (canRecover(rejection)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(rejection);\n     *       }\n     *     };\n     *   });\n     *\n     *   $httpProvider.interceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // alternatively, register the interceptor via an anonymous factory\n     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n     *     return {\n     *      'request': function(config) {\n     *          // same as above\n     *       },\n     *\n     *       'response': function(response) {\n     *          // same as above\n     *       }\n     *     };\n     *   });\n     * ```\n     *\n     * # Response interceptors (DEPRECATED)\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication or any kind of synchronous or\n     * asynchronous preprocessing of received responses, it is desirable to be able to intercept\n     * responses for http requests before they are handed over to the application code that\n     * initiated these requests. The response interceptors leverage the {@link ng.$q\n     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.\n     *\n     * The interceptors are service factories that are registered with the $httpProvider by\n     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor  — a function that\n     * takes a {@link ng.$q promise} and returns the original or a new promise.\n     *\n     * ```js\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       return promise.then(function(response) {\n     *         // do something on success\n     *         return response;\n     *       }, function(response) {\n     *         // do something on error\n     *         if (canRecover(response)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(response);\n     *       });\n     *     }\n     *   });\n     *\n     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // register the interceptor via an anonymous factory\n     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       // same as above\n     *     }\n     *   });\n     * ```\n     *\n     *\n     * # Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ## JSON Vulnerability Protection\n     *\n     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n     * allows third party website to turn your JSON resource URL into\n     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * ```js\n     * ['one','two']\n     * ```\n     *\n     * which is vulnerable to attack, your server can return:\n     * ```js\n     * )]}',\n     * ['one','two']\n     * ```\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ## Cross Site Request Forgery (XSRF) Protection\n     *\n     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is a technique by which\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n     * (by default, `XSRF-TOKEN`) and sets it as an HTTP header (`X-XSRF-TOKEN`). Since only\n     * JavaScript that runs on your domain could read the cookie, your server can be assured that\n     * the XHR came from JavaScript running on your domain. The header will not be set for\n     * cross-domain requests.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from\n     * making up its own tokens). We recommend that the token is a digest of your site's\n     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\n     * for added security.\n     *\n     * The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\n     * properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\n     * or the per-request config object.\n     *\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned\n     *      to `?key1=value1&key2=value2` after the url. If the value is not a string, it will be\n     *      JSONified.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing\n     *      HTTP headers to send to the server. If the return value of a function is null, the\n     *      header will not be sent.\n     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n     *    - **transformRequest** –\n     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *    - **transformResponse** –\n     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body and headers and returns its transformed (typically deserialized) version.\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     *      GET request, otherwise if a cache instance built with\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     *      caching.\n     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     *      that should abort the request when resolved.\n     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n     *      for more information.\n     *    - **responseType** - `{string}` - see\n     *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n     *   method takes two arguments a success and an error callback which will be called with a\n     *   response object. The `success` and `error` methods take a single argument - a function that\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\n     *   these functions are destructured representation of the response object passed into the\n     *   `then` method. The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform\n     *     functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *   - **statusText** – `{string}` – HTTP status text of the response.\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n<example module=\"httpExample\">\n<file name=\"index.html\">\n  <div ng-controller=\"FetchController\">\n    <select ng-model=\"method\">\n      <option>GET</option>\n      <option>JSONP</option>\n    </select>\n    <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n    <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n    <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n    <button id=\"samplejsonpbtn\"\n      ng-click=\"updateModel('JSONP',\n                    'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">\n      Sample JSONP\n    </button>\n    <button id=\"invalidjsonpbtn\"\n      ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">\n        Invalid JSONP\n      </button>\n    <pre>http status code: {{status}}</pre>\n    <pre>http response data: {{data}}</pre>\n  </div>\n</file>\n<file name=\"script.js\">\n  angular.module('httpExample', [])\n    .controller('FetchController', ['$scope', '$http', '$templateCache',\n      function($scope, $http, $templateCache) {\n        $scope.method = 'GET';\n        $scope.url = 'http-hello.html';\n\n        $scope.fetch = function() {\n          $scope.code = null;\n          $scope.response = null;\n\n          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n            success(function(data, status) {\n              $scope.status = status;\n              $scope.data = data;\n            }).\n            error(function(data, status) {\n              $scope.data = data || \"Request failed\";\n              $scope.status = status;\n          });\n        };\n\n        $scope.updateModel = function(method, url) {\n          $scope.method = method;\n          $scope.url = url;\n        };\n      }]);\n</file>\n<file name=\"http-hello.html\">\n  Hello, $http!\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  var status = element(by.binding('status'));\n  var data = element(by.binding('data'));\n  var fetchBtn = element(by.id('fetchbtn'));\n  var sampleGetBtn = element(by.id('samplegetbtn'));\n  var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\n  it('should make an xhr GET request', function() {\n    sampleGetBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('200');\n    expect(data.getText()).toMatch(/Hello, \\$http!/);\n  });\n\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n// it('should make a JSONP request to angularjs.org', function() {\n//   sampleJsonpBtn.click();\n//   fetchBtn.click();\n//   expect(status.getText()).toMatch('200');\n//   expect(data.getText()).toMatch(/Super Hero!/);\n// });\n\n  it('should make JSONP request to invalid URL and invoke the error handler',\n      function() {\n    invalidJsonpBtn.click();\n    fetchBtn.click();\n    expect(status.getText()).toMatch('0');\n    expect(data.getText()).toMatch('Request failed');\n  });\n</file>\n</example>\n     */\n    function $http(requestConfig) {\n      var config = {\n        method: 'get',\n        transformRequest: defaults.transformRequest,\n        transformResponse: defaults.transformResponse\n      };\n      var headers = mergeHeaders(requestConfig);\n\n      extend(config, requestConfig);\n      config.headers = headers;\n      config.method = uppercase(config.method);\n\n      var serverRequest = function(config) {\n        headers = config.headers;\n        var reqData = transformData(config.data, headersGetter(headers), config.transformRequest);\n\n        // strip content-type if data is undefined\n        if (isUndefined(reqData)) {\n          forEach(headers, function(value, header) {\n            if (lowercase(header) === 'content-type') {\n                delete headers[header];\n            }\n          });\n        }\n\n        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {\n          config.withCredentials = defaults.withCredentials;\n        }\n\n        // send request\n        return sendReq(config, reqData, headers).then(transformResponse, transformResponse);\n      };\n\n      var chain = [serverRequest, undefined];\n      var promise = $q.when(config);\n\n      // apply interceptors\n      forEach(reversedInterceptors, function(interceptor) {\n        if (interceptor.request || interceptor.requestError) {\n          chain.unshift(interceptor.request, interceptor.requestError);\n        }\n        if (interceptor.response || interceptor.responseError) {\n          chain.push(interceptor.response, interceptor.responseError);\n        }\n      });\n\n      while(chain.length) {\n        var thenFn = chain.shift();\n        var rejectFn = chain.shift();\n\n        promise = promise.then(thenFn, rejectFn);\n      }\n\n      promise.success = function(fn) {\n        promise.then(function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      promise.error = function(fn) {\n        promise.then(null, function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      return promise;\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response, {\n          data: transformData(response.data, response.headers, config.transformResponse)\n        });\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n\n      function mergeHeaders(config) {\n        var defHeaders = defaults.headers,\n            reqHeaders = extend({}, config.headers),\n            defHeaderName, lowercaseDefHeaderName, reqHeaderName;\n\n        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);\n\n        // using for-in instead of forEach to avoid unecessary iteration after header has been found\n        defaultHeadersIteration:\n        for (defHeaderName in defHeaders) {\n          lowercaseDefHeaderName = lowercase(defHeaderName);\n\n          for (reqHeaderName in reqHeaders) {\n            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {\n              continue defaultHeadersIteration;\n            }\n          }\n\n          reqHeaders[defHeaderName] = defHeaders[defHeaderName];\n        }\n\n        // execute if header value is a function for merged headers\n        execHeaders(reqHeaders);\n        return reqHeaders;\n\n        function execHeaders(headers) {\n          var headerContent;\n\n          forEach(headers, function(headerFn, header) {\n            if (isFunction(headerFn)) {\n              headerContent = headerFn();\n              if (headerContent != null) {\n                headers[header] = headerContent;\n              } else {\n                delete headers[header];\n              }\n            }\n          });\n        }\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name $http#get\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#delete\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#head\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#jsonp\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\n     *                     The name of the callback should be the string `JSON_CALLBACK`.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name $http#post\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#put\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name $http#patch\n     *\n     * @description\n     * Shortcut method to perform `PATCH` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethodsWithData('post', 'put', 'patch');\n\n    /**\n     * @ngdoc property\n     * @name $http#defaults\n     *\n     * @description\n     * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n     * default headers, withCredentials as well as request and response transformations.\n     *\n     * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n     */\n    $http.defaults = defaults;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData, reqHeaders) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          url = buildUrl(config.url, config.params);\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n\n      if ((config.cache || defaults.cache) && config.cache !== false &&\n          (config.method === 'GET' || config.method === 'JSONP')) {\n        cache = isObject(config.cache) ? config.cache\n              : isObject(defaults.cache) ? defaults.cache\n              : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (isDefined(cachedResp)) {\n          if (isPromiseLike(cachedResp)) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(removePendingReq, removePendingReq);\n            return cachedResp;\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3]);\n            } else {\n              resolvePromise(cachedResp, 200, {}, 'OK');\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n\n      // if we won't have the response in cache, set the xsrf headers and\n      // send the request to the backend\n      if (isUndefined(cachedResp)) {\n        var xsrfValue = urlIsSameOrigin(config.url)\n            ? $browser.cookies()[config.xsrfCookieName || defaults.xsrfCookieName]\n            : undefined;\n        if (xsrfValue) {\n          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;\n        }\n\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials, config.responseType);\n      }\n\n      return promise;\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString, statusText) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString), statusText]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        resolvePromise(response, status, headersString, statusText);\n        if (!$rootScope.$$phase) $rootScope.$apply();\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers, statusText) {\n        // normalize internal statuses to 0\n        status = Math.max(status, 0);\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config,\n          statusText : statusText\n        });\n      }\n\n\n      function removePendingReq() {\n        var idx = indexOf($http.pendingRequests, config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, params) {\n      if (!params) return url;\n      var parts = [];\n      forEachSorted(params, function(value, key) {\n        if (value === null || isUndefined(value)) return;\n        if (!isArray(value)) value = [value];\n\n        forEach(value, function(v) {\n          if (isObject(v)) {\n            if (isDate(v)){\n              v = v.toISOString();\n            } else {\n              v = toJson(v);\n            }\n          }\n          parts.push(encodeUriQuery(key) + '=' +\n                     encodeUriQuery(v));\n        });\n      });\n      if(parts.length > 0) {\n        url += ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n      }\n      return url;\n    }\n  }];\n}\n\nfunction createXhr(method) {\n    //if IE and the method is not RFC2616 compliant, or if XMLHttpRequest\n    //is not available, try getting an ActiveXObject. Otherwise, use XMLHttpRequest\n    //if it is available\n    if (msie <= 8 && (!method.match(/^(get|post|head|put|delete|options)$/i) ||\n      !window.XMLHttpRequest)) {\n      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n    } else if (window.XMLHttpRequest) {\n      return new window.XMLHttpRequest();\n    }\n\n    throw minErr('$httpBackend')('noxhr', \"This browser does not support XMLHttpRequest.\");\n}\n\n/**\n * @ngdoc service\n * @name $httpBackend\n * @requires $window\n * @requires $document\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n    return createHttpBackend($browser, createXhr, $browser.defer, $window.angular.callbacks, $document[0]);\n  }];\n}\n\nfunction createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {\n  var ABORTED = -1;\n\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials, responseType) {\n    var status;\n    $browser.$$incOutstandingRequestCount();\n    url = url || $browser.url();\n\n    if (lowercase(method) == 'jsonp') {\n      var callbackId = '_' + (callbacks.counter++).toString(36);\n      callbacks[callbackId] = function(data) {\n        callbacks[callbackId].data = data;\n        callbacks[callbackId].called = true;\n      };\n\n      var jsonpDone = jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n          callbackId, function(status, text) {\n        completeRequest(callback, status, callbacks[callbackId].data, \"\", text);\n        callbacks[callbackId] = noop;\n      });\n    } else {\n\n      var xhr = createXhr(method);\n\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (isDefined(value)) {\n            xhr.setRequestHeader(key, value);\n        }\n      });\n\n      // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\n      // response is in the cache. the promise api will ensure that to the app code the api is\n      // always async\n      xhr.onreadystatechange = function() {\n        // onreadystatechange might get called multiple times with readyState === 4 on mobile webkit caused by\n        // xhrs that are resolved while the app is in the background (see #5426).\n        // since calling completeRequest sets the `xhr` variable to null, we just check if it's not null before\n        // continuing\n        //\n        // we can't set xhr.onreadystatechange to undefined or delete it because that breaks IE8 (method=PATCH) and\n        // Safari respectively.\n        if (xhr && xhr.readyState == 4) {\n          var responseHeaders = null,\n              response = null,\n              statusText = '';\n\n          if(status !== ABORTED) {\n            responseHeaders = xhr.getAllResponseHeaders();\n\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n            // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)\n            response = ('response' in xhr) ? xhr.response : xhr.responseText;\n          }\n\n          // Accessing statusText on an aborted xhr object will\n          // throw an 'c00c023f error' in IE9 and lower, don't touch it.\n          if (!(status === ABORTED && msie < 10)) {\n            statusText = xhr.statusText;\n          }\n\n          completeRequest(callback,\n              status || xhr.status,\n              response,\n              responseHeaders,\n              statusText);\n        }\n      };\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      if (responseType) {\n        try {\n          xhr.responseType = responseType;\n        } catch (e) {\n          // WebKit added support for the json responseType value on 09/03/2013\n          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are\n          // known to throw when setting the value \"json\" as the response type. Other older\n          // browsers implementing the responseType\n          //\n          // The json response type can be ignored if not supported, because JSON payloads are\n          // parsed on the client-side regardless.\n          if (responseType !== 'json') {\n            throw e;\n          }\n        }\n      }\n\n      xhr.send(post || null);\n    }\n\n    if (timeout > 0) {\n      var timeoutId = $browserDefer(timeoutRequest, timeout);\n    } else if (isPromiseLike(timeout)) {\n      timeout.then(timeoutRequest);\n    }\n\n\n    function timeoutRequest() {\n      status = ABORTED;\n      jsonpDone && jsonpDone();\n      xhr && xhr.abort();\n    }\n\n    function completeRequest(callback, status, response, headersString, statusText) {\n      // cancel timeout and subsequent timeout promise resolution\n      timeoutId && $browserDefer.cancel(timeoutId);\n      jsonpDone = xhr = null;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : urlResolve(url).protocol == 'file' ? 404 : 0;\n      }\n\n      // normalize IE bug (http://bugs.jquery.com/ticket/1450)\n      status = status === 1223 ? 204 : status;\n      statusText = statusText || '';\n\n      callback(status, response, headersString, statusText);\n      $browser.$$completeOutstandingRequest(noop);\n    }\n  };\n\n  function jsonpReq(url, callbackId, done) {\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'), callback = null;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.async = true;\n\n    callback = function(event) {\n      removeEventListenerFn(script, \"load\", callback);\n      removeEventListenerFn(script, \"error\", callback);\n      rawDocument.body.removeChild(script);\n      script = null;\n      var status = -1;\n      var text = \"unknown\";\n\n      if (event) {\n        if (event.type === \"load\" && !callbacks[callbackId].called) {\n          event = { type: \"error\" };\n        }\n        text = event.type;\n        status = event.type === \"error\" ? 404 : 200;\n      }\n\n      if (done) {\n        done(status, text);\n      }\n    };\n\n    addEventListenerFn(script, \"load\", callback);\n    addEventListenerFn(script, \"error\", callback);\n\n    if (msie <= 8) {\n      script.onreadystatechange = function() {\n        if (isString(script.readyState) && /loaded|complete/.test(script.readyState)) {\n          script.onreadystatechange = null;\n          callback({\n            type: 'load'\n          });\n        }\n      };\n    }\n\n    rawDocument.body.appendChild(script);\n    return callback;\n  }\n}\n\nvar $interpolateMinErr = minErr('$interpolate');\n\n/**\n * @ngdoc provider\n * @name $interpolateProvider\n * @kind function\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n *\n * @example\n<example module=\"customInterpolationApp\">\n<file name=\"index.html\">\n<script>\n  var customInterpolationApp = angular.module('customInterpolationApp', []);\n\n  customInterpolationApp.config(function($interpolateProvider) {\n    $interpolateProvider.startSymbol('//');\n    $interpolateProvider.endSymbol('//');\n  });\n\n\n  customInterpolationApp.controller('DemoController', function() {\n      this.label = \"This binding is brought you by // interpolation symbols.\";\n  });\n</script>\n<div ng-app=\"App\" ng-controller=\"DemoController as demo\">\n    //demo.label//\n</div>\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n  it('should interpolate binding with custom symbols', function() {\n    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n  });\n</file>\n</example>\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#startSymbol\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value){\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $interpolateProvider#endSymbol\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value){\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length;\n\n    /**\n     * @ngdoc service\n     * @name $interpolate\n     * @kind function\n     *\n     * @requires $parse\n     * @requires $sce\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n     * ```js\n     *   var $interpolate = ...; // injected\n     *   var exp = $interpolate('Hello {{name | uppercase}}!');\n     *   expect(exp({name:'Angular'}).toEqual('Hello ANGULAR!');\n     * ```\n     *\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @param {string=} trustedContext when provided, the returned function passes the interpolated\n     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n     *    provides Strict Contextual Escaping for details.\n     * @returns {function(context)} an interpolation function which is used to compute the\n     *    interpolated string. The function has these parameters:\n     *\n     *    * `context`: an object against which any expressions embedded in the strings are evaluated\n     *      against.\n     *\n     */\n    function $interpolate(text, mustHaveExpression, trustedContext) {\n      var startIndex,\n          endIndex,\n          index = 0,\n          parts = [],\n          length = text.length,\n          hasInterpolation = false,\n          fn,\n          exp,\n          concat = [];\n\n      while(index < length) {\n        if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {\n          (index != startIndex) && parts.push(text.substring(index, startIndex));\n          parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));\n          fn.exp = exp;\n          index = endIndex + endSymbolLength;\n          hasInterpolation = true;\n        } else {\n          // we did not find anything, so we have to add the remainder to the parts array\n          (index != length) && parts.push(text.substring(index));\n          index = length;\n        }\n      }\n\n      if (!(length = parts.length)) {\n        // we added, nothing, must have been an empty string.\n        parts.push('');\n        length = 1;\n      }\n\n      // Concatenating expressions makes it hard to reason about whether some combination of\n      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a\n      // single expression be used for iframe[src], object[src], etc., we ensure that the value\n      // that's used is assigned or constructed by some JS code somewhere that is more testable or\n      // make it obvious that you bound the value to some user controlled value.  This helps reduce\n      // the load when auditing for XSS issues.\n      if (trustedContext && parts.length > 1) {\n          throw $interpolateMinErr('noconcat',\n              \"Error while interpolating: {0}\\nStrict Contextual Escaping disallows \" +\n              \"interpolations that concatenate multiple expressions when a trusted value is \" +\n              \"required.  See http://docs.angularjs.org/api/ng.$sce\", text);\n      }\n\n      if (!mustHaveExpression  || hasInterpolation) {\n        concat.length = length;\n        fn = function(context) {\n          try {\n            for(var i = 0, ii = length, part; i<ii; i++) {\n              if (typeof (part = parts[i]) == 'function') {\n                part = part(context);\n                if (trustedContext) {\n                  part = $sce.getTrusted(trustedContext, part);\n                } else {\n                  part = $sce.valueOf(part);\n                }\n                if (part == null) { // null || undefined\n                  part = '';\n                } else {\n                  switch (typeof part) {\n                    case 'string':\n                    {\n                      break;\n                    }\n                    case 'number':\n                    {\n                      part = '' + part;\n                      break;\n                    }\n                    default:\n                    {\n                      part = toJson(part);\n                    }\n                  }\n                }\n              }\n              concat[i] = part;\n            }\n            return concat.join('');\n          }\n          catch(err) {\n            var newErr = $interpolateMinErr('interr', \"Can't interpolate: {0}\\n{1}\", text,\n                err.toString());\n            $exceptionHandler(newErr);\n          }\n        };\n        fn.exp = text;\n        fn.parts = parts;\n        return fn;\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#startSymbol\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    };\n\n\n    /**\n     * @ngdoc method\n     * @name $interpolate#endSymbol\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\n     * the symbol.\n     *\n     * @returns {string} end symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    };\n\n    return $interpolate;\n  }];\n}\n\nfunction $IntervalProvider() {\n  this.$get = ['$rootScope', '$window', '$q',\n       function($rootScope,   $window,   $q) {\n    var intervals = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $interval\n      *\n      * @description\n      * Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\n      * milliseconds.\n      *\n      * The return value of registering an interval function is a promise. This promise will be\n      * notified upon each tick of the interval, and will be resolved after `count` iterations, or\n      * run indefinitely if `count` is not defined. The value of the notification will be the\n      * number of iterations that have run.\n      * To cancel an interval, call `$interval.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\n      * move forward by `millis` milliseconds and trigger any functions scheduled to run in that\n      * time.\n      *\n      * <div class=\"alert alert-warning\">\n      * **Note**: Intervals created by this service must be explicitly destroyed when you are finished\n      * with them.  In particular they are not automatically destroyed when a controller's scope or a\n      * directive's element are destroyed.\n      * You should take this into consideration and make sure to always cancel the interval at the\n      * appropriate moment.  See the example below for more details on how and when to do this.\n      * </div>\n      *\n      * @param {function()} fn A function that should be called repeatedly.\n      * @param {number} delay Number of milliseconds between each function call.\n      * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat\n      *   indefinitely.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {promise} A promise which will be notified on each iteration.\n      *\n      * @example\n      * <example module=\"intervalExample\">\n      * <file name=\"index.html\">\n      *   <script>\n      *     angular.module('intervalExample', [])\n      *       .controller('ExampleController', ['$scope', '$interval',\n      *         function($scope, $interval) {\n      *           $scope.format = 'M/d/yy h:mm:ss a';\n      *           $scope.blood_1 = 100;\n      *           $scope.blood_2 = 120;\n      *\n      *           var stop;\n      *           $scope.fight = function() {\n      *             // Don't start a new fight if we are already fighting\n      *             if ( angular.isDefined(stop) ) return;\n      *\n      *             stop = $interval(function() {\n      *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n      *                 $scope.blood_1 = $scope.blood_1 - 3;\n      *                 $scope.blood_2 = $scope.blood_2 - 4;\n      *               } else {\n      *                 $scope.stopFight();\n      *               }\n      *             }, 100);\n      *           };\n      *\n      *           $scope.stopFight = function() {\n      *             if (angular.isDefined(stop)) {\n      *               $interval.cancel(stop);\n      *               stop = undefined;\n      *             }\n      *           };\n      *\n      *           $scope.resetFight = function() {\n      *             $scope.blood_1 = 100;\n      *             $scope.blood_2 = 120;\n      *           };\n      *\n      *           $scope.$on('$destroy', function() {\n      *             // Make sure that the interval is destroyed too\n      *             $scope.stopFight();\n      *           });\n      *         }])\n      *       // Register the 'myCurrentTime' directive factory method.\n      *       // We inject $interval and dateFilter service since the factory method is DI.\n      *       .directive('myCurrentTime', ['$interval', 'dateFilter',\n      *         function($interval, dateFilter) {\n      *           // return the directive link function. (compile function not needed)\n      *           return function(scope, element, attrs) {\n      *             var format,  // date format\n      *                 stopTime; // so that we can cancel the time updates\n      *\n      *             // used to update the UI\n      *             function updateTime() {\n      *               element.text(dateFilter(new Date(), format));\n      *             }\n      *\n      *             // watch the expression, and update the UI on change.\n      *             scope.$watch(attrs.myCurrentTime, function(value) {\n      *               format = value;\n      *               updateTime();\n      *             });\n      *\n      *             stopTime = $interval(updateTime, 1000);\n      *\n      *             // listen on DOM destroy (removal) event, and cancel the next UI update\n      *             // to prevent updating time after the DOM element was removed.\n      *             element.bind('$destroy', function() {\n      *               $interval.cancel(stopTime);\n      *             });\n      *           }\n      *         }]);\n      *   </script>\n      *\n      *   <div>\n      *     <div ng-controller=\"ExampleController\">\n      *       Date format: <input ng-model=\"format\"> <hr/>\n      *       Current time is: <span my-current-time=\"format\"></span>\n      *       <hr/>\n      *       Blood 1 : <font color='red'>{{blood_1}}</font>\n      *       Blood 2 : <font color='red'>{{blood_2}}</font>\n      *       <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n      *       <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n      *       <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n      *     </div>\n      *   </div>\n      *\n      * </file>\n      * </example>\n      */\n    function interval(fn, delay, count, invokeApply) {\n      var setInterval = $window.setInterval,\n          clearInterval = $window.clearInterval,\n          deferred = $q.defer(),\n          promise = deferred.promise,\n          iteration = 0,\n          skipApply = (isDefined(invokeApply) && !invokeApply);\n\n      count = isDefined(count) ? count : 0;\n\n      promise.then(null, null, fn);\n\n      promise.$$intervalId = setInterval(function tick() {\n        deferred.notify(iteration++);\n\n        if (count > 0 && iteration >= count) {\n          deferred.resolve(iteration);\n          clearInterval(promise.$$intervalId);\n          delete intervals[promise.$$intervalId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n\n      }, delay);\n\n      intervals[promise.$$intervalId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $interval#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`.\n      *\n      * @param {promise} promise returned by the `$interval` function.\n      * @returns {boolean} Returns `true` if the task was successfully canceled.\n      */\n    interval.cancel = function(promise) {\n      if (promise && promise.$$intervalId in intervals) {\n        intervals[promise.$$intervalId].reject('canceled');\n        $window.clearInterval(promise.$$intervalId);\n        delete intervals[promise.$$intervalId];\n        return true;\n      }\n      return false;\n    };\n\n    return interval;\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\nfunction $LocaleProvider(){\n  this.$get = function() {\n    return {\n      id: 'en-us',\n\n      NUMBER_FORMATS: {\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n          { // Decimal Pattern\n            minInt: 1,\n            minFrac: 0,\n            maxFrac: 3,\n            posPre: '',\n            posSuf: '',\n            negPre: '-',\n            negSuf: '',\n            gSize: 3,\n            lgSize: 3\n          },{ //Currency Pattern\n            minInt: 1,\n            minFrac: 2,\n            maxFrac: 2,\n            posPre: '\\u00A4',\n            posSuf: '',\n            negPre: '(\\u00A4',\n            negSuf: ')',\n            gSize: 3,\n            lgSize: 3\n          }\n        ],\n        CURRENCY_SYM: '$'\n      },\n\n      DATETIME_FORMATS: {\n        MONTH:\n            'January,February,March,April,May,June,July,August,September,October,November,December'\n            .split(','),\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n        AMPMS: ['AM','PM'],\n        medium: 'MMM d, y h:mm:ss a',\n        short: 'M/d/yy h:mm a',\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        mediumDate: 'MMM d, y',\n        shortDate: 'M/d/yy',\n        mediumTime: 'h:mm:ss a',\n        shortTime: 'h:mm a'\n      },\n\n      pluralCat: function(num) {\n        if (num === 1) {\n          return 'one';\n        }\n        return 'other';\n      }\n    };\n  };\n}\n\nvar PATH_MATCH = /^([^\\?#]*)(\\?([^#]*))?(#(.*))?$/,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\nvar $locationMinErr = minErr('$location');\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction parseAbsoluteUrl(absoluteUrl, locationObj, appBase) {\n  var parsedUrl = urlResolve(absoluteUrl, appBase);\n\n  locationObj.$$protocol = parsedUrl.protocol;\n  locationObj.$$host = parsedUrl.hostname;\n  locationObj.$$port = int(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;\n}\n\n\nfunction parseAppUrl(relativeUrl, locationObj, appBase) {\n  var prefixed = (relativeUrl.charAt(0) !== '/');\n  if (prefixed) {\n    relativeUrl = '/' + relativeUrl;\n  }\n  var match = urlResolve(relativeUrl, appBase);\n  locationObj.$$path = decodeURIComponent(prefixed && match.pathname.charAt(0) === '/' ?\n      match.pathname.substring(1) : match.pathname);\n  locationObj.$$search = parseKeyValue(match.search);\n  locationObj.$$hash = decodeURIComponent(match.hash);\n\n  // make sure path starts with '/';\n  if (locationObj.$$path && locationObj.$$path.charAt(0) != '/') {\n    locationObj.$$path = '/' + locationObj.$$path;\n  }\n}\n\n\n/**\n *\n * @param {string} begin\n * @param {string} whole\n * @returns {string} returns text from whole after begin or undefined if it does not begin with\n *                   expected string.\n */\nfunction beginsWith(begin, whole) {\n  if (whole.indexOf(begin) === 0) {\n    return whole.substr(begin.length);\n  }\n}\n\n\nfunction stripHash(url) {\n  var index = url.indexOf('#');\n  return index == -1 ? url : url.substr(0, index);\n}\n\nfunction trimEmptyHash(url) {\n  return url.replace(/(#.+)|#$/, '$1');\n}\n\n\nfunction stripFile(url) {\n  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);\n}\n\n/* return the server only (scheme://host:port) */\nfunction serverBase(url) {\n  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));\n}\n\n\n/**\n * LocationHtml5Url represents an url\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} basePrefix url path prefix\n */\nfunction LocationHtml5Url(appBase, basePrefix) {\n  this.$$html5 = true;\n  basePrefix = basePrefix || '';\n  var appBaseNoFile = stripFile(appBase);\n  parseAbsoluteUrl(appBase, this, appBase);\n\n\n  /**\n   * Parse given html5 (regular) url string into properties\n   * @param {string} newAbsoluteUrl HTML5 url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var pathUrl = beginsWith(appBaseNoFile, url);\n    if (!isString(pathUrl)) {\n      throw $locationMinErr('ipthprfx', 'Invalid url \"{0}\", missing path prefix \"{1}\".', url,\n          appBaseNoFile);\n    }\n\n    parseAppUrl(pathUrl, this, appBase);\n\n    if (!this.$$path) {\n      this.$$path = '/';\n    }\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBaseNoFile + this.$$url.substr(1); // first char is always '/'\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    var appUrl, prevAppUrl;\n    var rewrittenUrl;\n\n    if ( (appUrl = beginsWith(appBase, url)) !== undefined ) {\n      prevAppUrl = appUrl;\n      if ( (appUrl = beginsWith(basePrefix, appUrl)) !== undefined ) {\n        rewrittenUrl = appBaseNoFile + (beginsWith('/', appUrl) || appUrl);\n      } else {\n        rewrittenUrl = appBase + prevAppUrl;\n      }\n    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) !== undefined ) {\n      rewrittenUrl = appBaseNoFile + appUrl;\n    } else if (appBaseNoFile == url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when developer doesn't opt into html5 mode.\n * It also serves as the base class for html5 mode fallback on legacy browsers.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangUrl(appBase, hashPrefix) {\n  var appBaseNoFile = stripFile(appBase);\n\n  parseAbsoluteUrl(appBase, this, appBase);\n\n\n  /**\n   * Parse given hashbang url into properties\n   * @param {string} url Hashbang url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var withoutBaseUrl = beginsWith(appBase, url) || beginsWith(appBaseNoFile, url);\n    var withoutHashUrl = withoutBaseUrl.charAt(0) == '#'\n        ? beginsWith(hashPrefix, withoutBaseUrl)\n        : (this.$$html5)\n          ? withoutBaseUrl\n          : '';\n\n    if (!isString(withoutHashUrl)) {\n      throw $locationMinErr('ihshprfx', 'Invalid url \"{0}\", missing hash prefix \"{1}\".', url,\n          hashPrefix);\n    }\n    parseAppUrl(withoutHashUrl, this, appBase);\n\n    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);\n\n    this.$$compose();\n\n    /*\n     * In Windows, on an anchor node on documents loaded from\n     * the filesystem, the browser will return a pathname\n     * prefixed with the drive name ('/C:/path') when a\n     * pathname without a drive is set:\n     *  * a.setAttribute('href', '/foo')\n     *   * a.pathname === '/C:/foo' //true\n     *\n     * Inside of Angular, we're always using pathnames that\n     * do not include drive names for routing.\n     */\n    function removeWindowsDriveName (path, url, base) {\n      /*\n      Matches paths for file protocol on windows,\n      such as /C:/foo/bar, and captures only /foo/bar.\n      */\n      var windowsFilePathExp = /^\\/[A-Z]:(\\/.*)/;\n\n      var firstPathSegmentMatch;\n\n      //Get the relative path from the input URL.\n      if (url.indexOf(base) === 0) {\n        url = url.replace(base, '');\n      }\n\n      // The input URL intentionally contains a first path segment that ends with a colon.\n      if (windowsFilePathExp.exec(url)) {\n        return path;\n      }\n\n      firstPathSegmentMatch = windowsFilePathExp.exec(path);\n      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;\n    }\n  };\n\n  /**\n   * Compose hashbang url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = appBase + (this.$$url ? hashPrefix + this.$$url : '');\n  };\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    if(stripHash(appBase) == stripHash(url)) {\n      this.$$parse(url);\n      return true;\n    }\n    return false;\n  };\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is enabled but the browser\n * does not support it.\n *\n * @constructor\n * @param {string} appBase application base URL\n * @param {string} hashPrefix hashbang prefix\n */\nfunction LocationHashbangInHtml5Url(appBase, hashPrefix) {\n  this.$$html5 = true;\n  LocationHashbangUrl.apply(this, arguments);\n\n  var appBaseNoFile = stripFile(appBase);\n\n  this.$$parseLinkUrl = function(url, relHref) {\n    var rewrittenUrl;\n    var appUrl;\n\n    if ( appBase == stripHash(url) ) {\n      rewrittenUrl = url;\n    } else if ( (appUrl = beginsWith(appBaseNoFile, url)) ) {\n      rewrittenUrl = appBase + hashPrefix + appUrl;\n    } else if ( appBaseNoFile === url + '/') {\n      rewrittenUrl = appBaseNoFile;\n    }\n    if (rewrittenUrl) {\n      this.$$parse(rewrittenUrl);\n    }\n    return !!rewrittenUrl;\n  };\n\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    // include hashPrefix in $$absUrl when $$url is empty so IE8 & 9 do not reload page because of removal of '#'\n    this.$$absUrl = appBase + hashPrefix + this.$$url;\n  };\n\n}\n\n\nLocationHashbangInHtml5Url.prototype =\n  LocationHashbangUrl.prototype =\n  LocationHtml5Url.prototype = {\n\n  /**\n   * Are we in html5 mode?\n   * @private\n   */\n  $$html5: false,\n\n  /**\n   * Has any change been replacing ?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name $location#absUrl\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full url representation with all segments encoded according to rules specified in\n   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n   *\n   * @return {string} full url\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name $location#url\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url) {\n    if (isUndefined(url))\n      return this.$$url;\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1]) this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1]) this.search(match[3] || '');\n    this.hash(match[5] || '');\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#protocol\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current url.\n   *\n   * @return {string} protocol of current url\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name $location#host\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current url.\n   *\n   * @return {string} host of current url.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name $location#port\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current url.\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name $location#path\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current url when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   * @param {(string|number)=} path New path\n   * @return {string} path\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    path = path !== null ? path.toString() : '';\n    return path.charAt(0) == '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#search\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current url when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   *\n   * ```js\n   * // given url http://example.com/#/some/path?foo=bar&baz=xoxo\n   * var searchObject = $location.search();\n   * // => {foo: 'bar', baz: 'xoxo'}\n   *\n   *\n   * // set foo to 'yipee'\n   * $location.search('foo', 'yipee');\n   * // => $location\n   * ```\n   *\n   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or\n   * hash object.\n   *\n   * When called with a single argument the method acts as a setter, setting the `search` component\n   * of `$location` to the specified value.\n   *\n   * If the argument is a hash object containing an array of values, these values will be encoded\n   * as duplicate search parameters in the url.\n   *\n   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`\n   * will override only a single search property.\n   *\n   * If `paramValue` is an array, it will override the property of the `search` component of\n   * `$location` specified via the first argument.\n   *\n   * If `paramValue` is `null`, the property specified via the first argument will be deleted.\n   *\n   * If `paramValue` is `true`, the property specified via the first argument will be added with no\n   * value nor trailing equal sign.\n   *\n   * @return {Object} If called with no arguments returns the parsed `search` object. If called with\n   * one or more arguments returns `$location` object itself.\n   */\n  search: function(search, paramValue) {\n    switch (arguments.length) {\n      case 0:\n        return this.$$search;\n      case 1:\n        if (isString(search) || isNumber(search)) {\n          search = search.toString();\n          this.$$search = parseKeyValue(search);\n        } else if (isObject(search)) {\n          // remove object undefined or null properties\n          forEach(search, function(value, key) {\n            if (value == null) delete search[key];\n          });\n\n          this.$$search = search;\n        } else {\n          throw $locationMinErr('isrcharg',\n              'The first argument of the `$location#search()` call must be a string or an object.');\n        }\n        break;\n      default:\n        if (isUndefined(paramValue) || paramValue === null) {\n          delete this.$$search[search];\n        } else {\n          this.$$search[search] = paramValue;\n        }\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name $location#hash\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return hash fragment when called without any parameter.\n   *\n   * Change hash fragment when called with parameter and return `$location`.\n   *\n   * @param {(string|number)=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', function(hash) {\n    return hash !== null ? hash.toString() : '';\n  }),\n\n  /**\n   * @ngdoc method\n   * @name $location#replace\n   *\n   * @description\n   * If called, all changes to $location during current `$digest` will be replacing current history\n   * record, instead of adding new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nfunction locationGetter(property) {\n  return function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return function(value) {\n    if (isUndefined(value))\n      return this[property];\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc service\n * @name $location\n *\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/$location Developer Guide: Using $location}\n */\n\n/**\n * @ngdoc provider\n * @name $locationProvider\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider(){\n  var hashPrefix = '',\n      html5Mode = false;\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#hashPrefix\n   * @description\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name $locationProvider#html5Mode\n   * @description\n   * @param {boolean=} mode Use HTML5 strategy if available.\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isDefined(mode)) {\n      html5Mode = mode;\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeStart\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted before a URL will change. This change can be prevented by calling\n   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\n   * details about event object. Upon successful change\n   * {@link ng.$location#events_$locationChangeSuccess $locationChangeSuccess} is fired.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   */\n\n  /**\n   * @ngdoc event\n   * @name $location#$locationChangeSuccess\n   * @eventType broadcast on root scope\n   * @description\n   * Broadcasted after a URL was changed.\n   *\n   * @param {Object} angularEvent Synthetic event object.\n   * @param {string} newUrl New URL\n   * @param {string=} oldUrl URL that was before it was changed.\n   */\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement',\n      function( $rootScope,   $browser,   $sniffer,   $rootElement) {\n    var $location,\n        LocationMode,\n        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''\n        initialUrl = $browser.url(),\n        appBase;\n\n    if (html5Mode) {\n      appBase = serverBase(initialUrl) + (baseHref || '/');\n      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;\n    } else {\n      appBase = stripHash(initialUrl);\n      LocationMode = LocationHashbangUrl;\n    }\n    $location = new LocationMode(appBase, '#' + hashPrefix);\n    $location.$$parseLinkUrl(initialUrl, initialUrl);\n\n    var IGNORE_URI_REGEXP = /^\\s*(javascript|mailto):/i;\n\n    $rootElement.on('click', function(event) {\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (event.ctrlKey || event.metaKey || event.which == 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (lowercase(elm[0].nodeName) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      var absHref = elm.prop('href');\n      // get the actual href attribute - see\n      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx\n      var relHref = elm.attr('href') || elm.attr('xlink:href');\n\n      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {\n        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during\n        // an animation.\n        absHref = urlResolve(absHref.animVal).href;\n      }\n\n      // Ignore when url is started with javascript: or mailto:\n      if (IGNORE_URI_REGEXP.test(absHref)) return;\n\n      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {\n        if ($location.$$parseLinkUrl(absHref, relHref)) {\n          // We do a preventDefault for all urls that are part of the angular application,\n          // in html5mode and also without, so that we are able to abort navigation without\n          // getting double entries in the location history.\n          event.preventDefault();\n          // update location manually\n          if ($location.absUrl() != $browser.url()) {\n            $rootScope.$apply();\n            // hack to work around FF6 bug 684208 when scenario runner clicks on links\n            window.angular['ff-684208-preventDefault'] = true;\n          }\n        }\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if ($location.absUrl() != initialUrl) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl) {\n      if ($location.absUrl() != newUrl) {\n        $rootScope.$evalAsync(function() {\n          var oldUrl = $location.absUrl();\n\n          $location.$$parse(newUrl);\n          if ($rootScope.$broadcast('$locationChangeStart', newUrl,\n                                    oldUrl).defaultPrevented) {\n            $location.$$parse(oldUrl);\n            $browser.url(oldUrl);\n          } else {\n            afterLocationChange(oldUrl);\n          }\n        });\n        if (!$rootScope.$$phase) $rootScope.$digest();\n      }\n    });\n\n    // update browser\n    var changeCounter = 0;\n    $rootScope.$watch(function $locationWatch() {\n      var oldUrl = trimEmptyHash($browser.url());\n      var newUrl = trimEmptyHash($location.absUrl());\n      var currentReplace = $location.$$replace;\n\n      if (!changeCounter || oldUrl != newUrl) {\n        changeCounter++;\n        $rootScope.$evalAsync(function() {\n          if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).\n              defaultPrevented) {\n            $location.$$parse(oldUrl);\n          } else {\n            $browser.url($location.absUrl(), currentReplace);\n            afterLocationChange(oldUrl);\n          }\n        });\n      }\n      $location.$$replace = false;\n\n      return changeCounter;\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);\n    }\n}];\n}\n\n/**\n * @ngdoc service\n * @name $log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation safely writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * The default is to log `debug` messages. You can use\n * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.\n *\n * @example\n   <example module=\"logExample\">\n     <file name=\"script.js\">\n       angular.module('logExample', [])\n         .controller('LogController', ['$scope', '$log', function($scope, $log) {\n           $scope.$log = $log;\n           $scope.message = 'Hello World!';\n         }]);\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogController\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         Message:\n         <input type=\"text\" ng-model=\"message\"/>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n       </div>\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc provider\n * @name $logProvider\n * @description\n * Use the `$logProvider` to configure how the application logs messages\n */\nfunction $LogProvider(){\n  var debug = true,\n      self = this;\n\n  /**\n   * @ngdoc method\n   * @name $logProvider#debugEnabled\n   * @description\n   * @param {boolean=} flag enable or disable debug level messages\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.debugEnabled = function(flag) {\n    if (isDefined(flag)) {\n      debug = flag;\n    return this;\n    } else {\n      return debug;\n    }\n  };\n\n  this.$get = ['$window', function($window){\n    return {\n      /**\n       * @ngdoc method\n       * @name $log#log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name $log#info\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name $log#warn\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name $log#error\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error'),\n\n      /**\n       * @ngdoc method\n       * @name $log#debug\n       *\n       * @description\n       * Write a debug message\n       */\n      debug: (function () {\n        var fn = consoleLog('debug');\n\n        return function() {\n          if (debug) {\n            fn.apply(self, arguments);\n          }\n        };\n      }())\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop,\n          hasApply = false;\n\n      // Note: reading logFn.apply throws an error in IE11 in IE8 document mode.\n      // The reason behind this is that console.log has type \"object\" in IE8...\n      try {\n        hasApply = !!logFn.apply;\n      } catch (e) {}\n\n      if (hasApply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2 == null ? '' : arg2);\n      };\n    }\n  }];\n}\n\nvar $parseMinErr = minErr('$parse');\nvar promiseWarningCache = {};\nvar promiseWarning;\n\n// Sandboxing Angular Expressions\n// ------------------------------\n// Angular expressions are generally considered safe because these expressions only have direct\n// access to `$scope` and locals. However, one can obtain the ability to execute arbitrary JS code by\n// obtaining a reference to native JS functions such as the Function constructor.\n//\n// As an example, consider the following Angular expression:\n//\n//   {}.toString.constructor('alert(\"evil JS code\")')\n//\n// This sandboxing technique is not perfect and doesn't aim to be. The goal is to prevent exploits\n// against the expression language, but not to prevent exploits that were enabled by exposing\n// sensitive JavaScript or browser APIs on Scope. Exposing such objects on a Scope is never a good\n// practice and therefore we are not even trying to protect against interaction with an object\n// explicitly exposed in this way.\n//\n// In general, it is not possible to access a Window object from an angular expression unless a\n// window or some DOM object that has a reference to window is published onto a Scope.\n// Similarly we prevent invocations of function known to be dangerous, as well as assignments to\n// native objects.\n//\n// See https://docs.angularjs.org/guide/security\n\n\nfunction ensureSafeMemberName(name, fullExpression) {\n  if (name === \"__defineGetter__\" || name === \"__defineSetter__\"\n      || name === \"__lookupGetter__\" || name === \"__lookupSetter__\"\n      || name === \"__proto__\") {\n    throw $parseMinErr('isecfld',\n        'Attempting to access a disallowed field in Angular expressions! '\n        + 'Expression: {0}', fullExpression);\n  }\n  return name;\n}\n\nfunction getStringValue(name, fullExpression) {\n  // From the JavaScript docs:\n  // Property names must be strings. This means that non-string objects cannot be used\n  // as keys in an object. Any non-string object, including a number, is typecasted\n  // into a string via the toString method.\n  //\n  // So, to ensure that we are checking the same `name` that JavaScript would use,\n  // we cast it to a string, if possible.\n  // Doing `name + ''` can cause a repl error if the result to `toString` is not a string,\n  // this is, this will handle objects that misbehave.\n  name = name + '';\n  if (!isString(name)) {\n    throw $parseMinErr('iseccst',\n        'Cannot convert object to primitive value! '\n        + 'Expression: {0}', fullExpression);\n  }\n  return name;\n}\n\nfunction ensureSafeObject(obj, fullExpression) {\n  // nifty check if obj is Function that is fast and works across iframes and other contexts\n  if (obj) {\n    if (obj.constructor === obj) {\n      throw $parseMinErr('isecfn',\n          'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// isWindow(obj)\n        obj.document && obj.location && obj.alert && obj.setInterval) {\n      throw $parseMinErr('isecwindow',\n          'Referencing the Window in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// isElement(obj)\n        obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {\n      throw $parseMinErr('isecdom',\n          'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    } else if (// block Object so that we can't get hold of dangerous Object.* methods\n        obj === Object) {\n      throw $parseMinErr('isecobj',\n          'Referencing Object in Angular expressions is disallowed! Expression: {0}',\n          fullExpression);\n    }\n  }\n  return obj;\n}\n\nvar CALL = Function.prototype.call;\nvar APPLY = Function.prototype.apply;\nvar BIND = Function.prototype.bind;\n\nfunction ensureSafeFunction(obj, fullExpression) {\n  if (obj) {\n    if (obj.constructor === obj) {\n      throw $parseMinErr('isecfn',\n        'Referencing Function in Angular expressions is disallowed! Expression: {0}',\n        fullExpression);\n    } else if (obj === CALL || obj === APPLY || (BIND && obj === BIND)) {\n      throw $parseMinErr('isecff',\n        'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}',\n        fullExpression);\n    }\n  }\n}\n\nvar OPERATORS = {\n    /* jshint bitwise : false */\n    'null':function(){return null;},\n    'true':function(){return true;},\n    'false':function(){return false;},\n    undefined:noop,\n    '+':function(self, locals, a,b){\n      a=a(self, locals); b=b(self, locals);\n      if (isDefined(a)) {\n        if (isDefined(b)) {\n          return a + b;\n        }\n        return a;\n      }\n      return isDefined(b)?b:undefined;},\n    '-':function(self, locals, a,b){\n          a=a(self, locals); b=b(self, locals);\n          return (isDefined(a)?a:0)-(isDefined(b)?b:0);\n        },\n    '*':function(self, locals, a,b){return a(self, locals)*b(self, locals);},\n    '/':function(self, locals, a,b){return a(self, locals)/b(self, locals);},\n    '%':function(self, locals, a,b){return a(self, locals)%b(self, locals);},\n    '^':function(self, locals, a,b){return a(self, locals)^b(self, locals);},\n    '=':noop,\n    '===':function(self, locals, a, b){return a(self, locals)===b(self, locals);},\n    '!==':function(self, locals, a, b){return a(self, locals)!==b(self, locals);},\n    '==':function(self, locals, a,b){return a(self, locals)==b(self, locals);},\n    '!=':function(self, locals, a,b){return a(self, locals)!=b(self, locals);},\n    '<':function(self, locals, a,b){return a(self, locals)<b(self, locals);},\n    '>':function(self, locals, a,b){return a(self, locals)>b(self, locals);},\n    '<=':function(self, locals, a,b){return a(self, locals)<=b(self, locals);},\n    '>=':function(self, locals, a,b){return a(self, locals)>=b(self, locals);},\n    '&&':function(self, locals, a,b){return a(self, locals)&&b(self, locals);},\n    '||':function(self, locals, a,b){return a(self, locals)||b(self, locals);},\n    '&':function(self, locals, a,b){return a(self, locals)&b(self, locals);},\n//    '|':function(self, locals, a,b){return a|b;},\n    '|':function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},\n    '!':function(self, locals, a){return !a(self, locals);}\n};\n/* jshint bitwise: true */\nvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\n\n/////////////////////////////////////////\n\n\n/**\n * @constructor\n */\nvar Lexer = function (options) {\n  this.options = options;\n};\n\nLexer.prototype = {\n  constructor: Lexer,\n\n  lex: function (text) {\n    this.text = text;\n\n    this.index = 0;\n    this.ch = undefined;\n    this.lastCh = ':'; // can start regexp\n\n    this.tokens = [];\n\n    while (this.index < this.text.length) {\n      this.ch = this.text.charAt(this.index);\n      if (this.is('\"\\'')) {\n        this.readString(this.ch);\n      } else if (this.isNumber(this.ch) || this.is('.') && this.isNumber(this.peek())) {\n        this.readNumber();\n      } else if (this.isIdent(this.ch)) {\n        this.readIdent();\n      } else if (this.is('(){}[].,;:?')) {\n        this.tokens.push({\n          index: this.index,\n          text: this.ch\n        });\n        this.index++;\n      } else if (this.isWhitespace(this.ch)) {\n        this.index++;\n        continue;\n      } else {\n        var ch2 = this.ch + this.peek();\n        var ch3 = ch2 + this.peek(2);\n        var fn = OPERATORS[this.ch];\n        var fn2 = OPERATORS[ch2];\n        var fn3 = OPERATORS[ch3];\n        if (fn3) {\n          this.tokens.push({index: this.index, text: ch3, fn: fn3});\n          this.index += 3;\n        } else if (fn2) {\n          this.tokens.push({index: this.index, text: ch2, fn: fn2});\n          this.index += 2;\n        } else if (fn) {\n          this.tokens.push({\n            index: this.index,\n            text: this.ch,\n            fn: fn\n          });\n          this.index += 1;\n        } else {\n          this.throwError('Unexpected next character ', this.index, this.index + 1);\n        }\n      }\n      this.lastCh = this.ch;\n    }\n    return this.tokens;\n  },\n\n  is: function(chars) {\n    return chars.indexOf(this.ch) !== -1;\n  },\n\n  was: function(chars) {\n    return chars.indexOf(this.lastCh) !== -1;\n  },\n\n  peek: function(i) {\n    var num = i || 1;\n    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\n  },\n\n  isNumber: function(ch) {\n    return ('0' <= ch && ch <= '9');\n  },\n\n  isWhitespace: function(ch) {\n    // IE treats non-breaking space as \\u00A0\n    return (ch === ' ' || ch === '\\r' || ch === '\\t' ||\n            ch === '\\n' || ch === '\\v' || ch === '\\u00A0');\n  },\n\n  isIdent: function(ch) {\n    return ('a' <= ch && ch <= 'z' ||\n            'A' <= ch && ch <= 'Z' ||\n            '_' === ch || ch === '$');\n  },\n\n  isExpOperator: function(ch) {\n    return (ch === '-' || ch === '+' || this.isNumber(ch));\n  },\n\n  throwError: function(error, start, end) {\n    end = end || this.index;\n    var colStr = (isDefined(start)\n            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\n            : ' ' + end);\n    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\n        error, colStr, this.text);\n  },\n\n  readNumber: function() {\n    var number = '';\n    var start = this.index;\n    while (this.index < this.text.length) {\n      var ch = lowercase(this.text.charAt(this.index));\n      if (ch == '.' || this.isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = this.peek();\n        if (ch == 'e' && this.isExpOperator(peekCh)) {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            peekCh && this.isNumber(peekCh) &&\n            number.charAt(number.length - 1) == 'e') {\n          number += ch;\n        } else if (this.isExpOperator(ch) &&\n            (!peekCh || !this.isNumber(peekCh)) &&\n            number.charAt(number.length - 1) == 'e') {\n          this.throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      this.index++;\n    }\n    number = 1 * number;\n    this.tokens.push({\n      index: start,\n      text: number,\n      literal: true,\n      constant: true,\n      fn: function() { return number; }\n    });\n  },\n\n  readIdent: function() {\n    var parser = this;\n\n    var ident = '';\n    var start = this.index;\n\n    var lastDot, peekIndex, methodName, ch;\n\n    while (this.index < this.text.length) {\n      ch = this.text.charAt(this.index);\n      if (ch === '.' || this.isIdent(ch) || this.isNumber(ch)) {\n        if (ch === '.') lastDot = this.index;\n        ident += ch;\n      } else {\n        break;\n      }\n      this.index++;\n    }\n\n    //check if this is not a method invocation and if it is back out to last dot\n    if (lastDot) {\n      peekIndex = this.index;\n      while (peekIndex < this.text.length) {\n        ch = this.text.charAt(peekIndex);\n        if (ch === '(') {\n          methodName = ident.substr(lastDot - start + 1);\n          ident = ident.substr(0, lastDot - start);\n          this.index = peekIndex;\n          break;\n        }\n        if (this.isWhitespace(ch)) {\n          peekIndex++;\n        } else {\n          break;\n        }\n      }\n    }\n\n\n    var token = {\n      index: start,\n      text: ident\n    };\n\n    // OPERATORS is our own object so we don't need to use special hasOwnPropertyFn\n    if (OPERATORS.hasOwnProperty(ident)) {\n      token.fn = OPERATORS[ident];\n      token.literal = true;\n      token.constant = true;\n    } else {\n      var getter = getterFn(ident, this.options, this.text);\n      token.fn = extend(function(self, locals) {\n        return (getter(self, locals));\n      }, {\n        assign: function(self, value) {\n          return setter(self, ident, value, parser.text, parser.options);\n        }\n      });\n    }\n\n    this.tokens.push(token);\n\n    if (methodName) {\n      this.tokens.push({\n        index:lastDot,\n        text: '.'\n      });\n      this.tokens.push({\n        index: lastDot + 1,\n        text: methodName\n      });\n    }\n  },\n\n  readString: function(quote) {\n    var start = this.index;\n    this.index++;\n    var string = '';\n    var rawString = quote;\n    var escape = false;\n    while (this.index < this.text.length) {\n      var ch = this.text.charAt(this.index);\n      rawString += ch;\n      if (escape) {\n        if (ch === 'u') {\n          var hex = this.text.substring(this.index + 1, this.index + 5);\n          if (!hex.match(/[\\da-f]{4}/i))\n            this.throwError('Invalid unicode escape [\\\\u' + hex + ']');\n          this.index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          string = string + (rep || ch);\n        }\n        escape = false;\n      } else if (ch === '\\\\') {\n        escape = true;\n      } else if (ch === quote) {\n        this.index++;\n        this.tokens.push({\n          index: start,\n          text: rawString,\n          string: string,\n          literal: true,\n          constant: true,\n          fn: function() { return string; }\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      this.index++;\n    }\n    this.throwError('Unterminated quote', start);\n  }\n};\n\n\n/**\n * @constructor\n */\nvar Parser = function (lexer, $filter, options) {\n  this.lexer = lexer;\n  this.$filter = $filter;\n  this.options = options;\n};\n\nParser.ZERO = extend(function () {\n  return 0;\n}, {\n  constant: true\n});\n\nParser.prototype = {\n  constructor: Parser,\n\n  parse: function (text) {\n    this.text = text;\n\n    this.tokens = this.lexer.lex(text);\n\n    var value = this.statements();\n\n    if (this.tokens.length !== 0) {\n      this.throwError('is an unexpected token', this.tokens[0]);\n    }\n\n    value.literal = !!value.literal;\n    value.constant = !!value.constant;\n\n    return value;\n  },\n\n  primary: function () {\n    var primary;\n    if (this.expect('(')) {\n      primary = this.filterChain();\n      this.consume(')');\n    } else if (this.expect('[')) {\n      primary = this.arrayDeclaration();\n    } else if (this.expect('{')) {\n      primary = this.object();\n    } else {\n      var token = this.expect();\n      primary = token.fn;\n      if (!primary) {\n        this.throwError('not a primary expression', token);\n      }\n      primary.literal = !!token.literal;\n      primary.constant = !!token.constant;\n    }\n\n    var next, context;\n    while ((next = this.expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = this.functionCall(primary, context);\n        context = null;\n      } else if (next.text === '[') {\n        context = primary;\n        primary = this.objectIndex(primary);\n      } else if (next.text === '.') {\n        context = primary;\n        primary = this.fieldAccess(primary);\n      } else {\n        this.throwError('IMPOSSIBLE');\n      }\n    }\n    return primary;\n  },\n\n  throwError: function(msg, token) {\n    throw $parseMinErr('syntax',\n        'Syntax Error: Token \\'{0}\\' {1} at column {2} of the expression [{3}] starting at [{4}].',\n          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));\n  },\n\n  peekToken: function() {\n    if (this.tokens.length === 0)\n      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);\n    return this.tokens[0];\n  },\n\n  peek: function(e1, e2, e3, e4) {\n    if (this.tokens.length > 0) {\n      var token = this.tokens[0];\n      var t = token.text;\n      if (t === e1 || t === e2 || t === e3 || t === e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  },\n\n  expect: function(e1, e2, e3, e4){\n    var token = this.peek(e1, e2, e3, e4);\n    if (token) {\n      this.tokens.shift();\n      return token;\n    }\n    return false;\n  },\n\n  consume: function(e1){\n    if (!this.expect(e1)) {\n      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());\n    }\n  },\n\n  unaryFn: function(fn, right) {\n    return extend(function(self, locals) {\n      return fn(self, locals, right);\n    }, {\n      constant:right.constant\n    });\n  },\n\n  ternaryFn: function(left, middle, right){\n    return extend(function(self, locals){\n      return left(self, locals) ? middle(self, locals) : right(self, locals);\n    }, {\n      constant: left.constant && middle.constant && right.constant\n    });\n  },\n\n  binaryFn: function(left, fn, right) {\n    return extend(function(self, locals) {\n      return fn(self, locals, left, right);\n    }, {\n      constant:left.constant && right.constant\n    });\n  },\n\n  statements: function() {\n    var statements = [];\n    while (true) {\n      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))\n        statements.push(this.filterChain());\n      if (!this.expect(';')) {\n        // optimize for the common case where there is only one statement.\n        // TODO(size): maybe we should not support multiple statements?\n        return (statements.length === 1)\n            ? statements[0]\n            : function(self, locals) {\n                var value;\n                for (var i = 0; i < statements.length; i++) {\n                  var statement = statements[i];\n                  if (statement) {\n                    value = statement(self, locals);\n                  }\n                }\n                return value;\n              };\n      }\n    }\n  },\n\n  filterChain: function() {\n    var left = this.expression();\n    var token;\n    while (true) {\n      if ((token = this.expect('|'))) {\n        left = this.binaryFn(left, token.fn, this.filter());\n      } else {\n        return left;\n      }\n    }\n  },\n\n  filter: function() {\n    var token = this.expect();\n    var fn = this.$filter(token.text);\n    var argsFn = [];\n    while (true) {\n      if ((token = this.expect(':'))) {\n        argsFn.push(this.expression());\n      } else {\n        var fnInvoke = function(self, locals, input) {\n          var args = [input];\n          for (var i = 0; i < argsFn.length; i++) {\n            args.push(argsFn[i](self, locals));\n          }\n          return fn.apply(self, args);\n        };\n        return function() {\n          return fnInvoke;\n        };\n      }\n    }\n  },\n\n  expression: function() {\n    return this.assignment();\n  },\n\n  assignment: function() {\n    var left = this.ternary();\n    var right;\n    var token;\n    if ((token = this.expect('='))) {\n      if (!left.assign) {\n        this.throwError('implies assignment but [' +\n            this.text.substring(0, token.index) + '] can not be assigned to', token);\n      }\n      right = this.ternary();\n      return function(scope, locals) {\n        return left.assign(scope, right(scope, locals), locals);\n      };\n    }\n    return left;\n  },\n\n  ternary: function() {\n    var left = this.logicalOR();\n    var middle;\n    var token;\n    if ((token = this.expect('?'))) {\n      middle = this.assignment();\n      if ((token = this.expect(':'))) {\n        return this.ternaryFn(left, middle, this.assignment());\n      } else {\n        this.throwError('expected :', token);\n      }\n    } else {\n      return left;\n    }\n  },\n\n  logicalOR: function() {\n    var left = this.logicalAND();\n    var token;\n    while (true) {\n      if ((token = this.expect('||'))) {\n        left = this.binaryFn(left, token.fn, this.logicalAND());\n      } else {\n        return left;\n      }\n    }\n  },\n\n  logicalAND: function() {\n    var left = this.equality();\n    var token;\n    if ((token = this.expect('&&'))) {\n      left = this.binaryFn(left, token.fn, this.logicalAND());\n    }\n    return left;\n  },\n\n  equality: function() {\n    var left = this.relational();\n    var token;\n    if ((token = this.expect('==','!=','===','!=='))) {\n      left = this.binaryFn(left, token.fn, this.equality());\n    }\n    return left;\n  },\n\n  relational: function() {\n    var left = this.additive();\n    var token;\n    if ((token = this.expect('<', '>', '<=', '>='))) {\n      left = this.binaryFn(left, token.fn, this.relational());\n    }\n    return left;\n  },\n\n  additive: function() {\n    var left = this.multiplicative();\n    var token;\n    while ((token = this.expect('+','-'))) {\n      left = this.binaryFn(left, token.fn, this.multiplicative());\n    }\n    return left;\n  },\n\n  multiplicative: function() {\n    var left = this.unary();\n    var token;\n    while ((token = this.expect('*','/','%'))) {\n      left = this.binaryFn(left, token.fn, this.unary());\n    }\n    return left;\n  },\n\n  unary: function() {\n    var token;\n    if (this.expect('+')) {\n      return this.primary();\n    } else if ((token = this.expect('-'))) {\n      return this.binaryFn(Parser.ZERO, token.fn, this.unary());\n    } else if ((token = this.expect('!'))) {\n      return this.unaryFn(token.fn, this.unary());\n    } else {\n      return this.primary();\n    }\n  },\n\n  fieldAccess: function(object) {\n    var parser = this;\n    var field = this.expect().text;\n    var getter = getterFn(field, this.options, this.text);\n\n    return extend(function(scope, locals, self) {\n      return getter(self || object(scope, locals));\n    }, {\n      assign: function(scope, value, locals) {\n        var o = object(scope, locals);\n        if (!o) object.assign(scope, o = {});\n        return setter(o, field, value, parser.text, parser.options);\n      }\n    });\n  },\n\n  objectIndex: function(obj) {\n    var parser = this;\n\n    var indexFn = this.expression();\n    this.consume(']');\n\n    return extend(function(self, locals) {\n      var o = obj(self, locals),\n          i = getStringValue(indexFn(self, locals), parser.text),\n          v, p;\n\n      ensureSafeMemberName(i, parser.text);\n      if (!o) return undefined;\n      v = ensureSafeObject(o[i], parser.text);\n      if (v && v.then && parser.options.unwrapPromises) {\n        p = v;\n        if (!('$$v' in v)) {\n          p.$$v = undefined;\n          p.then(function(val) { p.$$v = val; });\n        }\n        v = v.$$v;\n      }\n      return v;\n    }, {\n      assign: function(self, value, locals) {\n        var key = ensureSafeMemberName(getStringValue(indexFn(self, locals), parser.text), parser.text);\n        // prevent overwriting of Function.constructor which would break ensureSafeObject check\n        var o = ensureSafeObject(obj(self, locals), parser.text);\n        if (!o) obj.assign(self, o = {});\n        return o[key] = value;\n      }\n    });\n  },\n\n  functionCall: function(fn, contextGetter) {\n    var argsFn = [];\n    if (this.peekToken().text !== ')') {\n      do {\n        argsFn.push(this.expression());\n      } while (this.expect(','));\n    }\n    this.consume(')');\n\n    var parser = this;\n\n    return function(scope, locals) {\n      var args = [];\n      var context = contextGetter ? contextGetter(scope, locals) : scope;\n\n      for (var i = 0; i < argsFn.length; i++) {\n        args.push(ensureSafeObject(argsFn[i](scope, locals), parser.text));\n      }\n      var fnPtr = fn(scope, locals, context) || noop;\n\n      ensureSafeObject(context, parser.text);\n      ensureSafeFunction(fnPtr, parser.text);\n\n      // IE doesn't have apply for some native functions\n      var v = fnPtr.apply\n            ? fnPtr.apply(context, args)\n            : fnPtr(args[0], args[1], args[2], args[3], args[4]);\n\n      return ensureSafeObject(v, parser.text);\n    };\n  },\n\n  // This is used with json array declaration\n  arrayDeclaration: function () {\n    var elementFns = [];\n    var allConstant = true;\n    if (this.peekToken().text !== ']') {\n      do {\n        if (this.peek(']')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        var elementFn = this.expression();\n        elementFns.push(elementFn);\n        if (!elementFn.constant) {\n          allConstant = false;\n        }\n      } while (this.expect(','));\n    }\n    this.consume(']');\n\n    return extend(function(self, locals) {\n      var array = [];\n      for (var i = 0; i < elementFns.length; i++) {\n        array.push(elementFns[i](self, locals));\n      }\n      return array;\n    }, {\n      literal: true,\n      constant: allConstant\n    });\n  },\n\n  object: function () {\n    var keyValues = [];\n    var allConstant = true;\n    if (this.peekToken().text !== '}') {\n      do {\n        if (this.peek('}')) {\n          // Support trailing commas per ES5.1.\n          break;\n        }\n        var token = this.expect(),\n        key = token.string || token.text;\n        this.consume(':');\n        var value = this.expression();\n        keyValues.push({key: key, value: value});\n        if (!value.constant) {\n          allConstant = false;\n        }\n      } while (this.expect(','));\n    }\n    this.consume('}');\n\n    return extend(function(self, locals) {\n      var object = {};\n      for (var i = 0; i < keyValues.length; i++) {\n        var keyValue = keyValues[i];\n        object[keyValue.key] = keyValue.value(self, locals);\n      }\n      return object;\n    }, {\n      literal: true,\n      constant: allConstant\n    });\n  }\n};\n\n\n//////////////////////////////////////////////////\n// Parser helper functions\n//////////////////////////////////////////////////\n\nfunction setter(obj, path, setValue, fullExp, options) {\n  ensureSafeObject(obj, fullExp);\n\n  //needed?\n  options = options || {};\n\n  var element = path.split('.'), key;\n  for (var i = 0; element.length > 1; i++) {\n    key = ensureSafeMemberName(element.shift(), fullExp);\n    var propertyObj = ensureSafeObject(obj[key], fullExp);\n    if (!propertyObj) {\n      propertyObj = {};\n      obj[key] = propertyObj;\n    }\n    obj = propertyObj;\n    if (obj.then && options.unwrapPromises) {\n      promiseWarning(fullExp);\n      if (!(\"$$v\" in obj)) {\n        (function(promise) {\n          promise.then(function(val) { promise.$$v = val; }); }\n        )(obj);\n      }\n      if (obj.$$v === undefined) {\n        obj.$$v = {};\n      }\n      obj = obj.$$v;\n    }\n  }\n  key = ensureSafeMemberName(element.shift(), fullExp);\n  ensureSafeObject(obj[key], fullExp);\n  obj[key] = setValue;\n  return setValue;\n}\n\nvar getterFnCacheDefault = {};\nvar getterFnCacheExpensive = {};\n\nfunction isPossiblyDangerousMemberName(name) {\n  return name == 'constructor';\n}\n\n/**\n * Implementation of the \"Black Hole\" variant from:\n * - http://jsperf.com/angularjs-parse-getter/4\n * - http://jsperf.com/path-evaluation-simplified/7\n */\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4, fullExp, options) {\n  ensureSafeMemberName(key0, fullExp);\n  ensureSafeMemberName(key1, fullExp);\n  ensureSafeMemberName(key2, fullExp);\n  ensureSafeMemberName(key3, fullExp);\n  ensureSafeMemberName(key4, fullExp);\n  var eso = function(o) {\n    return ensureSafeObject(o, fullExp);\n  };\n  var expensiveChecks = options.expensiveChecks;\n  var eso0 = (expensiveChecks || isPossiblyDangerousMemberName(key0)) ? eso : identity;\n  var eso1 = (expensiveChecks || isPossiblyDangerousMemberName(key1)) ? eso : identity;\n  var eso2 = (expensiveChecks || isPossiblyDangerousMemberName(key2)) ? eso : identity;\n  var eso3 = (expensiveChecks || isPossiblyDangerousMemberName(key3)) ? eso : identity;\n  var eso4 = (expensiveChecks || isPossiblyDangerousMemberName(key4)) ? eso : identity;\n\n  return !options.unwrapPromises\n      ? function cspSafeGetter(scope, locals) {\n          var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope;\n\n          if (pathVal == null) return pathVal;\n          pathVal = eso0(pathVal[key0]);\n\n          if (!key1) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso1(pathVal[key1]);\n\n          if (!key2) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso2(pathVal[key2]);\n\n          if (!key3) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso3(pathVal[key3]);\n\n          if (!key4) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso4(pathVal[key4]);\n\n          return pathVal;\n        }\n      : function cspSafePromiseEnabledGetter(scope, locals) {\n          var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope,\n              promise;\n\n          if (pathVal == null) return pathVal;\n\n          pathVal = eso0(pathVal[key0]);\n          if (pathVal && pathVal.then) {\n            promiseWarning(fullExp);\n            if (!(\"$$v\" in pathVal)) {\n              promise = pathVal;\n              promise.$$v = undefined;\n              promise.then(function(val) { promise.$$v = eso0(val); });\n            }\n            pathVal = eso0(pathVal.$$v);\n          }\n\n          if (!key1) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso1(pathVal[key1]);\n          if (pathVal && pathVal.then) {\n            promiseWarning(fullExp);\n            if (!(\"$$v\" in pathVal)) {\n              promise = pathVal;\n              promise.$$v = undefined;\n              promise.then(function(val) { promise.$$v = eso1(val); });\n            }\n            pathVal = eso1(pathVal.$$v);\n          }\n\n          if (!key2) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso2(pathVal[key2]);\n          if (pathVal && pathVal.then) {\n            promiseWarning(fullExp);\n            if (!(\"$$v\" in pathVal)) {\n              promise = pathVal;\n              promise.$$v = undefined;\n              promise.then(function(val) { promise.$$v = eso2(val); });\n            }\n            pathVal = eso2(pathVal.$$v);\n          }\n\n          if (!key3) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso3(pathVal[key3]);\n          if (pathVal && pathVal.then) {\n            promiseWarning(fullExp);\n            if (!(\"$$v\" in pathVal)) {\n              promise = pathVal;\n              promise.$$v = undefined;\n              promise.then(function(val) { promise.$$v = eso3(val); });\n            }\n            pathVal = eso3(pathVal.$$v);\n          }\n\n          if (!key4) return pathVal;\n          if (pathVal == null) return undefined;\n          pathVal = eso4(pathVal[key4]);\n          if (pathVal && pathVal.then) {\n            promiseWarning(fullExp);\n            if (!(\"$$v\" in pathVal)) {\n              promise = pathVal;\n              promise.$$v = undefined;\n              promise.then(function(val) { promise.$$v = eso4(val); });\n            }\n            pathVal = eso4(pathVal.$$v);\n          }\n          return pathVal;\n        };\n}\n\nfunction getterFnWithExtraArgs(fn, fullExpression) {\n  return function(s, l) {\n    return fn(s, l, promiseWarning, ensureSafeObject, fullExpression);\n  };\n}\n\nfunction getterFn(path, options, fullExp) {\n  var expensiveChecks = options.expensiveChecks;\n  var getterFnCache = (expensiveChecks ? getterFnCacheExpensive : getterFnCacheDefault);\n  // Check whether the cache has this getter already.\n  // We can use hasOwnProperty directly on the cache because we ensure,\n  // see below, that the cache never stores a path called 'hasOwnProperty'\n  if (getterFnCache.hasOwnProperty(path)) {\n    return getterFnCache[path];\n  }\n\n  var pathKeys = path.split('.'),\n      pathKeysLength = pathKeys.length,\n      fn;\n\n  // http://jsperf.com/angularjs-parse-getter/6\n  if (options.csp) {\n    if (pathKeysLength < 6) {\n      fn = cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4], fullExp,\n                          options);\n    } else {\n      fn = function(scope, locals) {\n        var i = 0, val;\n        do {\n          val = cspSafeGetterFn(pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++],\n                                pathKeys[i++], fullExp, options)(scope, locals);\n\n          locals = undefined; // clear after first iteration\n          scope = val;\n        } while (i < pathKeysLength);\n        return val;\n      };\n    }\n  } else {\n    var code = 'var p;\\n';\n    if (expensiveChecks) {\n      code += 's = eso(s, fe);\\nl = eso(l, fe);\\n';\n    }\n    var needsEnsureSafeObject = expensiveChecks;\n    forEach(pathKeys, function(key, index) {\n      ensureSafeMemberName(key, fullExp);\n      var lookupJs = (index\n                      // we simply dereference 's' on any .dot notation\n                      ? 's'\n                      // but if we are first then we check locals first, and if so read it first\n                      : '((l&&l.hasOwnProperty(\"' + key + '\"))?l:s)') + '[\"' + key + '\"]';\n      var wrapWithEso = expensiveChecks || isPossiblyDangerousMemberName(key);\n      if (wrapWithEso) {\n        lookupJs = 'eso(' + lookupJs + ', fe)';\n        needsEnsureSafeObject = true;\n      }\n      code += 'if(s == null) return undefined;\\n' +\n              's=' + lookupJs + ';\\n';\n      if (options.unwrapPromises) {\n        code += 'if (s && s.then) {\\n' +\n                  ' pw(\"' + fullExp.replace(/([\"\\r\\n])/g, '\\\\$1') + '\");\\n' +\n                  ' if (!(\"$$v\" in s)) {\\n' +\n                    ' p=s;\\n' +\n                    ' p.$$v = undefined;\\n' +\n                    ' p.then(function(v) {p.$$v=' + (wrapWithEso ? 'eso(v)' : 'v') + ';});\\n' +\n                    '}\\n' +\n                  ' s=' + (wrapWithEso ? 'eso(s.$$v)' : 's.$$v') + '\\n' +\n                '}\\n';\n\n      }\n    });\n    code += 'return s;';\n\n    /* jshint -W054 */\n    // s=scope, l=locals, pw=promiseWarning, eso=ensureSafeObject, fe=fullExpression\n    var evaledFnGetter = new Function('s', 'l', 'pw', 'eso', 'fe', code);\n    /* jshint +W054 */\n    evaledFnGetter.toString = valueFn(code);\n    if (needsEnsureSafeObject || options.unwrapPromises) {\n      evaledFnGetter = getterFnWithExtraArgs(evaledFnGetter, fullExp);\n    }\n    fn = evaledFnGetter;\n  }\n\n  // Only cache the value if it's not going to mess up the cache object\n  // This is more performant that using Object.prototype.hasOwnProperty.call\n  if (path !== 'hasOwnProperty') {\n    getterFnCache[path] = fn;\n  }\n  return fn;\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc service\n * @name $parse\n * @kind function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * ```js\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * ```\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (typically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The returned function also has the following properties:\n *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n *        literal.\n *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n *        constant literals.\n *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n *        set to a function to change its value on the given context.\n *\n */\n\n\n/**\n * @ngdoc provider\n * @name $parseProvider\n * @kind function\n *\n * @description\n * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n *  service.\n */\nfunction $ParseProvider() {\n  var cacheDefault = {};\n  var cacheExpensive = {};\n\n  var $parseOptions = {\n    csp: false,\n    unwrapPromises: false,\n    logPromiseWarnings: true,\n    expensiveChecks: false\n  };\n\n\n  /**\n   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.\n   *\n   * @ngdoc method\n   * @name $parseProvider#unwrapPromises\n   * @description\n   *\n   * **This feature is deprecated, see deprecation notes below for more info**\n   *\n   * If set to true (default is false), $parse will unwrap promises automatically when a promise is\n   * found at any part of the expression. In other words, if set to true, the expression will always\n   * result in a non-promise value.\n   *\n   * While the promise is unresolved, it's treated as undefined, but once resolved and fulfilled,\n   * the fulfillment value is used in place of the promise while evaluating the expression.\n   *\n   * **Deprecation notice**\n   *\n   * This is a feature that didn't prove to be wildly useful or popular, primarily because of the\n   * dichotomy between data access in templates (accessed as raw values) and controller code\n   * (accessed as promises).\n   *\n   * In most code we ended up resolving promises manually in controllers anyway and thus unifying\n   * the model access there.\n   *\n   * Other downsides of automatic promise unwrapping:\n   *\n   * - when building components it's often desirable to receive the raw promises\n   * - adds complexity and slows down expression evaluation\n   * - makes expression code pre-generation unattractive due to the amount of code that needs to be\n   *   generated\n   * - makes IDE auto-completion and tool support hard\n   *\n   * **Warning Logs**\n   *\n   * If the unwrapping is enabled, Angular will log a warning about each expression that unwraps a\n   * promise (to reduce the noise, each expression is logged only once). To disable this logging use\n   * `$parseProvider.logPromiseWarnings(false)` api.\n   *\n   *\n   * @param {boolean=} value New value.\n   * @returns {boolean|self} Returns the current setting when used as getter and self if used as\n   *                         setter.\n   */\n  this.unwrapPromises = function(value) {\n    if (isDefined(value)) {\n      $parseOptions.unwrapPromises = !!value;\n      return this;\n    } else {\n      return $parseOptions.unwrapPromises;\n    }\n  };\n\n\n  /**\n   * @deprecated Promise unwrapping via $parse is deprecated and will be removed in the future.\n   *\n   * @ngdoc method\n   * @name $parseProvider#logPromiseWarnings\n   * @description\n   *\n   * Controls whether Angular should log a warning on any encounter of a promise in an expression.\n   *\n   * The default is set to `true`.\n   *\n   * This setting applies only if `$parseProvider.unwrapPromises` setting is set to true as well.\n   *\n   * @param {boolean=} value New value.\n   * @returns {boolean|self} Returns the current setting when used as getter and self if used as\n   *                         setter.\n   */\n this.logPromiseWarnings = function(value) {\n    if (isDefined(value)) {\n      $parseOptions.logPromiseWarnings = value;\n      return this;\n    } else {\n      return $parseOptions.logPromiseWarnings;\n    }\n  };\n\n\n  this.$get = ['$filter', '$sniffer', '$log', function($filter, $sniffer, $log) {\n    $parseOptions.csp = $sniffer.csp;\n    var $parseOptionsExpensive = {\n      csp: $parseOptions.csp,\n      unwrapPromises: $parseOptions.unwrapPromises,\n      logPromiseWarnings: $parseOptions.logPromiseWarnings,\n      expensiveChecks: true\n    };\n\n    promiseWarning = function promiseWarningFn(fullExp) {\n      if (!$parseOptions.logPromiseWarnings || promiseWarningCache.hasOwnProperty(fullExp)) return;\n      promiseWarningCache[fullExp] = true;\n      $log.warn('[$parse] Promise found in the expression `' + fullExp + '`. ' +\n          'Automatic unwrapping of promises in Angular expressions is deprecated.');\n    };\n\n    return function(exp, expensiveChecks) {\n      var parsedExpression;\n\n      switch (typeof exp) {\n        case 'string':\n\n          var cache = (expensiveChecks ? cacheExpensive : cacheDefault);\n          if (cache.hasOwnProperty(exp)) {\n            return cache[exp];\n          }\n\n          var parseOptions = expensiveChecks ? $parseOptionsExpensive : $parseOptions;\n          var lexer = new Lexer(parseOptions);\n          var parser = new Parser(lexer, $filter, parseOptions);\n          parsedExpression = parser.parse(exp);\n\n          if (exp !== 'hasOwnProperty') {\n            // Only cache the value if it's not going to mess up the cache object\n            // This is more performant that using Object.prototype.hasOwnProperty.call\n            cache[exp] = parsedExpression;\n          }\n\n          return parsedExpression;\n\n        case 'function':\n          return exp;\n\n        default:\n          return noop;\n      }\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name $q\n * @requires $rootScope\n *\n * @description\n * A service that helps you run functions asynchronously, and use their return values (or exceptions)\n * when they are done processing.\n *\n * This is an implementation of promises/deferred objects inspired by\n * [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * ```js\n *   // for the purpose of this example let's assume that variables `$q`, `scope` and `okToGreet`\n *   // are available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       deferred.notify('About to greet ' + name + '.');\n *\n *       if (okToGreet(name)) {\n *         deferred.resolve('Hello, ' + name + '!');\n *       } else {\n *         deferred.reject('Greeting ' + name + ' is not allowed.');\n *       }\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   }, function(update) {\n *     alert('Got notification: ' + update);\n *   });\n * ```\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of guarantees that promise and deferred APIs make, see\n * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion, as well as the status\n * of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n * - `notify(value)` - provides updates on the status of the promise's execution. This may be called\n *   multiple times before the promise is either resolved or rejected.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n *   as soon as the result is available. The callbacks are called with a single argument: the result\n *   or rejection reason. Additionally, the notify callback may be called zero or more times to\n *   provide a progress indication, before the promise is resolved or rejected.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback`, `errorCallback`. It also notifies via the return value of the\n *   `notifyCallback` method. The promise can not be resolved or rejected from the notifyCallback\n *   method.\n *\n * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n *\n *   Because `catch` is a reserved word in JavaScript and reserved keywords are not supported as\n *   property names by ES3, you'll need to invoke the method like `promise['catch'](callback)` or\n *  `promise.then(null, errorCallback)` to make your code IE8 and Android 2.x compatible.\n *\n * - `finally(callback)` – allows you to observe either the fulfillment or rejection of a promise,\n *   but to do so without modifying the final value. This is useful to release resources or do some\n *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n *   more information.\n *\n *   Because `finally` is a reserved word in JavaScript and reserved keywords are not supported as\n *   property names by ES3, you'll need to invoke the method like `promise['finally'](callback)` to\n *   make your code IE8 and Android 2.x compatible.\n *\n * # Chaining promises\n *\n * Because calling the `then` method of a promise returns a new derived promise, it is easily\n * possible to create a chain of promises:\n *\n * ```js\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value\n *   // will be the result of promiseA incremented by 1\n * ```\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful APIs like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are two main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n *\n *  # Testing\n *\n *  ```js\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n *\n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n *\n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    }));\n *  ```\n */\nfunction $QProvider() {\n\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler);\n  }];\n}\n\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(Function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler) {\n\n  /**\n   * @ngdoc method\n   * @name $q#defer\n   * @kind function\n   *\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  var defer = function() {\n    var pending = [],\n        value, deferred;\n\n    deferred = {\n\n      resolve: function(val) {\n        if (pending) {\n          var callbacks = pending;\n          pending = undefined;\n          value = ref(val);\n\n          if (callbacks.length) {\n            nextTick(function() {\n              var callback;\n              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                callback = callbacks[i];\n                value.then(callback[0], callback[1], callback[2]);\n              }\n            });\n          }\n        }\n      },\n\n\n      reject: function(reason) {\n        deferred.resolve(createInternalRejectedPromise(reason));\n      },\n\n\n      notify: function(progress) {\n        if (pending) {\n          var callbacks = pending;\n\n          if (pending.length) {\n            nextTick(function() {\n              var callback;\n              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                callback = callbacks[i];\n                callback[2](progress);\n              }\n            });\n          }\n        }\n      },\n\n\n      promise: {\n        then: function(callback, errback, progressback) {\n          var result = defer();\n\n          var wrappedCallback = function(value) {\n            try {\n              result.resolve((isFunction(callback) ? callback : defaultCallback)(value));\n            } catch(e) {\n              result.reject(e);\n              exceptionHandler(e);\n            }\n          };\n\n          var wrappedErrback = function(reason) {\n            try {\n              result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));\n            } catch(e) {\n              result.reject(e);\n              exceptionHandler(e);\n            }\n          };\n\n          var wrappedProgressback = function(progress) {\n            try {\n              result.notify((isFunction(progressback) ? progressback : defaultCallback)(progress));\n            } catch(e) {\n              exceptionHandler(e);\n            }\n          };\n\n          if (pending) {\n            pending.push([wrappedCallback, wrappedErrback, wrappedProgressback]);\n          } else {\n            value.then(wrappedCallback, wrappedErrback, wrappedProgressback);\n          }\n\n          return result.promise;\n        },\n\n        \"catch\": function(callback) {\n          return this.then(null, callback);\n        },\n\n        \"finally\": function(callback) {\n\n          function makePromise(value, resolved) {\n            var result = defer();\n            if (resolved) {\n              result.resolve(value);\n            } else {\n              result.reject(value);\n            }\n            return result.promise;\n          }\n\n          function handleCallback(value, isResolved) {\n            var callbackOutput = null;\n            try {\n              callbackOutput = (callback ||defaultCallback)();\n            } catch(e) {\n              return makePromise(e, false);\n            }\n            if (isPromiseLike(callbackOutput)) {\n              return callbackOutput.then(function() {\n                return makePromise(value, isResolved);\n              }, function(error) {\n                return makePromise(error, false);\n              });\n            } else {\n              return makePromise(value, isResolved);\n            }\n          }\n\n          return this.then(function(value) {\n            return handleCallback(value, true);\n          }, function(error) {\n            return handleCallback(error, false);\n          });\n        }\n      }\n    };\n\n    return deferred;\n  };\n\n\n  var ref = function(value) {\n    if (isPromiseLike(value)) return value;\n    return {\n      then: function(callback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve(callback(value));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $q#reject\n   * @kind function\n   *\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * ```js\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * ```\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  var reject = function(reason) {\n    var result = defer();\n    result.reject(reason);\n    return result.promise;\n  };\n\n  var createInternalRejectedPromise = function(reason) {\n    return {\n      then: function(callback, errback) {\n        var result = defer();\n        nextTick(function() {\n          try {\n            result.resolve((isFunction(errback) ? errback : defaultErrback)(reason));\n          } catch(e) {\n            result.reject(e);\n            exceptionHandler(e);\n          }\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc method\n   * @name $q#when\n   * @kind function\n   *\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n  var when = function(value, callback, errback, progressback) {\n    var result = defer(),\n        done;\n\n    var wrappedCallback = function(value) {\n      try {\n        return (isFunction(callback) ? callback : defaultCallback)(value);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    var wrappedErrback = function(reason) {\n      try {\n        return (isFunction(errback) ? errback : defaultErrback)(reason);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    var wrappedProgressback = function(progress) {\n      try {\n        return (isFunction(progressback) ? progressback : defaultCallback)(progress);\n      } catch (e) {\n        exceptionHandler(e);\n      }\n    };\n\n    nextTick(function() {\n      ref(value).then(function(value) {\n        if (done) return;\n        done = true;\n        result.resolve(ref(value).then(wrappedCallback, wrappedErrback, wrappedProgressback));\n      }, function(reason) {\n        if (done) return;\n        done = true;\n        result.resolve(wrappedErrback(reason));\n      }, function(progress) {\n        if (done) return;\n        result.notify(wrappedProgressback(progress));\n      });\n    });\n\n    return result.promise;\n  };\n\n\n  function defaultCallback(value) {\n    return value;\n  }\n\n\n  function defaultErrback(reason) {\n    return reject(reason);\n  }\n\n\n  /**\n   * @ngdoc method\n   * @name $q#all\n   * @kind function\n   *\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,\n   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.\n   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected\n   *   with the same rejection value.\n   */\n  function all(promises) {\n    var deferred = defer(),\n        counter = 0,\n        results = isArray(promises) ? [] : {};\n\n    forEach(promises, function(promise, key) {\n      counter++;\n      ref(promise).then(function(value) {\n        if (results.hasOwnProperty(key)) return;\n        results[key] = value;\n        if (!(--counter)) deferred.resolve(results);\n      }, function(reason) {\n        if (results.hasOwnProperty(key)) return;\n        deferred.reject(reason);\n      });\n    });\n\n    if (counter === 0) {\n      deferred.resolve(results);\n    }\n\n    return deferred.promise;\n  }\n\n  return {\n    defer: defer,\n    reject: reject,\n    when: when,\n    all: all\n  };\n}\n\nfunction $$RAFProvider(){ //rAF\n  this.$get = ['$window', '$timeout', function($window, $timeout) {\n    var requestAnimationFrame = $window.requestAnimationFrame ||\n                                $window.webkitRequestAnimationFrame ||\n                                $window.mozRequestAnimationFrame;\n\n    var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                               $window.webkitCancelAnimationFrame ||\n                               $window.mozCancelAnimationFrame ||\n                               $window.webkitCancelRequestAnimationFrame;\n\n    var rafSupported = !!requestAnimationFrame;\n    var raf = rafSupported\n      ? function(fn) {\n          var id = requestAnimationFrame(fn);\n          return function() {\n            cancelAnimationFrame(id);\n          };\n        }\n      : function(fn) {\n          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n          return function() {\n            $timeout.cancel(timer);\n          };\n        };\n\n    raf.supported = rafSupported;\n\n    return raf;\n  }];\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - this means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (unshift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n *\n * There are few watches then a lot of observers. This is why you don't want the observer to be\n * implemented in the same way as watch. Watch requires return of initialization function which\n * are expensive to construct.\n */\n\n\n/**\n * @ngdoc provider\n * @name $rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc method\n * @name $rootScopeProvider#digestTtl\n * @description\n *\n * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * In complex applications it's possible that the dependencies between `$watch`s will result in\n * several digest iterations. However if an application needs more than the default 10 digest\n * iterations for its model to stabilize then you should investigate what is causing the model to\n * continuously change during the digest.\n *\n * Increasing the TTL could have performance implications, so you should not change it without\n * proper justification.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc service\n * @name $rootScope\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are descendant scopes of the root scope. Scopes provide separation\n * between the model and the view, via a mechanism for watching the model for changes.\n * They also provide an event emission/broadcast and subscription facility. See the\n * {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider(){\n  var TTL = 10;\n  var $rootScopeMinErr = minErr('$rootScope');\n  var lastDirtyWatch = null;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  this.$get = ['$injector', '$exceptionHandler', '$parse', '$browser',\n      function( $injector,   $exceptionHandler,   $parse,   $browser) {\n\n    /**\n     * @ngdoc type\n     * @name $rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link auto.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.)\n     *\n     * Here is a simple scope snippet to show how you can interact with the scope.\n     * ```html\n     * <file src=\"./test/ng/rootScopeSpec.js\" tag=\"docs1\" />\n     * ```\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * ```js\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         child.name = \"World\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * ```\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be\n     *                                       provided for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *                              append/override services provided by `providers`. This is handy\n     *                              when unit-testing and having the need to override a default\n     *                              service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this['this'] = this.$root =  this;\n      this.$$destroyed = false;\n      this.$$asyncQueue = [];\n      this.$$postDigestQueue = [];\n      this.$$listeners = {};\n      this.$$listenerCount = {};\n      this.$$isolateBindings = {};\n    }\n\n    /**\n     * @ngdoc property\n     * @name $rootScope.Scope#$id\n     *\n     * @description\n     * Unique scope ID (monotonically increasing) useful for debugging.\n     */\n\n     /**\n      * @ngdoc property\n      * @name $rootScope.Scope#$parent\n      *\n      * @description\n      * Reference to the parent scope.\n      */\n\n      /**\n       * @ngdoc property\n       * @name $rootScope.Scope#$root\n       *\n       * @description\n       * Reference to the root scope.\n       */\n\n    Scope.prototype = {\n      constructor: Scope,\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$new\n       * @kind function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\n       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\n       * desired for the scope and its child scopes to be permanently detached from the parent and\n       * thus stop participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets, it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate) {\n        var ChildScope,\n            child;\n\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n          // ensure that there is just one async queue per $rootScope and its children\n          child.$$asyncQueue = this.$$asyncQueue;\n          child.$$postDigestQueue = this.$$postDigestQueue;\n        } else {\n          // Only create a child scope class if somebody asks for one,\n          // but cache it to allow the VM to optimize lookups.\n          if (!this.$$childScopeClass) {\n            this.$$childScopeClass = function() {\n              this.$$watchers = this.$$nextSibling =\n                  this.$$childHead = this.$$childTail = null;\n              this.$$listeners = {};\n              this.$$listenerCount = {};\n              this.$id = nextUid();\n              this.$$childScopeClass = null;\n            };\n            this.$$childScopeClass.prototype = this;\n          }\n          child = new this.$$childScopeClass();\n        }\n        child['this'] = child;\n        child.$parent = this;\n        child.$$prevSibling = this.$$childTail;\n        if (this.$$childHead) {\n          this.$$childTail.$$nextSibling = child;\n          this.$$childTail = child;\n        } else {\n          this.$$childHead = this.$$childTail = child;\n        }\n        return child;\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watch\n       * @kind function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n       *   $digest()} and should return the value that will be watched. (Since\n       *   {@link ng.$rootScope.Scope#$digest $digest()} reruns when it detects changes the\n       *   `watchExpression` can execute multiple times per\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). Inequality is determined according to reference inequality,\n       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n       *    via the `!==` Javascript operator, unless `objectEquality == true`\n       *   (see next point)\n       * - When `objectEquality == true`, inequality of the `watchExpression` is determined\n       *   according to the {@link angular.equals} function. To save the value of the object for\n       *   later comparison, the {@link angular.copy} function is used. This therefore means that\n       *   watching complex objects will have adverse memory and performance implications.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.\n       *   This is achieved by rerunning the watchers until no changes are detected. The rerun\n       *   iteration limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a\n       * change is detected, be prepared for multiple calls to your listener.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       * The example below contains an illustration of using a function as your $watch listener\n       *\n       *\n       * # Example\n       * ```js\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n\n\n\n           // Using a listener function\n           var food;\n           scope.foodCounter = 0;\n           expect(scope.foodCounter).toEqual(0);\n           scope.$watch(\n             // This is the listener function\n             function() { return food; },\n             // This is the change handler\n             function(newValue, oldValue) {\n               if ( newValue !== oldValue ) {\n                 // Only increment the counter if the value changed\n                 scope.foodCounter = scope.foodCounter + 1;\n               }\n             }\n           );\n           // No digest has been run so the counter will be zero\n           expect(scope.foodCounter).toEqual(0);\n\n           // Run the digest but since food has not changed count will still be zero\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(0);\n\n           // Update food and run digest.  Now the counter will increment\n           food = 'cheeseburger';\n           scope.$digest();\n           expect(scope.foodCounter).toEqual(1);\n\n       * ```\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n       *    a call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {(function()|string)=} listener Callback called whenever the return value of\n       *   the `watchExpression` changes.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(newValue, oldValue, scope)`: called with current and previous values as\n       *      parameters.\n       *\n       * @param {boolean=} objectEquality Compare for object equality using {@link angular.equals} instead of\n       *     comparing for reference equality.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality) {\n        var scope = this,\n            get = compileToFn(watchExp, 'watch'),\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: watchExp,\n              eq: !!objectEquality\n            };\n\n        lastDirtyWatch = null;\n\n        // in the case user pass string, we need to compile it, do we really need this ?\n        if (!isFunction(listener)) {\n          var listenFn = compileToFn(listener || noop, 'listener');\n          watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};\n        }\n\n        if (typeof watchExp == 'string' && get.constant) {\n          var originalFn = watcher.fn;\n          watcher.fn = function(newVal, oldVal, scope) {\n            originalFn.call(this, newVal, oldVal, scope);\n            arrayRemove(array, watcher);\n          };\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n\n        return function deregisterWatch() {\n          arrayRemove(array, watcher);\n          lastDirtyWatch = null;\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$watchCollection\n       * @kind function\n       *\n       * @description\n       * Shallow watches the properties of an object and fires whenever any of the properties change\n       * (for arrays, this implies watching the array items; for object maps, this implies watching\n       * the properties). If a change is detected, the `listener` callback is fired.\n       *\n       * - The `obj` collection is observed via standard $watch operation and is examined on every\n       *   call to $digest() to see if any items have been added, removed, or moved.\n       * - The `listener` is called whenever anything within the `obj` has changed. Examples include\n       *   adding, removing, and moving items belonging to an object or array.\n       *\n       *\n       * # Example\n       * ```js\n          $scope.names = ['igor', 'matias', 'misko', 'james'];\n          $scope.dataCount = 4;\n\n          $scope.$watchCollection('names', function(newNames, oldNames) {\n            $scope.dataCount = newNames.length;\n          });\n\n          expect($scope.dataCount).toEqual(4);\n          $scope.$digest();\n\n          //still at 4 ... no changes\n          expect($scope.dataCount).toEqual(4);\n\n          $scope.names.pop();\n          $scope.$digest();\n\n          //now there's been a change\n          expect($scope.dataCount).toEqual(3);\n       * ```\n       *\n       *\n       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The\n       *    expression value should evaluate to an object or an array which is observed on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n       *    collection will trigger a call to the `listener`.\n       *\n       * @param {function(newCollection, oldCollection, scope)} listener a callback function called\n       *    when a change is detected.\n       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression\n       *    - The `oldCollection` object is a copy of the former collection data.\n       *      Due to performance considerations, the`oldCollection` value is computed only if the\n       *      `listener` function declares two or more arguments.\n       *    - The `scope` argument refers to the current scope.\n       *\n       * @returns {function()} Returns a de-registration function for this listener. When the\n       *    de-registration function is executed, the internal watch operation is terminated.\n       */\n      $watchCollection: function(obj, listener) {\n        var self = this;\n        // the current value, updated on each dirty-check run\n        var newValue;\n        // a shallow copy of the newValue from the last dirty-check run,\n        // updated to match newValue during dirty-check run\n        var oldValue;\n        // a shallow copy of the newValue from when the last change happened\n        var veryOldValue;\n        // only track veryOldValue if the listener is asking for it\n        var trackVeryOldValue = (listener.length > 1);\n        var changeDetected = 0;\n        var objGetter = $parse(obj);\n        var internalArray = [];\n        var internalObject = {};\n        var initRun = true;\n        var oldLength = 0;\n\n        function $watchCollectionWatch() {\n          newValue = objGetter(self);\n          var newLength, key, bothNaN;\n\n          if (!isObject(newValue)) { // if primitive\n            if (oldValue !== newValue) {\n              oldValue = newValue;\n              changeDetected++;\n            }\n          } else if (isArrayLike(newValue)) {\n            if (oldValue !== internalArray) {\n              // we are transitioning from something which was not an array into array.\n              oldValue = internalArray;\n              oldLength = oldValue.length = 0;\n              changeDetected++;\n            }\n\n            newLength = newValue.length;\n\n            if (oldLength !== newLength) {\n              // if lengths do not match we need to trigger change notification\n              changeDetected++;\n              oldValue.length = oldLength = newLength;\n            }\n            // copy the items to oldValue and look for changes.\n            for (var i = 0; i < newLength; i++) {\n              bothNaN = (oldValue[i] !== oldValue[i]) &&\n                  (newValue[i] !== newValue[i]);\n              if (!bothNaN && (oldValue[i] !== newValue[i])) {\n                changeDetected++;\n                oldValue[i] = newValue[i];\n              }\n            }\n          } else {\n            if (oldValue !== internalObject) {\n              // we are transitioning from something which was not an object into object.\n              oldValue = internalObject = {};\n              oldLength = 0;\n              changeDetected++;\n            }\n            // copy the items to oldValue and look for changes.\n            newLength = 0;\n            for (key in newValue) {\n              if (newValue.hasOwnProperty(key)) {\n                newLength++;\n                if (oldValue.hasOwnProperty(key)) {\n                  bothNaN = (oldValue[key] !== oldValue[key]) &&\n                      (newValue[key] !== newValue[key]);\n                  if (!bothNaN && (oldValue[key] !== newValue[key])) {\n                    changeDetected++;\n                    oldValue[key] = newValue[key];\n                  }\n                } else {\n                  oldLength++;\n                  oldValue[key] = newValue[key];\n                  changeDetected++;\n                }\n              }\n            }\n            if (oldLength > newLength) {\n              // we used to have more keys, need to find them and destroy them.\n              changeDetected++;\n              for(key in oldValue) {\n                if (oldValue.hasOwnProperty(key) && !newValue.hasOwnProperty(key)) {\n                  oldLength--;\n                  delete oldValue[key];\n                }\n              }\n            }\n          }\n          return changeDetected;\n        }\n\n        function $watchCollectionAction() {\n          if (initRun) {\n            initRun = false;\n            listener(newValue, newValue, self);\n          } else {\n            listener(newValue, veryOldValue, self);\n          }\n\n          // make a copy for the next time a collection is changed\n          if (trackVeryOldValue) {\n            if (!isObject(newValue)) {\n              //primitive\n              veryOldValue = newValue;\n            } else if (isArrayLike(newValue)) {\n              veryOldValue = new Array(newValue.length);\n              for (var i = 0; i < newValue.length; i++) {\n                veryOldValue[i] = newValue[i];\n              }\n            } else { // if object\n              veryOldValue = {};\n              for (var key in newValue) {\n                if (hasOwnProperty.call(newValue, key)) {\n                  veryOldValue[key] = newValue[key];\n                }\n              }\n            }\n          }\n        }\n\n        return this.$watch($watchCollectionWatch, $watchCollectionAction);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$digest\n       * @kind function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\n       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\n       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\n       * until no more listeners are firing. This means that it is possible to get into an infinite\n       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\n       * iterations exceeds 10.\n       *\n       * Usually, you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\n       * a {@link ng.$compileProvider#directive directives}), which will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function with\n       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n       *\n       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n       *\n       * # Example\n       * ```js\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // the listener is always called during the first $digest loop after it was registered\n           expect(scope.counter).toEqual(1);\n\n           scope.$digest();\n           // but now it will not be called unless the value changes\n           expect(scope.counter).toEqual(1);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(2);\n       * ```\n       *\n       */\n      $digest: function() {\n        var watch, value, last,\n            watchers,\n            asyncQueue = this.$$asyncQueue,\n            postDigestQueue = this.$$postDigestQueue,\n            length,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, logMsg, asyncTask;\n\n        beginPhase('$digest');\n        // Check for changes to browser url that happened in sync before the call to $digest\n        $browser.$$checkUrlChange();\n\n        lastDirtyWatch = null;\n\n        do { // \"while dirty\" loop\n          dirty = false;\n          current = target;\n\n          while(asyncQueue.length) {\n            try {\n              asyncTask = asyncQueue.shift();\n              asyncTask.scope.$eval(asyncTask.expression);\n            } catch (e) {\n              clearPhase();\n              $exceptionHandler(e);\n            }\n            lastDirtyWatch = null;\n          }\n\n          traverseScopesLoop:\n          do { // \"traverse the scopes\" loop\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              length = watchers.length;\n              while (length--) {\n                try {\n                  watch = watchers[length];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if (watch) {\n                    if ((value = watch.get(current)) !== (last = watch.last) &&\n                        !(watch.eq\n                            ? equals(value, last)\n                            : (typeof value === 'number' && typeof last === 'number'\n                               && isNaN(value) && isNaN(last)))) {\n                      dirty = true;\n                      lastDirtyWatch = watch;\n                      watch.last = watch.eq ? copy(value, null) : value;\n                      watch.fn(value, ((last === initWatchVal) ? value : last), current);\n                      if (ttl < 5) {\n                        logIdx = 4 - ttl;\n                        if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                        logMsg = (isFunction(watch.exp))\n                            ? 'fn: ' + (watch.exp.name || watch.exp.toString())\n                            : watch.exp;\n                        logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);\n                        watchLog[logIdx].push(logMsg);\n                      }\n                    } else if (watch === lastDirtyWatch) {\n                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers\n                      // have already been tested.\n                      dirty = false;\n                      break traverseScopesLoop;\n                    }\n                  }\n                } catch (e) {\n                  clearPhase();\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = (current.$$childHead ||\n                (current !== target && current.$$nextSibling)))) {\n              while(current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          // `break traverseScopesLoop;` takes us to here\n\n          if((dirty || asyncQueue.length) && !(ttl--)) {\n            clearPhase();\n            throw $rootScopeMinErr('infdig',\n                '{0} $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: {1}',\n                TTL, toJson(watchLog));\n          }\n\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n\n        while(postDigestQueue.length) {\n          try {\n            postDigestQueue.shift()();\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        }\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name $rootScope.Scope#$destroy\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$destroy\n       * @kind function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it a chance to\n       * perform any necessary cleanup.\n       *\n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n      $destroy: function() {\n        // we can't destroy the root scope or a scope that has been already destroyed\n        if (this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n        if (this === $rootScope) return;\n\n        forEach(this.$$listenerCount, bind(null, decrementListenerCount, this));\n\n        // sever all the references to parent scopes (after this cleanup, the current scope should\n        // not be retained by any of our references and should be eligible for garbage collection)\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n\n        // All of the code below is bogus code that works around V8's memory leak via optimized code\n        // and inline caches.\n        //\n        // see:\n        // - https://code.google.com/p/v8/issues/detail?id=2073#c26\n        // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909\n        // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n            this.$$childTail = this.$root = null;\n\n        // don't reset these to null in case some async task tries to register a listener/watch/task\n        this.$$listeners = {};\n        this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [];\n\n        // prevent NPEs since these methods have references to properties we nulled out\n        this.$destroy = this.$digest = this.$apply = noop;\n        this.$on = this.$watch = function() { return noop; };\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$eval\n       * @kind function\n       *\n       * @description\n       * Executes the `expression` on the current scope and returns the result. Any exceptions in\n       * the expression are propagated (uncaught). This is useful when evaluating Angular\n       * expressions.\n       *\n       * # Example\n       * ```js\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * ```\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @param {(object)=} locals Local variables object, useful for overriding values in scope.\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$evalAsync\n       * @kind function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\n       * that:\n       *\n       *   - it will execute after the function that scheduled the evaluation (preferably before DOM\n       *     rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\n       * will be scheduled. However, it is encouraged to always call code that changes the model\n       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       */\n      $evalAsync: function(expr) {\n        // if we are outside of an $digest loop and this is the first time we are scheduling async\n        // task also schedule async auto-flush\n        if (!$rootScope.$$phase && !$rootScope.$$asyncQueue.length) {\n          $browser.defer(function() {\n            if ($rootScope.$$asyncQueue.length) {\n              $rootScope.$digest();\n            }\n          });\n        }\n\n        this.$$asyncQueue.push({scope: this, expression: expr});\n      },\n\n      $$postDigest : function(fn) {\n        this.$$postDigestQueue.push(fn);\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$apply\n       * @kind function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular\n       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life\n       * cycle of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * ```js\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * ```\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          return this.$eval(expr);\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          clearPhase();\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$on\n       * @kind function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\n       * discussion of event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n       *     `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the current scope which is handling the event.\n       *   - `name` - `{string}`: name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n       *     further event propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n       *     to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, ...args)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        var current = this;\n        do {\n          if (!current.$$listenerCount[name]) {\n            current.$$listenerCount[name] = 0;\n          }\n          current.$$listenerCount[name]++;\n        } while ((current = current.$parent));\n\n        var self = this;\n        return function() {\n          var indexOfListener = indexOf(namedListeners, listener);\n          if (indexOfListener !== -1) {\n            namedListeners[indexOfListener] = null;\n            decrementListenerCount(self, 1, name);\n          }\n        };\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$emit\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event traverses upwards toward the root scope and calls all\n       * registered listeners along the way. The event will stop propagating if one of the listeners\n       * cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i=0, length=namedListeners.length; i<length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              //allow all listeners attached to the current scope to run\n              namedListeners[i].apply(null, listenerArgs);\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //if any listener on the current scope stops propagation, prevent bubbling\n          if (stopPropagation) return event;\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc method\n       * @name $rootScope.Scope#$broadcast\n       * @kind function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\n       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current\n       * scope and calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        while ((current = next)) {\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i=0, length = listeners.length; i<length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch(e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          // (though it differs due to having the extra check for $$listenerCount)\n          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||\n              (current !== target && current.$$nextSibling)))) {\n            while(current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        }\n\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n    function compileToFn(exp, name) {\n      var fn = $parse(exp);\n      assertArgFn(fn, name);\n      return fn;\n    }\n\n    function decrementListenerCount(current, count, name) {\n      do {\n        current.$$listenerCount[name] -= count;\n\n        if (current.$$listenerCount[name] === 0) {\n          delete current.$$listenerCount[name];\n        }\n      } while ((current = current.$parent));\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n  }];\n}\n\n/**\n * @description\n * Private service to sanitize uris for links and images. Used by $compile and $sanitize.\n */\nfunction $$SanitizeUriProvider() {\n  var aHrefSanitizationWhitelist = /^\\s*(https?|ftp|mailto|tel|file):/,\n    imgSrcSanitizationWhitelist = /^\\s*((https?|ftp|file):|data:image\\/)/;\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.aHrefSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      aHrefSanitizationWhitelist = regexp;\n      return this;\n    }\n    return aHrefSanitizationWhitelist;\n  };\n\n\n  /**\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during img[src] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into\n   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\n   * regular expression. If a match is found, the original url is written into the dom. Otherwise,\n   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.imgSrcSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      imgSrcSanitizationWhitelist = regexp;\n      return this;\n    }\n    return imgSrcSanitizationWhitelist;\n  };\n\n  this.$get = function() {\n    return function sanitizeUri(uri, isImage) {\n      var regex = isImage ? imgSrcSanitizationWhitelist : aHrefSanitizationWhitelist;\n      var normalizedVal;\n      // NOTE: urlResolve() doesn't support IE < 8 so we don't sanitize for that case.\n      if (!msie || msie >= 8 ) {\n        normalizedVal = urlResolve(uri).href;\n        if (normalizedVal !== '' && !normalizedVal.match(regex)) {\n          return 'unsafe:'+normalizedVal;\n        }\n      }\n      return uri;\n    };\n  };\n}\n\nvar $sceMinErr = minErr('$sce');\n\nvar SCE_CONTEXTS = {\n  HTML: 'html',\n  CSS: 'css',\n  URL: 'url',\n  // RESOURCE_URL is a subtype of URL used in contexts where a privileged resource is sourced from a\n  // url.  (e.g. ng-include, script src, templateUrl)\n  RESOURCE_URL: 'resourceUrl',\n  JS: 'js'\n};\n\n// Helper functions follow.\n\n// Copied from:\n// http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962\n// Prereq: s is a string.\nfunction escapeForRegexp(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').\n           replace(/\\x08/g, '\\\\x08');\n}\n\n\nfunction adjustMatcher(matcher) {\n  if (matcher === 'self') {\n    return matcher;\n  } else if (isString(matcher)) {\n    // Strings match exactly except for 2 wildcards - '*' and '**'.\n    // '*' matches any character except those from the set ':/.?&'.\n    // '**' matches any character (like .* in a RegExp).\n    // More than 2 *'s raises an error as it's ill defined.\n    if (matcher.indexOf('***') > -1) {\n      throw $sceMinErr('iwcard',\n          'Illegal sequence *** in string matcher.  String: {0}', matcher);\n    }\n    matcher = escapeForRegexp(matcher).\n                  replace('\\\\*\\\\*', '.*').\n                  replace('\\\\*', '[^:/.?&;]*');\n    return new RegExp('^' + matcher + '$');\n  } else if (isRegExp(matcher)) {\n    // The only other type of matcher allowed is a Regexp.\n    // Match entire URL / disallow partial matches.\n    // Flags are reset (i.e. no global, ignoreCase or multiline)\n    return new RegExp('^' + matcher.source + '$');\n  } else {\n    throw $sceMinErr('imatcher',\n        'Matchers may only be \"self\", string patterns or RegExp objects');\n  }\n}\n\n\nfunction adjustMatchers(matchers) {\n  var adjustedMatchers = [];\n  if (isDefined(matchers)) {\n    forEach(matchers, function(matcher) {\n      adjustedMatchers.push(adjustMatcher(matcher));\n    });\n  }\n  return adjustedMatchers;\n}\n\n\n/**\n * @ngdoc service\n * @name $sceDelegate\n * @kind function\n *\n * @description\n *\n * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\n * Contextual Escaping (SCE)} services to AngularJS.\n *\n * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\n * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\n * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to\n * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\n * work because `$sce` delegates to `$sceDelegate` for these operations.\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n *\n * The default instance of `$sceDelegate` should work out of the box with little pain.  While you\n * can override it completely to change the behavior of `$sce`, the common case would\n * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\n * your own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\n * templates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n * $sceDelegateProvider.resourceUrlWhitelist} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n */\n\n/**\n * @ngdoc provider\n * @name $sceDelegateProvider\n * @description\n *\n * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\n * that the URLs used for sourcing Angular templates are safe.  Refer {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n * {@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n *\n * For the general details about this service in Angular, read the main page for {@link ng.$sce\n * Strict Contextual Escaping (SCE)}.\n *\n * **Example**:  Consider the following case. <a name=\"example\"></a>\n *\n * - your app is hosted at url `http://myapp.example.com/`\n * - but some of your templates are hosted on other domains you control such as\n *   `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n *\n * Here is what a secure configuration for this scenario might look like:\n *\n * ```\n *  angular.module('myApp', []).config(function($sceDelegateProvider) {\n *    $sceDelegateProvider.resourceUrlWhitelist([\n *      // Allow same origin resource loads.\n *      'self',\n *      // Allow loading from our assets domain.  Notice the difference between * and **.\n *      'http://srv*.assets.example.com/**'\n *    ]);\n *\n *    // The blacklist overrides the whitelist so the open redirect here is blocked.\n *    $sceDelegateProvider.resourceUrlBlacklist([\n *      'http://myapp.example.com/clickThru**'\n *    ]);\n *  });\n * ```\n */\n\nfunction $SceDelegateProvider() {\n  this.SCE_CONTEXTS = SCE_CONTEXTS;\n\n  // Resource URLs can also be trusted by policy.\n  var resourceUrlWhitelist = ['self'],\n      resourceUrlBlacklist = [];\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlWhitelist\n   * @kind function\n   *\n   * @param {Array=} whitelist When provided, replaces the resourceUrlWhitelist with the value\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n   *     changes to the array are ignored.\n   *\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *     allowed in this array.\n   *\n   *     Note: **an empty whitelist array will block all URLs**!\n   *\n   * @return {Array} the currently set whitelist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is `['self']` allowing only\n   * same origin resource requests.\n   *\n   * @description\n   * Sets/Gets the whitelist of trusted resource URLs.\n   */\n  this.resourceUrlWhitelist = function (value) {\n    if (arguments.length) {\n      resourceUrlWhitelist = adjustMatchers(value);\n    }\n    return resourceUrlWhitelist;\n  };\n\n  /**\n   * @ngdoc method\n   * @name $sceDelegateProvider#resourceUrlBlacklist\n   * @kind function\n   *\n   * @param {Array=} blacklist When provided, replaces the resourceUrlBlacklist with the value\n   *     provided.  This must be an array or null.  A snapshot of this array is used so further\n   *     changes to the array are ignored.\n   *\n   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   *     allowed in this array.\n   *\n   *     The typical usage for the blacklist is to **block\n   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n   *     these would otherwise be trusted but actually return content from the redirected domain.\n   *\n   *     Finally, **the blacklist overrides the whitelist** and has the final say.\n   *\n   * @return {Array} the currently set blacklist array.\n   *\n   * The **default value** when no whitelist has been explicitly set is the empty array (i.e. there\n   * is no blacklist.)\n   *\n   * @description\n   * Sets/Gets the blacklist of trusted resource URLs.\n   */\n\n  this.resourceUrlBlacklist = function (value) {\n    if (arguments.length) {\n      resourceUrlBlacklist = adjustMatchers(value);\n    }\n    return resourceUrlBlacklist;\n  };\n\n  this.$get = ['$injector', function($injector) {\n\n    var htmlSanitizer = function htmlSanitizer(html) {\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    };\n\n    if ($injector.has('$sanitize')) {\n      htmlSanitizer = $injector.get('$sanitize');\n    }\n\n\n    function matchUrl(matcher, parsedUrl) {\n      if (matcher === 'self') {\n        return urlIsSameOrigin(parsedUrl);\n      } else {\n        // definitely a regex.  See adjustMatchers()\n        return !!matcher.exec(parsedUrl.href);\n      }\n    }\n\n    function isResourceUrlAllowedByPolicy(url) {\n      var parsedUrl = urlResolve(url.toString());\n      var i, n, allowed = false;\n      // Ensure that at least one item from the whitelist allows this url.\n      for (i = 0, n = resourceUrlWhitelist.length; i < n; i++) {\n        if (matchUrl(resourceUrlWhitelist[i], parsedUrl)) {\n          allowed = true;\n          break;\n        }\n      }\n      if (allowed) {\n        // Ensure that no item from the blacklist blocked this url.\n        for (i = 0, n = resourceUrlBlacklist.length; i < n; i++) {\n          if (matchUrl(resourceUrlBlacklist[i], parsedUrl)) {\n            allowed = false;\n            break;\n          }\n        }\n      }\n      return allowed;\n    }\n\n    function generateHolderType(Base) {\n      var holderType = function TrustedValueHolderType(trustedValue) {\n        this.$$unwrapTrustedValue = function() {\n          return trustedValue;\n        };\n      };\n      if (Base) {\n        holderType.prototype = new Base();\n      }\n      holderType.prototype.valueOf = function sceValueOf() {\n        return this.$$unwrapTrustedValue();\n      };\n      holderType.prototype.toString = function sceToString() {\n        return this.$$unwrapTrustedValue().toString();\n      };\n      return holderType;\n    }\n\n    var trustedValueHolderBase = generateHolderType(),\n        byType = {};\n\n    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.URL] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);\n    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#trustAs\n     *\n     * @description\n     * Returns an object that is trusted by angular for use in specified strict\n     * contextual escaping contexts (such as ng-bind-html, ng-include, any src\n     * attribute interpolation, any dom event binding attribute interpolation\n     * such as for onclick,  etc.) that uses the provided value.\n     * See {@link ng.$sce $sce} for enabling strict contextual escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resourceUrl, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n    function trustAs(type, trustedValue) {\n      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (!Constructor) {\n        throw $sceMinErr('icontext',\n            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',\n            type, trustedValue);\n      }\n      if (trustedValue === null || trustedValue === undefined || trustedValue === '') {\n        return trustedValue;\n      }\n      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting\n      // mutable objects, we ensure here that the value passed in is actually a string.\n      if (typeof trustedValue !== 'string') {\n        throw $sceMinErr('itype',\n            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',\n            type);\n      }\n      return new Constructor(trustedValue);\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#valueOf\n     *\n     * @description\n     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n     *\n     * If the passed parameter is not a value that had been returned by {@link\n     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.\n     *\n     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n     *      call or anything else.\n     * @returns {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n     *     `value` unchanged.\n     */\n    function valueOf(maybeTrusted) {\n      if (maybeTrusted instanceof trustedValueHolderBase) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      } else {\n        return maybeTrusted;\n      }\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sceDelegate#getTrusted\n     *\n     * @description\n     * Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\n     * returns the originally supplied value if the queried context type is a supertype of the\n     * created type.  If this condition isn't satisfied, throws an exception.\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} call.\n     * @returns {*} The value the was originally provided to {@link ng.$sceDelegate#trustAs\n     *     `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.\n     */\n    function getTrusted(type, maybeTrusted) {\n      if (maybeTrusted === null || maybeTrusted === undefined || maybeTrusted === '') {\n        return maybeTrusted;\n      }\n      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);\n      if (constructor && maybeTrusted instanceof constructor) {\n        return maybeTrusted.$$unwrapTrustedValue();\n      }\n      // If we get here, then we may only take one of two actions.\n      // 1. sanitize the value for the requested type, or\n      // 2. throw an exception.\n      if (type === SCE_CONTEXTS.RESOURCE_URL) {\n        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {\n          return maybeTrusted;\n        } else {\n          throw $sceMinErr('insecurl',\n              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',\n              maybeTrusted.toString());\n        }\n      } else if (type === SCE_CONTEXTS.HTML) {\n        return htmlSanitizer(maybeTrusted);\n      }\n      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');\n    }\n\n    return { trustAs: trustAs,\n             getTrusted: getTrusted,\n             valueOf: valueOf };\n  }];\n}\n\n\n/**\n * @ngdoc provider\n * @name $sceProvider\n * @description\n *\n * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n * -   enable/disable Strict Contextual Escaping (SCE) in a module\n * -   override the default implementation with a custom delegate\n *\n * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.\n */\n\n/* jshint maxlen: false*/\n\n/**\n * @ngdoc service\n * @name $sce\n * @kind function\n *\n * @description\n *\n * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n *\n * # Strict Contextual Escaping\n *\n * Strict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\n * contexts to result in a value that is marked as safe to use for that context.  One example of\n * such a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\n * to these contexts as privileged or SCE contexts.\n *\n * As of version 1.2, Angular ships with SCE enabled by default.\n *\n * Note:  When enabled (the default), IE8 in quirks mode is not supported.  In this mode, IE8 allows\n * one to execute arbitrary javascript by the use of the expression() syntax.  Refer\n * <http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\n * You can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\n * to the top of your HTML document.\n *\n * SCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\n * security vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n *\n * Here's an example of a binding in a privileged context:\n *\n * ```\n * <input ng-model=\"userHtml\">\n * <div ng-bind-html=\"userHtml\"></div>\n * ```\n *\n * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\n * disabled, this application allows the user to render arbitrary HTML into the DIV.\n * In a more realistic example, one may be rendering user comments, blog articles, etc. via\n * bindings.  (HTML is just one example of a context where rendering user controlled input creates\n * security vulnerabilities.)\n *\n * For the case of HTML, you might use a library, either on the client side, or on the server side,\n * to sanitize unsafe HTML before binding to the value and rendering it in the document.\n *\n * How would you ensure that every place that used these types of bindings was bound to a value that\n * was sanitized by your library (or returned as safe for rendering by your server?)  How can you\n * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some\n * properties/fields and forgot to update the binding to the sanitized value?\n *\n * To be secure by default, you want to ensure that any such bindings are disallowed unless you can\n * determine that something explicitly says it's safe to use a value for binding in that\n * context.  You can then audit your code (a simple grep would do) to ensure that this is only done\n * for those values that you can easily tell are safe - because they were received from your server,\n * sanitized by your library, etc.  You can organize your codebase to help with this - perhaps\n * allowing only the files in a specific directory to do this.  Ensuring that the internal API\n * exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n *\n * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\n * obtain values that will be accepted by SCE / privileged contexts.\n *\n *\n * ## How does it work?\n *\n * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n * $sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\n * ng.$sce#parse $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n * {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n *\n * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\n * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\n * simplified):\n *\n * ```\n * var ngBindHtmlDirective = ['$sce', function($sce) {\n *   return function(scope, element, attr) {\n *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n *       element.html(value || '');\n *     });\n *   };\n * }];\n * ```\n *\n * ## Impact on loading templates\n *\n * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n * `templateUrl`'s specified by {@link guide/directive directives}.\n *\n * By default, Angular only loads templates from the same domain and protocol as the application\n * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\n * protocols, you may either either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\n * them} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n *\n * *Please note*:\n * The browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy apply in addition to this and may further restrict whether the template is successfully\n * loaded.  This means that without the right CORS policy, loading templates from a different domain\n * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some\n * browsers.\n *\n * ## This feels like too much overhead for the developer?\n *\n * It's important to remember that SCE only applies to interpolation expressions.\n *\n * If your expressions are constant literals, they're automatically trusted and you don't need to\n * call `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n * `<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n *\n * Additionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\n * through {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n *\n * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\n * templates in `ng-include` from your application's domain without having to even know about SCE.\n * It blocks loading templates from other domains or loading templates over http from an https\n * served document.  You can change these by setting your own custom {@link\n * ng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\n * ng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n *\n * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an\n * application that's secure and can be audited to verify that with much more ease than bolting\n * security onto an application later.\n *\n * <a name=\"contexts\"></a>\n * ## What trusted context types are supported?\n *\n * | Context             | Notes          |\n * |---------------------|----------------|\n * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n * | `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n *\n * ## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n *\n *  Each element in these arrays must be one of the following:\n *\n *  - **'self'**\n *    - The special **string**, `'self'`, can be used to match against all URLs of the **same\n *      domain** as the application document using the **same protocol**.\n *  - **String** (except the special value `'self'`)\n *    - The string is matched against the full *normalized / absolute URL* of the resource\n *      being tested (substring matches are not good enough.)\n *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n *      match themselves.\n *    - `*`: matches zero or more occurrences of any character other than one of the following 6\n *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and ';'.  It's a useful wildcard for use\n *      in a whitelist.\n *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n *      not appropriate to use in for a scheme, domain, etc. as it would match too much.  (e.g.\n *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n *      http://foo.example.com/templates/**).\n *  - **RegExp** (*see caveat below*)\n *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n *      have good test coverage.).  For instance, the use of `.` in the regex is correct only in a\n *      small number of cases.  A `.` character in the regex used when matching the scheme or a\n *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n *      is highly recommended to use the string patterns and only fall back to regular expressions\n *      if they as a last resort.\n *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n *      matched against the **entire** *normalized / absolute URL* of the resource being tested\n *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n *    - If you are generating your JavaScript from some other templating engine (not\n *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n *      remember to escape your regular expression (and be aware that you might need more than\n *      one level of escaping depending on your templating engine and the way you interpolated\n *      the value.)  Do make use of your platform's escaping mechanism as it might be good\n *      enough before coding your own.  e.g. Ruby has\n *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n *      Javascript lacks a similar built in function for escaping.  Take a look at Google\n *      Closure library's [goog.string.regExpEscape(s)](\n *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n *\n * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n *\n * ## Show me an example using SCE.\n *\n * <example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n * <file name=\"index.html\">\n *   <div ng-controller=\"myAppController as myCtrl\">\n *     <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n *     <b>User comments</b><br>\n *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n *     exploit.\n *     <div class=\"well\">\n *       <div ng-repeat=\"userComment in myCtrl.userComments\">\n *         <b>{{userComment.name}}</b>:\n *         <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n *         <br>\n *       </div>\n *     </div>\n *   </div>\n * </file>\n *\n * <file name=\"script.js\">\n *   var mySceApp = angular.module('mySceApp', ['ngSanitize']);\n *\n *   mySceApp.controller(\"myAppController\", function myAppController($http, $templateCache, $sce) {\n *     var self = this;\n *     $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n *       self.userComments = userComments;\n *     });\n *     self.explicitlyTrustedHtml = $sce.trustAsHtml(\n *         '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *         'sanitization.&quot;\">Hover over this text.</span>');\n *   });\n * </file>\n *\n * <file name=\"test_data.json\">\n * [\n *   { \"name\": \"Alice\",\n *     \"htmlComment\":\n *         \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n *   },\n *   { \"name\": \"Bob\",\n *     \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n *   }\n * ]\n * </file>\n *\n * <file name=\"protractor.js\" type=\"protractor\">\n *   describe('SCE doc demo', function() {\n *     it('should sanitize untrusted values', function() {\n *       expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n *           .toBe('<span>Is <i>anyone</i> reading this?</span>');\n *     });\n *\n *     it('should NOT sanitize explicitly trusted values', function() {\n *       expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n *           '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n *           'sanitization.&quot;\">Hover over this text.</span>');\n *     });\n *   });\n * </file>\n * </example>\n *\n *\n *\n * ## Can I disable SCE completely?\n *\n * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\n * for little coding overhead.  It will be much harder to take an SCE disabled application and\n * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\n * for cases where you have a lot of existing code that was written before SCE was introduced and\n * you're migrating them a module at a time.\n *\n * That said, here's how you can completely disable SCE:\n *\n * ```\n * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n *   // Completely disable SCE.  For demonstration purposes only!\n *   // Do not use in new projects.\n *   $sceProvider.enabled(false);\n * });\n * ```\n *\n */\n/* jshint maxlen: 100 */\n\nfunction $SceProvider() {\n  var enabled = true;\n\n  /**\n   * @ngdoc method\n   * @name $sceProvider#enabled\n   * @kind function\n   *\n   * @param {boolean=} value If provided, then enables/disables SCE.\n   * @return {boolean} true if SCE is enabled, false otherwise.\n   *\n   * @description\n   * Enables/disables SCE and returns the current value.\n   */\n  this.enabled = function (value) {\n    if (arguments.length) {\n      enabled = !!value;\n    }\n    return enabled;\n  };\n\n\n  /* Design notes on the default implementation for SCE.\n   *\n   * The API contract for the SCE delegate\n   * -------------------------------------\n   * The SCE delegate object must provide the following 3 methods:\n   *\n   * - trustAs(contextEnum, value)\n   *     This method is used to tell the SCE service that the provided value is OK to use in the\n   *     contexts specified by contextEnum.  It must return an object that will be accepted by\n   *     getTrusted() for a compatible contextEnum and return this value.\n   *\n   * - valueOf(value)\n   *     For values that were not produced by trustAs(), return them as is.  For values that were\n   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if\n   *     trustAs is wrapping the given values into some type, this operation unwraps it when given\n   *     such a value.\n   *\n   * - getTrusted(contextEnum, value)\n   *     This function should return the a value that is safe to use in the context specified by\n   *     contextEnum or throw and exception otherwise.\n   *\n   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be\n   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For\n   * instance, an implementation could maintain a registry of all trusted objects by context.  In\n   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would\n   * return the same object passed in if it was found in the registry under a compatible context or\n   * throw an exception otherwise.  An implementation might only wrap values some of the time based\n   * on some criteria.  getTrusted() might return a value and not throw an exception for special\n   * constants or objects even if not wrapped.  All such implementations fulfill this contract.\n   *\n   *\n   * A note on the inheritance model for SCE contexts\n   * ------------------------------------------------\n   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This\n   * is purely an implementation details.\n   *\n   * The contract is simply this:\n   *\n   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)\n   *     will also succeed.\n   *\n   * Inheritance happens to capture this in a natural way.  In some future, we\n   * may not use inheritance anymore.  That is OK because no code outside of\n   * sce.js and sceSpecs.js would need to be aware of this detail.\n   */\n\n  this.$get = ['$parse', '$sniffer', '$sceDelegate', function(\n                $parse,   $sniffer,   $sceDelegate) {\n    // Prereq: Ensure that we're not running in IE8 quirks mode.  In that mode, IE allows\n    // the \"expression(javascript expression)\" syntax which is insecure.\n    if (enabled && $sniffer.msie && $sniffer.msieDocumentMode < 8) {\n      throw $sceMinErr('iequirks',\n        'Strict Contextual Escaping does not support Internet Explorer version < 9 in quirks ' +\n        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +\n        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');\n    }\n\n    var sce = shallowCopy(SCE_CONTEXTS);\n\n    /**\n     * @ngdoc method\n     * @name $sce#isEnabled\n     * @kind function\n     *\n     * @return {Boolean} true if SCE is enabled, false otherwise.  If you want to set the value, you\n     * have to do it at module config time on {@link ng.$sceProvider $sceProvider}.\n     *\n     * @description\n     * Returns a boolean indicating if SCE is enabled.\n     */\n    sce.isEnabled = function () {\n      return enabled;\n    };\n    sce.trustAs = $sceDelegate.trustAs;\n    sce.getTrusted = $sceDelegate.getTrusted;\n    sce.valueOf = $sceDelegate.valueOf;\n\n    if (!enabled) {\n      sce.trustAs = sce.getTrusted = function(type, value) { return value; };\n      sce.valueOf = identity;\n    }\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAs\n     *\n     * @description\n     * Converts Angular {@link guide/expression expression} into a function.  This is like {@link\n     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\n     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n     * *result*)}\n     *\n     * @param {string} type The kind of SCE context in which this result will be used.\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n    sce.parseAs = function sceParseAs(type, expr) {\n      var parsed = $parse(expr);\n      if (parsed.literal && parsed.constant) {\n        return parsed;\n      } else {\n        return function sceParseAsTrusted(self, locals) {\n          return sce.getTrusted(type, parsed(self, locals));\n        };\n      }\n    };\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAs\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\n     * returns an object that is trusted by angular for use in specified strict contextual\n     * escaping contexts (such as ng-bind-html, ng-include, any src attribute\n     * interpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\n     * that uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\n     * escaping.\n     *\n     * @param {string} type The kind of context in which this value is safe for use.  e.g. url,\n     *   resource_url, html, js and css.\n     * @param {*} value The value that that should be considered trusted/safe.\n     * @returns {*} A value that can be used to stand in for the provided `value` in places\n     * where Angular expects a $sce.trustAs() return value.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsHtml(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedHtml\n     *     $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedUrl\n     *     $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n     *     $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the return\n     *     value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#trustAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.trustAsJs(value)` →\n     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}\n     *\n     * @param {*} value The value to trustAs.\n     * @returns {*} An object that can be passed to {@link ng.$sce#getTrustedJs\n     *     $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n     *     only accept expressions that are either literal constants or are the\n     *     return value of {@link ng.$sce#trustAs $sce.trustAs}.)\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrusted\n     *\n     * @description\n     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\n     * takes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\n     * originally supplied value if the queried context type is a supertype of the created type.\n     * If this condition isn't satisfied, throws an exception.\n     *\n     * @param {string} type The kind of context in which this value is to be used.\n     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n     *                         call.\n     * @returns {*} The value the was originally provided to\n     *              {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n     *              Otherwise, throws an exception.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedHtml(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.HTML, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedCss\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedCss(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.CSS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}\n     *\n     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#getTrustedJs\n     *\n     * @description\n     * Shorthand method.  `$sce.getTrustedJs(value)` →\n     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}\n     *\n     * @param {*} value The value to pass to `$sce.getTrusted`.\n     * @returns {*} The return value of `$sce.getTrusted($sce.JS, value)`\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsHtml\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsHtml(expression string)` →\n     *     {@link ng.$sce#parse `$sce.parseAs($sce.HTML, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsCss\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsCss(value)` →\n     *     {@link ng.$sce#parse `$sce.parseAs($sce.CSS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsUrl(value)` →\n     *     {@link ng.$sce#parse `$sce.parseAs($sce.URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsResourceUrl\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n     *     {@link ng.$sce#parse `$sce.parseAs($sce.RESOURCE_URL, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    /**\n     * @ngdoc method\n     * @name $sce#parseAsJs\n     *\n     * @description\n     * Shorthand method.  `$sce.parseAsJs(value)` →\n     *     {@link ng.$sce#parse `$sce.parseAs($sce.JS, value)`}\n     *\n     * @param {string} expression String expression to compile.\n     * @returns {function(context, locals)} a function which represents the compiled expression:\n     *\n     *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n     *      are evaluated against (typically a scope object).\n     *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     *      `context`.\n     */\n\n    // Shorthand delegations.\n    var parse = sce.parseAs,\n        getTrusted = sce.getTrusted,\n        trustAs = sce.trustAs;\n\n    forEach(SCE_CONTEXTS, function (enumValue, name) {\n      var lName = lowercase(name);\n      sce[camelCase(\"parse_as_\" + lName)] = function (expr) {\n        return parse(enumValue, expr);\n      };\n      sce[camelCase(\"get_trusted_\" + lName)] = function (value) {\n        return getTrusted(enumValue, value);\n      };\n      sce[camelCase(\"trust_as_\" + lName)] = function (value) {\n        return trustAs(enumValue, value);\n      };\n    });\n\n    return sce;\n  }];\n}\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name $sniffer\n * @requires $window\n * @requires $document\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} hashchange Does the browser support hashchange event ?\n * @property {boolean} transitions Does the browser support CSS transition events ?\n * @property {boolean} animations Does the browser support CSS animation events ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', '$document', function($window, $document) {\n    var eventSupport = {},\n        android =\n          int((/android (\\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),\n        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),\n        document = $document[0] || {},\n        documentMode = document.documentMode,\n        vendorPrefix,\n        vendorRegex = /^(Moz|webkit|O|ms)(?=[A-Z])/,\n        bodyStyle = document.body && document.body.style,\n        transitions = false,\n        animations = false,\n        match;\n\n    if (bodyStyle) {\n      for(var prop in bodyStyle) {\n        if(match = vendorRegex.exec(prop)) {\n          vendorPrefix = match[0];\n          vendorPrefix = vendorPrefix.substr(0, 1).toUpperCase() + vendorPrefix.substr(1);\n          break;\n        }\n      }\n\n      if(!vendorPrefix) {\n        vendorPrefix = ('WebkitOpacity' in bodyStyle) && 'webkit';\n      }\n\n      transitions = !!(('transition' in bodyStyle) || (vendorPrefix + 'Transition' in bodyStyle));\n      animations  = !!(('animation' in bodyStyle) || (vendorPrefix + 'Animation' in bodyStyle));\n\n      if (android && (!transitions||!animations)) {\n        transitions = isString(document.body.style.webkitTransition);\n        animations = isString(document.body.style.webkitAnimation);\n      }\n    }\n\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n\n      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has\n      // so let's not use the history API also\n      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined\n      // jshint -W018\n      history: !!($window.history && $window.history.pushState && !(android < 4) && !boxee),\n      // jshint +W018\n      hashchange: 'onhashchange' in $window &&\n                  // IE8 compatible mode lies\n                  (!documentMode || documentMode > 7),\n      hasEvent: function(event) {\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        if (event == 'input' && msie == 9) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      csp: csp(),\n      vendorPrefix: vendorPrefix,\n      transitions : transitions,\n      animations : animations,\n      android: android,\n      msie : msie,\n      msieDocumentMode: documentMode\n    };\n  }];\n}\n\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $exceptionHandler) {\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc service\n      * @name $timeout\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of registering a timeout function is a promise, which will be resolved when\n      * the timeout is reached and the timeout function is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * @param {function()} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n      *   promise will be resolved with is the return value of the `fn` function.\n      *\n      */\n    function timeout(fn, delay, invokeApply) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          timeoutId;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn());\n        } catch(e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        }\n        finally {\n          delete deferreds[promise.$$timeoutId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc method\n      * @name $timeout#cancel\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        deferreds[promise.$$timeoutId].reject('canceled');\n        delete deferreds[promise.$$timeoutId];\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n// NOTE:  The usage of window and document instead of $window and $document here is\n// deliberate.  This service depends on the specific behavior of anchor nodes created by the\n// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and\n// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it\n// doesn't know about mocked locations and resolves URLs to the real document - which is\n// exactly the behavior needed here.  There is little value is mocking these out for this\n// service.\nvar urlParsingNode = document.createElement(\"a\");\nvar originUrl = urlResolve(window.location.href, true);\n\n\n/**\n *\n * Implementation Notes for non-IE browsers\n * ----------------------------------------\n * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,\n * results both in the normalizing and parsing of the URL.  Normalizing means that a relative\n * URL will be resolved into an absolute URL in the context of the application document.\n * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related\n * properties are all populated to reflect the normalized URL.  This approach has wide\n * compatibility - Safari 1+, Mozilla 1+, Opera 7+,e etc.  See\n * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *\n * Implementation Notes for IE\n * ---------------------------\n * IE >= 8 and <= 10 normalizes the URL when assigned to the anchor node similar to the other\n * browsers.  However, the parsed components will not be set if the URL assigned did not specify\n * them.  (e.g. if you assign a.href = \"foo\", then a.protocol, a.host, etc. will be empty.)  We\n * work around that by performing the parsing in a 2nd step by taking a previously normalized\n * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the\n * properties such as protocol, hostname, port, etc.\n *\n * IE7 does not normalize the URL when assigned to an anchor node.  (Apparently, it does, if one\n * uses the inner HTML approach to assign the URL as part of an HTML snippet -\n * http://stackoverflow.com/a/472729)  However, setting img[src] does normalize the URL.\n * Unfortunately, setting img[src] to something like \"javascript:foo\" on IE throws an exception.\n * Since the primary usage for normalizing URLs is to sanitize such URLs, we can't use that\n * method and IE < 8 is unsupported.\n *\n * References:\n *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html\n *   http://url.spec.whatwg.org/#urlutils\n *   https://github.com/angular/angular.js/pull/2902\n *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/\n *\n * @kind function\n * @param {string} url The URL to be parsed.\n * @description Normalizes and parses a URL.\n * @returns {object} Returns the normalized URL as a dictionary.\n *\n *   | member name   | Description    |\n *   |---------------|----------------|\n *   | href          | A normalized version of the provided URL if it was not an absolute URL |\n *   | protocol      | The protocol including the trailing colon                              |\n *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n *   | search        | The search params, minus the question mark                             |\n *   | hash          | The hash string, minus the hash symbol\n *   | hostname      | The hostname\n *   | port          | The port, without \":\"\n *   | pathname      | The pathname, beginning with \"/\"\n *\n */\nfunction urlResolve(url, base) {\n  var href = url;\n\n  if (msie) {\n    // Normalize before parse.  Refer Implementation Notes on why this is\n    // done in two steps on IE.\n    urlParsingNode.setAttribute(\"href\", href);\n    href = urlParsingNode.href;\n  }\n\n  urlParsingNode.setAttribute('href', href);\n\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n  return {\n    href: urlParsingNode.href,\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n    host: urlParsingNode.host,\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n    hostname: urlParsingNode.hostname,\n    port: urlParsingNode.port,\n    pathname: (urlParsingNode.pathname.charAt(0) === '/')\n      ? urlParsingNode.pathname\n      : '/' + urlParsingNode.pathname\n  };\n}\n\n/**\n * Parse a request URL and determine whether this is a same-origin request as the application document.\n *\n * @param {string|object} requestUrl The url of the request as a string that will be resolved\n * or a parsed URL object.\n * @returns {boolean} Whether the request is for the same origin as the application document.\n */\nfunction urlIsSameOrigin(requestUrl) {\n  var parsed = (isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\n  return (parsed.protocol === originUrl.protocol &&\n          parsed.host === originUrl.host);\n}\n\n/**\n * @ngdoc service\n * @name $window\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overridden, removed or mocked for testing.\n *\n * Expressions, like the one defined for the `ngClick` directive in the example\n * below, are evaluated with respect to the current scope.  Therefore, there is\n * no risk of inadvertently coding in a dependency on a global value in such an\n * expression.\n *\n * @example\n   <example module=\"windowExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('windowExample', [])\n           .controller('ExampleController', ['$scope', '$window', function ($scope, $window) {\n             $scope.greeting = 'Hello, World!';\n             $scope.doGreeting = function(greeting) {\n               $window.alert(greeting);\n             };\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"text\" ng-model=\"greeting\" />\n         <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n      it('should display the greeting in the input box', function() {\n       element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </file>\n   </example>\n */\nfunction $WindowProvider(){\n  this.$get = valueFn(window);\n}\n\n/* global currencyFilter: true,\n dateFilter: true,\n filterFilter: true,\n jsonFilter: true,\n limitToFilter: true,\n lowercaseFilter: true,\n numberFilter: true,\n orderByFilter: true,\n uppercaseFilter: true,\n */\n\n/**\n * @ngdoc provider\n * @name $filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be\n * Dependency Injected. To achieve this a filter definition consists of a factory function which is\n * annotated with dependencies and is responsible for creating a filter function.\n *\n * ```js\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * ```\n *\n * The filter function is registered with the `$injector` under the filter name suffix with\n * `Filter`.\n *\n * ```js\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * ```\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/filter Filters} in the Angular Developer Guide.\n */\n\n/**\n * @ngdoc service\n * @name $filter\n * @kind function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * The general syntax in templates is as follows:\n *\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n * @example\n   <example name=\"$filter\" module=\"filterExample\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainCtrl\">\n        <h3>{{ originalText }}</h3>\n        <h3>{{ filteredText }}</h3>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n      angular.module('filterExample', [])\n      .controller('MainCtrl', function($scope, $filter) {\n        $scope.originalText = 'hello';\n        $scope.filteredText = $filter('uppercase')($scope.originalText);\n      });\n     </file>\n   </example>\n  */\n$FilterProvider.$inject = ['$provide'];\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  /**\n   * @ngdoc method\n   * @name $filterProvider#register\n   * @param {string|Object} name Name of the filter function, or an object map of filters where\n   *    the keys are the filter names and the values are the filter factories.\n   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map\n   *    of the registered filter instances.\n   */\n  function register(name, factory) {\n    if(isObject(name)) {\n      var filters = {};\n      forEach(name, function(filter, key) {\n        filters[key] = register(key, filter);\n      });\n      return filters;\n    } else {\n      return $provide.factory(name + suffix, factory);\n    }\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    };\n  }];\n\n  ////////////////////////////////////////\n\n  /* global\n    currencyFilter: false,\n    dateFilter: false,\n    filterFilter: false,\n    jsonFilter: false,\n    limitToFilter: false,\n    lowercaseFilter: false,\n    numberFilter: false,\n    orderByFilter: false,\n    uppercaseFilter: false,\n  */\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name filter\n * @kind function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: The string is evaluated as an expression and the resulting value is used for substring match against\n *     the contents of the `array`. All strings or objects with string properties in `array` that contain this string\n *     will be returned. The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n *     property of the object. That's equivalent to the simple substring match with a `string`\n *     as described above. The predicate can be negated by prefixing the string with `!`.\n *     For Example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n *     not containing \"M\".\n *\n *   - `function(value)`: A predicate function can be used to write arbitrary filters. The function is\n *     called for each element of `array`. The final result is an array of those elements that\n *     the predicate returned true for.\n *\n * @param {function(actual, expected)|true|undefined} comparator Comparator which is used in\n *     determining if the expected value (from the filter expression) and actual value (from\n *     the object in the array) should be considered a match.\n *\n *   Can be one of:\n *\n *   - `function(actual, expected)`:\n *     The function will be given the object value and the predicate value to compare and\n *     should return true if the item should be included in filtered result.\n *\n *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(expected, actual)}`.\n *     this is essentially strict comparison of expected and actual.\n *\n *   - `false|undefined`: A short hand for a function which will look for a substring match in case\n *     insensitive way.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'},\n                                {name:'Juliette', phone:'555-5678'}]\"></div>\n\n       Search: <input ng-model=\"searchText\">\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       Any: <input ng-model=\"search.$\"> <br>\n       Name only <input ng-model=\"search.name\"><br>\n       Phone only <input ng-model=\"search.phone\"><br>\n       Equality <input type=\"checkbox\" ng-model=\"strict\"><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n           <td>{{friendObj.name}}</td>\n           <td>{{friendObj.phone}}</td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var expectFriendNames = function(expectedNames, key) {\n         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n           arr.forEach(function(wd, i) {\n             expect(wd.getText()).toMatch(expectedNames[i]);\n           });\n         });\n       };\n\n       it('should search across all fields when filtering with a string', function() {\n         var searchText = element(by.model('searchText'));\n         searchText.clear();\n         searchText.sendKeys('m');\n         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\n         searchText.clear();\n         searchText.sendKeys('76');\n         expectFriendNames(['John', 'Julie'], 'friend');\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         var searchAny = element(by.model('search.$'));\n         searchAny.clear();\n         searchAny.sendKeys('i');\n         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n       });\n       it('should use a equal comparison when comparator is true', function() {\n         var searchName = element(by.model('search.name'));\n         var strict = element(by.model('strict'));\n         searchName.clear();\n         searchName.sendKeys('Julie');\n         strict.click();\n         expectFriendNames(['Julie'], 'friendObj');\n       });\n     </file>\n   </example>\n */\nfunction filterFilter() {\n  return function(array, expression, comparator) {\n    if (!isArray(array)) return array;\n\n    var comparatorType = typeof(comparator),\n        predicates = [];\n\n    predicates.check = function(value) {\n      for (var j = 0; j < predicates.length; j++) {\n        if(!predicates[j](value)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    if (comparatorType !== 'function') {\n      if (comparatorType === 'boolean' && comparator) {\n        comparator = function(obj, text) {\n          return angular.equals(obj, text);\n        };\n      } else {\n        comparator = function(obj, text) {\n          if (obj && text && typeof obj === 'object' && typeof text === 'object') {\n            for (var objKey in obj) {\n              if (objKey.charAt(0) !== '$' && hasOwnProperty.call(obj, objKey) &&\n                  comparator(obj[objKey], text[objKey])) {\n                return true;\n              }\n            }\n            return false;\n          }\n          text = (''+text).toLowerCase();\n          return (''+obj).toLowerCase().indexOf(text) > -1;\n        };\n      }\n    }\n\n    var search = function(obj, text){\n      if (typeof text === 'string' && text.charAt(0) === '!') {\n        return !search(obj, text.substr(1));\n      }\n      switch (typeof obj) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n          return comparator(obj, text);\n        case 'object':\n          switch (typeof text) {\n            case 'object':\n              return comparator(obj, text);\n            default:\n              for ( var objKey in obj) {\n                if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {\n                  return true;\n                }\n              }\n              break;\n          }\n          return false;\n        case 'array':\n          for ( var i = 0; i < obj.length; i++) {\n            if (search(obj[i], text)) {\n              return true;\n            }\n          }\n          return false;\n        default:\n          return false;\n      }\n    };\n    switch (typeof expression) {\n      case 'boolean':\n      case 'number':\n      case 'string':\n        // Set up expression object and fall through\n        expression = {$:expression};\n        // jshint -W086\n      case 'object':\n        // jshint +W086\n        for (var key in expression) {\n          (function(path) {\n            if (typeof expression[path] === 'undefined') return;\n            predicates.push(function(value) {\n              return search(path == '$' ? value : (value && value[path]), expression[path]);\n            });\n          })(key);\n        }\n        break;\n      case 'function':\n        predicates.push(expression);\n        break;\n      default:\n        return array;\n    }\n    var filtered = [];\n    for ( var j = 0; j < array.length; j++) {\n      var value = array[j];\n      if (predicates.check(value)) {\n        filtered.push(value);\n      }\n    }\n    return filtered;\n  };\n}\n\n/**\n * @ngdoc filter\n * @name currency\n * @kind function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <example module=\"currencyExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('currencyExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.amount = 1234.56;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input type=\"number\" ng-model=\"amount\"> <br>\n         default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n         custom currency identifier (USD$): <span>{{amount | currency:\"USD$\"}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should init with 1234.56', function() {\n         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n         expect(element(by.binding('amount | currency:\"USD$\"')).getText()).toBe('USD$1,234.56');\n       });\n       it('should update', function() {\n         if (browser.params.browser == 'safari') {\n           // Safari does not understand the minus key. See\n           // https://github.com/angular/protractor/issues/481\n           return;\n         }\n         element(by.model('amount')).clear();\n         element(by.model('amount')).sendKeys('-1234');\n         expect(element(by.id('currency-default')).getText()).toBe('($1,234.00)');\n         expect(element(by.binding('amount | currency:\"USD$\"')).getText()).toBe('(USD$1,234.00)');\n       });\n     </file>\n   </example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol){\n    if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;\n    return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).\n                replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name number\n * @kind function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is not a number an empty string is returned.\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\n * If this is not provided then the fraction size is computed from the current locale's number\n * formatting pattern. In the case of the default locale, it will be 3.\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n *\n * @example\n   <example module=\"numberFilterExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('numberFilterExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.val = 1234.56789;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Enter number: <input ng-model='val'><br>\n         Default formatting: <span id='number-default'>{{val | number}}</span><br>\n         No fractions: <span>{{val | number:0}}</span><br>\n         Negative number: <span>{{-val | number:4}}</span>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format numbers', function() {\n         expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         element(by.model('val')).clear();\n         element(by.model('val')).sendKeys('3374.333');\n         expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n      });\n     </file>\n   </example>\n */\n\n\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n    return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n      fractionSize);\n  };\n}\n\nvar DECIMAL_SEP = '.';\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n  if (number == null || !isFinite(number) || isObject(number)) return '';\n\n  var isNegative = number < 0;\n  number = Math.abs(number);\n  var numStr = number + '',\n      formatedText = '',\n      parts = [];\n\n  var hasExponent = false;\n  if (numStr.indexOf('e') !== -1) {\n    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n      numStr = '0';\n      number = 0;\n    } else {\n      formatedText = numStr;\n      hasExponent = true;\n    }\n  }\n\n  if (!hasExponent) {\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n    // determine fractionSize if it is not specified\n    if (isUndefined(fractionSize)) {\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n    }\n\n    // safely round numbers in JS without hitting imprecisions of floating-point arithmetics\n    // inspired by:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n    number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);\n\n    if (number === 0) {\n      isNegative = false;\n    }\n\n    var fraction = ('' + number).split(DECIMAL_SEP);\n    var whole = fraction[0];\n    fraction = fraction[1] || '';\n\n    var i, pos = 0,\n        lgroup = pattern.lgSize,\n        group = pattern.gSize;\n\n    if (whole.length >= (lgroup + group)) {\n      pos = whole.length - lgroup;\n      for (i = 0; i < pos; i++) {\n        if ((pos - i)%group === 0 && i !== 0) {\n          formatedText += groupSep;\n        }\n        formatedText += whole.charAt(i);\n      }\n    }\n\n    for (i = pos; i < whole.length; i++) {\n      if ((whole.length - i)%lgroup === 0 && i !== 0) {\n        formatedText += groupSep;\n      }\n      formatedText += whole.charAt(i);\n    }\n\n    // format fraction part.\n    while(fraction.length < fractionSize) {\n      fraction += '0';\n    }\n\n    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n  } else {\n\n    if (fractionSize > 0 && number > -1 && number < 1) {\n      formatedText = number.toFixed(fractionSize);\n    }\n  }\n\n  parts.push(isNegative ? pattern.negPre : pattern.posPre);\n  parts.push(formatedText);\n  parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n  return parts.join('');\n}\n\nfunction padNumber(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while(num.length < digits) num = '0' + num;\n  if (trim)\n    num = num.substr(num.length - digits);\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset)\n      value += offset;\n    if (value === 0 && offset == -12 ) value = 12;\n    return padNumber(value, size, trim);\n  };\n}\n\nfunction dateStrGetter(name, shortForm) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date) {\n  var zone = -1 * date.getTimezoneOffset();\n  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4),\n    yy: dateGetter('FullYear', 2, 0, true),\n     y: dateGetter('FullYear', 1),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n     // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions\n   sss: dateGetter('Milliseconds', 3),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n    NUMBER_STRING = /^\\-?\\d+$/;\n\n/**\n * @ngdoc filter\n * @name date\n * @kind function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in am/pm, padded (01-12)\n *   * `'h'`: Hour in am/pm, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'.sss' or ',sss'`: Millisecond in second, padded (000-999)\n *   * `'a'`: am/pm marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 pm)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n *\n *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n *   (e.g. `\"h 'o''clock'\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           <span>{{1288323623006 | date:'medium'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n       <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n          <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should format date', function() {\n         expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n         expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n         expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n            toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </file>\n   </example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n                     // 1        2       3         4          5          6          7          8  9     10      11\n  function jsonStringToDate(string) {\n    var match;\n    if (match = string.match(R_ISO8601_STR)) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0,\n          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,\n          timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n      if (match[9]) {\n        tzHour = int(match[9] + match[10]);\n        tzMin = int(match[9] + match[11]);\n      }\n      dateSetter.call(date, int(match[1]), int(match[2]) - 1, int(match[3]));\n      var h = int(match[4]||0) - tzHour;\n      var m = int(match[5]||0) - tzMin;\n      var s = int(match[6]||0);\n      var ms = Math.round(parseFloat('0.' + (match[7]||0)) * 1000);\n      timeSetter.call(date, h, m, s, ms);\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      date = NUMBER_STRING.test(date) ? int(date) : jsonStringToDate(date);\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date)) {\n      return date;\n    }\n\n    while(format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    forEach(parts, function(value){\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name json\n * @kind function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @returns {string} JSON string.\n *\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <pre>{{ {'name':'value'} | json }}</pre>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should jsonify filtered objects', function() {\n         expect(element(by.binding(\"{'name':'value'}\")).getText()).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n       });\n     </file>\n   </example>\n *\n */\nfunction jsonFilter() {\n  return function(object) {\n    return toJson(object, true);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name lowercase\n * @kind function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name uppercase\n * @kind function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc filter\n * @name limitTo\n * @kind function\n *\n * @description\n * Creates a new array or string containing only a specified number of elements. The elements\n * are taken from either the beginning or the end of the source array or string, as specified by\n * the value and sign (positive or negative) of `limit`.\n *\n * @param {Array|string} input Source array or string to be limited.\n * @param {string|number} limit The length of the returned array or string. If the `limit` number\n *     is positive, `limit` number of items from the beginning of the source array/string are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array/string\n *     are copied. The `limit` will be trimmed if it exceeds `array.length`\n * @returns {Array|string} A new sub-array or substring of length `limit` or less if input array\n *     had less than `limit` elements.\n *\n * @example\n   <example module=\"limitToExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('limitToExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.numbers = [1,2,3,4,5,6,7,8,9];\n             $scope.letters = \"abcdefghi\";\n             $scope.numLimit = 3;\n             $scope.letterLimit = 3;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Limit {{numbers}} to: <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n         Limit {{letters}} to: <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var numLimitInput = element(by.model('numLimit'));\n       var letterLimitInput = element(by.model('letterLimit'));\n       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n\n       it('should limit the number array to first three items', function() {\n         expect(numLimitInput.getAttribute('value')).toBe('3');\n         expect(letterLimitInput.getAttribute('value')).toBe('3');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abc');\n       });\n\n       // There is a bug in safari and protractor that doesn't like the minus key\n       // it('should update the output when -3 is entered', function() {\n       //   numLimitInput.clear();\n       //   numLimitInput.sendKeys('-3');\n       //   letterLimitInput.clear();\n       //   letterLimitInput.sendKeys('-3');\n       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n       // });\n\n       it('should not exceed the maximum size of input array', function() {\n         numLimitInput.clear();\n         numLimitInput.sendKeys('100');\n         letterLimitInput.clear();\n         letterLimitInput.sendKeys('100');\n         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n       });\n     </file>\n   </example>\n */\nfunction limitToFilter(){\n  return function(input, limit) {\n    if (!isArray(input) && !isString(input)) return input;\n\n    if (Math.abs(Number(limit)) === Infinity) {\n      limit = Number(limit);\n    } else {\n      limit = int(limit);\n    }\n\n    //NaN check on limit\n    if (limit) {\n      return limit > 0 ? input.slice(0, limit) : input.slice(limit);\n    } else {\n      return isString(input) ? \"\" : [];\n    }\n  };\n}\n\n/**\n * @ngdoc filter\n * @name orderBy\n * @kind function\n *\n * @description\n * Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\n * for strings and numerically for numbers. Note: if you notice numbers are not being sorted\n * correctly, make sure they are actually being saved as numbers and not strings.\n *\n * @param {Array} array The array to sort.\n * @param {function(*)|string|Array.<(function(*)|string)>=} expression A predicate to be\n *    used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `function`: Getter function. The result of this function will be sorted using the\n *      `<`, `=`, `>` operator.\n *    - `string`: An Angular expression. The result of this expression is used to compare elements\n *      (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\n *      3 first characters of a property called `name`). The result of a constant expression\n *      is interpreted as a property name to be used in comparisons (for example `\"special name\"`\n *      to sort object by the value of their `special name` property). An expression can be\n *      optionally prefixed with `+` or `-` to control ascending or descending sort order\n *      (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\n *      element itself is used to compare where sorting.\n *    - `Array`: An array of function or string predicates. The first predicate in the array\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\n *\n *    If the predicate is missing or empty then it defaults to `'+'`.\n *\n * @param {boolean=} reverse Reverse the order of the array.\n * @returns {Array} Sorted copy of the source array.\n *\n * @example\n   <example module=\"orderByExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('orderByExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.friends =\n                 [{name:'John', phone:'555-1212', age:10},\n                  {name:'Mary', phone:'555-9876', age:19},\n                  {name:'Mike', phone:'555-4321', age:21},\n                  {name:'Adam', phone:'555-5678', age:35},\n                  {name:'Julie', phone:'555-8765', age:29}];\n             $scope.predicate = '-age';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n         <hr/>\n         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n         <table class=\"friend\">\n           <tr>\n             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                 (<a href=\"\" ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </file>\n   </example>\n *\n * It's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\n * filter routine with `$filter('orderBy')`, and calling the returned filter routine with the\n * desired parameters.\n *\n * Example:\n *\n * @example\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <table class=\"friend\">\n          <tr>\n            <th><a href=\"\" ng-click=\"reverse=false;order('name', false)\">Name</a>\n              (<a href=\"\" ng-click=\"order('-name',false)\">^</a>)</th>\n            <th><a href=\"\" ng-click=\"reverse=!reverse;order('phone', reverse)\">Phone Number</a></th>\n            <th><a href=\"\" ng-click=\"reverse=!reverse;order('age',reverse)\">Age</a></th>\n          </tr>\n          <tr ng-repeat=\"friend in friends\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n\n    <file name=\"script.js\">\n      angular.module('orderByExample', [])\n        .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\n          var orderBy = $filter('orderBy');\n          $scope.friends = [\n            { name: 'John',    phone: '555-1212',    age: 10 },\n            { name: 'Mary',    phone: '555-9876',    age: 19 },\n            { name: 'Mike',    phone: '555-4321',    age: 21 },\n            { name: 'Adam',    phone: '555-5678',    age: 35 },\n            { name: 'Julie',   phone: '555-8765',    age: 29 }\n          ];\n          $scope.order = function(predicate, reverse) {\n            $scope.friends = orderBy($scope.friends, predicate, reverse);\n          };\n          $scope.order('-age',false);\n        }]);\n    </file>\n</example>\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse){\n  return function(array, sortPredicate, reverseOrder) {\n    if (!(isArrayLike(array))) return array;\n    sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];\n    if (sortPredicate.length === 0) { sortPredicate = ['+']; }\n    sortPredicate = map(sortPredicate, function(predicate){\n      var descending = false, get = predicate || identity;\n      if (isString(predicate)) {\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n          descending = predicate.charAt(0) == '-';\n          predicate = predicate.substring(1);\n        }\n        if ( predicate === '' ) {\n          // Effectively no predicate was passed so we compare identity\n          return reverseComparator(function(a,b) {\n            return compare(a, b);\n          }, descending);\n        }\n        get = $parse(predicate);\n        if (get.constant) {\n          var key = get();\n          return reverseComparator(function(a,b) {\n            return compare(a[key], b[key]);\n          }, descending);\n        }\n      }\n      return reverseComparator(function(a,b){\n        return compare(get(a),get(b));\n      }, descending);\n    });\n    return slice.call(array).sort(reverseComparator(comparator, reverseOrder));\n\n    function comparator(o1, o2){\n      for ( var i = 0; i < sortPredicate.length; i++) {\n        var comp = sortPredicate[i](o1, o2);\n        if (comp !== 0) return comp;\n      }\n      return 0;\n    }\n    function reverseComparator(comp, descending) {\n      return toBoolean(descending)\n          ? function(a,b){return comp(b,a);}\n          : comp;\n    }\n    function compare(v1, v2){\n      var t1 = typeof v1;\n      var t2 = typeof v2;\n      if (t1 == t2) {\n        if (isDate(v1) && isDate(v2)) {\n          v1 = v1.valueOf();\n          v2 = v2.valueOf();\n        }\n        if (t1 == \"string\") {\n           v1 = v1.toLowerCase();\n           v2 = v2.toLowerCase();\n        }\n        if (v1 === v2) return 0;\n        return v1 < v2 ? -1 : 1;\n      } else {\n        return t1 < t2 ? -1 : 1;\n      }\n    }\n  };\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    };\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of the html A tag so that the default action is prevented when\n * the href attribute is empty.\n *\n * This change permits the easy creation of action links with the `ngClick` directive\n * without changing the location or causing page reloads, e.g.:\n * `<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n\n    if (msie <= 8) {\n\n      // turn <a href ng-click=\"..\">link</a> into a stylable link in IE\n      // but only if it doesn't have name attribute, in which case it's an anchor\n      if (!attr.href && !attr.name) {\n        attr.$set('href', '');\n      }\n\n      // add a comment node to anchors to workaround IE bug that causes element content to be reset\n      // to new attribute content if attribute is updated with value containing @ and element also\n      // contains value with @\n      // see issue #1949\n      element.append(document.createComment('IE fix'));\n    }\n\n    if (!attr.href && !attr.xlinkHref && !attr.name) {\n      return function(scope, element) {\n        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?\n                   'xlink:href' : 'href';\n        element.on('click', function(event){\n          // if we have no href url, then don't navigate anywhere.\n          if (!element.attr(href)) {\n            event.preventDefault();\n          }\n        });\n      };\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngHref\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in an href attribute will\n * make the link go to the wrong URL if the user clicks it before\n * Angular has a chance to replace the `{{hash}}` markup with its\n * value. Until Angular replaces the markup the link will be broken\n * and will most likely return a 404 error. The `ngHref` directive\n * solves this problem.\n *\n * The wrong way to write it:\n * ```html\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes\n * in links and their different behaviors:\n    <example>\n      <file name=\"index.html\">\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should execute ng-click but not reload when href without value', function() {\n          element(by.id('link-1')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n          expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element(by.id('link-2')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n          expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\n          element(by.id('link-3')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/123$/);\n            });\n          }, 5000, 'page should navigate to /123');\n        });\n\n        xit('should execute ng-click but not reload when href empty string and name specified', function() {\n          element(by.id('link-4')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n          expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element(by.id('link-5')).click();\n          expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n        });\n\n        it('should only change url when only ng-href', function() {\n          element(by.model('value')).clear();\n          element(by.model('value')).sendKeys('6');\n          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\n          element(by.id('link-6')).click();\n\n          // At this point, we navigate away from an Angular page, so we need\n          // to use browser.driver to get the base webdriver.\n          browser.wait(function() {\n            return browser.driver.getCurrentUrl().then(function(url) {\n              return url.match(/\\/6$/);\n            });\n          }, 5000, 'page should navigate to /6');\n        });\n      </file>\n    </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngSrc\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * ```\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngSrcset\n * @restrict A\n * @priority 99\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `srcset` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrcset` directive solves this problem.\n *\n * The buggy way to write it:\n * ```html\n * <img srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * ```\n *\n * The correct way to write it:\n * ```html\n * <img ng-srcset=\"http://www.gravatar.com/avatar/{{hash}} 2x\"/>\n * ```\n *\n * @element IMG\n * @param {template} ngSrcset any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ngDisabled\n * @restrict A\n * @priority 100\n *\n * @description\n *\n * We shouldn't do this, because it will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\n * ```html\n * <div ng-init=\"scope = { isDisabled: false }\">\n *  <button disabled=\"{{scope.isDisabled}}\">Disabled</button>\n * </div>\n * ```\n *\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as disabled. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngDisabled` directive solves this problem for the `disabled` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle button', function() {\n          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,\n *     then special attribute \"disabled\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngChecked\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as checked. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngChecked` directive solves this problem for the `checked` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should check both checkBoxes', function() {\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeFalsy();\n          element(by.model('master')).click();\n          expect(element(by.id('checkSlave')).getAttribute('checked')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,\n *     then special attribute \"checked\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngReadonly\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as readonly. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngReadonly` directive solves this problem for the `readonly` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle readonly attr', function() {\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeFalsy();\n          element(by.model('checked')).click();\n          expect(element(by.css('[type=\"text\"]')).getAttribute('readonly')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element INPUT\n * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,\n *     then special attribute \"readonly\" will be set on the element\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSelected\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as selected. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngSelected` directive solves this problem for the `selected` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n        <select>\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should select Greetings!', function() {\n          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n          element(by.model('selected')).click();\n          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n        });\n      </file>\n    </example>\n *\n * @element OPTION\n * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,\n *     then special attribute \"selected\" will be set on the element\n */\n\n/**\n * @ngdoc directive\n * @name ngOpen\n * @restrict A\n * @priority 100\n *\n * @description\n * The HTML specification does not require browsers to preserve the values of boolean attributes\n * such as open. (Their presence means true and their absence means false.)\n * If we put an Angular interpolation expression into such an attribute then the\n * binding information would be lost when the browser removes the attribute.\n * The `ngOpen` directive solves this problem for the `open` attribute.\n * This complementary directive is not removed by the browser and so provides\n * a permanent reliable place to store the binding information.\n * @example\n     <example>\n       <file name=\"index.html\">\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"><br/>\n         <details id=\"details\" ng-open=\"open\">\n            <summary>Show/Hide me</summary>\n         </details>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should toggle open', function() {\n           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n           element(by.model('open')).click();\n           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n         });\n       </file>\n     </example>\n *\n * @element DETAILS\n * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,\n *     then special attribute \"open\" will be set on the element\n */\n\nvar ngAttributeAliasDirectives = {};\n\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  // binding to multiple is not supported\n  if (propName == \"multiple\") return;\n\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 100,\n      link: function(scope, element, attr) {\n        scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n          attr.$set(attrName, !!value);\n        });\n      }\n    };\n  };\n});\n\n\n// ng-src, ng-srcset, ng-href are interpolated\nforEach(['src', 'srcset', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        var propName = attrName,\n            name = attrName;\n\n        if (attrName === 'href' &&\n            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {\n          name = 'xlinkHref';\n          attr.$attr[name] = 'xlink:href';\n          propName = null;\n        }\n\n        attr.$observe(normalized, function(value) {\n          if (!value) {\n            if (attrName === 'href') {\n              attr.$set(name, null);\n            }\n            return;\n          }\n\n          attr.$set(name, value);\n\n          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // we use attr[attrName] value since $set can sanitize the url.\n          if (msie && propName) element.prop(propName, attr[name]);\n        });\n      }\n    };\n  };\n});\n\n/* global -nullFormCtrl */\nvar nullFormCtrl = {\n  $addControl: noop,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop,\n  $setPristine: noop\n};\n\n/**\n * @ngdoc type\n * @name form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n *\n * @property {Object} $error Is an object hash, containing references to all invalid controls or\n *  forms, where:\n *\n *  - keys are validation tokens (error names),\n *  - values are arrays of controls or forms that are invalid for given error name.\n *\n *\n *  Built-in validation tokens:\n *\n *  - `email`\n *  - `max`\n *  - `maxlength`\n *  - `min`\n *  - `minlength`\n *  - `number`\n *  - `pattern`\n *  - `required`\n *  - `url`\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as the state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope', '$animate'];\nfunction FormController(element, attrs, $scope, $animate) {\n  var form = this,\n      parentForm = element.parent().controller('form') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      errors = form.$error = {},\n      controls = [];\n\n  // init state\n  form.$name = attrs.name || attrs.ngForm;\n  form.$dirty = false;\n  form.$pristine = true;\n  form.$valid = true;\n  form.$invalid = false;\n\n  parentForm.$addControl(form);\n\n  // Setup initial state of the control\n  element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    $animate.setClass(element,\n      (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey,\n      (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$addControl\n   *\n   * @description\n   * Register a control with the form.\n   *\n   * Input elements using ngModelController do this automatically when they are linked.\n   */\n  form.$addControl = function(control) {\n    // Breaking change - before, inputs whose name was \"hasOwnProperty\" were quietly ignored\n    // and not added to the scope.  Now we throw an error.\n    assertNotHasOwnProperty(control.$name, 'input');\n    controls.push(control);\n\n    if (control.$name) {\n      form[control.$name] = control;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$removeControl\n   *\n   * @description\n   * Deregister a control from the form.\n   *\n   * Input elements using ngModelController do this automatically when they are destroyed.\n   */\n  form.$removeControl = function(control) {\n    if (control.$name && form[control.$name] === control) {\n      delete form[control.$name];\n    }\n    forEach(errors, function(queue, validationToken) {\n      form.$setValidity(validationToken, true, control);\n    });\n\n    arrayRemove(controls, control);\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setValidity\n   *\n   * @description\n   * Sets the validity of a form control.\n   *\n   * This method will also propagate to parent forms.\n   */\n  form.$setValidity = function(validationToken, isValid, control) {\n    var queue = errors[validationToken];\n\n    if (isValid) {\n      if (queue) {\n        arrayRemove(queue, control);\n        if (!queue.length) {\n          invalidCount--;\n          if (!invalidCount) {\n            toggleValidCss(isValid);\n            form.$valid = true;\n            form.$invalid = false;\n          }\n          errors[validationToken] = false;\n          toggleValidCss(true, validationToken);\n          parentForm.$setValidity(validationToken, true, form);\n        }\n      }\n\n    } else {\n      if (!invalidCount) {\n        toggleValidCss(isValid);\n      }\n      if (queue) {\n        if (includes(queue, control)) return;\n      } else {\n        errors[validationToken] = queue = [];\n        invalidCount++;\n        toggleValidCss(false, validationToken);\n        parentForm.$setValidity(validationToken, false, form);\n      }\n      queue.push(control);\n\n      form.$valid = false;\n      form.$invalid = true;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setDirty\n   *\n   * @description\n   * Sets the form to a dirty state.\n   *\n   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\n   * state (ng-dirty class). This method will also propagate to parent forms.\n   */\n  form.$setDirty = function() {\n    $animate.removeClass(element, PRISTINE_CLASS);\n    $animate.addClass(element, DIRTY_CLASS);\n    form.$dirty = true;\n    form.$pristine = false;\n    parentForm.$setDirty();\n  };\n\n  /**\n   * @ngdoc method\n   * @name form.FormController#$setPristine\n   *\n   * @description\n   * Sets the form to its pristine state.\n   *\n   * This method can be called to remove the 'ng-dirty' class and set the form to its pristine\n   * state (ng-pristine class). This method will also propagate to all the controls contained\n   * in this form.\n   *\n   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after\n   * saving or resetting it.\n   */\n  form.$setPristine = function () {\n    $animate.removeClass(element, DIRTY_CLASS);\n    $animate.addClass(element, PRISTINE_CLASS);\n    form.$dirty = false;\n    form.$pristine = true;\n    forEach(controls, function(control) {\n      control.$setPristine();\n    });\n  };\n}\n\n\n/**\n * @ngdoc directive\n * @name ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * Note: the purpose of `ngForm` is to group controls,\n * but not to be a replacement for the `<form>` tag with all of its capabilities\n * (e.g. posting to the server, ...).\n *\n * @param {string=} ngForm|name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link form.FormController FormController}.\n *\n * If the `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In Angular forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\n * Angular provides the {@link ng.directive:ngForm `ngForm`} directive which behaves identically to\n * `<form>` but can be nested.  This allows you to have nested forms, which is very useful when\n * using Angular validation directives in forms that are dynamically generated using the\n * {@link ng.directive:ngRepeat `ngRepeat`} directive. Since you cannot dynamically generate the `name`\n * attribute of input elements using interpolation, you have to wrap each set of repeated inputs in an\n * `ngForm` directive and nest these in an outer `form` element.\n *\n *\n * # CSS classes\n *  - `ng-valid` is set if the form is valid.\n *  - `ng-invalid` is set if the form is invalid.\n *  - `ng-pristine` is set if the form is pristine.\n *  - `ng-dirty` is set if the form is dirty.\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n *\n * # Submitting a form and preventing the default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in an application-specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\n * or {@link ng.directive:ngClick ngClick} directives.\n * This is because of the following form submission rules in the HTML specification:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n *\n * ## Animation Hooks\n *\n * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.\n * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\n * other validations that are performed within the form. Animations in ngForm are similar to how\n * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\n * as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style a form element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-form {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-form.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n    <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n      <file name=\"index.html\">\n       <script>\n         angular.module('formExample', [])\n           .controller('FormController', ['$scope', function($scope) {\n             $scope.userType = 'guest';\n           }]);\n       </script>\n       <style>\n        .my-form {\n          -webkit-transition:all linear 0.5s;\n          transition:all linear 0.5s;\n          background: transparent;\n        }\n        .my-form.ng-invalid {\n          background: red;\n        }\n       </style>\n       <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <tt>userType = {{userType}}</tt><br>\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should initialize to model', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n\n          expect(userType.getText()).toContain('guest');\n          expect(valid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty', function() {\n          var userType = element(by.binding('userType'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var userInput = element(by.model('userType'));\n\n          userInput.clear();\n          userInput.sendKeys('');\n\n          expect(userType.getText()).toEqual('userType =');\n          expect(valid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', function($timeout) {\n    var formDirective = {\n      name: 'form',\n      restrict: isNgForm ? 'EAC' : 'E',\n      controller: FormController,\n      compile: function() {\n        return {\n          pre: function(scope, formElement, attr, controller) {\n            if (!attr.action) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var preventDefaultListener = function(event) {\n                event.preventDefault\n                  ? event.preventDefault()\n                  : event.returnValue = false; // IE\n              };\n\n              addEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.on('$destroy', function() {\n                $timeout(function() {\n                  removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = formElement.parent().controller('form'),\n                alias = attr.name || attr.ngForm;\n\n            if (alias) {\n              setter(scope, alias, controller, alias);\n            }\n            if (parentFormCtrl) {\n              formElement.on('$destroy', function() {\n                parentFormCtrl.$removeControl(controller);\n                if (alias) {\n                  setter(scope, alias, undefined, alias);\n                }\n                extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n              });\n            }\n          }\n        };\n      }\n    };\n\n    return formDirective;\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\n/* global VALID_CLASS: true,\n    INVALID_CLASS: true,\n    PRISTINE_CLASS: true,\n    DIRTY_CLASS: true\n*/\n\nvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\nvar EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\nvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\n\nvar inputType = {\n\n  /**\n   * @ngdoc input\n   * @name input[text]\n   *\n   * @description\n   * Standard HTML text input with angular data binding, inherited by most of the `input` elements.\n   *\n   * *NOTE* Not every feature offered is available for all input types.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n   *    This parameter is ignored for input[type=password] controls, which will never trim the\n   *    input.\n   *\n   * @example\n      <example name=\"text-input-directive\" module=\"textInputExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('textInputExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.text = 'guest';\n               $scope.word = /^\\s*\\w*\\s*$/;\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Single word: <input type=\"text\" name=\"input\" ng-model=\"text\"\n                               ng-pattern=\"word\" required ng-trim=\"false\">\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n             Single word only!</span>\n\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('guest');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input.clear();\n            input.sendKeys('hello world');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'text': textInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[number]\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"number-input-directive\" module=\"numberExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('numberExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.value = 12;\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Number: <input type=\"number\" name=\"input\" ng-model=\"value\"\n                          min=\"0\" max=\"99\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n             Not valid number!</span>\n           <tt>value = {{value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var value = element(by.binding('value'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('value'));\n\n          it('should initialize to model', function() {\n            expect(value.getText()).toContain('12');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if over max', function() {\n            input.clear();\n            input.sendKeys('123');\n            expect(value.getText()).toEqual('value =');\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[url]\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"url-input-directive\" module=\"urlExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('urlExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.text = 'http://google.com';\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           URL: <input type=\"url\" name=\"input\" ng-model=\"text\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n             Not valid url!</span>\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('http://google.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input.clear();\n            input.sendKeys('box');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[email]\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"email-input-directive\" module=\"emailExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('emailExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.text = 'me@example.com';\n             }]);\n         </script>\n           <form name=\"myForm\" ng-controller=\"ExampleController\">\n             Email: <input type=\"email\" name=\"input\" ng-model=\"text\" required>\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n               Not valid email!</span>\n             <tt>text = {{text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n         </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          var text = element(by.binding('text'));\n          var valid = element(by.binding('myForm.input.$valid'));\n          var input = element(by.model('text'));\n\n          it('should initialize to model', function() {\n            expect(text.getText()).toContain('me@example.com');\n            expect(valid.getText()).toContain('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input.clear();\n            input.sendKeys('');\n            expect(text.getText()).toEqual('text =');\n            expect(valid.getText()).toContain('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input.clear();\n            input.sendKeys('xxx');\n\n            expect(valid.getText()).toContain('false');\n          });\n        </file>\n      </example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[radio]\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the expression should be set when selected.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   * @param {string} ngValue Angular expression which sets the value to which the expression should\n   *    be set when selected.\n   *\n   * @example\n      <example name=\"radio-input-directive\" module=\"radioExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('radioExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.color = 'blue';\n               $scope.specialValue = {\n                 \"id\": \"12345\",\n                 \"value\": \"green\"\n               };\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           <input type=\"radio\" ng-model=\"color\" value=\"red\">  Red <br/>\n           <input type=\"radio\" ng-model=\"color\" ng-value=\"specialValue\"> Green <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"blue\"> Blue <br/>\n           <tt>color = {{color | json}}</tt><br/>\n          </form>\n          Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var color = element(by.binding('color'));\n\n            expect(color.getText()).toContain('blue');\n\n            element.all(by.model('color')).get(0).click();\n\n            expect(color.getText()).toContain('red');\n          });\n        </file>\n      </example>\n   */\n  'radio': radioInputType,\n\n\n  /**\n   * @ngdoc input\n   * @name input[checkbox]\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {string=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n        <file name=\"index.html\">\n         <script>\n           angular.module('checkboxExample', [])\n             .controller('ExampleController', ['$scope', function($scope) {\n               $scope.value1 = true;\n               $scope.value2 = 'YES'\n             }]);\n         </script>\n         <form name=\"myForm\" ng-controller=\"ExampleController\">\n           Value1: <input type=\"checkbox\" ng-model=\"value1\"> <br/>\n           Value2: <input type=\"checkbox\" ng-model=\"value2\"\n                          ng-true-value=\"YES\" ng-false-value=\"NO\"> <br/>\n           <tt>value1 = {{value1}}</tt><br/>\n           <tt>value2 = {{value2}}</tt><br/>\n          </form>\n        </file>\n        <file name=\"protractor.js\" type=\"protractor\">\n          it('should change state', function() {\n            var value1 = element(by.binding('value1'));\n            var value2 = element(by.binding('value2'));\n\n            expect(value1.getText()).toContain('true');\n            expect(value2.getText()).toContain('YES');\n\n            element(by.model('value1')).click();\n            element(by.model('value2')).click();\n\n            expect(value1.getText()).toContain('false');\n            expect(value2.getText()).toContain('NO');\n          });\n        </file>\n      </example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop,\n  'file': noop\n};\n\n// A helper function to call $setValidity and return the value / undefined,\n// a pattern that is repeated a lot in the input validation logic.\nfunction validate(ctrl, validatorName, validity, value){\n  ctrl.$setValidity(validatorName, validity);\n  return validity ? value : undefined;\n}\n\nfunction testFlags(validity, flags) {\n  var i, flag;\n  if (flags) {\n    for (i=0; i<flags.length; ++i) {\n      flag = flags[i];\n      if (validity[flag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n// Pass validity so that behaviour can be mocked easier.\nfunction addNativeHtml5Validators(ctrl, validatorName, badFlags, ignoreFlags, validity) {\n  if (isObject(validity)) {\n    ctrl.$$hasNativeValidators = true;\n    var validator = function(value) {\n      // Don't overwrite previous validation, don't consider valueMissing to apply (ng-required can\n      // perform the required validation)\n      if (!ctrl.$error[validatorName] &&\n          !testFlags(validity, ignoreFlags) &&\n          testFlags(validity, badFlags)) {\n        ctrl.$setValidity(validatorName, false);\n        return;\n      }\n      return value;\n    };\n    ctrl.$parsers.push(validator);\n  }\n}\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  var validity = element.prop(VALIDITY_STATE_PROPERTY);\n  var placeholder = element[0].placeholder, noevent = {};\n  var type = lowercase(element[0].type);\n  ctrl.$$validityState = validity;\n\n  // In composition mode, users are still inputing intermediate text buffer,\n  // hold the listener until composition is done.\n  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent\n  if (!$sniffer.android) {\n    var composing = false;\n\n    element.on('compositionstart', function(data) {\n      composing = true;\n    });\n\n    element.on('compositionend', function() {\n      composing = false;\n      listener();\n    });\n  }\n\n  var listener = function(ev) {\n    if (composing) return;\n    var value = element.val();\n\n    // IE (11 and under) seem to emit an 'input' event if the placeholder value changes.\n    // We don't want to dirty the value when this happens, so we abort here. Unfortunately,\n    // IE also sends input events for other non-input-related things, (such as focusing on a\n    // form control), so this change is not entirely enough to solve this.\n    if (msie && (ev || noevent).type === 'input' && element[0].placeholder !== placeholder) {\n      placeholder = element[0].placeholder;\n      return;\n    }\n\n    // By default we will trim the value\n    // If the attribute ng-trim exists we will avoid trimming\n    // If input type is 'password', the value is never trimmed\n    if (type !== 'password' && (toBoolean(attr.ngTrim || 'T'))) {\n      value = trim(value);\n    }\n\n    // If a control is suffering from bad input, browsers discard its value, so it may be\n    // necessary to revalidate even if the control's value is the same empty value twice in\n    // a row.\n    var revalidate = validity && ctrl.$$hasNativeValidators;\n    if (ctrl.$viewValue !== value || (value === '' && revalidate)) {\n      if (scope.$root.$$phase) {\n        ctrl.$setViewValue(value);\n      } else {\n        scope.$apply(function() {\n          ctrl.$setViewValue(value);\n        });\n      }\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.on('input', listener);\n  } else {\n    var timeout;\n\n    var deferListener = function() {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          listener();\n          timeout = null;\n        });\n      }\n    };\n\n    element.on('keydown', function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener();\n    });\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.on('paste cut', deferListener);\n    }\n  }\n\n  // if user paste into input using mouse on older browser\n  // or form autocomplete on newer browser, we need \"change\" event to catch it\n  element.on('change', listener);\n\n  ctrl.$render = function() {\n    element.val(ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n  };\n\n  // pattern validator\n  var pattern = attr.ngPattern,\n      patternValidator,\n      match;\n\n  if (pattern) {\n    var validateRegex = function(regexp, value) {\n      return validate(ctrl, 'pattern', ctrl.$isEmpty(value) || regexp.test(value), value);\n    };\n    match = pattern.match(/^\\/(.*)\\/([gim]*)$/);\n    if (match) {\n      pattern = new RegExp(match[1], match[2]);\n      patternValidator = function(value) {\n        return validateRegex(pattern, value);\n      };\n    } else {\n      patternValidator = function(value) {\n        var patternObj = scope.$eval(pattern);\n\n        if (!patternObj || !patternObj.test) {\n          throw minErr('ngPattern')('noregexp',\n            'Expected {0} to be a RegExp but was {1}. Element: {2}', pattern,\n            patternObj, startingTag(element));\n        }\n        return validateRegex(patternObj, value);\n      };\n    }\n\n    ctrl.$formatters.push(patternValidator);\n    ctrl.$parsers.push(patternValidator);\n  }\n\n  // min length validator\n  if (attr.ngMinlength) {\n    var minlength = int(attr.ngMinlength);\n    var minLengthValidator = function(value) {\n      return validate(ctrl, 'minlength', ctrl.$isEmpty(value) || value.length >= minlength, value);\n    };\n\n    ctrl.$parsers.push(minLengthValidator);\n    ctrl.$formatters.push(minLengthValidator);\n  }\n\n  // max length validator\n  if (attr.ngMaxlength) {\n    var maxlength = int(attr.ngMaxlength);\n    var maxLengthValidator = function(value) {\n      return validate(ctrl, 'maxlength', ctrl.$isEmpty(value) || value.length <= maxlength, value);\n    };\n\n    ctrl.$parsers.push(maxLengthValidator);\n    ctrl.$formatters.push(maxLengthValidator);\n  }\n}\n\nvar numberBadFlags = ['badInput'];\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  ctrl.$parsers.push(function(value) {\n    var empty = ctrl.$isEmpty(value);\n    if (empty || NUMBER_REGEXP.test(value)) {\n      ctrl.$setValidity('number', true);\n      return value === '' ? null : (empty ? value : parseFloat(value));\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n\n  addNativeHtml5Validators(ctrl, 'number', numberBadFlags, null, ctrl.$$validityState);\n\n  ctrl.$formatters.push(function(value) {\n    return ctrl.$isEmpty(value) ? '' : '' + value;\n  });\n\n  if (attr.min) {\n    var minValidator = function(value) {\n      var min = parseFloat(attr.min);\n      return validate(ctrl, 'min', ctrl.$isEmpty(value) || value >= min, value);\n    };\n\n    ctrl.$parsers.push(minValidator);\n    ctrl.$formatters.push(minValidator);\n  }\n\n  if (attr.max) {\n    var maxValidator = function(value) {\n      var max = parseFloat(attr.max);\n      return validate(ctrl, 'max', ctrl.$isEmpty(value) || value <= max, value);\n    };\n\n    ctrl.$parsers.push(maxValidator);\n    ctrl.$formatters.push(maxValidator);\n  }\n\n  ctrl.$formatters.push(function(value) {\n    return validate(ctrl, 'number', ctrl.$isEmpty(value) || isNumber(value), value);\n  });\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var urlValidator = function(value) {\n    return validate(ctrl, 'url', ctrl.$isEmpty(value) || URL_REGEXP.test(value), value);\n  };\n\n  ctrl.$formatters.push(urlValidator);\n  ctrl.$parsers.push(urlValidator);\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var emailValidator = function(value) {\n    return validate(ctrl, 'email', ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value), value);\n  };\n\n  ctrl.$formatters.push(emailValidator);\n  ctrl.$parsers.push(emailValidator);\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  element.on('click', function() {\n    if (element[0].checked) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(attr.value);\n      });\n    }\n  });\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    element[0].checked = (value == ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl) {\n  var trueValue = attr.ngTrueValue,\n      falseValue = attr.ngFalseValue;\n\n  if (!isString(trueValue)) trueValue = true;\n  if (!isString(falseValue)) falseValue = false;\n\n  element.on('click', function() {\n    scope.$apply(function() {\n      ctrl.$setViewValue(element[0].checked);\n    });\n  });\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  // Override the standard `$isEmpty` because a value of `false` means empty in a checkbox.\n  ctrl.$isEmpty = function(value) {\n    return value !== trueValue;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return value === trueValue;\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n */\n\n\n/**\n * @ngdoc directive\n * @name input\n * @restrict E\n *\n * @description\n * HTML input element control with angular data-binding. Input control follows HTML5 input types\n * and polyfills the HTML5 validation behavior for older browsers.\n *\n * *NOTE* Not every feature offered is available for all input types.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n * @param {boolean=} [ngTrim=true] If set to false Angular will not automatically trim the input.\n *    This parameter is ignored for input[type=password] controls, which will never trim the\n *    input.\n *\n * @example\n    <example name=\"input-directive\" module=\"inputExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('inputExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.user = {name: 'guest', last: 'visitor'};\n            }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <form name=\"myForm\">\n           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span><br>\n           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n             Too short!</span>\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n             Too long!</span><br>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n       </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var user = element(by.binding('{{user}}'));\n        var userNameValid = element(by.binding('myForm.userName.$valid'));\n        var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n        var lastNameError = element(by.binding('myForm.lastName.$error'));\n        var formValid = element(by.binding('myForm.$valid'));\n        var userNameInput = element(by.model('user.name'));\n        var userLastInput = element(by.model('user.last'));\n\n        it('should initialize to model', function() {\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          userNameInput.clear();\n          userNameInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n          expect(userNameValid.getText()).toContain('false');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(lastNameValid.getText()).toContain('true');\n          expect(formValid.getText()).toContain('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('xx');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('minlength');\n          expect(formValid.getText()).toContain('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          userLastInput.clear();\n          userLastInput.sendKeys('some ridiculously long name');\n\n          expect(user.getText()).toContain('{\"name\":\"guest\"}');\n          expect(lastNameValid.getText()).toContain('false');\n          expect(lastNameError.getText()).toContain('maxlength');\n          expect(formValid.getText()).toContain('false');\n        });\n      </file>\n    </example>\n */\nvar inputDirective = ['$browser', '$sniffer', function($browser, $sniffer) {\n  return {\n    restrict: 'E',\n    require: '?ngModel',\n    link: function(scope, element, attr, ctrl) {\n      if (ctrl) {\n        (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,\n                                                            $browser);\n      }\n    }\n  };\n}];\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty';\n\n/**\n * @ngdoc type\n * @name ngModel.NgModelController\n *\n * @property {string} $viewValue Actual string value in the view.\n * @property {*} $modelValue The value in the model, that the control is bound to.\n * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\n       the control reads value from the DOM.  Each function is called, in turn, passing the value\n       through to the next. The last return value is used to populate the model.\n       Used to sanitize / convert the value as well as validation. For validation,\n       the parsers should update the validity state using\n       {@link ngModel.NgModelController#$setValidity $setValidity()},\n       and return `undefined` for invalid values.\n\n *\n * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\n       the model value changes. Each function is called, in turn, passing the value through to the\n       next. Used to format / convert values for display in the control and validation.\n * ```js\n * function formatter(value) {\n *   if (value) {\n *     return value.toUpperCase();\n *   }\n * }\n * ngModel.$formatters.push(formatter);\n * ```\n *\n * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever the\n *     view value has changed. It is called with no arguments, and its return value is ignored.\n *     This can be used in place of additional $watches against the model value.\n *\n * @property {Object} $error An object hash with all errors as keys.\n *\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n *\n * @description\n *\n * `NgModelController` provides API for the `ng-model` directive. The controller contains\n * services for data-binding, validation, CSS updates, and value formatting and parsing. It\n * purposefully does not contain any logic which deals with DOM rendering or listening to\n * DOM events. Such DOM related logic should be provided by other directives which make use of\n * `NgModelController` for data-binding.\n *\n * ## Custom Control Example\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * Note that `contenteditable` is an HTML5 attribute, which tells the browser to let the element\n * contents be edited in place by the user.  This will not work on older browsers.\n *\n * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\n * module to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\n * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks\n * that content using the `$sce` service.\n *\n * <example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', ['ngSanitize']).\n        directive('contenteditable', ['$sce', function($sce) {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if(!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n              };\n\n              // Listen for change events to enable binding\n              element.on('blur keyup change', function() {\n                scope.$evalAsync(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                var html = element.html();\n                // When we clear the content editable the browser leaves a <br> behind\n                // If strip-br attribute is provided then we strip this out\n                if( attrs.stripBr && html == '<br>' ) {\n                  html = '';\n                }\n                ngModel.$setViewValue(html);\n              }\n            }\n          };\n        }]);\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            strip-br=\"true\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\"></textarea>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n    it('should data-bind and become invalid', function() {\n      if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\n        // SafariDriver can't handle contenteditable\n        // and Firefox driver can't clear contenteditables very well\n        return;\n      }\n      var contentEditable = element(by.css('[contenteditable]'));\n      var content = 'Change me!';\n\n      expect(contentEditable.getText()).toEqual(content);\n\n      contentEditable.clear();\n      contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n      expect(contentEditable.getText()).toEqual('');\n      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n    });\n    </file>\n * </example>\n *\n *\n */\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate',\n    function($scope, $exceptionHandler, $attr, $element, $parse, $animate) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$name = $attr.name;\n\n  var ngModelGet = $parse($attr.ngModel),\n      ngModelSet = ngModelGet.assign;\n\n  if (!ngModelSet) {\n    throw minErr('ngModel')('nonassign', \"Expression '{0}' is non-assignable. Element: {1}\",\n        $attr.ngModel, startingTag($element));\n  }\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$render\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   */\n  this.$render = noop;\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$isEmpty\n   *\n   * @description\n   * This is called when we need to determine if the value of the input is empty.\n   *\n   * For instance, the required directive does this to work out if the input has data or not.\n   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n   *\n   * You can override this for input directives whose concept of being empty is different to the\n   * default. The `checkboxInputType` directive does this because in its case a value of `false`\n   * implies empty.\n   *\n   * @param {*} value Reference to check.\n   * @returns {boolean} True if `value` is empty.\n   */\n  this.$isEmpty = function(value) {\n    return isUndefined(value) || value === '' || value === null || value !== value;\n  };\n\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      $error = this.$error = {}; // keep invalid keys here\n\n\n  // Setup initial state of the control\n  $element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    $animate.removeClass($element, (isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey);\n    $animate.addClass($element, (isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setValidity\n   *\n   * @description\n   * Change the validity state, and notifies the form when the control changes validity. (i.e. it\n   * does not notify form if given validator is already marked as invalid).\n   *\n   * This method should be called by validators - i.e. the parser or formatter functions.\n   *\n   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign\n   *        to `$error[validationErrorKey]=!isValid` so that it is available for data-binding.\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).\n   */\n  this.$setValidity = function(validationErrorKey, isValid) {\n    // Purposeful use of ! here to cast isValid to boolean in case it is undefined\n    // jshint -W018\n    if ($error[validationErrorKey] === !isValid) return;\n    // jshint +W018\n\n    if (isValid) {\n      if ($error[validationErrorKey]) invalidCount--;\n      if (!invalidCount) {\n        toggleValidCss(true);\n        this.$valid = true;\n        this.$invalid = false;\n      }\n    } else {\n      toggleValidCss(false);\n      this.$invalid = true;\n      this.$valid = false;\n      invalidCount++;\n    }\n\n    $error[validationErrorKey] = !isValid;\n    toggleValidCss(isValid, validationErrorKey);\n\n    parentForm.$setValidity(validationErrorKey, isValid, this);\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setPristine\n   *\n   * @description\n   * Sets the control to its pristine state.\n   *\n   * This method can be called to remove the 'ng-dirty' class and set the control to its pristine\n   * state (ng-pristine class).\n   */\n  this.$setPristine = function () {\n    this.$dirty = false;\n    this.$pristine = true;\n    $animate.removeClass($element, DIRTY_CLASS);\n    $animate.addClass($element, PRISTINE_CLASS);\n  };\n\n  /**\n   * @ngdoc method\n   * @name ngModel.NgModelController#$setViewValue\n   *\n   * @description\n   * Update the view value.\n   *\n   * This method should be called when the view value changes, typically from within a DOM event handler.\n   * For example {@link ng.directive:input input} and\n   * {@link ng.directive:select select} directives call it.\n   *\n   * It will update the $viewValue, then pass this value through each of the functions in `$parsers`,\n   * which includes any validators. The value that comes out of this `$parsers` pipeline, be applied to\n   * `$modelValue` and the **expression** specified in the `ng-model` attribute.\n   *\n   * Lastly, all the registered change listeners, in the `$viewChangeListeners` list, are called.\n   *\n   * Note that calling this function does not trigger a `$digest`.\n   *\n   * @param {string} value Value from the view.\n   */\n  this.$setViewValue = function(value) {\n    this.$viewValue = value;\n\n    // change to dirty\n    if (this.$pristine) {\n      this.$dirty = true;\n      this.$pristine = false;\n      $animate.removeClass($element, PRISTINE_CLASS);\n      $animate.addClass($element, DIRTY_CLASS);\n      parentForm.$setDirty();\n    }\n\n    forEach(this.$parsers, function(fn) {\n      value = fn(value);\n    });\n\n    if (this.$modelValue !== value) {\n      this.$modelValue = value;\n      ngModelSet($scope, value);\n      forEach(this.$viewChangeListeners, function(listener) {\n        try {\n          listener();\n        } catch(e) {\n          $exceptionHandler(e);\n        }\n      });\n    }\n  };\n\n  // model -> value\n  var ctrl = this;\n\n  $scope.$watch(function ngModelWatch() {\n    var value = ngModelGet($scope);\n\n    // if scope model value and ngModel value are out of sync\n    if (ctrl.$modelValue !== value) {\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      ctrl.$modelValue = value;\n      while(idx--) {\n        value = formatters[idx](value);\n      }\n\n      if (ctrl.$viewValue !== value) {\n        ctrl.$viewValue = value;\n        ctrl.$render();\n      }\n    }\n\n    return value;\n  });\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngModel\n *\n * @element input\n *\n * @description\n * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a\n * property on the scope using {@link ngModel.NgModelController NgModelController},\n * which is created and exposed by this directive.\n *\n * `ngModel` is responsible for:\n *\n * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require.\n * - Providing validation behavior (i.e. required, number, email, url).\n * - Keeping the state of the control (valid/invalid, dirty/pristine, validation errors).\n * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`) including animations.\n * - Registering the control with its parent {@link ng.directive:form form}.\n *\n * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\n * current scope. If the property doesn't already exist on this scope, it will be created\n * implicitly and added to the scope.\n *\n * For best practices on using `ngModel`, see:\n *\n *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link input[text] text}\n *    - {@link input[checkbox] checkbox}\n *    - {@link input[radio] radio}\n *    - {@link input[number] number}\n *    - {@link input[email] email}\n *    - {@link input[url] url}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n * # CSS classes\n * The following CSS classes are added and removed on the associated input/select/textarea element\n * depending on the validity of the model.\n *\n *  - `ng-valid` is set if the model is valid.\n *  - `ng-invalid` is set if the model is invalid.\n *  - `ng-pristine` is set if the model is pristine.\n *  - `ng-dirty` is set if the model is dirty.\n *\n * Keep in mind that ngAnimate can detect each of these classes when added and removed.\n *\n * ## Animation Hooks\n *\n * Animations within models are triggered when any of the associated CSS classes are added and removed\n * on the input element which is attached to the model. These classes are: `.ng-pristine`, `.ng-dirty`,\n * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.\n * The animations that are triggered within ngModel are similar to how they work in ngClass and\n * animations can be hooked into using CSS transitions, keyframes as well as JS animations.\n *\n * The following example shows a simple way to utilize CSS transitions to style an input element\n * that has been rendered as invalid after it has been validated:\n *\n * <pre>\n * //be sure to include ngAnimate as a module to hook into more\n * //advanced animations\n * .my-input {\n *   transition:0.5s linear all;\n *   background: white;\n * }\n * .my-input.ng-invalid {\n *   background: red;\n *   color:white;\n * }\n * </pre>\n *\n * @example\n * <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"inputExample\">\n     <file name=\"index.html\">\n       <script>\n        angular.module('inputExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.val = '1';\n          }]);\n       </script>\n       <style>\n         .my-input {\n           -webkit-transition:all linear 0.5s;\n           transition:all linear 0.5s;\n           background: transparent;\n         }\n         .my-input.ng-invalid {\n           color:white;\n           background: red;\n         }\n       </style>\n       Update input to see transitions when valid/invalid.\n       Integer is a valid value.\n       <form name=\"testForm\" ng-controller=\"ExampleController\">\n         <input ng-model=\"val\" ng-pattern=\"/^\\d+$/\" name=\"anim\" class=\"my-input\" />\n       </form>\n     </file>\n * </example>\n */\nvar ngModelDirective = function() {\n  return {\n    require: ['ngModel', '^?form'],\n    controller: NgModelController,\n    link: function(scope, element, attr, ctrls) {\n      // notify others, especially parent forms\n\n      var modelCtrl = ctrls[0],\n          formCtrl = ctrls[1] || nullFormCtrl;\n\n      formCtrl.$addControl(modelCtrl);\n\n      scope.$on('$destroy', function() {\n        formCtrl.$removeControl(modelCtrl);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ngChange\n *\n * @description\n * Evaluate the given expression when the user changes the input.\n * The expression is evaluated immediately, unlike the JavaScript onchange event\n * which only triggers at the end of a change (usually, when the user leaves the\n * form element or presses the return key).\n * The expression is not evaluated when the value change is coming from the model.\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change\n * in input value.\n *\n * @example\n * <example name=\"ngChange-directive\" module=\"changeExample\">\n *   <file name=\"index.html\">\n *     <script>\n *       angular.module('changeExample', [])\n *         .controller('ExampleController', ['$scope', function($scope) {\n *           $scope.counter = 0;\n *           $scope.change = function() {\n *             $scope.counter++;\n *           };\n *         }]);\n *     </script>\n *     <div ng-controller=\"ExampleController\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       <tt>debug = {{confirmed}}</tt><br/>\n *       <tt>counter = {{counter}}</tt><br/>\n *     </div>\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     var counter = element(by.binding('counter'));\n *     var debug = element(by.binding('confirmed'));\n *\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(counter.getText()).toContain('0');\n *\n *       element(by.id('ng-change-example1')).click();\n *\n *       expect(counter.getText()).toContain('1');\n *       expect(debug.getText()).toContain('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element(by.id('ng-change-example2')).click();\n\n *       expect(counter.getText()).toContain('0');\n *       expect(debug.getText()).toContain('true');\n *     });\n *   </file>\n * </example>\n */\nvar ngChangeDirective = valueFn({\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\n\nvar requiredDirective = function() {\n  return {\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      var validator = function(value) {\n        if (attr.required && ctrl.$isEmpty(value)) {\n          ctrl.$setValidity('required', false);\n          return;\n        } else {\n          ctrl.$setValidity('required', true);\n          return value;\n        }\n      };\n\n      ctrl.$formatters.push(validator);\n      ctrl.$parsers.unshift(validator);\n\n      attr.$observe('required', function() {\n        validator(ctrl.$viewValue);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ngList\n *\n * @description\n * Text input that converts between a delimited string and an array of strings. The delimiter\n * can be a fixed string (by default a comma) or a regular expression.\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value. If\n *   specified in form `/something/` then the value will be converted into a regular expression.\n *\n * @example\n    <example name=\"ngList-directive\" module=\"listExample\">\n      <file name=\"index.html\">\n       <script>\n         angular.module('listExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.names = ['igor', 'misko', 'vojta'];\n           }]);\n       </script>\n       <form name=\"myForm\" ng-controller=\"ExampleController\">\n         List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n         <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n           Required!</span>\n         <br>\n         <tt>names = {{names}}</tt><br/>\n         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var listInput = element(by.model('names'));\n        var names = element(by.binding('{{names}}'));\n        var valid = element(by.binding('myForm.namesInput.$valid'));\n        var error = element(by.css('span.error'));\n\n        it('should initialize to model', function() {\n          expect(names.getText()).toContain('[\"igor\",\"misko\",\"vojta\"]');\n          expect(valid.getText()).toContain('true');\n          expect(error.getCssValue('display')).toBe('none');\n        });\n\n        it('should be invalid if empty', function() {\n          listInput.clear();\n          listInput.sendKeys('');\n\n          expect(names.getText()).toContain('');\n          expect(valid.getText()).toContain('false');\n          expect(error.getCssValue('display')).not.toBe('none');        });\n      </file>\n    </example>\n */\nvar ngListDirective = function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      var match = /\\/(.*)\\//.exec(attr.ngList),\n          separator = match && new RegExp(match[1]) || attr.ngList || ',';\n\n      var parse = function(viewValue) {\n        // If the viewValue is invalid (say required but empty) it will be `undefined`\n        if (isUndefined(viewValue)) return;\n\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trim(value));\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(', ');\n        }\n\n        return undefined;\n      });\n\n      // Override the standard $isEmpty because an empty array means the input is empty.\n      ctrl.$isEmpty = function(value) {\n        return !value || !value.length;\n      };\n    }\n  };\n};\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n/**\n * @ngdoc directive\n * @name ngValue\n *\n * @description\n * Binds the given expression to the value of `input[select]` or `input[radio]`, so\n * that when the element is selected, the `ngModel` of that element is set to the\n * bound value.\n *\n * `ngValue` is useful when dynamically generating lists of radio buttons using `ng-repeat`, as\n * shown below.\n *\n * @element input\n * @param {string=} ngValue angular expression, whose value will be bound to the `value` attribute\n *   of the `input` element\n *\n * @example\n    <example name=\"ngValue-directive\" module=\"valueExample\">\n      <file name=\"index.html\">\n       <script>\n          angular.module('valueExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.names = ['pizza', 'unicorns', 'robots'];\n              $scope.my = { favorite: 'unicorns' };\n            }]);\n       </script>\n        <form ng-controller=\"ExampleController\">\n          <h2>Which is your favorite?</h2>\n            <label ng-repeat=\"name in names\" for=\"{{name}}\">\n              {{name}}\n              <input type=\"radio\"\n                     ng-model=\"my.favorite\"\n                     ng-value=\"name\"\n                     id=\"{{name}}\"\n                     name=\"favorite\">\n            </label>\n          <div>You chose {{my.favorite}}</div>\n        </form>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        var favorite = element(by.binding('my.favorite'));\n\n        it('should initialize to model', function() {\n          expect(favorite.getText()).toContain('unicorns');\n        });\n        it('should bind the values to the inputs', function() {\n          element.all(by.model('my.favorite')).get(0).click();\n          expect(favorite.getText()).toContain('pizza');\n        });\n      </file>\n    </example>\n */\nvar ngValueDirective = function() {\n  return {\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function ngValueConstantLink(scope, elm, attr) {\n          attr.$set('value', scope.$eval(attr.ngValue));\n        };\n      } else {\n        return function ngValueLink(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            attr.$set('value', value);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ngBind\n * @restrict AC\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\n * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\n * element attribute, it makes the bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <example module=\"bindExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.name = 'Whirled';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var nameInput = element(by.model('name'));\n\n         expect(element(by.binding('name')).getText()).toBe('Whirled');\n         nameInput.clear();\n         nameInput.sendKeys('world');\n         expect(element(by.binding('name')).getText()).toBe('world');\n       });\n     </file>\n   </example>\n */\nvar ngBindDirective = ngDirective({\n  compile: function(templateElement) {\n    templateElement.addClass('ng-binding');\n    return function (scope, element, attr) {\n      element.data('$binding', attr.ngBind);\n      scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n        // We are purposefully using == here rather than === because we want to\n        // catch when value is \"null or undefined\"\n        // jshint -W041\n        element.text(value == undefined ? '' : value);\n      });\n    };\n  }\n});\n\n\n/**\n * @ngdoc directive\n * @name ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text content should be replaced with the interpolation of the template\n * in the `ngBindTemplate` attribute.\n * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\n * expressions. This directive is needed since some HTML elements\n * (such as TITLE and OPTION) cannot contain SPAN elements.\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <example module=\"bindExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('bindExample', [])\n           .controller('ExampleController', ['$scope', function ($scope) {\n             $scope.salutation = 'Hello';\n             $scope.name = 'World';\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n        Name: <input type=\"text\" ng-model=\"name\"><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind', function() {\n         var salutationElem = element(by.binding('salutation'));\n         var salutationInput = element(by.model('salutation'));\n         var nameInput = element(by.model('name'));\n\n         expect(salutationElem.getText()).toBe('Hello World!');\n\n         salutationInput.clear();\n         salutationInput.sendKeys('Greetings');\n         nameInput.clear();\n         nameInput.sendKeys('user');\n\n         expect(salutationElem.getText()).toBe('Greetings user!');\n       });\n     </file>\n   </example>\n */\nvar ngBindTemplateDirective = ['$interpolate', function($interpolate) {\n  return function(scope, element, attr) {\n    // TODO: move this to scenario runner\n    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n    element.addClass('ng-binding').data('$binding', interpolateFn);\n    attr.$observe('ngBindTemplate', function(value) {\n      element.text(value);\n    });\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngBindHtml\n *\n * @description\n * Creates a binding that will innerHTML the result of evaluating the `expression` into the current\n * element in a secure way.  By default, the innerHTML-ed content will be sanitized using the {@link\n * ngSanitize.$sanitize $sanitize} service.  To utilize this functionality, ensure that `$sanitize`\n * is available, for example, by including {@link ngSanitize} in your module's dependencies (not in\n * core Angular). In order to use {@link ngSanitize} in your module's dependencies, you need to\n * include \"angular-sanitize.js\" in your application.\n *\n * You may also bypass sanitization for values you know are safe. To do so, bind to\n * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example\n * under {@link ng.$sce#Example Strict Contextual Escaping (SCE)}.\n *\n * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you\n * will have an exception (instead of an exploit.)\n *\n * @element ANY\n * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.\n *\n * @example\n\n   <example module=\"bindHtmlExample\" deps=\"angular-sanitize.js\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n        <p ng-bind-html=\"myHTML\"></p>\n       </div>\n     </file>\n\n     <file name=\"script.js\">\n       angular.module('bindHtmlExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.myHTML =\n              'I am an <code>HTML</code>string with ' +\n              '<a href=\"#\">links!</a> and other <em>stuff</em>';\n         }]);\n     </file>\n\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-bind-html', function() {\n         expect(element(by.binding('myHTML')).getText()).toBe(\n             'I am an HTMLstring with links! and other stuff');\n       });\n     </file>\n   </example>\n */\nvar ngBindHtmlDirective = ['$sce', '$parse', function($sce, $parse) {\n  return {\n    compile: function (tElement) {\n      tElement.addClass('ng-binding');\n\n      return function (scope, element, attr) {\n        element.data('$binding', attr.ngBindHtml);\n\n        var parsed = $parse(attr.ngBindHtml);\n\n        function getStringValue() {\n          return (parsed(scope) || '').toString();\n        }\n\n        scope.$watch(getStringValue, function ngBindHtmlWatchAction(value) {\n          element.html($sce.getTrustedHtml(parsed(scope)) || '');\n        });\n      };\n    }\n  };\n}];\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  return ['$animate', function($animate) {\n    return {\n      restrict: 'AC',\n      link: function(scope, element, attr) {\n        var oldVal;\n\n        scope.$watch(attr[name], ngClassWatchAction, true);\n\n        attr.$observe('class', function(value) {\n          ngClassWatchAction(scope.$eval(attr[name]));\n        });\n\n\n        if (name !== 'ngClass') {\n          scope.$watch('$index', function($index, old$index) {\n            // jshint bitwise: false\n            var mod = $index & 1;\n            if (mod !== (old$index & 1)) {\n              var classes = arrayClasses(scope.$eval(attr[name]));\n              mod === selector ?\n                addClasses(classes) :\n                removeClasses(classes);\n            }\n          });\n        }\n\n        function addClasses(classes) {\n          var newClasses = digestClassCounts(classes, 1);\n          attr.$addClass(newClasses);\n        }\n\n        function removeClasses(classes) {\n          var newClasses = digestClassCounts(classes, -1);\n          attr.$removeClass(newClasses);\n        }\n\n        function digestClassCounts (classes, count) {\n          var classCounts = element.data('$classCounts') || {};\n          var classesToUpdate = [];\n          forEach(classes, function (className) {\n            if (count > 0 || classCounts[className]) {\n              classCounts[className] = (classCounts[className] || 0) + count;\n              if (classCounts[className] === +(count > 0)) {\n                classesToUpdate.push(className);\n              }\n            }\n          });\n          element.data('$classCounts', classCounts);\n          return classesToUpdate.join(' ');\n        }\n\n        function updateClasses (oldClasses, newClasses) {\n          var toAdd = arrayDifference(newClasses, oldClasses);\n          var toRemove = arrayDifference(oldClasses, newClasses);\n          toRemove = digestClassCounts(toRemove, -1);\n          toAdd = digestClassCounts(toAdd, 1);\n\n          if (toAdd.length === 0) {\n            $animate.removeClass(element, toRemove);\n          } else if (toRemove.length === 0) {\n            $animate.addClass(element, toAdd);\n          } else {\n            $animate.setClass(element, toAdd, toRemove);\n          }\n        }\n\n        function ngClassWatchAction(newVal) {\n          if (selector === true || scope.$index % 2 === selector) {\n            var newClasses = arrayClasses(newVal || []);\n            if (!oldVal) {\n              addClasses(newClasses);\n            } else if (!equals(newVal,oldVal)) {\n              var oldClasses = arrayClasses(oldVal);\n              updateClasses(oldClasses, newClasses);\n            }\n          }\n          oldVal = shallowCopy(newVal);\n        }\n      }\n    };\n\n    function arrayDifference(tokens1, tokens2) {\n      var values = [];\n\n      outer:\n      for(var i = 0; i < tokens1.length; i++) {\n        var token = tokens1[i];\n        for(var j = 0; j < tokens2.length; j++) {\n          if(token == tokens2[j]) continue outer;\n        }\n        values.push(token);\n      }\n      return values;\n    }\n\n    function arrayClasses (classVal) {\n      if (isArray(classVal)) {\n        return classVal;\n      } else if (isString(classVal)) {\n        return classVal.split(' ');\n      } else if (isObject(classVal)) {\n        var classes = [], i = 0;\n        forEach(classVal, function(v, k) {\n          if (v) {\n            classes = classes.concat(k.split(' '));\n          }\n        });\n        return classes;\n      }\n      return classVal;\n    }\n  }];\n}\n\n/**\n * @ngdoc directive\n * @name ngClass\n * @restrict AC\n *\n * @description\n * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding\n * an expression that represents all classes to be added.\n *\n * The directive operates in three different ways, depending on which of three types the expression\n * evaluates to:\n *\n * 1. If the expression evaluates to a string, the string should be one or more space-delimited class\n * names.\n *\n * 2. If the expression evaluates to an array, each element of the array should be a string that is\n * one or more space-delimited class names.\n *\n * 3. If the expression evaluates to an object, then for each key-value pair of the\n * object with a truthy value the corresponding key is used as a class name.\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then the\n * new classes are added.\n *\n * @animations\n * add - happens just before the class is applied to the element\n * remove - happens just before the class is removed from the element\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values. In the case of a map, the\n *   names of the properties whose values are truthy will be added as css classes to the\n *   element.\n *\n * @example Example that demonstrates basic bindings via ngClass directive.\n   <example>\n     <file name=\"index.html\">\n       <p ng-class=\"{strike: deleted, bold: important, red: error}\">Map Syntax Example</p>\n       <input type=\"checkbox\" ng-model=\"deleted\"> deleted (apply \"strike\" class)<br>\n       <input type=\"checkbox\" ng-model=\"important\"> important (apply \"bold\" class)<br>\n       <input type=\"checkbox\" ng-model=\"error\"> error (apply \"red\" class)\n       <hr>\n       <p ng-class=\"style\">Using String Syntax</p>\n       <input type=\"text\" ng-model=\"style\" placeholder=\"Type: bold strike red\">\n       <hr>\n       <p ng-class=\"[style1, style2, style3]\">Using Array Syntax</p>\n       <input ng-model=\"style1\" placeholder=\"Type: bold, strike or red\"><br>\n       <input ng-model=\"style2\" placeholder=\"Type: bold, strike or red\"><br>\n       <input ng-model=\"style3\" placeholder=\"Type: bold, strike or red\"><br>\n     </file>\n     <file name=\"style.css\">\n       .strike {\n         text-decoration: line-through;\n       }\n       .bold {\n           font-weight: bold;\n       }\n       .red {\n           color: red;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var ps = element.all(by.css('p'));\n\n       it('should let you toggle the class', function() {\n\n         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);\n         expect(ps.first().getAttribute('class')).not.toMatch(/red/);\n\n         element(by.model('important')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/bold/);\n\n         element(by.model('error')).click();\n         expect(ps.first().getAttribute('class')).toMatch(/red/);\n       });\n\n       it('should let you toggle string example', function() {\n         expect(ps.get(1).getAttribute('class')).toBe('');\n         element(by.model('style')).clear();\n         element(by.model('style')).sendKeys('red');\n         expect(ps.get(1).getAttribute('class')).toBe('red');\n       });\n\n       it('array example should have 3 classes', function() {\n         expect(ps.last().getAttribute('class')).toBe('');\n         element(by.model('style1')).sendKeys('bold');\n         element(by.model('style2')).sendKeys('strike');\n         element(by.model('style3')).sendKeys('red');\n         expect(ps.last().getAttribute('class')).toBe('bold strike red');\n       });\n     </file>\n   </example>\n\n   ## Animations\n\n   The example below demonstrates how to perform animations using ngClass.\n\n   <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n     <file name=\"index.html\">\n      <input id=\"setbtn\" type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input id=\"clearbtn\" type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span class=\"base-class\" ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .base-class {\n         -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n       }\n\n       .base-class.my-class {\n         color: red;\n         font-size:3em;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class', function() {\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n\n         element(by.id('setbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).\n           toMatch(/my-class/);\n\n         element(by.id('clearbtn')).click();\n\n         expect(element(by.css('.base-class')).getAttribute('class')).not.\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n\n\n   ## ngClass and pre-existing CSS3 Transitions/Animations\n   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.\n   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder\n   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure\n   to view the step by step details of {@link ngAnimate.$animate#addclass $animate.addClass} and\n   {@link ngAnimate.$animate#removeclass $animate.removeClass}.\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ngClassOdd\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ngClassEven\n * @restrict AC\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except they work in\n * conjunction with `ngRepeat` and take effect only on odd (even) rows.\n *\n * This directive can be applied only within the scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).\n           toMatch(/odd/);\n         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ngCloak\n * @restrict AC\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but the preferred usage is to apply\n * multiple `ngCloak` directives to small portions of the page to permit progressive rendering\n * of the browser view.\n *\n * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and\n * `angular.min.js`.\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```css\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none !important;\n * }\n * ```\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ngCloak` directive are hidden. When Angular encounters this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, making\n * the compiled element visible.\n *\n * For the best result, the `angular.js` script must be loaded in the head section of the html\n * document; alternatively, the css rule above must be included in the external stylesheet of the\n * application.\n *\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n * class `ng-cloak` in addition to the `ngCloak` directive as shown in the example below.\n *\n * @element ANY\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should remove the template directive and css class', function() {\n         expect($('#template1').getAttribute('ng-cloak')).\n           toBeNull();\n         expect($('#template2').getAttribute('ng-cloak')).\n           toBeNull();\n       });\n     </file>\n   </example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngController\n *\n * @description\n * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties\n *   are accessed through bindings.\n * * View — The template (HTML with data bindings) that is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class contains business\n *   logic behind the application to decorate the scope with functions and values\n *\n * Note that you can also attach controllers to the DOM by declaring it in a route definition\n * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller\n * again using `ng-controller` in the template itself.  This will cause the controller to be attached\n * and executed twice.\n *\n * @element ANY\n * @scope\n * @priority 500\n * @param {expression} ngController Name of a globally accessible constructor function or an\n *     {@link guide/expression expression} that on the current scope evaluates to a\n *     constructor function. The controller instance can be published into a scope property\n *     by specifying `as propertyName`.\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the controller (see source tab). These methods can\n * easily be called from the angular markup. Any changes to the data are automatically reflected\n * in the View without the need for a manual update.\n *\n * Two different declaration styles are included below:\n *\n * * one binds methods and properties directly onto the controller using `this`:\n * `ng-controller=\"SettingsController1 as settings\"`\n * * one injects `$scope` into the controller:\n * `ng-controller=\"SettingsController2\"`\n *\n * The second option is more common in the Angular community, and is generally used in boilerplates\n * and in this guide. However, there are advantages to binding properties directly to the controller\n * and avoiding scope.\n *\n * * Using `controller as` makes it obvious which controller you are accessing in the template when\n * multiple controllers apply to an element.\n * * If you are writing your controllers as classes you have easier access to the properties and\n * methods, which will appear on the scope, from inside the controller code.\n * * Since there is always a `.` in the bindings, you don't have to worry about prototypal\n * inheritance masking primitives.\n *\n * This example demonstrates the `controller as` syntax.\n *\n * <example name=\"ngControllerAs\" module=\"controllerAsExample\">\n *   <file name=\"index.html\">\n *    <div id=\"ctrl-as-exmpl\" ng-controller=\"SettingsController1 as settings\">\n *      Name: <input type=\"text\" ng-model=\"settings.name\"/>\n *      [ <a href=\"\" ng-click=\"settings.greet()\">greet</a> ]<br/>\n *      Contact:\n *      <ul>\n *        <li ng-repeat=\"contact in settings.contacts\">\n *          <select ng-model=\"contact.type\">\n *             <option>phone</option>\n *             <option>email</option>\n *          </select>\n *          <input type=\"text\" ng-model=\"contact.value\"/>\n *          [ <a href=\"\" ng-click=\"settings.clearContact(contact)\">clear</a>\n *          | <a href=\"\" ng-click=\"settings.removeContact(contact)\">X</a> ]\n *        </li>\n *        <li>[ <a href=\"\" ng-click=\"settings.addContact()\">add</a> ]</li>\n *     </ul>\n *    </div>\n *   </file>\n *   <file name=\"app.js\">\n *    angular.module('controllerAsExample', [])\n *      .controller('SettingsController1', SettingsController1);\n *\n *    function SettingsController1() {\n *      this.name = \"John Smith\";\n *      this.contacts = [\n *        {type: 'phone', value: '408 555 1212'},\n *        {type: 'email', value: 'john.smith@example.org'} ];\n *    }\n *\n *    SettingsController1.prototype.greet = function() {\n *      alert(this.name);\n *    };\n *\n *    SettingsController1.prototype.addContact = function() {\n *      this.contacts.push({type: 'email', value: 'yourname@example.org'});\n *    };\n *\n *    SettingsController1.prototype.removeContact = function(contactToRemove) {\n *     var index = this.contacts.indexOf(contactToRemove);\n *      this.contacts.splice(index, 1);\n *    };\n *\n *    SettingsController1.prototype.clearContact = function(contact) {\n *      contact.type = 'phone';\n *      contact.value = '';\n *    };\n *   </file>\n *   <file name=\"protractor.js\" type=\"protractor\">\n *     it('should check controller as', function() {\n *       var container = element(by.id('ctrl-as-exmpl'));\n *         expect(container.element(by.model('settings.name'))\n *           .getAttribute('value')).toBe('John Smith');\n *\n *       var firstRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(0));\n *       var secondRepeat =\n *           container.element(by.repeater('contact in settings.contacts').row(1));\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('408 555 1212');\n *\n *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('john.smith@example.org');\n *\n *       firstRepeat.element(by.linkText('clear')).click();\n *\n *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *           .toBe('');\n *\n *       container.element(by.linkText('add')).click();\n *\n *       expect(container.element(by.repeater('contact in settings.contacts').row(2))\n *           .element(by.model('contact.value'))\n *           .getAttribute('value'))\n *           .toBe('yourname@example.org');\n *     });\n *   </file>\n * </example>\n *\n * This example demonstrates the \"attach to `$scope`\" style of controller.\n *\n * <example name=\"ngController\" module=\"controllerExample\">\n *  <file name=\"index.html\">\n *   <div id=\"ctrl-exmpl\" ng-controller=\"SettingsController2\">\n *     Name: <input type=\"text\" ng-model=\"name\"/>\n *     [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n *     Contact:\n *     <ul>\n *       <li ng-repeat=\"contact in contacts\">\n *         <select ng-model=\"contact.type\">\n *            <option>phone</option>\n *            <option>email</option>\n *         </select>\n *         <input type=\"text\" ng-model=\"contact.value\"/>\n *         [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n *         | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n *       </li>\n *       <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n *    </ul>\n *   </div>\n *  </file>\n *  <file name=\"app.js\">\n *   angular.module('controllerExample', [])\n *     .controller('SettingsController2', ['$scope', SettingsController2]);\n *\n *   function SettingsController2($scope) {\n *     $scope.name = \"John Smith\";\n *     $scope.contacts = [\n *       {type:'phone', value:'408 555 1212'},\n *       {type:'email', value:'john.smith@example.org'} ];\n *\n *     $scope.greet = function() {\n *       alert($scope.name);\n *     };\n *\n *     $scope.addContact = function() {\n *       $scope.contacts.push({type:'email', value:'yourname@example.org'});\n *     };\n *\n *     $scope.removeContact = function(contactToRemove) {\n *       var index = $scope.contacts.indexOf(contactToRemove);\n *       $scope.contacts.splice(index, 1);\n *     };\n *\n *     $scope.clearContact = function(contact) {\n *       contact.type = 'phone';\n *       contact.value = '';\n *     };\n *   }\n *  </file>\n *  <file name=\"protractor.js\" type=\"protractor\">\n *    it('should check controller', function() {\n *      var container = element(by.id('ctrl-exmpl'));\n *\n *      expect(container.element(by.model('name'))\n *          .getAttribute('value')).toBe('John Smith');\n *\n *      var firstRepeat =\n *          container.element(by.repeater('contact in contacts').row(0));\n *      var secondRepeat =\n *          container.element(by.repeater('contact in contacts').row(1));\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('408 555 1212');\n *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('john.smith@example.org');\n *\n *      firstRepeat.element(by.linkText('clear')).click();\n *\n *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))\n *          .toBe('');\n *\n *      container.element(by.linkText('add')).click();\n *\n *      expect(container.element(by.repeater('contact in contacts').row(2))\n *          .element(by.model('contact.value'))\n *          .getAttribute('value'))\n *          .toBe('yourname@example.org');\n *    });\n *  </file>\n *</example>\n\n */\nvar ngControllerDirective = [function() {\n  return {\n    scope: true,\n    controller: '@',\n    priority: 500\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngCsp\n *\n * @element html\n * @description\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n *\n * This is necessary when developing things like Google Chrome Extensions.\n *\n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n * For Angular to be CSP compatible there are only two things that we need to do differently:\n *\n * - don't use `Function` constructor to generate optimized value getters\n * - don't inject custom stylesheet into the document\n *\n * AngularJS uses `Function(string)` generated functions as a speed optimization. Applying the `ngCsp`\n * directive will cause Angular to use CSP compatibility mode. When this mode is on AngularJS will\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n * be raised.\n *\n * CSP forbids JavaScript to inline stylesheet rules. In non CSP mode Angular automatically\n * includes some CSS rules (e.g. {@link ng.directive:ngCloak ngCloak}).\n * To make those directives work in CSP mode, include the `angular-csp.css` manually.\n *\n * Angular tries to autodetect if CSP is active and automatically turn on the CSP-safe mode. This\n * autodetection however triggers a CSP error to be logged in the console:\n *\n * ```\n * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\n * script in the following Content Security Policy directive: \"default-src 'self'\". Note that\n * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n * ```\n *\n * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\n * directive on the root element of the application or on the `angular.js` script tag, whichever\n * appears first in the html document.\n *\n * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\n *\n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   ```html\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   ```\n */\n\n// ngCsp is not implemented as a proper directive any more, because we need it be processed while we\n// bootstrap the system (before $parse is instantiated), for this reason we just have\n// the csp.isActive() fn that looks for ng-csp attribute anywhere in the current doc\n\n/**\n * @ngdoc directive\n * @name ngClick\n *\n * @description\n * The ngClick directive allows you to specify custom behavior when\n * an element is clicked.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      <span>\n        count: {{count}}\n      <span>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-click', function() {\n         expect(element(by.binding('count')).getText()).toMatch('0');\n         element(by.css('button')).click();\n         expect(element(by.binding('count')).getText()).toMatch('1');\n       });\n     </file>\n   </example>\n */\n/*\n * A collection of directives that allows creation of custom event handlers that are defined as\n * angular expressions and are compiled and executed within the current scope.\n */\nvar ngEventDirectives = {};\n\n// For events that might fire synchronously during DOM manipulation\n// we need to execute their event handlers asynchronously using $evalAsync,\n// so that they are not executed in an inconsistent state.\nvar forceAsyncEvents = {\n  'blur': true,\n  'focus': true\n};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),\n  function(eventName) {\n    var directiveName = directiveNormalize('ng-' + eventName);\n    ngEventDirectives[directiveName] = ['$parse', '$rootScope', function($parse, $rootScope) {\n      return {\n        compile: function($element, attr) {\n          // We expose the powerful $event object on the scope that provides access to the Window,\n          // etc. that isn't protected by the fast paths in $parse.  We explicitly request better\n          // checks at the cost of speed since event handler expressions are not executed as\n          // frequently as regular change detection.\n          var fn = $parse(attr[directiveName], /* expensiveChecks */ true);\n          return function ngEventHandler(scope, element) {\n            element.on(eventName, function(event) {\n              var callback = function() {\n                fn(scope, {$event:event});\n              };\n              if (forceAsyncEvents[eventName] && $rootScope.$$phase) {\n                scope.$evalAsync(callback);\n              } else {\n                scope.$apply(callback);\n              }\n            });\n          };\n        }\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * a dblclick. (The Event object is available as `$event`)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-dblclick=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on double click)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mousedown=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse down)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseup=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (on mouse up)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseover=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse is over)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseenter=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse enters)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mouseleave=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse leaves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <button ng-mousemove=\"count = count + 1\" ng-init=\"count=0\">\n        Increment (when mouse moves)\n      </button>\n      count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeydown\n *\n * @description\n * Specify custom behavior on keydown event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-keydown=\"count = count + 1\" ng-init=\"count=0\">\n      key down count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeyup\n *\n * @description\n * Specify custom behavior on keyup event.\n *\n * @element ANY\n * @priority 0\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n       <p>Typing in the input box below updates the key count</p>\n       <input ng-keyup=\"count = count + 1\" ng-init=\"count=0\"> key up count: {{count}}\n\n       <p>Typing in the input box below updates the keycode</p>\n       <input ng-keyup=\"event=$event\">\n       <p>event keyCode: {{ event.keyCode }}</p>\n       <p>event altKey: {{ event.altKey }}</p>\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngKeypress\n *\n * @description\n * Specify custom behavior on keypress event.\n *\n * @element ANY\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n * keypress. ({@link guide/expression#-event- Event object is available as `$event`}\n * and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-keypress=\"count = count + 1\" ng-init=\"count=0\">\n      key press count: {{count}}\n     </file>\n   </example>\n */\n\n\n/**\n * @ngdoc directive\n * @name ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page), but only if the form does not contain `action`,\n * `data-action`, or `x-action` attributes.\n *\n * <div class=\"alert alert-warning\">\n * **Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n * `ngSubmit` handlers together. See the\n * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\n * for a detailed discussion of when `ngSubmit` may be triggered.\n * </div>\n *\n * @element form\n * @priority 0\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval.\n * ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example module=\"submitExample\">\n     <file name=\"index.html\">\n      <script>\n        angular.module('submitExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.list = [];\n            $scope.text = 'hello';\n            $scope.submit = function() {\n              if ($scope.text) {\n                $scope.list.push(this.text);\n                $scope.text = '';\n              }\n            };\n          }]);\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-submit', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n         expect(element(by.model('text')).getAttribute('value')).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(element(by.binding('list')).getText()).toBe('list=[]');\n         element(by.css('#submit')).click();\n         element(by.css('#submit')).click();\n         expect(element(by.binding('list')).getText()).toContain('hello');\n        });\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngFocus\n *\n * @description\n * Specify custom behavior on focus event.\n *\n * Note: As the `focus` event is executed synchronously when calling `input.focus()`\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon\n * focus. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngBlur\n *\n * @description\n * Specify custom behavior on blur event.\n *\n * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when\n * an element has lost focus.\n *\n * Note: As the `blur` event is executed synchronously also during DOM manipulations\n * (e.g. removing a focussed input),\n * AngularJS executes the expression using `scope.$evalAsync` if the event is fired\n * during an `$apply` to ensure a consistent state.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon\n * blur. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ngCopy\n *\n * @description\n * Specify custom behavior on copy event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon\n * copy. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-copy=\"copied=true\" ng-init=\"copied=false; value='copy me'\" ng-model=\"value\">\n      copied: {{copied}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngCut\n *\n * @description\n * Specify custom behavior on cut event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon\n * cut. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-cut=\"cut=true\" ng-init=\"cut=false; value='cut me'\" ng-model=\"value\">\n      cut: {{cut}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngPaste\n *\n * @description\n * Specify custom behavior on paste event.\n *\n * @element window, input, select, textarea, a\n * @priority 0\n * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon\n * paste. ({@link guide/expression#-event- Event object is available as `$event`})\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input ng-paste=\"paste=true\" ng-init=\"paste=false\" placeholder='paste here'>\n      pasted: {{paste}}\n     </file>\n   </example>\n */\n\n/**\n * @ngdoc directive\n * @name ngIf\n * @restrict A\n *\n * @description\n * The `ngIf` directive removes or recreates a portion of the DOM tree based on an\n * {expression}. If the expression assigned to `ngIf` evaluates to a false\n * value then the element is removed from the DOM, otherwise a clone of the\n * element is reinserted into the DOM.\n *\n * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the\n * element in the DOM rather than changing its visibility via the `display` css property.  A common\n * case when this difference is significant is when using css selectors that rely on an element's\n * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.\n *\n * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope\n * is created when the element is restored.  The scope created within `ngIf` inherits from\n * its parent scope using\n * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).\n * An important implication of this is if `ngModel` is used within `ngIf` to bind to\n * a javascript primitive defined in the parent scope. In this case any modifications made to the\n * variable within the child scope will override (hide) the value in the parent scope.\n *\n * Also, `ngIf` recreates elements using their compiled state. An example of this behavior\n * is if an element's class attribute is directly modified after it's compiled, using something like\n * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element\n * the added class will be lost because the original compiled state is used to regenerate the element.\n *\n * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`\n * and `leave` effects.\n *\n * @animations\n * enter - happens just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container\n * leave - happens just before the `ngIf` contents are removed from the DOM\n *\n * @element ANY\n * @scope\n * @priority 600\n * @param {expression} ngIf If the {@link guide/expression expression} is falsy then\n *     the element is removed from the DOM tree. If it is truthy a copy of the compiled\n *     element is added to the DOM tree.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\" ng-init=\"checked=true\" /><br/>\n      Show when checked:\n      <span ng-if=\"checked\" class=\"animate-if\">\n        I'm removed when the checkbox is unchecked.\n      </span>\n    </file>\n    <file name=\"animations.css\">\n      .animate-if {\n        background:white;\n        border:1px solid black;\n        padding:10px;\n      }\n\n      .animate-if.ng-enter, .animate-if.ng-leave {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n      }\n\n      .animate-if.ng-enter,\n      .animate-if.ng-leave.ng-leave-active {\n        opacity:0;\n      }\n\n      .animate-if.ng-leave,\n      .animate-if.ng-enter.ng-enter-active {\n        opacity:1;\n      }\n    </file>\n  </example>\n */\nvar ngIfDirective = ['$animate', function($animate) {\n  return {\n    transclude: 'element',\n    priority: 600,\n    terminal: true,\n    restrict: 'A',\n    $$tlb: true,\n    link: function ($scope, $element, $attr, ctrl, $transclude) {\n        var block, childScope, previousElements;\n        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {\n\n          if (toBoolean(value)) {\n            if (!childScope) {\n              childScope = $scope.$new();\n              $transclude(childScope, function (clone) {\n                clone[clone.length++] = document.createComment(' end ngIf: ' + $attr.ngIf + ' ');\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block = {\n                  clone: clone\n                };\n                $animate.enter(clone, $element.parent(), $element);\n              });\n            }\n          } else {\n            if(previousElements) {\n              previousElements.remove();\n              previousElements = null;\n            }\n            if(childScope) {\n              childScope.$destroy();\n              childScope = null;\n            }\n            if(block) {\n              previousElements = getBlockElements(block.clone);\n              $animate.leave(previousElements, function() {\n                previousElements = null;\n              });\n              block = null;\n            }\n          }\n        });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * By default, the template URL is restricted to the same domain and protocol as the\n * application document. This is done by calling {@link ng.$sce#getTrustedResourceUrl\n * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\n * you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n * [wrap them](ng.$sce#trustAsResourceUrl) as trusted values. Refer to Angular's {@link\n * ng.$sce Strict Contextual Escaping}.\n *\n * In addition, the browser's\n * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\n * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\n * policy may further restrict whether the template is successfully loaded.\n * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\n * access on some browsers.\n *\n * @animations\n * enter - animation is used to bring new content into the browser.\n * leave - animation is used to animate existing content away.\n *\n * The enter and leave animation occur concurrently.\n *\n * @scope\n * @priority 400\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <code>{{template.url}}</code>\n       <hr/>\n       <div class=\"slide-animate-container\">\n         <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n       </div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('includeExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.templates =\n            [ { name: 'template1.html', url: 'template1.html'},\n              { name: 'template2.html', url: 'template2.html'} ];\n          $scope.template = $scope.templates[0];\n        }]);\n     </file>\n    <file name=\"template1.html\">\n      Content of template1.html\n    </file>\n    <file name=\"template2.html\">\n      Content of template2.html\n    </file>\n    <file name=\"animations.css\">\n      .slide-animate-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .slide-animate {\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter, .slide-animate.ng-leave {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        display:block;\n        padding:10px;\n      }\n\n      .slide-animate.ng-enter {\n        top:-50px;\n      }\n      .slide-animate.ng-enter.ng-enter-active {\n        top:0;\n      }\n\n      .slide-animate.ng-leave {\n        top:0;\n      }\n      .slide-animate.ng-leave.ng-leave-active {\n        top:50px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var templateSelect = element(by.model('template'));\n      var includeElem = element(by.css('[ng-include]'));\n\n      it('should load template1.html', function() {\n        expect(includeElem.getText()).toMatch(/Content of template1.html/);\n      });\n\n      it('should load template2.html', function() {\n        if (browser.params.browser == 'firefox') {\n          // Firefox can't handle using selects\n          // See https://github.com/angular/protractor/issues/480\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(2).click();\n        expect(includeElem.getText()).toMatch(/Content of template2.html/);\n      });\n\n      it('should change to blank', function() {\n        if (browser.params.browser == 'firefox') {\n          // Firefox can't handle using selects\n          return;\n        }\n        templateSelect.click();\n        templateSelect.all(by.css('option')).get(0).click();\n        expect(includeElem.isPresent()).toBe(false);\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentRequested\n * @eventType emit on the scope ngInclude was declared in\n * @description\n * Emitted every time the ngInclude content is requested.\n */\n\n\n/**\n * @ngdoc event\n * @name ngInclude#$includeContentLoaded\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n */\nvar ngIncludeDirective = ['$http', '$templateCache', '$anchorScroll', '$animate', '$sce',\n                  function($http,   $templateCache,   $anchorScroll,   $animate,   $sce) {\n  return {\n    restrict: 'ECA',\n    priority: 400,\n    terminal: true,\n    transclude: 'element',\n    controller: angular.noop,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, $element, $attr, ctrl, $transclude) {\n        var changeCounter = 0,\n            currentScope,\n            previousElement,\n            currentElement;\n\n        var cleanupLastIncludeContent = function() {\n          if(previousElement) {\n            previousElement.remove();\n            previousElement = null;\n          }\n          if(currentScope) {\n            currentScope.$destroy();\n            currentScope = null;\n          }\n          if(currentElement) {\n            $animate.leave(currentElement, function() {\n              previousElement = null;\n            });\n            previousElement = currentElement;\n            currentElement = null;\n          }\n        };\n\n        scope.$watch($sce.parseAsResourceUrl(srcExp), function ngIncludeWatchAction(src) {\n          var afterAnimation = function() {\n            if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n              $anchorScroll();\n            }\n          };\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            $http.get(src, {cache: $templateCache}).success(function(response) {\n              if (thisChangeId !== changeCounter) return;\n              var newScope = scope.$new();\n              ctrl.template = response;\n\n              // Note: This will also link all children of ng-include that were contained in the original\n              // html. If that content contains controllers, ... they could pollute/change the scope.\n              // However, using ng-include on an element with additional content does not make sense...\n              // Note: We can't remove them in the cloneAttchFn of $transclude as that\n              // function is called before linking the content, which would apply child\n              // directives to non existing elements.\n              var clone = $transclude(newScope, function(clone) {\n                cleanupLastIncludeContent();\n                $animate.enter(clone, null, $element, afterAnimation);\n              });\n\n              currentScope = newScope;\n              currentElement = clone;\n\n              currentScope.$emit('$includeContentLoaded');\n              scope.$eval(onloadExp);\n            }).error(function() {\n              if (thisChangeId === changeCounter) cleanupLastIncludeContent();\n            });\n            scope.$emit('$includeContentRequested');\n          } else {\n            cleanupLastIncludeContent();\n            ctrl.template = null;\n          }\n        });\n      };\n    }\n  };\n}];\n\n// This directive is called during the $transclude call of the first `ngInclude` directive.\n// It will replace and compile the content of the element with the loaded template.\n// We need this directive so that the element content is already filled when\n// the link function of another directive on the same element as ngInclude\n// is called.\nvar ngIncludeFillContentDirective = ['$compile',\n  function($compile) {\n    return {\n      restrict: 'ECA',\n      priority: -400,\n      require: 'ngInclude',\n      link: function(scope, $element, $attr, ctrl) {\n        $element.html(ctrl.template);\n        $compile($element.contents())(scope);\n      }\n    };\n  }];\n\n/**\n * @ngdoc directive\n * @name ngInit\n * @restrict AC\n *\n * @description\n * The `ngInit` directive allows you to evaluate an expression in the\n * current scope.\n *\n * <div class=\"alert alert-error\">\n * The only appropriate use of `ngInit` is for aliasing special properties of\n * {@link ng.directive:ngRepeat `ngRepeat`}, as seen in the demo below. Besides this case, you\n * should use {@link guide/controller controllers} rather than `ngInit`\n * to initialize values on a scope.\n * </div>\n * <div class=\"alert alert-warning\">\n * **Note**: If you have assignment in `ngInit` along with {@link ng.$filter `$filter`}, make\n * sure you have parenthesis for correct precedence:\n * <pre class=\"prettyprint\">\n *   <div ng-init=\"test1 = (data | orderBy:'name')\"></div>\n * </pre>\n * </div>\n *\n * @priority 450\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <example module=\"initExample\">\n     <file name=\"index.html\">\n   <script>\n     angular.module('initExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.list = [['a', 'b'], ['c', 'd']];\n       }]);\n   </script>\n   <div ng-controller=\"ExampleController\">\n     <div ng-repeat=\"innerList in list\" ng-init=\"outerIndex = $index\">\n       <div ng-repeat=\"value in innerList\" ng-init=\"innerIndex = $index\">\n          <span class=\"example-init\">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n       </div>\n     </div>\n   </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should alias index positions', function() {\n         var elements = element.all(by.css('.example-init'));\n         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');\n         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');\n         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');\n         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');\n       });\n     </file>\n   </example>\n */\nvar ngInitDirective = ngDirective({\n  priority: 450,\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ngNonBindable\n * @restrict AC\n * @priority 1000\n *\n * @description\n * The `ngNonBindable` directive tells Angular not to compile or bind the contents of the current\n * DOM element. This is useful if the element contains what appears to be Angular directives and\n * bindings but which should be ignored by Angular. This could be the case if you have a site that\n * displays snippets of code, for instance.\n *\n * @element ANY\n *\n * @example\n * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,\n * but the one wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <example>\n      <file name=\"index.html\">\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n       it('should check ng-non-bindable', function() {\n         expect(element(by.binding('1 + 2')).getText()).toContain('3');\n         expect(element.all(by.css('div')).last().getText()).toMatch(/1 \\+ 2/);\n       });\n      </file>\n    </example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/**\n * @ngdoc directive\n * @name ngPluralize\n * @restrict EA\n *\n * @description\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js, but can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\n * in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a plural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. There are examples of plural categories\n * and explicit number rules throughout the rest of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object.\n *\n * The following example shows how to configure ngPluralize:\n *\n * ```html\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *```\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * ```html\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * ```\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bound to.\n * @param {string} when The mapping between plural category to its corresponding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <example module=\"pluralizeExample\">\n      <file name=\"index.html\">\n        <script>\n          angular.module('pluralizeExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.person1 = 'Igor';\n              $scope.person2 = 'Misko';\n              $scope.personCount = 1;\n            }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should show correct pluralized string', function() {\n          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var countInput = element(by.model('personCount'));\n\n          expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n          expect(withOffset.getText()).toEqual('Igor is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('0');\n\n          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n          expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('2');\n\n          expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('3');\n\n          expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\n          countInput.clear();\n          countInput.sendKeys('4');\n\n          expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n        });\n        it('should show data-bound names', function() {\n          var withOffset = element.all(by.css('ng-pluralize')).get(1);\n          var personCount = element(by.model('personCount'));\n          var person1 = element(by.model('person1'));\n          var person2 = element(by.model('person2'));\n          personCount.clear();\n          personCount.sendKeys('4');\n          person1.clear();\n          person1.sendKeys('Di');\n          person2.clear();\n          person2.sendKeys('Vojta');\n          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n        });\n      </file>\n    </example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n  var BRACE = /{}/g;\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp) || {},\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol(),\n          isWhen = /^when(Minus)?(.+)$/;\n\n      forEach(attr, function(expression, attributeName) {\n        if (isWhen.test(attributeName)) {\n          whens[lowercase(attributeName.replace('when', '').replace('Minus', '-'))] =\n            element.attr(attr.$attr[attributeName]);\n        }\n      });\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] =\n          $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' +\n            offset + endSymbol));\n      });\n\n      scope.$watch(function ngPluralizeWatch() {\n        var value = parseFloat(scope.$eval(numberExp));\n\n        if (!isNaN(value)) {\n          //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,\n          //check it against pluralization rules in $locale service\n          if (!(value in whens)) value = $locale.pluralCat(value - offset);\n           return whensExpFns[value](scope, element, true);\n        } else {\n          return '';\n        }\n      }, function ngPluralizeWatchAction(newVal) {\n        element.text(newVal);\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngRepeat\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n * | Variable  | Type            | Details                                                                     |\n * |-----------|-----------------|-----------------------------------------------------------------------------|\n * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |\n * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |\n * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |\n * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |\n * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |\n * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |\n *\n * Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.\n * This may be useful when, for instance, nesting ngRepeats.\n *\n * # Special repeat start and end points\n * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending\n * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.\n * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)\n * up to and including the ending HTML tag where **ng-repeat-end** is placed.\n *\n * The example below makes use of this feature:\n * ```html\n *   <header ng-repeat-start=\"item in items\">\n *     Header {{ item }}\n *   </header>\n *   <div class=\"body\">\n *     Body {{ item }}\n *   </div>\n *   <footer ng-repeat-end>\n *     Footer {{ item }}\n *   </footer>\n * ```\n *\n * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:\n * ```html\n *   <header>\n *     Header A\n *   </header>\n *   <div class=\"body\">\n *     Body A\n *   </div>\n *   <footer>\n *     Footer A\n *   </footer>\n *   <header>\n *     Header B\n *   </header>\n *   <div class=\"body\">\n *     Body B\n *   </div>\n *   <footer>\n *     Footer B\n *   </footer>\n * ```\n *\n * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such\n * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).\n *\n * @animations\n * **.enter** - when a new item is added to the list or when an item is revealed after a filter\n *\n * **.leave** - when an item is removed from the list or when an item is filtered out\n *\n * **.move** - when an adjacent item is filtered out causing a reorder or when the item contents are reordered\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `album in artist.albums`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking function\n *     which can be used to associate the objects in the collection with the DOM elements. If no tracking function\n *     is specified the ng-repeat associates elements by identity in the collection. It is an error to have\n *     more than one tracking function to resolve to the same key. (This would mean that two distinct objects are\n *     mapped to the same DOM element, which is not possible.)  Filters should be applied to the expression,\n *     before specifying a tracking expression.\n *\n *     For example: `item in items` is equivalent to `item in items track by $id(item)`. This implies that the DOM elements\n *     will be associated by item identity in the array.\n *\n *     For example: `item in items track by $id(item)`. A built in `$id()` function can be used to assign a unique\n *     `$$hashKey` property to each item in the array. This property is then used as a key to associated DOM elements\n *     with the corresponding item in the array by identity. Moving the same object in array would move the DOM\n *     element in the same way in the DOM.\n *\n *     For example: `item in items track by item.id` is a typical pattern when the items come from the database. In this\n *     case the object identity does not matter. Two objects are considered equivalent as long as their `id`\n *     property is same.\n *\n *     For example: `item in items | filter:searchText track by item.id` is a pattern that might be used to apply a filter\n *     to items in conjunction with a tracking expression.\n *\n * @example\n * This example initializes the scope to a list of names and\n * then uses `ngRepeat` to display every person:\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-init=\"friends = [\n        {name:'John', age:25, gender:'boy'},\n        {name:'Jessie', age:30, gender:'girl'},\n        {name:'Johanna', age:28, gender:'girl'},\n        {name:'Joy', age:15, gender:'girl'},\n        {name:'Mary', age:28, gender:'girl'},\n        {name:'Peter', age:95, gender:'boy'},\n        {name:'Sebastian', age:50, gender:'boy'},\n        {name:'Erika', age:27, gender:'girl'},\n        {name:'Patrick', age:40, gender:'boy'},\n        {name:'Samantha', age:60, gender:'girl'}\n      ]\">\n        I have {{friends.length}} friends. They are:\n        <input type=\"search\" ng-model=\"q\" placeholder=\"filter friends...\" />\n        <ul class=\"example-animate-container\">\n          <li class=\"animate-repeat\" ng-repeat=\"friend in friends | filter:q\">\n            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n          </li>\n        </ul>\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .example-animate-container {\n        background:white;\n        border:1px solid black;\n        list-style:none;\n        margin:0;\n        padding:0 10px;\n      }\n\n      .animate-repeat {\n        line-height:40px;\n        list-style:none;\n        box-sizing:border-box;\n      }\n\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter,\n      .animate-repeat.ng-leave {\n        -webkit-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n      }\n\n      .animate-repeat.ng-leave.ng-leave-active,\n      .animate-repeat.ng-move,\n      .animate-repeat.ng-enter {\n        opacity:0;\n        max-height:0;\n      }\n\n      .animate-repeat.ng-leave,\n      .animate-repeat.ng-move.ng-move-active,\n      .animate-repeat.ng-enter.ng-enter-active {\n        opacity:1;\n        max-height:40px;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var friends = element.all(by.repeater('friend in friends'));\n\n      it('should render initial data set', function() {\n        expect(friends.count()).toBe(10);\n        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');\n        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');\n        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');\n        expect(element(by.binding('friends.length')).getText())\n            .toMatch(\"I have 10 friends. They are:\");\n      });\n\n       it('should update repeater when filter predicate changes', function() {\n         expect(friends.count()).toBe(10);\n\n         element(by.model('q')).sendKeys('ma');\n\n         expect(friends.count()).toBe(2);\n         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');\n         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');\n       });\n      </file>\n    </example>\n */\nvar ngRepeatDirective = ['$parse', '$animate', function($parse, $animate) {\n  var NG_REMOVED = '$$NG_REMOVED';\n  var ngRepeatMinErr = minErr('ngRepeat');\n  return {\n    transclude: 'element',\n    priority: 1000,\n    terminal: true,\n    $$tlb: true,\n    link: function($scope, $element, $attr, ctrl, $transclude){\n        var expression = $attr.ngRepeat;\n        var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/),\n          trackByExp, trackByExpGetter, trackByIdExpFn, trackByIdArrayFn, trackByIdObjFn,\n          lhs, rhs, valueIdentifier, keyIdentifier,\n          hashFnLocals = {$id: hashKey};\n\n        if (!match) {\n          throw ngRepeatMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n            expression);\n        }\n\n        lhs = match[1];\n        rhs = match[2];\n        trackByExp = match[3];\n\n        if (trackByExp) {\n          trackByExpGetter = $parse(trackByExp);\n          trackByIdExpFn = function(key, value, index) {\n            // assign key, value, and $index to the locals so that they can be used in hash functions\n            if (keyIdentifier) hashFnLocals[keyIdentifier] = key;\n            hashFnLocals[valueIdentifier] = value;\n            hashFnLocals.$index = index;\n            return trackByExpGetter($scope, hashFnLocals);\n          };\n        } else {\n          trackByIdArrayFn = function(key, value) {\n            return hashKey(value);\n          };\n          trackByIdObjFn = function(key) {\n            return key;\n          };\n        }\n\n        match = lhs.match(/^(?:([\\$\\w]+)|\\(([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\))$/);\n        if (!match) {\n          throw ngRepeatMinErr('iidexp', \"'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.\",\n                                                                    lhs);\n        }\n        valueIdentifier = match[3] || match[1];\n        keyIdentifier = match[2];\n\n        // Store a list of elements from previous run. This is a hash where key is the item from the\n        // iterator, and the value is objects with following properties.\n        //   - scope: bound scope\n        //   - element: previous element.\n        //   - index: position\n        var lastBlockMap = {};\n\n        //watch props\n        $scope.$watchCollection(rhs, function ngRepeatAction(collection){\n          var index, length,\n              previousNode = $element[0],     // current position of the node\n              nextNode,\n              // Same as lastBlockMap but it has the current state. It will become the\n              // lastBlockMap on the next iteration.\n              nextBlockMap = {},\n              arrayLength,\n              childScope,\n              key, value, // key/value of iteration\n              trackById,\n              trackByIdFn,\n              collectionKeys,\n              block,       // last object information {scope, element, id}\n              nextBlockOrder = [],\n              elementsToRemove;\n\n\n          if (isArrayLike(collection)) {\n            collectionKeys = collection;\n            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;\n          } else {\n            trackByIdFn = trackByIdExpFn || trackByIdObjFn;\n            // if object, extract keys, sort them and use to determine order of iteration over obj props\n            collectionKeys = [];\n            for (key in collection) {\n              if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {\n                collectionKeys.push(key);\n              }\n            }\n            collectionKeys.sort();\n          }\n\n          arrayLength = collectionKeys.length;\n\n          // locate existing items\n          length = nextBlockOrder.length = collectionKeys.length;\n          for(index = 0; index < length; index++) {\n           key = (collection === collectionKeys) ? index : collectionKeys[index];\n           value = collection[key];\n           trackById = trackByIdFn(key, value, index);\n           assertNotHasOwnProperty(trackById, '`track by` id');\n           if(lastBlockMap.hasOwnProperty(trackById)) {\n             block = lastBlockMap[trackById];\n             delete lastBlockMap[trackById];\n             nextBlockMap[trackById] = block;\n             nextBlockOrder[index] = block;\n           } else if (nextBlockMap.hasOwnProperty(trackById)) {\n             // restore lastBlockMap\n             forEach(nextBlockOrder, function(block) {\n               if (block && block.scope) lastBlockMap[block.id] = block;\n             });\n             // This is a duplicate and we need to throw an error\n             throw ngRepeatMinErr('dupes',\n                  \"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}\",\n                  expression, trackById, toJson(value));\n           } else {\n             // new never before seen block\n             nextBlockOrder[index] = { id: trackById };\n             nextBlockMap[trackById] = false;\n           }\n         }\n\n          // remove existing items\n          for (key in lastBlockMap) {\n            // lastBlockMap is our own object so we don't need to use special hasOwnPropertyFn\n            if (lastBlockMap.hasOwnProperty(key)) {\n              block = lastBlockMap[key];\n              elementsToRemove = getBlockElements(block.clone);\n              $animate.leave(elementsToRemove);\n              forEach(elementsToRemove, function(element) { element[NG_REMOVED] = true; });\n              block.scope.$destroy();\n            }\n          }\n\n          // we are not using forEach for perf reasons (trying to avoid #call)\n          for (index = 0, length = collectionKeys.length; index < length; index++) {\n            key = (collection === collectionKeys) ? index : collectionKeys[index];\n            value = collection[key];\n            block = nextBlockOrder[index];\n            if (nextBlockOrder[index - 1]) previousNode = getBlockEnd(nextBlockOrder[index - 1]);\n\n            if (block.scope) {\n              // if we have already seen this object, then we need to reuse the\n              // associated scope/element\n              childScope = block.scope;\n\n              nextNode = previousNode;\n              do {\n                nextNode = nextNode.nextSibling;\n              } while(nextNode && nextNode[NG_REMOVED]);\n\n              if (getBlockStart(block) != nextNode) {\n                // existing item which got moved\n                $animate.move(getBlockElements(block.clone), null, jqLite(previousNode));\n              }\n              previousNode = getBlockEnd(block);\n            } else {\n              // new item which we don't know about\n              childScope = $scope.$new();\n            }\n\n            childScope[valueIdentifier] = value;\n            if (keyIdentifier) childScope[keyIdentifier] = key;\n            childScope.$index = index;\n            childScope.$first = (index === 0);\n            childScope.$last = (index === (arrayLength - 1));\n            childScope.$middle = !(childScope.$first || childScope.$last);\n            // jshint bitwise: false\n            childScope.$odd = !(childScope.$even = (index&1) === 0);\n            // jshint bitwise: true\n\n            if (!block.scope) {\n              $transclude(childScope, function(clone) {\n                clone[clone.length++] = document.createComment(' end ngRepeat: ' + expression + ' ');\n                $animate.enter(clone, null, jqLite(previousNode));\n                previousNode = clone;\n                block.scope = childScope;\n                // Note: We only need the first/last node of the cloned nodes.\n                // However, we need to keep the reference to the jqlite wrapper as it might be changed later\n                // by a directive with templateUrl when its template arrives.\n                block.clone = clone;\n                nextBlockMap[block.id] = block;\n              });\n            }\n          }\n          lastBlockMap = nextBlockMap;\n        });\n    }\n  };\n\n  function getBlockStart(block) {\n    return block.clone[0];\n  }\n\n  function getBlockEnd(block) {\n    return block.clone[block.clone.length - 1];\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name ngShow\n *\n * @description\n * The `ngShow` directive shows or hides the given HTML element based on the expression\n * provided to the `ngShow` attribute. The element is shown or hidden by removing or adding\n * the `.ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n * in AngularJS and sets the display style to none (using an !important flag).\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is visible) -->\n * <div ng-show=\"myValue\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is hidden) -->\n * <div ng-show=\"myValue\" class=\"ng-hide\"></div>\n * ```\n *\n * When the `ngShow` expression evaluates to false then the `.ng-hide` CSS class is added to the class attribute\n * on the element causing it to become hidden. When true, the `.ng-hide` CSS class is removed\n * from the element causing the element not to appear hidden.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Here is a list of values that ngShow will consider as a falsy value (case insensitive):<br />\n * \"f\" / \"0\" / \"false\" / \"no\" / \"n\" / \"[]\"\n * </div>\n *\n * ## Why is !important used?\n *\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n * can be easily overridden by heavier selectors. For example, something as simple\n * as changing the display style on a HTML list item would make hidden elements appear visible.\n * This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n * class in CSS:\n *\n * ```css\n * .ng-hide {\n *   //this is just another form of hiding an element\n *   display:block!important;\n *   position:absolute;\n *   top:-9999px;\n *   left:-9999px;\n * }\n * ```\n *\n * By default you don't need to override in CSS anything and the animations will work around the display style.\n *\n * ## A note about animations with `ngShow`\n *\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n * is true and false. This system works like the animation system present with ngClass except that\n * you must also include the !important flag to override the display property\n * so that you can perform an animation when the element is hidden during the time of the animation.\n *\n * ```css\n * //\n * //a working example can be found at the bottom of this page\n * //\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   transition:0.5s linear all;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n *\n * @animations\n * addClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a truthy value and the just before contents are set to visible\n * removeClass: `.ng-hide` - happens after the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n *     then the element is shown or hidden respectively.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <div class=\"check-element animate-show\" ng-show=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </div>\n      </div>\n      <div>\n        Hide:\n        <div class=\"check-element animate-show\" ng-hide=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </div>\n      </div>\n    </file>\n    <file name=\"glyphicons.css\">\n      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);\n    </file>\n    <file name=\"animations.css\">\n      .animate-show {\n        -webkit-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n\n      .animate-show.ng-hide {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n\n      .check-element {\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n      it('should check ng-show / ng-hide', function() {\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n        element(by.model('checked')).click();\n\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\n      });\n    </file>\n  </example>\n */\nvar ngShowDirective = ['$animate', function($animate) {\n  return function(scope, element, attr) {\n    scope.$watch(attr.ngShow, function ngShowWatchAction(value){\n      $animate[toBoolean(value) ? 'removeClass' : 'addClass'](element, 'ng-hide');\n    });\n  };\n}];\n\n\n/**\n * @ngdoc directive\n * @name ngHide\n *\n * @description\n * The `ngHide` directive shows or hides the given HTML element based on the expression\n * provided to the `ngHide` attribute. The element is shown or hidden by removing or adding\n * the `ng-hide` CSS class onto the element. The `.ng-hide` CSS class is predefined\n * in AngularJS and sets the display style to none (using an !important flag).\n * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).\n *\n * ```html\n * <!-- when $scope.myValue is truthy (element is hidden) -->\n * <div ng-hide=\"myValue\" class=\"ng-hide\"></div>\n *\n * <!-- when $scope.myValue is falsy (element is visible) -->\n * <div ng-hide=\"myValue\"></div>\n * ```\n *\n * When the `.ngHide` expression evaluates to true then the `.ng-hide` CSS class is added to the class attribute\n * on the element causing it to become hidden. When false, the `.ng-hide` CSS class is removed\n * from the element causing the element not to appear hidden.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** Here is a list of values that ngHide will consider as a falsy value (case insensitive):<br />\n * \"f\" / \"0\" / \"false\" / \"no\" / \"n\" / \"[]\"\n * </div>\n *\n * ## Why is !important used?\n *\n * You may be wondering why !important is used for the `.ng-hide` CSS class. This is because the `.ng-hide` selector\n * can be easily overridden by heavier selectors. For example, something as simple\n * as changing the display style on a HTML list item would make hidden elements appear visible.\n * This also becomes a bigger issue when dealing with CSS frameworks.\n *\n * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector\n * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the\n * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.\n *\n * ### Overriding `.ng-hide`\n *\n * By default, the `.ng-hide` class will style the element with `display:none!important`. If you wish to change\n * the hide behavior with ngShow/ngHide then this can be achieved by restating the styles for the `.ng-hide`\n * class in CSS:\n *\n * ```css\n * .ng-hide {\n *   //this is just another form of hiding an element\n *   display:block!important;\n *   position:absolute;\n *   top:-9999px;\n *   left:-9999px;\n * }\n * ```\n *\n * By default you don't need to override in CSS anything and the animations will work around the display style.\n *\n * ## A note about animations with `ngHide`\n *\n * Animations in ngShow/ngHide work with the show and hide events that are triggered when the directive expression\n * is true and false. This system works like the animation system present with ngClass, except that the `.ng-hide`\n * CSS class is added and removed for you instead of your own CSS class.\n *\n * ```css\n * //\n * //a working example can be found at the bottom of this page\n * //\n * .my-element.ng-hide-add, .my-element.ng-hide-remove {\n *   transition:0.5s linear all;\n * }\n *\n * .my-element.ng-hide-add { ... }\n * .my-element.ng-hide-add.ng-hide-add-active { ... }\n * .my-element.ng-hide-remove { ... }\n * .my-element.ng-hide-remove.ng-hide-remove-active { ... }\n * ```\n *\n * Keep in mind that, as of AngularJS version 1.2.17 (and 1.3.0-beta.11), there is no need to change the display\n * property to block during animation states--ngAnimate will handle the style toggling automatically for you.\n *\n * @animations\n * removeClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden\n * addClass: `.ng-hide` - happens after the `ngHide` expression evaluates to a non truthy value and just before the contents are set to visible\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n *     the element is shown or hidden respectively.\n *\n * @example\n  <example module=\"ngAnimate\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n      <div>\n        Show:\n        <div class=\"check-element animate-hide\" ng-show=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-up\"></span> I show up when your checkbox is checked.\n        </div>\n      </div>\n      <div>\n        Hide:\n        <div class=\"check-element animate-hide\" ng-hide=\"checked\">\n          <span class=\"glyphicon glyphicon-thumbs-down\"></span> I hide when your checkbox is checked.\n        </div>\n      </div>\n    </file>\n    <file name=\"glyphicons.css\">\n      @import url(//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css);\n    </file>\n    <file name=\"animations.css\">\n      .animate-hide {\n        -webkit-transition:all linear 0.5s;\n        transition:all linear 0.5s;\n        line-height:20px;\n        opacity:1;\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n\n      .animate-hide.ng-hide {\n        line-height:0;\n        opacity:0;\n        padding:0 10px;\n      }\n\n      .check-element {\n        padding:10px;\n        border:1px solid black;\n        background:white;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n      var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n      it('should check ng-show / ng-hide', function() {\n        expect(thumbsUp.isDisplayed()).toBeFalsy();\n        expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n        element(by.model('checked')).click();\n\n        expect(thumbsUp.isDisplayed()).toBeTruthy();\n        expect(thumbsDown.isDisplayed()).toBeFalsy();\n      });\n    </file>\n  </example>\n */\nvar ngHideDirective = ['$animate', function($animate) {\n  return function(scope, element, attr) {\n    scope.$watch(attr.ngHide, function ngHideWatchAction(value){\n      $animate[toBoolean(value) ? 'addClass' : 'removeClass'](element, 'ng-hide');\n    });\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ngStyle\n * @restrict AC\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @element ANY\n * @param {expression} ngStyle\n *\n * {@link guide/expression Expression} which evals to an\n * object whose keys are CSS style names and values are corresponding values for those CSS\n * keys.\n *\n * Since some CSS style names are not valid keys for an object, they must be quoted.\n * See the 'background-color' style in the example below.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set color\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"set background\" ng-click=\"myStyle={'background-color':'blue'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var colorSpan = element(by.css('span'));\n\n       it('should check ng-style', function() {\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n         element(by.css('input[value=\\'set color\\']')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(255, 0, 0, 1)');\n         element(by.css('input[value=clear]')).click();\n         expect(colorSpan.getCssValue('color')).toBe('rgba(0, 0, 0, 1)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  }, true);\n});\n\n/**\n * @ngdoc directive\n * @name ngSwitch\n * @restrict EA\n *\n * @description\n * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\n * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\n * as specified in the template.\n *\n * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\n * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\n * matches the value obtained from the evaluated expression. In other words, you define a container element\n * (where you place the directive), place an expression on the **`on=\"...\"` attribute**\n * (or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\n * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\n * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default\n * attribute is displayed.\n *\n * <div class=\"alert alert-info\">\n * Be aware that the attribute values to match against cannot be expressions. They are interpreted\n * as literal string values to match against.\n * For example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\n * value of the expression `$scope.someVal`.\n * </div>\n\n * @animations\n * enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\n * leave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM\n *\n * @usage\n *\n * ```\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n * ```\n *\n *\n * @scope\n * @priority 800\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n * On child elements add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed. If the same match appears multiple times, all the\n *   elements will be displayed.\n * * `ngSwitchDefault`: the default case when no other case match. If there\n *   are multiple default cases, all of them will be displayed when no other\n *   case match.\n *\n *\n * @example\n  <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <select ng-model=\"selection\" ng-options=\"item for item in items\">\n        </select>\n        <tt>selection={{selection}}</tt>\n        <hr/>\n        <div class=\"animate-switch-container\"\n          ng-switch on=\"selection\">\n            <div class=\"animate-switch\" ng-switch-when=\"settings\">Settings Div</div>\n            <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n            <div class=\"animate-switch\" ng-switch-default>default</div>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('switchExample', ['ngAnimate'])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.items = ['settings', 'home', 'other'];\n          $scope.selection = $scope.items[0];\n        }]);\n    </file>\n    <file name=\"animations.css\">\n      .animate-switch-container {\n        position:relative;\n        background:white;\n        border:1px solid black;\n        height:40px;\n        overflow:hidden;\n      }\n\n      .animate-switch {\n        padding:10px;\n      }\n\n      .animate-switch.ng-animate {\n        -webkit-transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n      }\n\n      .animate-switch.ng-leave.ng-leave-active,\n      .animate-switch.ng-enter {\n        top:-50px;\n      }\n      .animate-switch.ng-leave,\n      .animate-switch.ng-enter.ng-enter-active {\n        top:0;\n      }\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var switchElem = element(by.css('[ng-switch]'));\n      var select = element(by.model('selection'));\n\n      it('should start in settings', function() {\n        expect(switchElem.getText()).toMatch(/Settings Div/);\n      });\n      it('should change to home', function() {\n        select.all(by.css('option')).get(1).click();\n        expect(switchElem.getText()).toMatch(/Home Span/);\n      });\n      it('should select default', function() {\n        select.all(by.css('option')).get(2).click();\n        expect(switchElem.getText()).toMatch(/default/);\n      });\n    </file>\n  </example>\n */\nvar ngSwitchDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'EA',\n    require: 'ngSwitch',\n\n    // asks for $scope to fool the BC controller module\n    controller: ['$scope', function ngSwitchController() {\n     this.cases = {};\n    }],\n    link: function(scope, element, attr, ngSwitchController) {\n      var watchExpr = attr.ngSwitch || attr.on,\n          selectedTranscludes = [],\n          selectedElements = [],\n          previousElements = [],\n          selectedScopes = [];\n\n      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n        var i, ii;\n        for (i = 0, ii = previousElements.length; i < ii; ++i) {\n          previousElements[i].remove();\n        }\n        previousElements.length = 0;\n\n        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {\n          var selected = selectedElements[i];\n          selectedScopes[i].$destroy();\n          previousElements[i] = selected;\n          $animate.leave(selected, function() {\n            previousElements.splice(i, 1);\n          });\n        }\n\n        selectedElements.length = 0;\n        selectedScopes.length = 0;\n\n        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {\n          scope.$eval(attr.change);\n          forEach(selectedTranscludes, function(selectedTransclude) {\n            var selectedScope = scope.$new();\n            selectedScopes.push(selectedScope);\n            selectedTransclude.transclude(selectedScope, function(caseElement) {\n              var anchor = selectedTransclude.element;\n\n              selectedElements.push(caseElement);\n              $animate.enter(caseElement, anchor.parent(), anchor);\n            });\n          });\n        }\n      });\n    }\n  };\n}];\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 800,\n  require: '^ngSwitch',\n  link: function(scope, element, attrs, ctrl, $transclude) {\n    ctrl.cases['!' + attrs.ngSwitchWhen] = (ctrl.cases['!' + attrs.ngSwitchWhen] || []);\n    ctrl.cases['!' + attrs.ngSwitchWhen].push({ transclude: $transclude, element: element });\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 800,\n  require: '^ngSwitch',\n  link: function(scope, element, attr, ctrl, $transclude) {\n    ctrl.cases['?'] = (ctrl.cases['?'] || []);\n    ctrl.cases['?'].push({ transclude: $transclude, element: element });\n   }\n});\n\n/**\n * @ngdoc directive\n * @name ngTransclude\n * @restrict AC\n *\n * @description\n * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.\n *\n * Any existing content of the element that this directive is placed on will be removed before the transcluded content is inserted.\n *\n * @element ANY\n *\n * @example\n   <example module=\"transcludeExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('transcludeExample', [])\n          .directive('pane', function(){\n             return {\n               restrict: 'E',\n               transclude: true,\n               scope: { title:'@' },\n               template: '<div style=\"border: 1px solid black;\">' +\n                           '<div style=\"background-color: gray\">{{title}}</div>' +\n                           '<div ng-transclude></div>' +\n                         '</div>'\n             };\n         })\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.title = 'Lorem Ipsum';\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n         }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <input ng-model=\"title\"><br>\n         <textarea ng-model=\"text\"></textarea> <br/>\n         <pane title=\"{{title}}\">{{text}}</pane>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        it('should have transcluded', function() {\n          var titleElement = element(by.model('title'));\n          titleElement.clear();\n          titleElement.sendKeys('TITLE');\n          var textElement = element(by.model('text'));\n          textElement.clear();\n          textElement.sendKeys('TEXT');\n          expect(element(by.binding('title')).getText()).toEqual('TITLE');\n          expect(element(by.binding('text')).getText()).toEqual('TEXT');\n        });\n     </file>\n   </example>\n *\n */\nvar ngTranscludeDirective = ngDirective({\n  link: function($scope, $element, $attrs, controller, $transclude) {\n    if (!$transclude) {\n      throw minErr('ngTransclude')('orphan',\n       'Illegal use of ngTransclude directive in the template! ' +\n       'No parent directive that requires a transclusion found. ' +\n       'Element: {0}',\n       startingTag($element));\n    }\n\n    $transclude(function(clone) {\n      $element.empty();\n      $element.append(clone);\n    });\n  }\n});\n\n/**\n * @ngdoc directive\n * @name script\n * @restrict E\n *\n * @description\n * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\n * template can be used by {@link ng.directive:ngInclude `ngInclude`},\n * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\n * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.\n *\n * @param {string} type Must be set to `'text/ng-template'`.\n * @param {string} id Cache name of the template.\n *\n * @example\n  <example>\n    <file name=\"index.html\">\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should load template defined inside script tag', function() {\n        element(by.css('#tpl-link')).click();\n        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n      });\n    </file>\n  </example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type == 'text/ng-template') {\n        var templateUrl = attr.id,\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\nvar ngOptionsMinErr = minErr('ngOptions');\n/**\n * @ngdoc directive\n * @name select\n * @restrict E\n *\n * @description\n * HTML `SELECT` element with angular data-binding.\n *\n * # `ngOptions`\n *\n * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for the `<select>` element using the array or object obtained by evaluating the\n * `ngOptions` comprehension_expression.\n *\n * When an item in the `<select>` menu is selected, the array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** `ngModel` compares by reference, not value. This is important when binding to an\n * array of objects. See an example [in this jsfiddle](http://jsfiddle.net/qWzTb/).\n * </div>\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * <div class=\"alert alert-warning\">\n * **Note:** `ngOptions` provides an iterator facility for the `<option>` element which should be used instead\n * of {@link ng.directive:ngRepeat ngRepeat} when you want the\n * `select` model to be bound to a non-string value. This is because an option element can only\n * be bound to string values at present.\n * </div>\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n *      used to identify the objects in the array. The `trackexpr` will most likely refer to the\n *     `value` variable (e.g. `value.propertyName`).\n *\n * @example\n    <example module=\"selectExample\">\n      <file name=\"index.html\">\n        <script>\n        angular.module('selectExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.colors = [\n              {name:'black', shade:'dark'},\n              {name:'white', shade:'light'},\n              {name:'red', shade:'dark'},\n              {name:'blue', shade:'dark'},\n              {name:'yellow', shade:'light'}\n            ];\n            $scope.myColor = $scope.colors[2]; // red\n          }]);\n        </script>\n        <div ng-controller=\"ExampleController\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              Name: <input ng-model=\"color.name\">\n              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n            </li>\n            <li>\n              [<a href ng-click=\"colors.push({})\">add</a>]\n            </li>\n          </ul>\n          <hr/>\n          Color (null not allowed):\n          <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select><br>\n\n          Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n              <option value=\"\">-- choose color --</option>\n            </select>\n          </span><br/>\n\n          Color grouped by shade:\n          <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n          </select><br/>\n\n\n          Select <a href ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</a>.<br>\n          <hr/>\n          Currently selected: {{ {selected_color:myColor}  }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':myColor.name}\">\n          </div>\n        </div>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n         it('should check ng-options', function() {\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n           element.all(by.model('myColor')).first().click();\n           element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n           element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n           element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n         });\n      </file>\n    </example>\n */\n\nvar ngOptionsDirective = valueFn({ terminal: true });\n// jshint maxlen: false\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n                         //000011111111110000000000022222222220000000000000000000003333333333000000000000004444444444444440000000005555555555555550000000666666666666666000000000000000777777777700000000000000000008888888888\n  var NG_OPTIONS_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,\n      nullModelCtrl = {$setViewValue: noop};\n// jshint maxlen: 100\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n      var self = this,\n          optionsMap = {},\n          ngModelCtrl = nullModelCtrl,\n          nullOption,\n          unknownOption;\n\n\n      self.databound = $attrs.ngModel;\n\n\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n        ngModelCtrl = ngModelCtrl_;\n        nullOption = nullOption_;\n        unknownOption = unknownOption_;\n      };\n\n\n      self.addOption = function(value) {\n        assertNotHasOwnProperty(value, '\"option value\"');\n        optionsMap[value] = true;\n\n        if (ngModelCtrl.$viewValue == value) {\n          $element.val(value);\n          if (unknownOption.parent()) unknownOption.remove();\n        }\n      };\n\n\n      self.removeOption = function(value) {\n        if (this.hasOption(value)) {\n          delete optionsMap[value];\n          if (ngModelCtrl.$viewValue == value) {\n            this.renderUnknownOption(value);\n          }\n        }\n      };\n\n\n      self.renderUnknownOption = function(val) {\n        var unknownVal = '? ' + hashKey(val) + ' ?';\n        unknownOption.val(unknownVal);\n        $element.prepend(unknownOption);\n        $element.val(unknownVal);\n        unknownOption.prop('selected', true); // needed for IE\n      };\n\n\n      self.hasOption = function(value) {\n        return optionsMap.hasOwnProperty(value);\n      };\n\n      $scope.$on('$destroy', function() {\n        // disable unknown option so that we don't do work when the whole select is being destroyed\n        self.renderUnknownOption = noop;\n      });\n    }],\n\n    link: function(scope, element, attr, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      if (!ctrls[1]) return;\n\n      var selectCtrl = ctrls[0],\n          ngModelCtrl = ctrls[1],\n          multiple = attr.multiple,\n          optionsExp = attr.ngOptions,\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n          emptyOption,\n          // we can't just jqLite('<option>') since jqLite is not smart enough\n          // to create it in <select> and IE barfs otherwise.\n          optionTemplate = jqLite(document.createElement('option')),\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\n          unknownOption = optionTemplate.clone();\n\n      // find \"null\" option\n      for(var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value === '') {\n          emptyOption = nullOption = children.eq(i);\n          break;\n        }\n      }\n\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\n      // required validator\n      if (multiple) {\n        ngModelCtrl.$isEmpty = function(value) {\n          return !value || value.length === 0;\n        };\n      }\n\n      if (optionsExp) setupAsOptions(scope, element, ngModelCtrl);\n      else if (multiple) setupAsMultiple(scope, element, ngModelCtrl);\n      else setupAsSingle(scope, element, ngModelCtrl, selectCtrl);\n\n\n      ////////////////////////////\n\n\n\n      function setupAsSingle(scope, selectElement, ngModelCtrl, selectCtrl) {\n        ngModelCtrl.$render = function() {\n          var viewValue = ngModelCtrl.$viewValue;\n\n          if (selectCtrl.hasOption(viewValue)) {\n            if (unknownOption.parent()) unknownOption.remove();\n            selectElement.val(viewValue);\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n          } else {\n            if (isUndefined(viewValue) && emptyOption) {\n              selectElement.val('');\n            } else {\n              selectCtrl.renderUnknownOption(viewValue);\n            }\n          }\n        };\n\n        selectElement.on('change', function() {\n          scope.$apply(function() {\n            if (unknownOption.parent()) unknownOption.remove();\n            ngModelCtrl.$setViewValue(selectElement.val());\n          });\n        });\n      }\n\n      function setupAsMultiple(scope, selectElement, ctrl) {\n        var lastView;\n        ctrl.$render = function() {\n          var items = new HashMap(ctrl.$viewValue);\n          forEach(selectElement.find('option'), function(option) {\n            option.selected = isDefined(items.get(option.value));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        scope.$watch(function selectMultipleWatch() {\n          if (!equals(lastView, ctrl.$viewValue)) {\n            lastView = shallowCopy(ctrl.$viewValue);\n            ctrl.$render();\n          }\n        });\n\n        selectElement.on('change', function() {\n          scope.$apply(function() {\n            var array = [];\n            forEach(selectElement.find('option'), function(option) {\n              if (option.selected) {\n                array.push(option.value);\n              }\n            });\n            ctrl.$setViewValue(array);\n          });\n        });\n      }\n\n      function setupAsOptions(scope, selectElement, ctrl) {\n        var match;\n\n        if (!(match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n          throw ngOptionsMinErr('iexp',\n            \"Expected expression in form of \" +\n            \"'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\" +\n            \" but got '{0}'. Element: {1}\",\n            optionsExp, startingTag(selectElement));\n        }\n\n        var displayFn = $parse(match[2] || match[1]),\n            valueName = match[4] || match[6],\n            keyName = match[5],\n            groupByFn = $parse(match[3] || ''),\n            valueFn = $parse(match[2] ? match[1] : valueName),\n            valuesFn = $parse(match[7]),\n            track = match[8],\n            trackFn = track ? $parse(match[8]) : null,\n            // This is an array of array of existing option groups in DOM.\n            // We try to reuse these if possible\n            // - optionGroupsCache[0] is the options with no option group\n            // - optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n            optionGroupsCache = [[{element: selectElement, label:''}]];\n\n        if (nullOption) {\n          // compile the element since there might be bindings in it\n          $compile(nullOption)(scope);\n\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          nullOption.removeClass('ng-scope');\n\n          // we need to remove it before calling selectElement.empty() because otherwise IE will\n          // remove the label from the element. wtf?\n          nullOption.remove();\n        }\n\n        // clear contents, we'll add what's needed based on the model\n        selectElement.empty();\n\n        selectElement.on('change', function() {\n          scope.$apply(function() {\n            var optionGroup,\n                collection = valuesFn(scope) || [],\n                locals = {},\n                key, value, optionElement, index, groupIndex, length, groupLength, trackIndex;\n\n            if (multiple) {\n              value = [];\n              for (groupIndex = 0, groupLength = optionGroupsCache.length;\n                   groupIndex < groupLength;\n                   groupIndex++) {\n                // list of options for that group. (first item has the parent)\n                optionGroup = optionGroupsCache[groupIndex];\n\n                for(index = 1, length = optionGroup.length; index < length; index++) {\n                  if ((optionElement = optionGroup[index].element)[0].selected) {\n                    key = optionElement.val();\n                    if (keyName) locals[keyName] = key;\n                    if (trackFn) {\n                      for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n                        locals[valueName] = collection[trackIndex];\n                        if (trackFn(scope, locals) == key) break;\n                      }\n                    } else {\n                      locals[valueName] = collection[key];\n                    }\n                    value.push(valueFn(scope, locals));\n                  }\n                }\n              }\n            } else {\n              key = selectElement.val();\n              if (key == '?') {\n                value = undefined;\n              } else if (key === ''){\n                value = null;\n              } else {\n                if (trackFn) {\n                  for (trackIndex = 0; trackIndex < collection.length; trackIndex++) {\n                    locals[valueName] = collection[trackIndex];\n                    if (trackFn(scope, locals) == key) {\n                      value = valueFn(scope, locals);\n                      break;\n                    }\n                  }\n                } else {\n                  locals[valueName] = collection[key];\n                  if (keyName) locals[keyName] = key;\n                  value = valueFn(scope, locals);\n                }\n              }\n            }\n            ctrl.$setViewValue(value);\n            render();\n          });\n        });\n\n        ctrl.$render = render;\n\n        scope.$watchCollection(valuesFn, render);\n        scope.$watchCollection(function () {\n          var locals = {},\n              values = valuesFn(scope);\n          if (values) {\n            var toDisplay = new Array(values.length);\n            for (var i = 0, ii = values.length; i < ii; i++) {\n              locals[valueName] = values[i];\n              toDisplay[i] = displayFn(scope, locals);\n            }\n            return toDisplay;\n          }\n        }, render);\n\n        if ( multiple ) {\n          scope.$watchCollection(function() { return ctrl.$modelValue; }, render);\n        }\n\n        function getSelectedSet() {\n          var selectedSet = false;\n          if (multiple) {\n            var modelValue = ctrl.$modelValue;\n            if (trackFn && isArray(modelValue)) {\n              selectedSet = new HashMap([]);\n              var locals = {};\n              for (var trackIndex = 0; trackIndex < modelValue.length; trackIndex++) {\n                locals[valueName] = modelValue[trackIndex];\n                selectedSet.put(trackFn(scope, locals), modelValue[trackIndex]);\n              }\n            } else {\n              selectedSet = new HashMap(modelValue);\n            }\n          }\n          return selectedSet;\n        }\n\n\n        function render() {\n              // Temporary location for the option groups before we render them\n          var optionGroups = {'':[]},\n              optionGroupNames = [''],\n              optionGroupName,\n              optionGroup,\n              option,\n              existingParent, existingOptions, existingOption,\n              modelValue = ctrl.$modelValue,\n              values = valuesFn(scope) || [],\n              keys = keyName ? sortedKeys(values) : values,\n              key,\n              groupLength, length,\n              groupIndex, index,\n              locals = {},\n              selected,\n              selectedSet = getSelectedSet(),\n              lastElement,\n              element,\n              label;\n\n\n          // We now build up the list of options we need (we merge later)\n          for (index = 0; length = keys.length, index < length; index++) {\n\n            key = index;\n            if (keyName) {\n              key = keys[index];\n              if ( key.charAt(0) === '$' ) continue;\n              locals[keyName] = key;\n            }\n\n            locals[valueName] = values[key];\n\n            optionGroupName = groupByFn(scope, locals) || '';\n            if (!(optionGroup = optionGroups[optionGroupName])) {\n              optionGroup = optionGroups[optionGroupName] = [];\n              optionGroupNames.push(optionGroupName);\n            }\n            if (multiple) {\n              selected = isDefined(\n                selectedSet.remove(trackFn ? trackFn(scope, locals) : valueFn(scope, locals))\n              );\n            } else {\n              if (trackFn) {\n                var modelCast = {};\n                modelCast[valueName] = modelValue;\n                selected = trackFn(scope, modelCast) === trackFn(scope, locals);\n              } else {\n                selected = modelValue === valueFn(scope, locals);\n              }\n              selectedSet = selectedSet || selected; // see if at least one item is selected\n            }\n            label = displayFn(scope, locals); // what will be seen by the user\n\n            // doing displayFn(scope, locals) || '' overwrites zero values\n            label = isDefined(label) ? label : '';\n            optionGroup.push({\n              // either the index into array or key from object\n              id: trackFn ? trackFn(scope, locals) : (keyName ? keys[index] : index),\n              label: label,\n              selected: selected                   // determine if we should be selected\n            });\n          }\n          if (!multiple) {\n            if (nullOption || modelValue === null) {\n              // insert null option if we have a placeholder, or the model is null\n              optionGroups[''].unshift({id:'', label:'', selected:!selectedSet});\n            } else if (!selectedSet) {\n              // option could not be found, we have to insert the undefined item\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\n            }\n          }\n\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\n               groupIndex < groupLength;\n               groupIndex++) {\n            // current option group name or '' if no group\n            optionGroupName = optionGroupNames[groupIndex];\n\n            // list of options for that group. (first item has the parent)\n            optionGroup = optionGroups[optionGroupName];\n\n            if (optionGroupsCache.length <= groupIndex) {\n              // we need to grow the optionGroups\n              existingParent = {\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\n                label: optionGroup.label\n              };\n              existingOptions = [existingParent];\n              optionGroupsCache.push(existingOptions);\n              selectElement.append(existingParent.element);\n            } else {\n              existingOptions = optionGroupsCache[groupIndex];\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\n              // update the OPTGROUP label if not the same.\n              if (existingParent.label != optionGroupName) {\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\n              }\n            }\n\n            lastElement = null;  // start at the beginning\n            for(index = 0, length = optionGroup.length; index < length; index++) {\n              option = optionGroup[index];\n              if ((existingOption = existingOptions[index+1])) {\n                // reuse elements\n                lastElement = existingOption.element;\n                if (existingOption.label !== option.label) {\n                  lastElement.text(existingOption.label = option.label);\n                  lastElement.prop('label', existingOption.label);\n                }\n                if (existingOption.id !== option.id) {\n                  lastElement.val(existingOption.id = option.id);\n                }\n                // lastElement.prop('selected') provided by jQuery has side-effects\n                if (lastElement[0].selected !== option.selected) {\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\n                  if (msie) {\n                    // See #7692\n                    // The selected item wouldn't visually update on IE without this.\n                    // Tested on Win7: IE9, IE10 and IE11. Future IEs should be tested as well\n                    lastElement.prop('selected', existingOption.selected);\n                  }\n                }\n              } else {\n                // grow elements\n\n                // if it's a null option\n                if (option.id === '' && nullOption) {\n                  // put back the pre-compiled element\n                  element = nullOption;\n                } else {\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n                  // in this version of jQuery on some browser the .text() returns a string\n                  // rather then the element.\n                  (element = optionTemplate.clone())\n                      .val(option.id)\n                      .prop('selected', option.selected)\n                      .attr('selected', option.selected)\n                      .prop('label', option.label)\n                      .text(option.label);\n                }\n\n                existingOptions.push(existingOption = {\n                    element: element,\n                    label: option.label,\n                    id: option.id,\n                    selected: option.selected\n                });\n                selectCtrl.addOption(option.label, element);\n                if (lastElement) {\n                  lastElement.after(element);\n                } else {\n                  existingParent.element.append(element);\n                }\n                lastElement = element;\n              }\n            }\n            // remove any excessive OPTIONs in a group\n            index++; // increment since the existingOptions[0] is parent element not OPTION\n            while(existingOptions.length > index) {\n              option = existingOptions.pop();\n              selectCtrl.removeOption(option.label);\n              option.element.remove();\n            }\n          }\n          // remove any excessive OPTGROUPs from select\n          while(optionGroupsCache.length > groupIndex) {\n            optionGroupsCache.pop()[0].element.remove();\n          }\n        }\n      }\n    }\n  };\n}];\n\nvar optionDirective = ['$interpolate', function($interpolate) {\n  var nullSelectCtrl = {\n    addOption: noop,\n    removeOption: noop\n  };\n\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      if (isUndefined(attr.value)) {\n        var interpolateFn = $interpolate(element.text(), true);\n        if (!interpolateFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function (scope, element, attr) {\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (selectCtrl && selectCtrl.databound) {\n          // For some reason Opera defaults to true and if not overridden this messes up the repeater.\n          // We don't want the view to drive the initialization of the model anyway.\n          element.prop('selected', false);\n        } else {\n          selectCtrl = nullSelectCtrl;\n        }\n\n        if (interpolateFn) {\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n            attr.$set('value', newVal);\n            if (newVal !== oldVal) selectCtrl.removeOption(oldVal);\n            selectCtrl.addOption(newVal);\n          });\n        } else {\n          selectCtrl.addOption(attr.value);\n        }\n\n        element.on('$destroy', function() {\n          selectCtrl.removeOption(attr.value);\n        });\n      };\n    }\n  };\n}];\n\nvar styleDirective = valueFn({\n  restrict: 'E',\n  terminal: true\n});\n\n  if (window.angular.bootstrap) {\n    //AngularJS is already loaded, so we can return here...\n    console.log('WARNING: Tried to load angular more than once.');\n    return;\n  }\n\n  //try to bind to jquery now so that one can write angular.element().read()\n  //but we will rebind on bootstrap again.\n  bindJQuery();\n\n  publishExternalAPI(angular);\n\n  jqLite(document).ready(function() {\n    angularInit(document, bootstrap);\n  });\n\n})(window, document);\n\n!window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular/angular.js\n ** module id = 30\n ** module chunks = 0\n **/"],"sourceRoot":""}