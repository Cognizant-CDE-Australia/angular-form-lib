{"version":3,"sources":["webpack:///../~/angular-motion/dist/angular-motion.css","webpack:///../~/angular-strap/dist/angular-strap.js","webpack:///../~/angular-strap/src/datepicker/datepicker.tpl.html","webpack:///./modules/docs/templates/aside.inc","webpack:///./modules/docs/assets/config/docsConfig.json","webpack:///../~/highlightjs/styles/github.css","webpack:///./modules/docs/assets/language/enAU.json","webpack:///./modules/common/Utility.js","webpack:///./modules/docs/docFixtures.js","webpack:///./modules/docs/docs.js","webpack:///./modules/docs/index.js","webpack:///./modules/docs/styles/docs.styl","webpack:///./modules/docs/templates/affixed-sidenav.html","webpack:///./modules/docs/templates/docs-component.html","webpack:///./modules/docs/templates/footer.html","webpack:///./modules/docs/templates/getting-started.html","webpack:///./modules/docs/templates/header.html","webpack:///./modules/docs/templates/navbar.html","webpack:///./modules/docs/templates/sidenav.html","webpack:///./modules/ngFormLib/controls/common/FieldErrorController.js","webpack:///./modules/ngFormLib/controls/common/FormControlService.js","webpack:///./modules/ngFormLib/controls/common/docs/formControlService.docs.html","webpack:///./modules/ngFormLib/controls/common/docs/formControlService.docs.js","webpack:///./modules/ngFormLib/controls/common/docs/formControlsCommon.docs.html","webpack:///./modules/ngFormLib/controls/common/docs/formControlsCommon.docs.js","webpack:///./modules/ngFormLib/controls/common/docs/formControlsCommonProperties.docs.html","webpack:///./modules/ngFormLib/controls/common/docs/formControlsCommonProperties.docs.js","webpack:///./modules/ngFormLib/controls/common/docs/formControlsDemos.docs.html","webpack:///./modules/ngFormLib/controls/common/docs/formControlsDemos.docs.js","webpack:///./modules/ngFormLib/controls/common/index.js","webpack:///./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js","webpack:///./modules/ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs.html","webpack:///./modules/ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs.js","webpack:///./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js","webpack:///./modules/ngFormLib/controls/formCheckbox/docs/formCheckbox.docs.html","webpack:///./modules/ngFormLib/controls/formCheckbox/docs/formCheckbox.docs.js","webpack:///./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html","webpack:///./modules/ngFormLib/controls/formDate/FormDate.js","webpack:///./modules/ngFormLib/controls/formDate/docs/formDate.docs.html","webpack:///./modules/ngFormLib/controls/formDate/docs/formDate.docs.js","webpack:///./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html","webpack:///./modules/ngFormLib/controls/formInput/FormInput.js","webpack:///./modules/ngFormLib/controls/formInput/docs/formInput.docs.html","webpack:///./modules/ngFormLib/controls/formInput/docs/formInput.docs.js","webpack:///./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html","webpack:///./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js","webpack:///./modules/ngFormLib/controls/formRadioButton/docs/formRadioButton.docs.html","webpack:///./modules/ngFormLib/controls/formRadioButton/docs/formRadioButton.docs.js","webpack:///./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html","webpack:///./modules/ngFormLib/controls/formReset/FormReset.js","webpack:///./modules/ngFormLib/controls/formReset/docs/formReset.docs.html","webpack:///./modules/ngFormLib/controls/formReset/docs/formReset.docs.js","webpack:///./modules/ngFormLib/controls/formSelect/FormSelect.js","webpack:///./modules/ngFormLib/controls/formSelect/docs/formSelect.docs.html","webpack:///./modules/ngFormLib/controls/formSelect/docs/formSelect.docs.js","webpack:///./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html","webpack:///./modules/ngFormLib/controls/formSubmit/FormSubmit.js","webpack:///./modules/ngFormLib/controls/formSubmit/docs/formSubmit.docs.html","webpack:///./modules/ngFormLib/controls/formSubmit/docs/formSubmit.docs.js","webpack:///./modules/ngFormLib/controls/index.js","webpack:///./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js","webpack:///./modules/ngFormLib/controls/requiredMarker/docs/requiredMarker.docs.html","webpack:///./modules/ngFormLib/controls/requiredMarker/docs/requiredMarker.docs.js","webpack:///./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html","webpack:///./modules/ngFormLib/index.js","webpack:///./modules/ngFormLib/policy/FormPolicy.js","webpack:///./modules/ngFormLib/policy/accessibility/PolicyFormAccessibility.js","webpack:///./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js","webpack:///./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js","webpack:///./modules/ngFormLib/policy/defaultPolicies.js","webpack:///./modules/ngFormLib/policy/docs/formPolicy.docs.html","webpack:///./modules/ngFormLib/policy/docs/formPolicy.docs.js","webpack:///./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js"],"names":["mod","angular","module","name","constant","convertDate","dateStr","newSep","oldSep","parts","split","isNaN","join","length","formatDay","dayOrDate","month","year","dd","mm","yyyy","getUTCDay","getDate","getMonth","getFullYear","dateAdd","numDays","myDate","setDate","getToday","optionalDate","Date","isISODate","indexOf","monthsBetween","date1","date2","trimRegExp","trim","text","replace","isDigitsRegExp","isDigits","test","getUniqueId","getTime","Math","random","toArray","obj","arr","i","hasOwnProperty","key","value","sort","compare","a","b","directive","$compile","restrict","link","scope","element","attrs","$watch","bindCompile","html","innerHTML","contents","config","$locationProvider","html5Mode","$anchorScrollProvider","disableAutoScrolling","$translateProvider","translations","require","preferredLanguage","useSanitizeValueStrategy","stateChangeBehavePolicy","fieldFocusScrollOffset","a11yPolicy","lib","onErrorChangeBehaviour","createShortErrorDescription","controller","Controller","$http","vm","fileName","get","then","result","DOC_CONFIG","data","REPO_HOST","repository","host","REPO","branch","VERSION","version","controllerAs","template","terminal","indent","compile","attr","options","placement","forEach","isDefined","hlElement","codeElement","children","elementHtml","hlClass","addClass","highlightjs","highlightBlock","postLink","spaces","lines","prefix","substr","match","shift","pop","minIndent","line","substring","push","$location","$document","scrollContainerAPI","duScrollDuration","on","ahref","elemId","useHash","hash","$apply","target","getElementById","getBoundingClientRect","offset","parseInt","scrollOffset","scrollBottom","offsetHeight","duration","container","getContainer","scrollToElement","formControlService","$timeout","setupCanShowErrorPropertyOnNgModelController","formController","ngModelController","formPolicy","_policy","formName","$name","fieldName","stateConditions","stateDefinitions","create","checkForStateChanges","_scope","controllers","formGroupElement","$element","stateChangeBehaviour","_applyFormBehaviourOnStateChangePolicy","fieldState","applyBehaviour","$on","$scope","$provide","decorator","$delegate","ngModel","$injector","$interpolate","$set","invoke","form","ngForm","provider","Provider","self","counter","defaults","idPrefix","inputGroupButtonTemplateFunction","val","handler","templates","formCheckbox","formDate","formInput","formRadioButton","formSelect","requiredMarker","$get","StringUtil","translator","instant","e","identity","service","buildDirective","params","transclude","tElement","tAttr","validateComponentStructure","controlName","expectedTemplateElements","expectedAttributes","id","uid","getUniqueFieldId","inputElem","find","inputElementName","labelElem","required","getRequiredAttribute","decorateLabel","labelClass","hideLabel","hideRequiredIndicator","labelSuffix","decorateInputField","configFn","removeAttr","templateUrl","getHTMLTemplate","type","parentFormClasses","inheritedData","addToAttribute","attributeName","existingValues","removeFromAttribute","newValue","undefined","addLabelText","labelText","prepend","translate","addInputGroup","inputGroupMapping","inputAttr","className","attachFn","clickHandler","content","contentToAppend","igConfig","wrap","wrapper","parent","hideLabelExpr","append","hostElement","inputType","replaceWith","$attr","origAttrName","createErrorFeatures","parentElement","inputElement","fieldLabel","fieldErrors","textErrors","fieldLabelStr","errorContainerElem","createFieldHint","fieldHint","fieldHintId","fieldHintDisplay","hintElement","hintText","buildNgClassExpression","targetElem","modelStr","checkedStr","disabledStr","ngValue","ngTrueValue","str","interpolatedParams","componentName","requiredElements","requiredAttributes","Error","j","titleData","label","schoolData","formDemo4","education","addSchool","submit","alert","ErrorController","ariaElement","errors","addError","errorType","errorMessage","translateError","removeError","updateAriaErrorElement","firstLetterIsAVowel","toLowerCase","pronoun","generateErrorTag","errorText","toggleErrorVisibilityOnError","errorController","watchExpr","removeErrorMessage","divs","len","eq","hasClass","remove","toggleErrorVisibilityForTextError","fieldController","$setValidity","setSubmitted","$viewChangeListeners","$eval","formField","accessibilityBehaviour","createAriaErrorElement","error","errorShowCondition","fieldWatcher","item","toggleTextError","myTextError","translationKey","run","$templateCache","put","addPlaceholder","placeholder","hasInputGroup","parentElemForErrors","err","console","debug","placeholderText","DateUtil","dateRegEx","priority","elem","ctrl","resetValidators","$parsers","unshift","viewValue","dateFormatValid","fieldDate","minDate","maxDate","dateChange","$valid","prefixCount","suffixCount","igbPrefixHandler","window","igbSuffixHandler","rbDiv","radioVal2","$parse","resetFieldState","controlMap","controlList","jLen","ngModelGet","formReset","ngModelSet","assign","originalData","copy","_controls","$setPristine","$emit","$digest","title","selectElem","fn","formSubmit","noop","isForm","tagName","bind","event","$event","preventDefault","callWhenValid","hide","ngFormLib","defaultPolicies","nullBehaviourOnStateChange","behaviour","resetBehaviour","nullStateDefinitions","states","nullAccessibilityBehaviour","formSubmitAttemptedClass","behaviourOnStateChange","getService","checker","policyService","getCurrentPolicy","formDirective","formPolicyService","pre","extend","_parentController","tellNoOne","_formSubmitAttempted","$broadcast","inputElements","hookupElementToNameToElementMap","map","elementId","splice","rootFormController","ariaErrorElementSuffix","ariaErrorElementTemplate","getAriaErrorElementId","createLongErrorDescription","errorMsgs","timeoutPromise","scrollPromise","isElementVisible","top","setFocusOnField","cancel","focus","combineBehaviours","resultA","resultB","args2","apply","onSubmitFocusFirstFieldIfError","focusController","fieldElem","formSubmitAttempted","elems","querySelectorAll","firstElement","isFirstElement","_focusErrorElement","onErrorSetAriaDescribedByToAriaErrorElement","errorElemId","updateElementStyle","policy","fieldErrorClass","fieldSuccessClass","reduce","checkForStateChangesOnBlurUntilSubmitThenOnChange","errorWatch","watchForErrorChanges","watchForBlurEvent","checkForStateChangesOnChange","checkForStateChangesOnBlur","createWatch","stateName","stateCondition","watchers","deregistrationFn","evaluateFieldStates","prop","handleErrorsOnKeyChangeWatcher","ngShowWatchAction","initialFieldState","onChange","onBlur","onBlurUntilSubmitThenOnChange","formPolicyCheckForStateChangesLibrary","myCustomPolicy","ERROR_STATE","errorOnSubmit","errorOnDirty","errorImmediately","errorOnSubmitAndDirty","errorOnSubmitOrDirty","onSubmit","onDirty","immediately","onSubmitAndDirty","onSubmitOrDirty","successOnSubmit","successOnDirty","successImmediately","successOnSubmitAndDirty","successOnSubmitOrDirty","errorLib","successLib","state"],"mappings":";;;;;AAAA,yC;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA,+DAA+D;;AAE/D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;;AAEA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,6DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB,EAAE;AAC7D;AACA,WAAW;AACX,sCAAsC,uEAAuE;AAC7G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kGAAkG;AACtI;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,8CAA8C,sCAAsC,EAAE;AACtF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sCAAsC,qEAAqE;;AAE3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,qEAAqE;;AAE3G;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA,0CAA0C,+FAA+F;AACzI;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ,OAAO;AAC3C;AACA,2BAA2B,gNAAgN;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA,0CAA0C,+FAA+F;AACzI;AACA,eAAe;AACf,0CAA0C,6DAA6D;AACvG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA,6BAA6B,0HAA0H;AACvJ;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA,0CAA0C,+FAA+F;AACzI;AACA,eAAe;AACf,0CAA0C,+FAA+F;AACzI;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA,4BAA4B,sHAAsH;AAClJ;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,2BAA2B;AACpF,oDAAoD,sBAAsB;AAC1E,oDAAoD,sBAAsB;AAC1E,kDAAkD,oBAAoB;AACtE,6CAA6C,mBAAmB;AAChE,iDAAiD,kBAAkB;AACnE,kDAAkD,oBAAoB;AACtE,qDAAqD,mBAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB,2CAA2C,UAAU;AACrD;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,qCAAqC;;AAErC;;AAEA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;AAChD,yBAAyB,EAAE;AAC3B,oDAAoD,IAAI,gBAAgB,IAAI;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC,+DAA+D,EAAE;AACtI,mCAAmC,qFAAqF,EAAE;AAC1H,mCAAmC,0FAA0F,EAAE;AAC/H,mCAAmC,qCAAqC,EAAE;AAC1E,mCAAmC,qCAAqC,EAAE;AAC1E;AACA,mCAAmC,2CAA2C,EAAE;AAChF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4DAA4D,cAAc;AACnF;AACA,SAAS;AACT;AACA,SAAS,0DAA0D;AACnE;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS,0DAA0D;AACnE;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC,yCAAyC,UAAU;AACnD;AACA;AACA,kBAAkB,iBAAiB;AACnC,2BAA2B,UAAU;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,gBAAgB;AAC9C;AACA;;AAEA,gEAAgE,eAAe;AAC/E;;AAEA;AACA;;AAEA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX;;AAEA;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,IAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,+FAA+F;;AAE/F;AACA,4BAA4B,iBAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;;AAEX,SAAS;;AAET;;AAEA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;;AAEA;;AAEA;AACA,gCAAgC,+BAA+B;AAC/D;;AAEA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;;AAExB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,iHAAiH;AACvJ;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB,EAAE;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA,wBAAwB,8JAA8J;AACtL;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA,0BAA0B,wKAAwK;AAClM;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE,WAAW;AACX;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,KAAK;;AAEL,GAAG;;;AAGH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,uCAAuC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,gGAAgG;;AAEhG;AACA;AACA,0BAA0B,wEAAwE;;AAElG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,sBAAsB;AACjE,WAAW,EAAE,mCAAmC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,6EAA6E;AAC7E,sCAAsC,WAAW,wEAAwE;AACzH;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,qCAAqC;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,KAAK;;AAEL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW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","file":"js/docs.222eed47.js","sourcesContent":["// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/angular-motion/dist/angular-motion.css\n// module id = ../node_modules/angular-motion/dist/angular-motion.css\n// module chunks = 0","/**\n * angular-strap\n * @version v2.1.6 - 2015-01-11\n * @link http://mgcrea.github.io/angular-strap\n * @author Olivier Louvignes (olivier@mg-crea.com)\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function(window, document, undefined) {\n'use strict';\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\n  'mgcrea.ngStrap.modal',\n  'mgcrea.ngStrap.aside',\n  'mgcrea.ngStrap.alert',\n  'mgcrea.ngStrap.button',\n  'mgcrea.ngStrap.select',\n  'mgcrea.ngStrap.datepicker',\n  'mgcrea.ngStrap.timepicker',\n  'mgcrea.ngStrap.navbar',\n  'mgcrea.ngStrap.tooltip',\n  'mgcrea.ngStrap.popover',\n  'mgcrea.ngStrap.dropdown',\n  'mgcrea.ngStrap.typeahead',\n  'mgcrea.ngStrap.scrollspy',\n  'mgcrea.ngStrap.affix',\n  'mgcrea.ngStrap.tab',\n  'mgcrea.ngStrap.collapse'\n]);\n\n// Source: affix.js\nangular.module('mgcrea.ngStrap.affix', ['mgcrea.ngStrap.helpers.dimensions', 'mgcrea.ngStrap.helpers.debounce'])\n\n  .provider('$affix', function() {\n\n    var defaults = this.defaults = {\n      offsetTop: 'auto'\n    };\n\n    this.$get = [\"$window\", \"debounce\", \"dimensions\", function($window, debounce, dimensions) {\n\n      var bodyEl = angular.element($window.document.body);\n      var windowEl = angular.element($window);\n\n      function AffixFactory(element, config) {\n\n        var $affix = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var targetEl = options.target;\n\n        // Initial private vars\n        var reset = 'affix affix-top affix-bottom',\n            setWidth = false,\n            initialAffixTop = 0,\n            initialOffsetTop = 0,\n            offsetTop = 0,\n            offsetBottom = 0,\n            affixed = null,\n            unpin = null;\n\n        var parent = element.parent();\n        // Options: custom parent\n        if (options.offsetParent) {\n          if (options.offsetParent.match(/^\\d+$/)) {\n            for (var i = 0; i < (options.offsetParent * 1) - 1; i++) {\n              parent = parent.parent();\n            }\n          }\n          else {\n            parent = angular.element(options.offsetParent);\n          }\n        }\n\n        $affix.init = function() {\n\n          this.$parseOffsets();\n          initialOffsetTop = dimensions.offset(element[0]).top + initialAffixTop;\n          setWidth = !element[0].style.width;\n\n          // Bind events\n          targetEl.on('scroll', this.checkPosition);\n          targetEl.on('click', this.checkPositionWithEventLoop);\n          windowEl.on('resize', this.$debouncedOnResize);\n\n          // Both of these checkPosition() calls are necessary for the case where\n          // the user hits refresh after scrolling to the bottom of the page.\n          this.checkPosition();\n          this.checkPositionWithEventLoop();\n\n        };\n\n        $affix.destroy = function() {\n\n          // Unbind events\n          targetEl.off('scroll', this.checkPosition);\n          targetEl.off('click', this.checkPositionWithEventLoop);\n          windowEl.off('resize', this.$debouncedOnResize);\n\n        };\n\n        $affix.checkPositionWithEventLoop = function() {\n\n          // IE 9 throws an error if we use 'this' instead of '$affix'\n          // in this setTimeout call\n          setTimeout($affix.checkPosition, 1);\n\n        };\n\n        $affix.checkPosition = function() {\n          // if (!this.$element.is(':visible')) return\n\n          var scrollTop = getScrollTop();\n          var position = dimensions.offset(element[0]);\n          var elementHeight = dimensions.height(element[0]);\n\n          // Get required affix class according to position\n          var affix = getRequiredAffixClass(unpin, position, elementHeight);\n\n          // Did affix status changed this last check?\n          if(affixed === affix) return;\n          affixed = affix;\n\n          // Add proper affix class\n          element.removeClass(reset).addClass('affix' + ((affix !== 'middle') ? '-' + affix : ''));\n\n          if(affix === 'top') {\n            unpin = null;\n            element.css('position', (options.offsetParent) ? '' : 'relative');\n            if(setWidth) {\n              element.css('width', '');\n            }\n            element.css('top', '');\n          } else if(affix === 'bottom') {\n            if (options.offsetUnpin) {\n              unpin = -(options.offsetUnpin * 1);\n            }\n            else {\n              // Calculate unpin threshold when affixed to bottom.\n              // Hopefully the browser scrolls pixel by pixel.\n              unpin = position.top - scrollTop;\n            }\n            if(setWidth) {\n              element.css('width', '');\n            }\n            element.css('position', (options.offsetParent) ? '' : 'relative');\n            element.css('top', (options.offsetParent) ? '' : ((bodyEl[0].offsetHeight - offsetBottom - elementHeight - initialOffsetTop) + 'px'));\n          } else { // affix === 'middle'\n            unpin = null;\n            if(setWidth) {\n              element.css('width', element[0].offsetWidth + 'px');\n            }\n            element.css('position', 'fixed');\n            element.css('top', initialAffixTop + 'px');\n          }\n\n        };\n\n        $affix.$onResize = function() {\n          $affix.$parseOffsets();\n          $affix.checkPosition();\n        };\n        $affix.$debouncedOnResize = debounce($affix.$onResize, 50);\n\n        $affix.$parseOffsets = function() {\n          var initialPosition = element.css('position');\n          // Reset position to calculate correct offsetTop\n          element.css('position', (options.offsetParent) ? '' : 'relative');\n\n          if(options.offsetTop) {\n            if(options.offsetTop === 'auto') {\n              options.offsetTop = '+0';\n            }\n            if(options.offsetTop.match(/^[-+]\\d+$/)) {\n              initialAffixTop = - options.offsetTop * 1;\n              if(options.offsetParent) {\n                offsetTop = dimensions.offset(parent[0]).top + (options.offsetTop * 1);\n              }\n              else {\n                offsetTop = dimensions.offset(element[0]).top - dimensions.css(element[0], 'marginTop', true) + (options.offsetTop * 1);\n              }\n            }\n            else {\n              offsetTop = options.offsetTop * 1;\n            }\n          }\n\n          if(options.offsetBottom) {\n            if(options.offsetParent && options.offsetBottom.match(/^[-+]\\d+$/)) {\n              // add 1 pixel due to rounding problems...\n              offsetBottom = getScrollHeight() - (dimensions.offset(parent[0]).top + dimensions.height(parent[0])) + (options.offsetBottom * 1) + 1;\n            }\n            else {\n              offsetBottom = options.offsetBottom * 1;\n            }\n          }\n\n          // Bring back the element's position after calculations\n          element.css('position', initialPosition);\n        };\n\n        // Private methods\n\n        function getRequiredAffixClass(unpin, position, elementHeight) {\n\n          var scrollTop = getScrollTop();\n          var scrollHeight = getScrollHeight();\n\n          if(scrollTop <= offsetTop) {\n            return 'top';\n          } else if(unpin !== null && (scrollTop + unpin <= position.top)) {\n            return 'middle';\n          } else if(offsetBottom !== null && (position.top + elementHeight + initialAffixTop >= scrollHeight - offsetBottom)) {\n            return 'bottom';\n          } else {\n            return 'middle';\n          }\n\n        }\n\n        function getScrollTop() {\n          return targetEl[0] === $window ? $window.pageYOffset : targetEl[0].scrollTop;\n        }\n\n        function getScrollHeight() {\n          return targetEl[0] === $window ? $window.document.body.scrollHeight : targetEl[0].scrollHeight;\n        }\n\n        $affix.init();\n        return $affix;\n\n      }\n\n      return AffixFactory;\n\n    }];\n\n  })\n\n  .directive('bsAffix', [\"$affix\", \"$window\", function($affix, $window) {\n\n    return {\n      restrict: 'EAC',\n      require: '^?bsAffixTarget',\n      link: function postLink(scope, element, attr, affixTarget) {\n\n        var options = {scope: scope, offsetTop: 'auto', target: affixTarget ? affixTarget.$element : angular.element($window)};\n        angular.forEach(['offsetTop', 'offsetBottom', 'offsetParent', 'offsetUnpin'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var affix = $affix(element, options);\n        scope.$on('$destroy', function() {\n          affix && affix.destroy();\n          options = null;\n          affix = null;\n        });\n\n      }\n    };\n\n  }])\n\n  .directive('bsAffixTarget', function() {\n    return {\n      controller: [\"$element\", function($element) {\n        this.$element = $element;\n      }]\n    };\n  });\n\n// Source: alert.js\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = [\"$modal\", \"$timeout\", function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    }];\n\n  })\n\n  .directive('bsAlert', [\"$window\", \"$sce\", \"$alert\", function($window, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: aside.js\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\n\n  .provider('$aside', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade-and-slide-right',\n      prefixClass: 'aside',\n      prefixEvent: 'aside',\n      placement: 'right',\n      template: 'aside/aside.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = [\"$modal\", function($modal) {\n\n      function AsideFactory(config) {\n\n        var $aside = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $aside = $modal(options);\n\n        return $aside;\n\n      }\n\n      return AsideFactory;\n\n    }];\n\n  })\n\n  .directive('bsAside', [\"$window\", \"$sce\", \"$aside\", function($window, $sce, $aside) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize aside\n        var aside = $aside(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', aside.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (aside) aside.destroy();\n          options = null;\n          aside = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: button.js\nangular.module('mgcrea.ngStrap.button', [])\n\n  .provider('$button', function() {\n\n    var defaults = this.defaults = {\n      activeClass:'active',\n      toggleEvent:'click'\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsCheckboxGroup', function() {\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      compile: function postLink(element, attr) {\n        element.attr('data-toggle', 'buttons');\n        element.removeAttr('ng-model');\n        var children = element[0].querySelectorAll('input[type=\"checkbox\"]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.attr('bs-checkbox', '');\n          childEl.attr('ng-model', attr.ngModel + '.' + childEl.attr('value'));\n        });\n      }\n\n    };\n\n  })\n\n  .directive('bsCheckbox', [\"$button\", \"$$rAF\", function($button, $$rAF) {\n\n    var defaults = $button.defaults;\n    var constantValueRegExp = /^(true|false|\\d+)$/;\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        var options = defaults;\n\n        // Support label > input[type=\"checkbox\"]\n        var isInput = element[0].nodeName === 'INPUT';\n        var activeElement = isInput ? element.parent() : element;\n\n        var trueValue = angular.isDefined(attr.trueValue) ? attr.trueValue : true;\n        if(constantValueRegExp.test(attr.trueValue)) {\n          trueValue = scope.$eval(attr.trueValue);\n        }\n        var falseValue = angular.isDefined(attr.falseValue) ? attr.falseValue : false;\n        if(constantValueRegExp.test(attr.falseValue)) {\n          falseValue = scope.$eval(attr.falseValue);\n        }\n\n        // Parse exotic values\n        var hasExoticValues = typeof trueValue !== 'boolean' || typeof falseValue !== 'boolean';\n        if(hasExoticValues) {\n          controller.$parsers.push(function(viewValue) {\n            // console.warn('$parser', element.attr('ng-model'), 'viewValue', viewValue);\n            return viewValue ? trueValue : falseValue;\n          });\n          // modelValue -> $formatters -> viewValue\n          controller.$formatters.push(function(modelValue) {\n             // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n             return angular.equals(modelValue, trueValue);\n          });\n          // Fix rendering for exotic values\n          scope.$watch(attr.ngModel, function(newValue, oldValue) {\n            controller.$render();\n          });\n        }\n\n        // model -> view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var isActive = angular.equals(controller.$modelValue, trueValue);\n          $$rAF(function() {\n            if(isInput) element[0].checked = isActive;\n            activeElement.toggleClass(options.activeClass, isActive);\n          });\n        };\n\n        // view -> model\n        element.bind(options.toggleEvent, function() {\n          scope.$apply(function () {\n            // console.warn('!click', element.attr('ng-model'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\n            if(!isInput) {\n              controller.$setViewValue(!activeElement.hasClass('active'));\n            }\n            if(!hasExoticValues) {\n              controller.$render();\n            }\n          });\n        });\n\n      }\n\n    };\n\n  }])\n\n  .directive('bsRadioGroup', function() {\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      compile: function postLink(element, attr) {\n        element.attr('data-toggle', 'buttons');\n        element.removeAttr('ng-model');\n        var children = element[0].querySelectorAll('input[type=\"radio\"]');\n        angular.forEach(children, function(child) {\n          angular.element(child).attr('bs-radio', '');\n          angular.element(child).attr('ng-model', attr.ngModel);\n        });\n      }\n\n    };\n\n  })\n\n  .directive('bsRadio', [\"$button\", \"$$rAF\", function($button, $$rAF) {\n\n    var defaults = $button.defaults;\n    var constantValueRegExp = /^(true|false|\\d+)$/;\n\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        var options = defaults;\n\n        // Support `label > input[type=\"radio\"]` markup\n        var isInput = element[0].nodeName === 'INPUT';\n        var activeElement = isInput ? element.parent() : element;\n\n        var value = constantValueRegExp.test(attr.value) ? scope.$eval(attr.value) : attr.value;\n\n        // model -> view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('value'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var isActive = angular.equals(controller.$modelValue, value);\n          $$rAF(function() {\n            if(isInput) element[0].checked = isActive;\n            activeElement.toggleClass(options.activeClass, isActive);\n          });\n        };\n\n        // view -> model\n        element.bind(options.toggleEvent, function() {\n          scope.$apply(function () {\n            // console.warn('!click', element.attr('value'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\n            controller.$setViewValue(value);\n            controller.$render();\n          });\n        });\n\n      }\n\n    };\n\n  }]);\n\n// Source: collapse.js\nangular.module('mgcrea.ngStrap.collapse', [])\n\n  .provider('$collapse', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-collapse',\n      disallowToggle: false,\n      activeClass: 'in',\n      startCollapsed: false,\n      allowMultiple: false\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'disallowToggle', 'activeClass', 'startCollapsed', 'allowMultiple'], function (key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      self.$toggles = [];\n      self.$targets = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$registerToggle = function(element) {\n        self.$toggles.push(element);\n      };\n      self.$registerTarget = function(element) {\n        self.$targets.push(element);\n      };\n\n      self.$unregisterToggle = function(element) {\n        var index = self.$toggles.indexOf(element);\n        // remove toggle from $toggles array\n        self.$toggles.splice(index, 1);\n      };\n      self.$unregisterTarget = function(element) {\n        var index = self.$targets.indexOf(element);\n\n        // remove element from $targets array\n        self.$targets.splice(index, 1);\n\n        if (self.$options.allowMultiple) {\n          // remove target index from $active array values\n          deactivateItem(element);\n        }\n\n        // fix active item indexes\n        fixActiveItemIndexes(index);\n\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n      // use array to store all the currently open panels\n      self.$targets.$active = !self.$options.startCollapsed ? [0] : [];\n      self.$setActive = $scope.$setActive = function(value) {\n        if(angular.isArray(value)) {\n          self.$targets.$active = angular.copy(value);\n        }\n        else if(!self.$options.disallowToggle) {\n          // toogle element active status\n          isActive(value) ? deactivateItem(value) : activateItem(value);\n        } else {\n          activateItem(value);\n        }\n\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n      self.$activeIndexes = function() {\n        return self.$options.allowMultiple ? self.$targets.$active :\n          self.$targets.$active.length === 1 ? self.$targets.$active[0] : -1;\n      };\n\n      function fixActiveItemIndexes(index) {\n        // item with index was removed, so we\n        // need to adjust other items index values\n        var activeIndexes = self.$targets.$active;\n        for(var i = 0; i < activeIndexes.length; i++) {\n          if (index < activeIndexes[i]) {\n            activeIndexes[i] = activeIndexes[i] - 1;\n          }\n\n          // the last item is active, so we need to\n          // adjust its index\n          if (activeIndexes[i] === self.$targets.length) {\n            activeIndexes[i] = self.$targets.length - 1;\n          }\n        }\n      }\n\n      function isActive(value) {\n        var activeItems = self.$targets.$active;\n        return activeItems.indexOf(value) === -1 ? false : true;\n      }\n\n      function deactivateItem(value) {\n        var index = self.$targets.$active.indexOf(value);\n        if (index !== -1) {\n          self.$targets.$active.splice(index, 1);\n        }\n      }\n\n      function activateItem(value) {\n        if (!self.$options.allowMultiple) {\n          // remove current selected item\n          self.$targets.$active.splice(0, 1);\n        }\n\n        if (self.$targets.$active.indexOf(value) === -1) {\n          self.$targets.$active.push(value);\n        }\n      }\n\n    };\n\n    this.$get = function() {\n      var $collapse = {};\n      $collapse.defaults = defaults;\n      $collapse.controller = controller;\n      return $collapse;\n    };\n\n  })\n\n  .directive('bsCollapse', [\"$window\", \"$animate\", \"$collapse\", function($window, $animate, $collapse) {\n\n    var defaults = $collapse.defaults;\n\n    return {\n      require: ['?ngModel', 'bsCollapse'],\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$activeIndexes());\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            if (angular.isArray(modelValue)) {\n              // model value is an array, so just replace\n              // the active items directly\n              bsCollapseCtrl.$setActive(modelValue);\n            }\n            else {\n              var activeIndexes = bsCollapseCtrl.$activeIndexes();\n\n              if (angular.isArray(activeIndexes)) {\n                // we have an array of selected indexes\n                if (activeIndexes.indexOf(modelValue * 1) === -1) {\n                  // item with modelValue index is not active\n                  bsCollapseCtrl.$setActive(modelValue * 1);\n                }\n              }\n              else if (activeIndexes !== modelValue * 1) {\n                bsCollapseCtrl.$setActive(modelValue * 1);\n              }\n            }\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  }])\n\n  .directive('bsCollapseToggle', function() {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base attr\n        element.attr('data-toggle', 'collapse');\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerToggle(element);\n\n        // remove toggle from collapse controller when toggle is destroyed\n        scope.$on('$destroy', function() {\n          bsCollapseCtrl.$unregisterToggle(element);\n        });\n\n        element.on('click', function() {\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\n          bsCollapseCtrl.$setActive(index * 1);\n          scope.$apply();\n        });\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseTarget', [\"$animate\", function($animate) {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      // scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('collapse');\n\n        // Add animation class\n        if(bsCollapseCtrl.$options.animation) {\n          element.addClass(bsCollapseCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerTarget(element);\n\n        // remove pane target from collapse controller when target is destroyed\n        scope.$on('$destroy', function() {\n          bsCollapseCtrl.$unregisterTarget(element);\n        });\n\n        function render() {\n          var index = bsCollapseCtrl.$targets.indexOf(element);\n          var active = bsCollapseCtrl.$activeIndexes();\n          var action = 'removeClass';\n          if (angular.isArray(active)) {\n            if (active.indexOf(index) !== -1) {\n              action = 'addClass';\n            }\n          }\n          else if (index === active) {\n            action = 'addClass';\n          }\n\n          $animate[action](element, bsCollapseCtrl.$options.activeClass);\n        }\n\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  }]);\n\n// Source: datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', [\n  'mgcrea.ngStrap.helpers.dateParser',\n  'mgcrea.ngStrap.helpers.dateFormatter',\n  'mgcrea.ngStrap.tooltip'])\n\n  .provider('$datepicker', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'datepicker',\n      placement: 'bottom-left',\n      template: 'datepicker/datepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      // lang: $locale.id,\n      useNative: false,\n      dateType: 'date',\n      dateFormat: 'shortDate',\n      modelDateFormat: null,\n      dayFormat: 'dd',\n      monthFormat: 'MMM',\n      yearFormat: 'yyyy',\n      monthTitleFormat: 'MMMM yyyy',\n      yearTitleFormat: 'yyyy',\n      strictFormat: false,\n      autoclose: false,\n      minDate: -Infinity,\n      maxDate: +Infinity,\n      startView: 0,\n      minView: 0,\n      startWeek: 0,\n      daysOfWeekDisabled: '',\n      iconLeft: 'glyphicon glyphicon-chevron-left',\n      iconRight: 'glyphicon glyphicon-chevron-right'\n    };\n\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$sce\", \"$dateFormatter\", \"datepickerViews\", \"$tooltip\", \"$timeout\", function($window, $document, $rootScope, $sce, $dateFormatter, datepickerViews, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      if(!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n\n      function DatepickerFactory(element, controller, config) {\n\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $datepicker.$options;\n        var scope = $datepicker.$scope;\n        if(options.startView) options.startView -= options.minView;\n\n        // View vars\n\n        var pickerViews = datepickerViews($datepicker);\n        $datepicker.$views = pickerViews.views;\n        var viewDate = pickerViews.viewDate;\n        scope.$mode = options.startView;\n        scope.$iconLeft = options.iconLeft;\n        scope.$iconRight = options.iconRight;\n        var $picker = $datepicker.$views[scope.$mode];\n\n        // Scope methods\n\n        scope.$select = function(date) {\n          $datepicker.select(date);\n        };\n        scope.$selectPane = function(value) {\n          $datepicker.$selectPane(value);\n        };\n        scope.$toggleMode = function() {\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\n        };\n\n        // Public methods\n\n        $datepicker.update = function(date) {\n          // console.warn('$datepicker.update() newValue=%o', date);\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\n            $datepicker.$date = date;\n            $picker.update.call($picker, date);\n          }\n          // Build only if pristine\n          $datepicker.$build(true);\n        };\n\n        $datepicker.updateDisabledDates = function(dateRanges) {\n          options.disabledDateRanges = dateRanges;\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\n          }\n        };\n\n        $datepicker.select = function(date, keep) {\n          // console.warn('$datepicker.select', date, scope.$mode);\n          if(!angular.isDate(controller.$dateValue)) controller.$dateValue = new Date(date);\n          if(!scope.$mode || keep) {\n            controller.$setViewValue(angular.copy(date));\n            controller.$render();\n            if(options.autoclose && !keep) {\n              $timeout(function() { $datepicker.hide(true); });\n            }\n          } else {\n            angular.extend(viewDate, {year: date.getFullYear(), month: date.getMonth(), date: date.getDate()});\n            $datepicker.setMode(scope.$mode - 1);\n            $datepicker.$build();\n          }\n        };\n\n        $datepicker.setMode = function(mode) {\n          // console.warn('$datepicker.setMode', mode);\n          scope.$mode = mode;\n          $picker = $datepicker.$views[scope.$mode];\n          $datepicker.$build();\n        };\n\n        // Protected methods\n\n        $datepicker.$build = function(pristine) {\n          // console.warn('$datepicker.$build() viewDate=%o', viewDate);\n          if(pristine === true && $picker.built) return;\n          if(pristine === false && !$picker.built) return;\n          $picker.build.call($picker);\n        };\n\n        $datepicker.$updateSelected = function() {\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\n            angular.forEach(scope.rows[i], updateSelected);\n          }\n        };\n\n        $datepicker.$isSelected = function(date) {\n          return $picker.isSelected(date);\n        };\n\n        $datepicker.$setDisabledEl = function(el) {\n          el.disabled = $picker.isDisabled(el.date);\n        };\n\n        $datepicker.$selectPane = function(value) {\n          var steps = $picker.steps;\n          // set targetDate to first day of month to avoid problems with\n          // date values rollover. This assumes the viewDate does not\n          // depend on the day of the month\n          var targetDate = new Date(Date.UTC(viewDate.year + ((steps.year || 0) * value), viewDate.month + ((steps.month || 0) * value), 1));\n          angular.extend(viewDate, {year: targetDate.getUTCFullYear(), month: targetDate.getUTCMonth(), date: targetDate.getUTCDate()});\n          $datepicker.$build();\n        };\n\n        $datepicker.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $datepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          if(evt.keyCode === 13) {\n            if(!scope.$mode) {\n              return $datepicker.hide(true);\n            } else {\n              return scope.$apply(function() { $datepicker.setMode(scope.$mode - 1); });\n            }\n          }\n\n          // Navigate with keyboard\n          $picker.onKeyDown(evt);\n          parentScope.$digest();\n        };\n\n        // Private\n\n        function updateSelected(el) {\n          el.selected = $datepicker.$isSelected(el.date);\n        }\n\n        function focusElement() {\n          element[0].focus();\n        }\n\n        // Overrides\n\n        var _init = $datepicker.init;\n        $datepicker.init = function() {\n          if(isNative && options.useNative) {\n            element.prop('type', 'date');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if(isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n\n        var _destroy = $datepicker.destroy;\n        $datepicker.destroy = function() {\n          if(isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n\n        var _show = $datepicker.show;\n        $datepicker.show = function() {\n          _show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            // if $datepicker is no longer showing, don't setup events\n            if(!$datepicker.$isShown) return;\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $datepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $datepicker.hide;\n        $datepicker.hide = function(blur) {\n          if(!$datepicker.$isShown) return;\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $datepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n\n        return $datepicker;\n\n      }\n\n      DatepickerFactory.defaults = defaults;\n      return DatepickerFactory;\n\n    }];\n\n  })\n\n  .directive('bsDatepicker', [\"$window\", \"$parse\", \"$q\", \"$dateFormatter\", \"$dateParser\", \"$datepicker\", function($window, $parse, $q, $dateFormatter, $dateParser, $datepicker) {\n\n    var defaults = $datepicker.defaults;\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, controller: controller};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'dateType', 'dateFormat', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!datepicker || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(datepicker),?/i);\n          newValue === true ? datepicker.show() : datepicker.hide();\n        });\n\n        // Initialize datepicker\n        var datepicker = $datepicker(element, controller, options);\n        options = datepicker.$options;\n        // Set expected iOS format\n        if(isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\n\n        var lang = options.lang;\n\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n\n        var dateParser = $dateParser({format: options.dateFormat, lang: lang, strict: options.strictFormat});\n\n        // Observe attributes for changes\n        angular.forEach(['minDate', 'maxDate'], function(key) {\n          // console.warn('attr.$observe(%s)', key, attr[key]);\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\n            // console.warn('attr.$observe(%s)=%o', key, newValue);\n            datepicker.$options[key] = dateParser.getDateForAttribute(key, newValue);\n            // Build only if dirty\n            !isNaN(datepicker.$options[key]) && datepicker.$build(false);\n            validateAgainstMinMaxDate(controller.$dateValue);\n          });\n        });\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          datepicker.update(controller.$dateValue);\n        }, true);\n\n        // Normalize undefined/null/empty array,\n        // so that we don't treat changing from undefined->null as a change.\n        function normalizeDateRanges(ranges) {\n          if (!ranges || !ranges.length) return null;\n          return ranges;\n        }\n\n        if (angular.isDefined(attr.disabledDates)) {\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\n            disabledRanges = normalizeDateRanges(disabledRanges);\n            previousValue = normalizeDateRanges(previousValue);\n\n            if (disabledRanges) {\n              datepicker.updateDisabledDates(disabledRanges);\n            }\n          });\n        }\n\n        function validateAgainstMinMaxDate(parsedDate) {\n          if (!angular.isDate(parsedDate)) return;\n          var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\n          var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          // Only update the model when we have a valid date\n          if(isValid) controller.$dateValue = parsedDate;\n        }\n\n        // viewValue -> $parsers -> modelValue\n        controller.$parsers.unshift(function(viewValue) {\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\n          // Null values should correctly reset the model value & validity\n          if(!viewValue) {\n            controller.$setValidity('date', true);\n            // BREAKING CHANGE:\n            // return null (not undefined) when input value is empty, so angularjs 1.3\n            // ngModelController can go ahead and run validators, like ngRequired\n            return null;\n          }\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\n          if(!parsedDate || isNaN(parsedDate.getTime())) {\n            controller.$setValidity('date', false);\n            // return undefined, causes ngModelController to\n            // invalidate model value\n            return;\n          } else {\n            validateAgainstMinMaxDate(parsedDate);\n          }\n          if(options.dateType === 'string') {\n            return formatDate(parsedDate, options.modelDateFormat || options.dateFormat);\n          } else if(options.dateType === 'number') {\n            return controller.$dateValue.getTime();\n          } else if(options.dateType === 'unix') {\n            return controller.$dateValue.getTime() / 1000;\n          } else if(options.dateType === 'iso') {\n            return controller.$dateValue.toISOString();\n          } else {\n            return new Date(controller.$dateValue);\n          }\n        });\n\n        // modelValue -> $formatters -> viewValue\n        controller.$formatters.push(function(modelValue) {\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n          var date;\n          if(angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if(angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if(options.dateType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\n          } else if(options.dateType === 'unix') {\n            date = new Date(modelValue * 1000);\n          } else {\n            date = new Date(modelValue);\n          }\n          // Setup default value?\n          // if(isNaN(date.getTime())) {\n          //   var today = new Date();\n          //   date = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);\n          // }\n          controller.$dateValue = date;\n          return getDateFormattedString();\n        });\n\n        // viewValue -> element\n        controller.$render = function() {\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\n          element.val(getDateFormattedString());\n        };\n\n        function getDateFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.dateFormat);\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(datepicker) datepicker.destroy();\n          options = null;\n          datepicker = null;\n        });\n\n      }\n    };\n\n  }])\n\n  .provider('datepickerViews', function() {\n\n    var defaults = this.defaults = {\n      dayFormat: 'dd',\n      daySplit: 7\n    };\n\n    // Split array into smaller arrays\n    function split(arr, size) {\n      var arrays = [];\n      while(arr.length > 0) {\n        arrays.push(arr.splice(0, size));\n      }\n      return arrays;\n    }\n\n    // Modulus operator\n    function mod(n, m) {\n      return ((n % m) + m) % m;\n    }\n\n    this.$get = [\"$dateFormatter\", \"$dateParser\", \"$sce\", function($dateFormatter, $dateParser, $sce) {\n\n      return function(picker) {\n\n        var scope = picker.$scope;\n        var options = picker.$options;\n\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n        var dateParser = $dateParser({format: options.dateFormat, lang: lang, strict: options.strictFormat});\n\n        var weekDaysMin = $dateFormatter.weekdaysShort(lang);\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\n\n        var startDate = picker.$date || (options.startDate ? dateParser.getDateForAttribute('startDate', options.startDate) : new Date());\n        var viewDate = {year: startDate.getFullYear(), month: startDate.getMonth(), date: startDate.getDate()};\n        var timezoneOffset = startDate.getTimezoneOffset() * 6e4;\n\n        var views = [{\n            format: options.dayFormat,\n            split: 7,\n            steps: { month: 1 },\n            update: function(date, force) {\n              if(!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getDate() !== viewDate.date) {\n                viewDate.date = picker.$date.getDate();\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1), firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5), firstDateOffset = firstDate.getTimezoneOffset();\n              var today = new Date().toDateString();\n              // Handle daylight time switch\n              if(firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 60e3);\n              var days = [], day;\n              for(var i = 0; i < 42; i++) { // < 7 * 6\n                day = dateParser.daylightSavingAdjust(new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i));\n                days.push({date: day, isToday: day.toDateString() === today, label: formatDate(day, this.format), selected: picker.$date && this.isSelected(day), muted: day.getMonth() !== viewDate.month, disabled: this.isDisabled(day)});\n              }\n              scope.title = formatDate(firstDayOfMonth, options.monthTitleFormat);\n              scope.showLabels = true;\n              scope.labels = weekDaysLabelsHtml;\n              scope.rows = split(days, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\n            },\n            isDisabled: function(date) {\n              var time = date.getTime();\n\n              // Disabled because of min/max date.\n              if (time < options.minDate || time > options.maxDate) return true;\n\n              // Disabled due to being a disabled day of the week\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\n\n              // Disabled because of disabled date range.\n              if (options.disabledDateRanges) {\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\n                  if (time >= options.disabledDateRanges[i].start && time <= options.disabledDateRanges[i].end) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualTime = picker.$date.getTime();\n              var newDate;\n\n              if(evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5);\n              else if(evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5);\n              else if(evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5);\n              else if(evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }, {\n            name: 'month',\n            format: options.monthFormat,\n            split: 4,\n            steps: { year: 1 },\n            update: function(date, force) {\n              if(!this.built || date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getMonth() !== viewDate.month) {\n                angular.extend(viewDate, {month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstMonth = new Date(viewDate.year, 0, 1);\n              var months = [], month;\n              for (var i = 0; i < 12; i++) {\n                month = new Date(viewDate.year, i, 1);\n                months.push({date: month, label: formatDate(month, this.format), selected: picker.$isSelected(month), disabled: this.isDisabled(month)});\n              }\n              scope.title = formatDate(month, options.yearTitleFormat);\n              scope.showLabels = false;\n              scope.rows = split(months, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualMonth = picker.$date.getMonth();\n              var newDate = new Date(picker.$date);\n\n              if(evt.keyCode === 37) newDate.setMonth(actualMonth - 1);\n              else if(evt.keyCode === 38) newDate.setMonth(actualMonth - 4);\n              else if(evt.keyCode === 39) newDate.setMonth(actualMonth + 1);\n              else if(evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }, {\n            name: 'year',\n            format: options.yearFormat,\n            split: 4,\n            steps: { year: 12 },\n            update: function(date, force) {\n              if(!this.built || force || parseInt(date.getFullYear()/20, 10) !== parseInt(viewDate.year/20, 10)) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$build();\n              } else if(date.getFullYear() !== viewDate.year) {\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\n                picker.$updateSelected();\n              }\n            },\n            build: function() {\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\n              var years = [], year;\n              for (var i = 0; i < 12; i++) {\n                year = new Date(firstYear + i, 0, 1);\n                years.push({date: year, label: formatDate(year, this.format), selected: picker.$isSelected(year), disabled: this.isDisabled(year)});\n              }\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\n              scope.showLabels = false;\n              scope.rows = split(years, this.split);\n              this.built = true;\n            },\n            isSelected: function(date) {\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\n            },\n            isDisabled: function(date) {\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\n            },\n            onKeyDown: function(evt) {\n              if (!picker.$date) {\n                return;\n              }\n              var actualYear = picker.$date.getFullYear(),\n                  newDate = new Date(picker.$date);\n\n              if(evt.keyCode === 37) newDate.setYear(actualYear - 1);\n              else if(evt.keyCode === 38) newDate.setYear(actualYear - 4);\n              else if(evt.keyCode === 39) newDate.setYear(actualYear + 1);\n              else if(evt.keyCode === 40) newDate.setYear(actualYear + 4);\n\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\n            }\n          }];\n\n        return {\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\n          viewDate: viewDate\n        };\n\n      };\n\n    }];\n\n  });\n\n// Source: dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      placement: 'bottom-left',\n      template: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = [\"$window\", \"$rootScope\", \"$tooltip\", \"$timeout\", function($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function(evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if(!items.length) return;\n          var index;\n          angular.forEach(items, function(el, i) {\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && index > 0) index--;\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\n          else if(angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function() {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function() {\n          if(!$dropdown.$isShown) return;\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function() {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if(evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    }];\n\n  })\n\n  .directive('bsDropdown', [\"$window\", \"$sce\", \"$dropdown\", function($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as an object\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\n          scope.content = newValue;\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!dropdown || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n          newValue === true ? dropdown.show() : dropdown.hide();\n        });\n\n        // Initialize dropdown\n        var dropdown = $dropdown(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (dropdown) dropdown.destroy();\n          options = null;\n          dropdown = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: date-formatter.js\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', [\"$locale\", \"dateFilter\", function($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function() {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function(format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function(lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    function splitTimeFormat(format) {\n      return /(h+)([:\\.])?(m+)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function(timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function(timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function(timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function(timeFormat) {\n      return !!splitTimeFormat(timeFormat)[3];\n    };\n\n    this.formatDate = function(date, format, lang){\n      return dateFilter(date, format);\n    };\n\n  }]);\n\n// Source: date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\n\n.provider('$dateParser', [\"$localeProvider\", function($localeProvider) {\n\n  // define a custom ParseDate object to use instead of native Date\n  // to avoid date values wrapping when setting date component values\n  function ParseDate() {\n    this.year = 1970;\n    this.month = 0;\n    this.day = 1;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.milliseconds = 0;\n  }\n\n  ParseDate.prototype.setMilliseconds = function(value) { this.milliseconds = value; };\n  ParseDate.prototype.setSeconds = function(value) { this.seconds = value; };\n  ParseDate.prototype.setMinutes = function(value) { this.minutes = value; };\n  ParseDate.prototype.setHours = function(value) { this.hours = value; };\n  ParseDate.prototype.getHours = function() { return this.hours; };\n  ParseDate.prototype.setDate = function(value) { this.day = value; };\n  ParseDate.prototype.setMonth = function(value) { this.month = value; };\n  ParseDate.prototype.setFullYear = function(value) { this.year = value; };\n  ParseDate.prototype.fromDate = function(value) {\n    this.year = value.getFullYear();\n    this.month = value.getMonth();\n    this.day = value.getDate();\n    this.hours = value.getHours();\n    this.minutes = value.getMinutes();\n    this.seconds = value.getSeconds();\n    this.milliseconds = value.getMilliseconds();\n    return this;\n  };\n\n  ParseDate.prototype.toDate = function() {\n    return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);\n  };\n\n  var proto = ParseDate.prototype;\n\n  function noop() {\n  }\n\n  function isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function indexOfCaseInsensitive(array, value) {\n    var len = array.length, str=value.toString().toLowerCase();\n    for (var i=0; i<len; i++) {\n      if (array[i].toLowerCase() === str) { return i; }\n    }\n    return -1; // Return -1 per the \"Array.indexOf()\" method.\n  }\n\n  var defaults = this.defaults = {\n    format: 'shortDate',\n    strict: false\n  };\n\n  this.$get = [\"$locale\", \"dateFilter\", function($locale, dateFilter) {\n\n    var DateParserFactory = function(config) {\n\n      var options = angular.extend({}, defaults, config);\n\n      var $dateParser = {};\n\n      var regExpMap = {\n        'sss'   : '[0-9]{3}',\n        'ss'    : '[0-5][0-9]',\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'mm'    : '[0-5][0-9]',\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\n        'HH'    : '[01][0-9]|2[0-3]',\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\n        'hh'    : '[0][1-9]|[1][012]',\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'a'     : 'AM|PM',\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        'MM'    : '0[1-9]|1[012]',\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\n        'yy'    : '[0-9]{2}',\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}',\n      };\n\n      var setFnMap = {\n        'sss'   : proto.setMilliseconds,\n        'ss'    : proto.setSeconds,\n        's'     : proto.setSeconds,\n        'mm'    : proto.setMinutes,\n        'm'     : proto.setMinutes,\n        'HH'    : proto.setHours,\n        'H'     : proto.setHours,\n        'hh'    : proto.setHours,\n        'h'     : proto.setHours,\n        'EEEE'  : noop,\n        'EEE'   : noop,\n        'dd'    : proto.setDate,\n        'd'     : proto.setDate,\n        'a'     : function(value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\n        'MMMM'  : function(value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.MONTH, value)); },\n        'MMM'   : function(value) { return this.setMonth(indexOfCaseInsensitive($locale.DATETIME_FORMATS.SHORTMONTH, value)); },\n        'MM'    : function(value) { return this.setMonth(1 * value - 1); },\n        'M'     : function(value) { return this.setMonth(1 * value - 1); },\n        'yyyy'  : proto.setFullYear,\n        'yy'    : function(value) { return this.setFullYear(2000 + 1 * value); },\n        'y'     : proto.setFullYear\n      };\n\n      var regex, setMap;\n\n      $dateParser.init = function() {\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\n        regex = regExpForFormat($dateParser.$format);\n        setMap = setMapForFormat($dateParser.$format);\n      };\n\n      $dateParser.isValid = function(date) {\n        if(angular.isDate(date)) return !isNaN(date.getTime());\n        return regex.test(date);\n      };\n\n      $dateParser.parse = function(value, baseDate, format) {\n        // check for date format special names\n        if(format) format = $locale.DATETIME_FORMATS[format] || format;\n        if(angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format);\n        var formatRegex = format ? regExpForFormat(format) : regex;\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\n        var matches = formatRegex.exec(value);\n        if(!matches) return false;\n        // use custom ParseDate object to set parsed values\n        var date = baseDate && !isNaN(baseDate.getTime()) ? new ParseDate().fromDate(baseDate) : new ParseDate().fromDate(new Date(1970, 0, 1, 0));\n        for(var i = 0; i < matches.length - 1; i++) {\n          formatSetMap[i] && formatSetMap[i].call(date, matches[i+1]);\n        }\n        // convert back to native Date object\n        var newDate = date.toDate();\n\n        // check new native Date object for day values overflow\n        if (parseInt(date.day, 10) !== newDate.getDate()) {\n          return false;\n        }\n\n        return newDate;\n      };\n\n      $dateParser.getDateForAttribute = function(key, value) {\n        var date;\n\n        if(value === 'today') {\n          var today = new Date();\n          date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\n        } else if(angular.isString(value) && value.match(/^\".+\"$/)) { // Support {{ dateObj }}\n          date = new Date(value.substr(1, value.length - 2));\n        } else if(isNumeric(value)) {\n          date = new Date(parseInt(value, 10));\n        } else if (angular.isString(value) && 0 === value.length) { // Reset date\n          date = key === 'minDate' ? -Infinity : +Infinity;\n        } else {\n          date = new Date(value);\n        }\n\n        return date;\n      };\n\n      $dateParser.getTimeForAttribute = function(key, value) {\n        var time;\n\n        if(value === 'now') {\n          time = new Date().setFullYear(1970, 0, 1);\n        } else if(angular.isString(value) && value.match(/^\".+\"$/)) {\n          time = new Date(value.substr(1, value.length - 2)).setFullYear(1970, 0, 1);\n        } else if(isNumeric(value)) {\n          time = new Date(parseInt(value, 10)).setFullYear(1970, 0, 1);\n        } else if (angular.isString(value) && 0 === value.length) { // Reset time\n          time = key === 'minTime' ? -Infinity : +Infinity;\n        } else {\n          time = $dateParser.parse(value, new Date(1970, 0, 1, 0));\n        }\n\n        return time;\n      };\n\n      /* Handle switch to/from daylight saving.\n      * Hours may be non-zero on daylight saving cut-over:\n      * > 12 when midnight changeover, but then cannot generate\n      * midnight datetime, so jump to 1AM, otherwise reset.\n      * @param  date  (Date) the date to check\n      * @return  (Date) the corrected date\n      *\n      * __ copied from jquery ui datepicker __\n      */\n      $dateParser.daylightSavingAdjust = function(date) {\n        if (!date) {\n          return null;\n        }\n        date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n        return date;\n      };\n\n      // Private functions\n\n      function setMapForFormat(format) {\n        var keys = Object.keys(setFnMap), i;\n        var map = [], sortedMap = [];\n        // Map to setFn\n        var clonedFormat = format;\n        for(i = 0; i < keys.length; i++) {\n          if(format.split(keys[i]).length > 1) {\n            var index = clonedFormat.search(keys[i]);\n            format = format.split(keys[i]).join('');\n            if(setFnMap[keys[i]]) {\n              map[index] = setFnMap[keys[i]];\n            }\n          }\n        }\n        // Sort result map\n        angular.forEach(map, function(v) {\n          // conditional required since angular.forEach broke around v1.2.21\n          // related pr: https://github.com/angular/angular.js/pull/8525\n          if(v) sortedMap.push(v);\n        });\n        return sortedMap;\n      }\n\n      function escapeReservedSymbols(text) {\n        return text.replace(/\\//g, '[\\\\/]').replace('/-/g', '[-]').replace(/\\./g, '[.]').replace(/\\\\s/g, '[\\\\s]');\n      }\n\n      function regExpForFormat(format) {\n        var keys = Object.keys(regExpMap), i;\n\n        var re = format;\n        // Abstract replaces to avoid collisions\n        for(i = 0; i < keys.length; i++) {\n          re = re.split(keys[i]).join('${' + i + '}');\n        }\n        // Replace abstracted values\n        for(i = 0; i < keys.length; i++) {\n          re = re.split('${' + i + '}').join('(' + regExpMap[keys[i]] + ')');\n        }\n        format = escapeReservedSymbols(format);\n\n        return new RegExp('^' + re + '$', ['i']);\n      }\n\n      $dateParser.init();\n      return $dateParser;\n\n    };\n\n    return DateParserFactory;\n\n  }];\n\n}]);\n\n// Source: debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\n.factory('debounce', [\"$timeout\", function($timeout) {\n  return function(func, wait, immediate) {\n    var timeout = null;\n    return function() {\n      var context = this,\n        args = arguments,\n        callNow = immediate && !timeout;\n      if(timeout) {\n        $timeout.cancel(timeout);\n      }\n      timeout = $timeout(function later() {\n        timeout = null;\n        if(!immediate) {\n          func.apply(context, args);\n        }\n      }, wait, false);\n      if(callNow) {\n        func.apply(context, args);\n      }\n      return timeout;\n    };\n  };\n}])\n\n\n// @source jashkenas/underscore\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\n.factory('throttle', [\"$timeout\", function($timeout) {\n  return function(func, wait, options) {\n    var timeout = null;\n    options || (options = {});\n    return function() {\n      var context = this,\n        args = arguments;\n      if(!timeout) {\n        if(options.leading !== false) {\n          func.apply(context, args);\n        }\n        timeout = $timeout(function later() {\n          timeout = null;\n          if(options.trailing !== false) {\n            func.apply(context, args);\n          }\n        }, wait, false);\n      }\n    };\n  };\n}]);\n\n// Source: dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\n\n  .factory('dimensions', [\"$document\", \"$window\", function($document, $window) {\n\n    var jqLite = angular.element;\n    var fn = {};\n\n    /**\n     * Test the element nodeName\n     * @param element\n     * @param name\n     */\n    var nodeName = fn.nodeName = function(element, name) {\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\n    };\n\n    /**\n     * Returns the element computed style\n     * @param element\n     * @param prop\n     * @param extra\n     */\n    fn.css = function(element, prop, extra) {\n      var value;\n      if (element.currentStyle) { //IE\n        value = element.currentStyle[prop];\n      } else if (window.getComputedStyle) {\n        value = window.getComputedStyle(element)[prop];\n      } else {\n        value = element.style[prop];\n      }\n      return extra === true ? parseFloat(value) || 0 : value;\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's offset function:\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.offset = function(element) {\n      var boxRect = element.getBoundingClientRect();\n      var docElement = element.ownerDocument;\n      return {\n        width: boxRect.width || element.offsetWidth,\n        height: boxRect.height || element.offsetHeight,\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\n      };\n    };\n\n    /**\n     * Provides read-only equivalent of jQuery's position function\n     * @required-by bootstrap-tooltip, bootstrap-affix\n     * @url http://api.jquery.com/offset/\n     * @param element\n     */\n    fn.position = function(element) {\n\n      var offsetParentRect = {top: 0, left: 0},\n          offsetParentElement,\n          offset;\n\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n      if (fn.css(element, 'position') === 'fixed') {\n\n        // We assume that getBoundingClientRect is available when computed position is fixed\n        offset = element.getBoundingClientRect();\n\n      } else {\n\n        // Get *real* offsetParentElement\n        offsetParentElement = offsetParent(element);\n\n        // Get correct offsets\n        offset = fn.offset(element);\n        if (!nodeName(offsetParentElement, 'html')) {\n          offsetParentRect = fn.offset(offsetParentElement);\n        }\n\n        // Add offsetParent borders\n        offsetParentRect.top += fn.css(offsetParentElement, 'borderTopWidth', true);\n        offsetParentRect.left += fn.css(offsetParentElement, 'borderLeftWidth', true);\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\n      };\n\n    };\n\n    /**\n     * Returns the closest, non-statically positioned offsetParent of a given element\n     * @required-by fn.position\n     * @param element\n     */\n    var offsetParent = function offsetParentElement(element) {\n      var docElement = element.ownerDocument;\n      var offsetParent = element.offsetParent || docElement;\n      if(nodeName(offsetParent, '#document')) return docElement.documentElement;\n      while(offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docElement.documentElement;\n    };\n\n    /**\n     * Provides equivalent of jQuery's height function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/height/\n     * @param element\n     * @param outer\n     */\n    fn.height = function(element, outer) {\n      var value = element.offsetHeight;\n      if(outer) {\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\n      } else {\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\n      }\n      return value;\n    };\n\n    /**\n     * Provides equivalent of jQuery's width function\n     * @required-by bootstrap-affix\n     * @url http://api.jquery.com/width/\n     * @param element\n     * @param outer\n     */\n    fn.width = function(element, outer) {\n      var value = element.offsetWidth;\n      if(outer) {\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\n      } else {\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\n      }\n      return value;\n    };\n\n    return fn;\n\n  }]);\n\n// Source: parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\n\n  .provider('$parseOptions', function() {\n\n    var defaults = this.defaults = {\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\n    };\n\n    this.$get = [\"$parse\", \"$q\", function($parse, $q) {\n\n      function ParseOptionsFactory(attr, config) {\n\n        var $parseOptions = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        $parseOptions.$values = [];\n\n        // Private vars\n        var match, displayFn, valueName, keyName, groupByFn, valueFn, valuesFn;\n\n        $parseOptions.init = function() {\n          $parseOptions.$match = match = attr.match(options.regexp);\n          displayFn = $parse(match[2] || match[1]),\n          valueName = match[4] || match[6],\n          keyName = match[5],\n          groupByFn = $parse(match[3] || ''),\n          valueFn = $parse(match[2] ? match[1] : valueName),\n          valuesFn = $parse(match[7]);\n        };\n\n        $parseOptions.valuesFn = function(scope, controller) {\n          return $q.when(valuesFn(scope, controller))\n          .then(function(values) {\n            $parseOptions.$values = values ? parseValues(values, scope) : {};\n            return $parseOptions.$values;\n          });\n        };\n\n        $parseOptions.displayValue = function(modelValue) {\n          var scope = {};\n          scope[valueName] = modelValue;\n          return displayFn(scope);\n        };\n\n        // Private functions\n\n        function parseValues(values, scope) {\n          return values.map(function(match, index) {\n            var locals = {}, label, value;\n            locals[valueName] = match;\n            label = displayFn(scope, locals);\n            value = valueFn(scope, locals);\n            return {label: label, value: value, index: index};\n          });\n        }\n\n        $parseOptions.init();\n        return $parseOptions;\n\n      }\n\n      return ParseOptionsFactory;\n\n    }];\n\n  });\n\n// Source: raf.js\n(angular.version.minor < 3 && angular.version.dot < 14) && angular.module('ng')\n\n.factory('$$rAF', [\"$window\", \"$timeout\", function($window, $timeout) {\n\n  var requestAnimationFrame = $window.requestAnimationFrame ||\n                              $window.webkitRequestAnimationFrame ||\n                              $window.mozRequestAnimationFrame;\n\n  var cancelAnimationFrame = $window.cancelAnimationFrame ||\n                             $window.webkitCancelAnimationFrame ||\n                             $window.mozCancelAnimationFrame ||\n                             $window.webkitCancelRequestAnimationFrame;\n\n  var rafSupported = !!requestAnimationFrame;\n  var raf = rafSupported ?\n    function(fn) {\n      var id = requestAnimationFrame(fn);\n      return function() {\n        cancelAnimationFrame(id);\n      };\n    } :\n    function(fn) {\n      var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\n      return function() {\n        $timeout.cancel(timer);\n      };\n    };\n\n  raf.supported = rafSupported;\n\n  return raf;\n\n}]);\n\n// .factory('$$animateReflow', function($$rAF, $document) {\n\n//   var bodyEl = $document[0].body;\n\n//   return function(fn) {\n//     //the returned function acts as the cancellation function\n//     return $$rAF(function() {\n//       //the line below will force the browser to perform a repaint\n//       //so that all the animated elements within the animation frame\n//       //will be properly updated and drawn on screen. This is\n//       //required to perform multi-class CSS based animations with\n//       //Firefox. DO NOT REMOVE THIS LINE.\n//       var a = bodyEl.offsetWidth + 1;\n//       fn();\n//     });\n//   };\n\n// });\n\n// Source: modal.js\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      template: 'modal/modal.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = [\"$window\", \"$rootScope\", \"$compile\", \"$q\", \"$templateCache\", \"$http\", \"$animate\", \"$timeout\", \"$sce\", \"dimensions\", function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        $modal.$promise = fetchTemplate(options.template);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $modal.$promise = $modal.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n              if(!config.template) contentEl.next().remove();\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize modal\n        var modalLinker, modalElement;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        $modal.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          modalLinker = $compile(template);\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = null;\n          }\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $modal.show = function() {\n          if($modal.$isShown) return;\n\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          var parent, after;\n          if(angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // Fetch a cloned element linked from template\n          modalElement = $modal.$element = modalLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n          // Support v1.3+ $animate\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\n          var promise = $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          if(promise && promise.then) promise.then(enterAnimateCallback);\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function() {\n          if(!$modal.$isShown) return;\n\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          var promise = $animate.leave(modalElement, leaveAnimateCallback);\n          // Support v1.3+ $animate\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\n\n          if(options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function() {\n\n          $modal.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        // Private methods\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      var fetchPromises = {};\n      function fetchTemplate(template) {\n        if(fetchPromises[template]) return fetchPromises[template];\n        return (fetchPromises[template] = $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        }));\n      }\n\n      return ModalFactory;\n\n    }];\n\n  })\n\n  .directive('bsModal', [\"$window\", \"$sce\", \"$modal\", function($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: navbar.js\nangular.module('mgcrea.ngStrap.navbar', [])\n\n  .provider('$navbar', function() {\n\n    var defaults = this.defaults = {\n      activeClass: 'active',\n      routeAttr: 'data-match-route',\n      strict: false\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsNavbar', [\"$window\", \"$location\", \"$navbar\", function($window, $location, $navbar) {\n\n    var defaults = $navbar.defaults;\n\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = angular.copy(defaults);\n        angular.forEach(Object.keys(defaults), function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Watch for the $location\n        scope.$watch(function() {\n\n          return $location.path();\n\n        }, function(newValue, oldValue) {\n\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\n\n          angular.forEach(liElements, function(li) {\n\n            var liElement = angular.element(li);\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\n            if(options.strict) {\n              pattern = '^' + pattern + '$';\n            }\n            var regexp = new RegExp(pattern, ['i']);\n\n            if(regexp.test(newValue)) {\n              liElement.addClass(options.activeClass);\n            } else {\n              liElement.removeClass(options.activeClass);\n            }\n\n          });\n\n        });\n\n      }\n\n    };\n\n  }]);\n\n// Source: popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      container: false,\n      target: false,\n      placement: 'right',\n      template: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = [\"$tooltip\", function($tooltip) {\n\n      function PopoverFactory(element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if(options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    }];\n\n  })\n\n  .directive('bsPopover', [\"$window\", \"$sce\", \"$popover\", function($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass', 'autoClose', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\n              popover && popover.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\n            popover && popover.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n          newValue === true ? popover.show() : popover.hide();\n        });\n\n        // Initialize popover\n        var popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      template: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$tooltip\", \"$timeout\", function($window, $document, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        scope.$activeIndex = 0;\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function(index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function(matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function(index) {\n          if(options.multiple) {\n            scope.$activeIndex.sort();\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\n            if(options.sort) scope.$activeIndex.sort();\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function(index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function() {\n            $select.activate(index);\n            if(options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function() {\n          if(controller.$modelValue && scope.$matches.length) {\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            }\n          } else if(scope.$activeIndex >= scope.$matches.length) {\n            scope.$activeIndex = options.multiple ? [] : 0;\n          }\n        };\n\n        $select.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function(index) {\n          if(options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          } else {\n            return scope.$activeIndex === index;\n          }\n        };\n\n        $select.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $select.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function(evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Select with enter\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n          scope.$digest();\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function() {\n          _show();\n          if(options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function() {\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    }];\n\n  })\n\n  .directive('bsSelect', [\"$window\", \"$parse\", \"$q\", \"$select\", \"$parseOptions\", function($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Add support for select markup\n        if(element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper ngOptions\n        var parsedOptions = $parseOptions(attr.ngOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        // Watch ngOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected, index;\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function(value) {\n              index = select.$getIndex(value);\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : options.placeholder) + defaults.caretHtml);\n        };\n\n        if(options.multiple){\n          controller.$isEmpty = function(value){\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: tab.js\nangular.module('mgcrea.ngStrap.tab', [])\n\n  .provider('$tab', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      template: 'tab/tab.tpl.html',\n      navClass: 'nav-tabs',\n      activeClass: 'active'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      // Publish options on scope\n      $scope.$navClass = self.$options.navClass;\n      $scope.$activeClass = self.$options.activeClass;\n\n      self.$panes = $scope.$panes = [];\n\n      // DEPRECATED: $viewChangeListeners, please use $activePaneChangeListeners\n      // Because we deprecated ngModel usage, we rename viewChangeListeners to \n      // activePaneChangeListeners to make more sense.\n      self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n\n      self.$push = function(pane) {\n        self.$panes.push(pane);\n      };\n\n      self.$remove = function(pane) {\n        var index = self.$panes.indexOf(pane);\n        var activeIndex = self.$panes.$active;\n\n        // remove pane from $panes array\n        self.$panes.splice(index, 1);\n\n        if (index < activeIndex) {\n          // we removed a pane before the active pane, so we need to \n          // decrement the active pane index\n          activeIndex--;\n        }\n        else if (index === activeIndex && activeIndex === self.$panes.length) {\n          // we remove the active pane and it was the one at the end,\n          // so select the previous one\n          activeIndex--;\n        }\n        self.$setActive(activeIndex);\n      };\n\n      self.$panes.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        self.$panes.$active = value;\n        self.$activePaneChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $tab = {};\n      $tab.defaults = defaults;\n      $tab.controller = controller;\n      return $tab;\n    };\n\n  })\n\n  .directive('bsTabs', [\"$window\", \"$animate\", \"$tab\", \"$parse\", function($window, $animate, $tab, $parse) {\n\n    var defaults = $tab.defaults;\n\n    return {\n      require: ['?ngModel', 'bsTabs'],\n      transclude: true,\n      scope: true,\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\n      templateUrl: function(element, attr) {\n        return attr.template || defaults.template;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // DEPRECATED: ngModel, please use bsActivePane\n        // 'ngModel' is deprecated bacause if interferes with form validation\n        // and status, so avoid using it here.\n        if(ngModelCtrl) {\n          console.warn('Usage of ngModel is deprecated, please use bsActivePane instead!');\n\n          // Update the modelValue following\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsTabsCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n        if (attrs.bsActivePane) {\n          // adapted from angularjs ngModelController bindings\n          // https://github.com/angular/angular.js/blob/v1.3.1/src%2Fng%2Fdirective%2Finput.js#L1730\n          var parsedBsActivePane = $parse(attrs.bsActivePane);\n\n          // Update bsActivePane value with change\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\n            parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n          });\n\n          // watch bsActivePane for value changes\n          scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n            bsTabsCtrl.$setActive(newValue * 1);\n          }, true);\n        }\n      }\n    };\n\n  }])\n\n  .directive('bsPane', [\"$window\", \"$animate\", \"$sce\", function($window, $animate, $sce) {\n\n    return {\n      require: ['^?ngModel', '^bsTabs'],\n      scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('tab-pane');\n\n        // Observe title attribute for change\n        attrs.$observe('title', function(newValue, oldValue) {\n          scope.title = $sce.trustAsHtml(newValue);\n        });\n\n        // Add animation class\n        if(bsTabsCtrl.$options.animation) {\n          element.addClass(bsTabsCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsTabs controller\n        bsTabsCtrl.$push(scope);\n\n        // remove pane from tab controller when pane is destroyed\n        scope.$on('$destroy', function() {\n          bsTabsCtrl.$remove(scope);\n        });\n\n        function render() {\n          var index = bsTabsCtrl.$panes.indexOf(scope);\n          var active = bsTabsCtrl.$panes.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n        }\n\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  }]);\n\n// Source: scrollspy.js\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$scrollspy', function() {\n\n    // Pool of registered spies\n    var spies = this.$$spies = {};\n\n    var defaults = this.defaults = {\n      debounce: 150,\n      throttle: 100,\n      offset: 100\n    };\n\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"dimensions\", \"debounce\", \"throttle\", function($window, $document, $rootScope, dimensions, debounce, throttle) {\n\n      var windowEl = angular.element($window);\n      var docEl = angular.element($document.prop('documentElement'));\n      var bodyEl = angular.element($window.document.body);\n\n      // Helper functions\n\n      function nodeName(element, name) {\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\n      }\n\n      function ScrollSpyFactory(config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        if(!options.element) options.element = bodyEl;\n        var isWindowSpy = nodeName(options.element, 'body');\n        var scrollEl = isWindowSpy ? windowEl : options.element;\n        var scrollId = isWindowSpy ? 'window' : options.id;\n\n        // Use existing spy\n        if(spies[scrollId]) {\n          spies[scrollId].$$count++;\n          return spies[scrollId];\n        }\n\n        var $scrollspy = {};\n\n        // Private vars\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\n        var trackedElements = $scrollspy.$trackedElements = [];\n        var sortedElements = [];\n        var activeTarget;\n        var debouncedCheckPosition;\n        var throttledCheckPosition;\n        var debouncedCheckOffsets;\n        var viewportHeight;\n        var scrollTop;\n\n        $scrollspy.init = function() {\n\n          // Setup internal ref counter\n          this.$$count = 1;\n\n          // Bind events\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\n          scrollEl.on('click', this.checkPositionWithEventLoop);\n          windowEl.on('resize', debouncedCheckPosition);\n          scrollEl.on('scroll', throttledCheckPosition);\n\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\n          debouncedCheckOffsets();\n\n          // Register spy for reuse\n          if(scrollId) {\n            spies[scrollId] = $scrollspy;\n          }\n\n        };\n\n        $scrollspy.destroy = function() {\n\n          // Check internal ref counter\n          this.$$count--;\n          if(this.$$count > 0) {\n            return;\n          }\n\n          // Unbind events\n          scrollEl.off('click', this.checkPositionWithEventLoop);\n          windowEl.off('resize', debouncedCheckPosition);\n          scrollEl.off('scroll', throttledCheckPosition);\n          unbindViewContentLoaded();\n          unbindIncludeContentLoaded();\n          if (scrollId) {\n            delete spies[scrollId];\n          }\n        };\n\n        $scrollspy.checkPosition = function() {\n\n          // Not ready yet\n          if(!sortedElements.length) return;\n\n          // Calculate the scroll position\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\n\n          // Calculate the viewport height for use by the components\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\n\n          // Activate first element if scroll is smaller\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\n            return $scrollspy.$activateElement(sortedElements[0]);\n          }\n\n          // Activate proper element\n          for (var i = sortedElements.length; i--;) {\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\n            if(activeTarget === sortedElements[i].target) continue;\n            if(scrollTop < sortedElements[i].offsetTop) continue;\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\n            return $scrollspy.$activateElement(sortedElements[i]);\n          }\n\n        };\n\n        $scrollspy.checkPositionWithEventLoop = function() {\n          // IE 9 throws an error if we use 'this' instead of '$scrollspy'\n          // in this setTimeout call\n          setTimeout($scrollspy.checkPosition, 1);\n        };\n\n        // Protected methods\n\n        $scrollspy.$activateElement = function(element) {\n          if(activeTarget) {\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\n            if(activeElement) {\n              activeElement.source.removeClass('active');\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\n                activeElement.source.parent().parent().removeClass('active');\n              }\n            }\n          }\n          activeTarget = element.target;\n          element.source.addClass('active');\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\n            element.source.parent().parent().addClass('active');\n          }\n        };\n\n        $scrollspy.$getTrackedElement = function(target) {\n          return trackedElements.filter(function(obj) {\n            return obj.target === target;\n          })[0];\n        };\n\n        // Track offsets behavior\n\n        $scrollspy.checkOffsets = function() {\n\n          angular.forEach(trackedElements, function(trackedElement) {\n            var targetElement = document.querySelector(trackedElement.target);\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\n          });\n\n          sortedElements = trackedElements\n          .filter(function(el) {\n            return el.offsetTop !== null;\n          })\n          .sort(function(a, b) {\n            return a.offsetTop - b.offsetTop;\n          });\n\n          debouncedCheckPosition();\n\n        };\n\n        $scrollspy.trackElement = function(target, source) {\n          trackedElements.push({target: target, source: source});\n        };\n\n        $scrollspy.untrackElement = function(target, source) {\n          var toDelete;\n          for (var i = trackedElements.length; i--;) {\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\n              toDelete = i;\n              break;\n            }\n          }\n          trackedElements = trackedElements.splice(toDelete, 1);\n        };\n\n        $scrollspy.activate = function(i) {\n          trackedElements[i].addClass('active');\n        };\n\n        // Initialize plugin\n\n        $scrollspy.init();\n        return $scrollspy;\n\n      }\n\n      return ScrollSpyFactory;\n\n    }];\n\n  })\n\n  .directive('bsScrollspy', [\"$rootScope\", \"debounce\", \"dimensions\", \"$scrollspy\", function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'EAC',\n      link: function postLink(scope, element, attr) {\n\n        var options = {scope: scope};\n        angular.forEach(['offset', 'target'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var scrollspy = $scrollspy(options);\n        scrollspy.trackElement(options.target, element);\n\n        scope.$on('$destroy', function() {\n          if (scrollspy) {\n            scrollspy.untrackElement(options.target, element);\n            scrollspy.destroy();\n          }\n          options = null;\n          scrollspy = null;\n        });\n\n      }\n    };\n\n  }])\n\n\n  .directive('bsScrollspyList', [\"$rootScope\", \"debounce\", \"dimensions\", \"$scrollspy\", function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'A',\n      compile: function postLink(element, attr) {\n        var children = element[0].querySelectorAll('li > a[href]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\n        });\n      }\n\n    };\n\n  }]);\n\n// Source: timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', [\n  'mgcrea.ngStrap.helpers.dateParser',\n  'mgcrea.ngStrap.helpers.dateFormatter',\n  'mgcrea.ngStrap.tooltip'])\n\n  .provider('$timepicker', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'timepicker',\n      placement: 'bottom-left',\n      template: 'timepicker/timepicker.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      // lang: $locale.id,\n      useNative: true,\n      timeType: 'date',\n      timeFormat: 'shortTime',\n      modelTimeFormat: null,\n      autoclose: false,\n      minTime: -Infinity,\n      maxTime: +Infinity,\n      length: 5,\n      hourStep: 1,\n      minuteStep: 5,\n      iconUp: 'glyphicon glyphicon-chevron-up',\n      iconDown: 'glyphicon glyphicon-chevron-down',\n      arrowBehavior: 'pager'\n    };\n\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$sce\", \"$dateFormatter\", \"$tooltip\", \"$timeout\", function($window, $document, $rootScope, $sce, $dateFormatter, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n      if(!defaults.lang) defaults.lang = $dateFormatter.getDefaultLocale();\n\n      function timepickerFactory(element, controller, config) {\n\n        var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\n        var parentScope = config.scope;\n        var options = $timepicker.$options;\n        var scope = $timepicker.$scope;\n\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n\n        // View vars\n\n        var selectedIndex = 0;\n        var startDate = controller.$dateValue || new Date();\n        var viewDate = {hour: startDate.getHours(), meridian: startDate.getHours() < 12, minute: startDate.getMinutes(), second: startDate.getSeconds(), millisecond: startDate.getMilliseconds()};\n\n        var format = $dateFormatter.getDatetimeFormat(options.timeFormat, lang);\n\n        var hoursFormat = $dateFormatter.hoursFormat(format),\n          timeSeparator = $dateFormatter.timeSeparator(format),\n          minutesFormat = $dateFormatter.minutesFormat(format),\n          showAM = $dateFormatter.showAM(format);\n\n        scope.$iconUp = options.iconUp;\n        scope.$iconDown = options.iconDown;\n\n        // Scope methods\n\n        scope.$select = function(date, index) {\n          $timepicker.select(date, index);\n        };\n        scope.$moveIndex = function(value, index) {\n          $timepicker.$moveIndex(value, index);\n        };\n        scope.$switchMeridian = function(date) {\n          $timepicker.switchMeridian(date);\n        };\n\n        // Public methods\n\n        $timepicker.update = function(date) {\n          // console.warn('$timepicker.update() newValue=%o', date);\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\n            $timepicker.$date = date;\n            angular.extend(viewDate, {hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), millisecond: date.getMilliseconds()});\n            $timepicker.$build();\n          } else if(!$timepicker.$isBuilt) {\n            $timepicker.$build();\n          }\n        };\n\n        $timepicker.select = function(date, index, keep) {\n          // console.warn('$timepicker.select', date, scope.$mode);\n          if(!controller.$dateValue || isNaN(controller.$dateValue.getTime())) controller.$dateValue = new Date(1970, 0, 1);\n          if(!angular.isDate(date)) date = new Date(date);\n          if(index === 0) controller.$dateValue.setHours(date.getHours());\n          else if(index === 1) controller.$dateValue.setMinutes(date.getMinutes());\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n          if(options.autoclose && !keep) {\n            $timeout(function() { $timepicker.hide(true); });\n          }\n        };\n\n        $timepicker.switchMeridian = function(date) {\n          if (!controller.$dateValue || isNaN(controller.$dateValue.getTime())) {\n            return;\n          }\n          var hours = (date || controller.$dateValue).getHours();\n          controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\n          controller.$setViewValue(angular.copy(controller.$dateValue));\n          controller.$render();\n        };\n\n        // Protected methods\n\n        $timepicker.$build = function() {\n          // console.warn('$timepicker.$build() viewDate=%o', viewDate);\n          var i, midIndex = scope.midIndex = parseInt(options.length / 2, 10);\n          var hours = [], hour;\n          for(i = 0; i < options.length; i++) {\n            hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\n            hours.push({date: hour, label: formatDate(hour, hoursFormat), selected: $timepicker.$date && $timepicker.$isSelected(hour, 0), disabled: $timepicker.$isDisabled(hour, 0)});\n          }\n          var minutes = [], minute;\n          for(i = 0; i < options.length; i++) {\n            minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\n            minutes.push({date: minute, label: formatDate(minute, minutesFormat), selected: $timepicker.$date && $timepicker.$isSelected(minute, 1), disabled: $timepicker.$isDisabled(minute, 1)});\n          }\n\n          var rows = [];\n          for(i = 0; i < options.length; i++) {\n            rows.push([hours[i], minutes[i]]);\n          }\n          scope.rows = rows;\n          scope.showAM = showAM;\n          scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\n          scope.timeSeparator = timeSeparator;\n          $timepicker.$isBuilt = true;\n        };\n\n        $timepicker.$isSelected = function(date, index) {\n          if(!$timepicker.$date) return false;\n          else if(index === 0) {\n            return date.getHours() === $timepicker.$date.getHours();\n          } else if(index === 1) {\n            return date.getMinutes() === $timepicker.$date.getMinutes();\n          }\n        };\n\n        $timepicker.$isDisabled = function(date, index) {\n          var selectedTime;\n          if(index === 0) {\n            selectedTime = date.getTime() + viewDate.minute * 6e4;\n          } else if(index === 1) {\n            selectedTime = date.getTime() + viewDate.hour * 36e5;\n          }\n          return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\n        };\n\n        scope.$arrowAction = function (value, index) {\n          if (options.arrowBehavior === 'picker') {\n            $timepicker.$setTimeByStep(value,index);\n          } else {\n            $timepicker.$moveIndex(value,index);\n          }\n        };\n\n        $timepicker.$setTimeByStep = function(value, index) {\n          var newDate = new Date($timepicker.$date);\n          var hours = newDate.getHours(), hoursLength = formatDate(newDate, hoursFormat).length;\n          var minutes = newDate.getMinutes(), minutesLength = formatDate(newDate, minutesFormat).length;\n          if (index === 0) {\n            newDate.setHours(hours - (parseInt(options.hourStep, 10) * value));\n          }\n          else {\n            newDate.setMinutes(minutes - (parseInt(options.minuteStep, 10) * value));\n          }\n          $timepicker.select(newDate, index, true);\n        };\n\n        $timepicker.$moveIndex = function(value, index) {\n          var targetDate;\n          if(index === 0) {\n            targetDate = new Date(1970, 0, 1, viewDate.hour + (value * options.length), viewDate.minute);\n            angular.extend(viewDate, {hour: targetDate.getHours()});\n          } else if(index === 1) {\n            targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + (value * options.length * options.minuteStep));\n            angular.extend(viewDate, {minute: targetDate.getMinutes()});\n          }\n          $timepicker.$build();\n        };\n\n        $timepicker.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          if(evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\n              targetEl = targetEl.parent();\n            }\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $timepicker.$onKeyDown = function(evt) {\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Close on enter\n          if(evt.keyCode === 13) return $timepicker.hide(true);\n\n          // Navigate with keyboard\n          var newDate = new Date($timepicker.$date);\n          var hours = newDate.getHours(), hoursLength = formatDate(newDate, hoursFormat).length;\n          var minutes = newDate.getMinutes(), minutesLength = formatDate(newDate, minutesFormat).length;\n          var lateralMove = /(37|39)/.test(evt.keyCode);\n          var count = 2 + showAM * 1;\n\n          // Navigate indexes (left, right)\n          if (lateralMove) {\n            if(evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1;\n            else if(evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\n          }\n\n          // Update values (up, down)\n          var selectRange = [0, hoursLength];\n          if(selectedIndex === 0) {\n            if(evt.keyCode === 38) newDate.setHours(hours - parseInt(options.hourStep, 10));\n            else if(evt.keyCode === 40) newDate.setHours(hours + parseInt(options.hourStep, 10));\n            // re-calculate hours length because we have changed hours value\n            hoursLength = formatDate(newDate, hoursFormat).length;\n            selectRange = [0, hoursLength];\n          } else if(selectedIndex === 1) {\n            if(evt.keyCode === 38) newDate.setMinutes(minutes - parseInt(options.minuteStep, 10));\n            else if(evt.keyCode === 40) newDate.setMinutes(minutes + parseInt(options.minuteStep, 10));\n            // re-calculate minutes length because we have changes minutes value\n            minutesLength = formatDate(newDate, minutesFormat).length;\n            selectRange = [hoursLength + 1, hoursLength + 1 + minutesLength];\n          } else if(selectedIndex === 2) {\n            if(!lateralMove) $timepicker.switchMeridian();\n            selectRange = [hoursLength + 1 + minutesLength + 1, hoursLength + 1 + minutesLength + 3];\n          }\n          $timepicker.select(newDate, selectedIndex, true);\n          createSelection(selectRange[0], selectRange[1]);\n          parentScope.$digest();\n        };\n\n        // Private\n\n        function createSelection(start, end) {\n          if(element[0].createTextRange) {\n            var selRange = element[0].createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n          } else if(element[0].setSelectionRange) {\n            element[0].setSelectionRange(start, end);\n          } else if(angular.isUndefined(element[0].selectionStart)) {\n            element[0].selectionStart = start;\n            element[0].selectionEnd = end;\n          }\n        }\n\n        function focusElement() {\n          element[0].focus();\n        }\n\n        // Overrides\n\n        var _init = $timepicker.init;\n        $timepicker.init = function() {\n          if(isNative && options.useNative) {\n            element.prop('type', 'time');\n            element.css('-webkit-appearance', 'textfield');\n            return;\n          } else if(isTouch) {\n            element.prop('type', 'text');\n            element.attr('readonly', 'true');\n            element.on('click', focusElement);\n          }\n          _init();\n        };\n\n        var _destroy = $timepicker.destroy;\n        $timepicker.destroy = function() {\n          if(isNative && options.useNative) {\n            element.off('click', focusElement);\n          }\n          _destroy();\n        };\n\n        var _show = $timepicker.show;\n        $timepicker.show = function() {\n          _show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $timepicker.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $timepicker.hide;\n        $timepicker.hide = function(blur) {\n          if(!$timepicker.$isShown) return;\n          $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $timepicker.$onKeyDown);\n          }\n          _hide(blur);\n        };\n\n        return $timepicker;\n\n      }\n\n      timepickerFactory.defaults = defaults;\n      return timepickerFactory;\n\n    }];\n\n  })\n\n\n  .directive('bsTimepicker', [\"$window\", \"$parse\", \"$q\", \"$dateFormatter\", \"$dateParser\", \"$timepicker\", function($window, $parse, $q, $dateFormatter, $dateParser, $timepicker) {\n\n    var defaults = $timepicker.defaults;\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, controller: controller};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'timeType', 'timeFormat', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'length', 'arrowBehavior', 'iconUp', 'iconDown', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!timepicker || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(timepicker),?/i);\n          newValue === true ? timepicker.show() : timepicker.hide();\n        });\n\n        // Initialize timepicker\n        if(isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\n        var timepicker = $timepicker(element, controller, options);\n        options = timepicker.$options;\n\n        var lang = options.lang;\n        var formatDate = function(date, format) {\n          return $dateFormatter.formatDate(date, format, lang);\n        };\n\n        // Initialize parser\n        var dateParser = $dateParser({format: options.timeFormat, lang: lang});\n\n        // Observe attributes for changes\n        angular.forEach(['minTime', 'maxTime'], function(key) {\n          // console.warn('attr.$observe(%s)', key, attr[key]);\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\n            timepicker.$options[key] = dateParser.getTimeForAttribute(key, newValue);\n            !isNaN(timepicker.$options[key]) && timepicker.$build();\n            validateAgainstMinMaxTime(controller.$dateValue);\n          });\n        });\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue, controller.$dateValue);\n          timepicker.update(controller.$dateValue);\n        }, true);\n\n        function validateAgainstMinMaxTime(parsedTime) {\n          if (!angular.isDate(parsedTime)) return;\n          var isMinValid = isNaN(options.minTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) >= options.minTime;\n          var isMaxValid = isNaN(options.maxTime) || new Date(parsedTime.getTime()).setFullYear(1970, 0, 1) <= options.maxTime;\n          var isValid = isMinValid && isMaxValid;\n          controller.$setValidity('date', isValid);\n          controller.$setValidity('min', isMinValid);\n          controller.$setValidity('max', isMaxValid);\n          // Only update the model when we have a valid date\n          if(!isValid) {\n              return;\n          }\n          controller.$dateValue = parsedTime;\n        }\n\n        // viewValue -> $parsers -> modelValue\n        controller.$parsers.unshift(function(viewValue) {\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\n          // Null values should correctly reset the model value & validity\n          if(!viewValue) {\n            // BREAKING CHANGE:\n            // return null (not undefined) when input value is empty, so angularjs 1.3\n            // ngModelController can go ahead and run validators, like ngRequired\n            controller.$setValidity('date', true);\n            return null;\n          }\n          var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\n          if(!parsedTime || isNaN(parsedTime.getTime())) {\n            controller.$setValidity('date', false);\n            // return undefined, causes ngModelController to\n            // invalidate model value\n            return;\n          } else {\n            validateAgainstMinMaxTime(parsedTime);\n          }\n          if(options.timeType === 'string') {\n            return formatDate(parsedTime, options.modelTimeFormat || options.timeFormat);\n          } else if(options.timeType === 'number') {\n            return controller.$dateValue.getTime();\n          } else if(options.timeType === 'unix') {\n            return controller.$dateValue.getTime() / 1000;\n          } else if(options.timeType === 'iso') {\n            return controller.$dateValue.toISOString();\n          } else {\n            return new Date(controller.$dateValue);\n          }\n        });\n\n        // modelValue -> $formatters -> viewValue\n        controller.$formatters.push(function(modelValue) {\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n          var date;\n          if(angular.isUndefined(modelValue) || modelValue === null) {\n            date = NaN;\n          } else if(angular.isDate(modelValue)) {\n            date = modelValue;\n          } else if(options.timeType === 'string') {\n            date = dateParser.parse(modelValue, null, options.modelTimeFormat);\n          } else if(options.timeType === 'unix') {\n            date = new Date(modelValue * 1000);\n          } else {\n            date = new Date(modelValue);\n          }\n          // Setup default value?\n          // if(isNaN(date.getTime())) date = new Date(new Date().setMinutes(0) + 36e5);\n          controller.$dateValue = date;\n          return getTimeFormattedString();\n        });\n\n        // viewValue -> element\n        controller.$render = function() {\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\n          element.val(getTimeFormattedString());\n        };\n\n        function getTimeFormattedString() {\n          return !controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : formatDate(controller.$dateValue, options.timeFormat);\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (timepicker) timepicker.destroy();\n          options = null;\n          timepicker = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      template: 'tooltip/tooltip.tpl.html',\n      contentTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0,\n      autoClose: false,\n      bsEnabled: true\n    };\n\n    this.$get = [\"$window\", \"$rootScope\", \"$compile\", \"$q\", \"$templateCache\", \"$http\", \"$animate\", \"$sce\", \"dimensions\", \"$$rAF\", \"$timeout\", function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $sce, dimensions, $$rAF, $timeout) {\n\n      var trim = String.prototype.trim;\n      var isTouch = 'createTouch' in $window.document;\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n      var $body = angular.element($window.document);\n\n      function TooltipFactory(element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var nodeName = element[0].nodeName.toLowerCase();\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        $tooltip.$promise = fetchTemplate(options.template);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(options.delay && angular.isString(options.delay)) {\n          var split = options.delay.split(',').map(parseFloat);\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n        }\n\n        // store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $tooltip.$id = options.id || element.attr('id') || '';\n\n        // Support scope as string options\n        if(options.title) {\n          scope.title = $sce.trustAsHtml(options.title);\n        }\n\n        // Provide scope helpers\n        scope.$setEnabled = function(isEnabled) {\n          scope.$$postDigest(function() {\n            $tooltip.setEnabled(isEnabled);\n          });\n        };\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $tooltip.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout, hoverState;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize tooltip\n        var tipLinker, tipElement, tipTemplate, tipContainer, tipScope;\n        $tooltip.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          tipTemplate = template;\n          tipLinker = $compile(template);\n          $tooltip.init();\n        });\n\n        $tooltip.init = function() {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if(options.container === 'self') {\n            tipContainer = element;\n          } else if(angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if(options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          bindTriggerEvents();\n\n          // Options: target\n          if(options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\n          }\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function() {\n\n          // Unbind events\n          unbindTriggerEvents();\n\n          // Remove element\n          destroyTipElement();\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function() {\n            if (hoverState ==='in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function() {\n          if (!options.bsEnabled || $tooltip.$isShown) return;\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          var parent, after;\n          if (options.container) {\n            parent = tipContainer;\n            if (tipContainer[0].lastChild) {\n              after = angular.element(tipContainer[0].lastChild);\n            } else {\n              after = null;\n            }\n          } else {\n            parent = null;\n            after = element;\n          }\n\n\n          // Hide any existing tipElement\n          if(tipElement) destroyTipElement();\n          // Fetch a cloned element linked from template\n          tipScope = $tooltip.$scope.$new();\n          tipElement = $tooltip.$element = tipLinker(tipScope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'});\n\n          // Options: animation\n          if(options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if(options.customClass) tipElement.addClass(options.customClass);\n\n          // Support v1.3+ $animate\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\n          var promise = $animate.enter(tipElement, parent, after, enterAnimateCallback);\n          if(promise && promise.then) promise.then(enterAnimateCallback);\n\n          $tooltip.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          $$rAF(function () {\n            $tooltip.$applyPlacement();\n\n            // Once placed, make the tooltip visible\n            if(tipElement) tipElement.css({visibility: 'visible'});\n          }); // var a = bodyEl.offsetWidth + 1; ?\n\n          // Bind events\n          if(options.keyboard) {\n            if(options.trigger !== 'focus') {\n              $tooltip.focus();\n            }\n            bindKeyboardEvents();\n          }\n\n          if(options.autoClose) {\n            bindAutoCloseEvents();\n          }\n\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\n        }\n\n        $tooltip.leave = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        var _blur;\n        var _tipToHide;\n        $tooltip.hide = function(blur) {\n\n          if(!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n\n          // store blur value for leaveAnimateCallback to use\n          _blur = blur;\n\n          // store current tipElement reference to use\n          // in leaveAnimateCallback\n          _tipToHide = tipElement;\n\n          // Support v1.3+ $animate\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\n          var promise = $animate.leave(tipElement, leaveAnimateCallback);\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\n\n          $tooltip.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          if(options.keyboard && tipElement !== null) {\n            unbindKeyboardEvents();\n          }\n\n          if(options.autoClose && tipElement !== null) {\n            unbindAutoCloseEvents();\n          }\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\n\n          // check if current tipElement still references\n          // the same element when hide was called\n          if (tipElement === _tipToHide) {\n            // Allow to blur the input when hidden, like when pressing enter key\n            if(_blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n\n            // clean up child scopes\n            destroyTipElement();\n          }\n        }\n\n        $tooltip.toggle = function() {\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\n        };\n\n        $tooltip.focus = function() {\n          tipElement[0].focus();\n        };\n\n        $tooltip.setEnabled = function(isEnabled) {\n          options.bsEnabled = isEnabled;\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function() {\n          if(!tipElement) return;\n\n          // Determine if we're doing an auto or normal placement\n          var placement = options.placement,\n              autoToken = /\\s?auto?\\s?/i,\n              autoPlace  = autoToken.test(placement);\n\n          if (autoPlace) {\n            placement = placement.replace(autoToken, '') || defaults.placement;\n          }\n\n          // Need to add the position class before we get\n          // the offsets\n          tipElement.addClass(options.placement);\n\n          // Get the position of the target element\n          // and the height and width of the tooltip so we can center it.\n          var elementPosition = getPosition(),\n              tipWidth = tipElement.prop('offsetWidth'),\n              tipHeight = tipElement.prop('offsetHeight');\n\n          // If we're auto placing, we need to check the positioning\n          if (autoPlace) {\n            var originalPlacement = placement;\n            var container = options.container ? angular.element(document.querySelector(options.container)) : element.parent();\n            var containerPosition = getPosition(container);\n\n            // Determine if the vertical placement\n            if (originalPlacement.indexOf('bottom') >= 0 && elementPosition.bottom + tipHeight > containerPosition.bottom) {\n              placement = originalPlacement.replace('bottom', 'top');\n            } else if (originalPlacement.indexOf('top') >= 0 && elementPosition.top - tipHeight < containerPosition.top) {\n              placement = originalPlacement.replace('top', 'bottom');\n            }\n\n            // Determine the horizontal placement\n            // The exotic placements of left and right are opposite of the standard placements.  Their arrows are put on the left/right\n            // and flow in the opposite direction of their placement.\n            if ((originalPlacement === 'right' || originalPlacement === 'bottom-left' || originalPlacement === 'top-left') &&\n                elementPosition.right + tipWidth > containerPosition.width) {\n\n              placement = originalPlacement === 'right' ? 'left' : placement.replace('left', 'right');\n            } else if ((originalPlacement === 'left' || originalPlacement === 'bottom-right' || originalPlacement === 'top-right') &&\n                elementPosition.left - tipWidth < containerPosition.left) {\n\n              placement = originalPlacement === 'left' ? 'right' : placement.replace('right', 'left');\n            }\n\n            tipElement.removeClass(originalPlacement).addClass(placement);\n          }\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(placement, elementPosition, tipWidth, tipHeight);\n          applyPlacementCss(tipPosition.top, tipPosition.left);\n        };\n\n        $tooltip.$onKeyUp = function(evt) {\n          if (evt.which === 27 && $tooltip.$isShown) {\n            $tooltip.hide();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusKeyUp = function(evt) {\n          if (evt.which === 27) {\n            element[0].blur();\n            evt.stopPropagation();\n          }\n        };\n\n        $tooltip.$onFocusElementMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\n        };\n\n        // bind/unbind events\n        function bindTriggerEvents() {\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function(trigger) {\n            if(trigger === 'click') {\n              element.on('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          });\n        }\n\n        function unbindTriggerEvents() {\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if(trigger === 'click') {\n              element.off('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          }\n        }\n\n        function bindKeyboardEvents() {\n          if(options.trigger !== 'focus') {\n            tipElement.on('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.on('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents() {\n          if(options.trigger !== 'focus') {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          } else {\n            element.off('keyup', $tooltip.$onFocusKeyUp);\n          }\n        }\n\n        var _autoCloseEventsBinded = false;\n        function bindAutoCloseEvents() {\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            // Stop propagation when clicking inside tooltip\n            tipElement.on('click', stopEventPropagation);\n\n            // Hide when clicking outside tooltip\n            $body.on('click', $tooltip.hide);\n\n            _autoCloseEventsBinded = true;\n          }, 0, false);\n        }\n\n        function unbindAutoCloseEvents() {\n          if (_autoCloseEventsBinded) {\n            tipElement.off('click', stopEventPropagation);\n            $body.off('click', $tooltip.hide);\n            _autoCloseEventsBinded = false;\n          }\n        }\n\n        function stopEventPropagation(event) {\n          event.stopPropagation();\n        }\n\n        // Private methods\n\n        function getPosition($element) {\n          $element = $element || (options.target || element);\n\n          var el = $element[0];\n\n          var elRect = el.getBoundingClientRect();\n          if (elRect.width === null) {\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n            elRect = angular.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top });\n          }\n\n          var elPos;\n          if (options.container === 'body') {\n            elPos = dimensions.offset(el);\n          } else {\n            elPos = dimensions.position(el);\n          }\n\n          return angular.extend({}, elRect, elPos);\n        }\n\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n          case 'right':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left + position.width\n            };\n            break;\n          case 'bottom':\n            offset = {\n              top: position.top + position.height,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          case 'left':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left - actualWidth\n            };\n            break;\n          default:\n            offset = {\n              top: position.top - actualHeight,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          }\n\n          if(!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if(split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n            case 'left':\n              offset.left = position.left;\n              break;\n            case 'right':\n              offset.left =  position.left + position.width - actualWidth;\n            }\n          } else if(split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n            case 'top':\n              offset.top = position.top - actualHeight;\n              break;\n            case 'bottom':\n              offset.top = position.top + position.height;\n            }\n          }\n\n          return offset;\n        }\n\n        function applyPlacementCss(top, left) {\n          tipElement.css({ top: top + 'px', left: left + 'px' });\n        }\n\n        function destroyTipElement() {\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          if($tooltip.$isShown && tipElement !== null) {\n            if(options.autoClose) {\n              unbindAutoCloseEvents();\n            }\n\n            if(options.keyboard) {\n              unbindKeyboardEvents();\n            }\n          }\n\n          if(tipScope) {\n            tipScope.$destroy();\n            tipScope = null;\n          }\n\n          if(tipElement) {\n            tipElement.remove();\n            tipElement = $tooltip.$element = null;\n          }\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      var fetchPromises = {};\n      function fetchTemplate(template) {\n        if(fetchPromises[template]) return fetchPromises[template];\n        return (fetchPromises[template] = $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        }));\n      }\n\n      return TooltipFactory;\n\n    }];\n\n  })\n\n  .directive('bsTooltip', [\"$window\", \"$location\", \"$sce\", \"$tooltip\", \"$$rAF\", function($window, $location, $sce, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'backdropAnimation', 'type', 'customClass', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')){\n          scope.title = '';\n        }\n\n        // Observe scope attributes for change\n        attr.$observe('title', function(newValue) {\n          if (angular.isDefined(newValue) || !scope.hasOwnProperty('title')) {\n            var oldValue = scope.title;\n            scope.title = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && $$rAF(function() {\n              tooltip && tooltip.$applyPlacement();\n            });\n          }\n        });\n\n        // Support scope as an object\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.title = newValue;\n          }\n          angular.isDefined(oldValue) && $$rAF(function() {\n            tooltip && tooltip.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!tooltip || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(tooltip),?/i);\n          newValue === true ? tooltip.show() : tooltip.hide();\n        });\n\n        // Enabled binding support\n        attr.bsEnabled && scope.$watch(attr.bsEnabled, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.bsEnabled, newValue, oldValue);\n          if(!tooltip || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|1|,?(tooltip),?/i);\n          newValue === false ? tooltip.setEnabled(false) : tooltip.setEnabled(true);\n        });\n\n        // Initialize popover\n        var tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  }]);\n\n// Source: typeahead.js\nangular.module('mgcrea.ngStrap.typeahead', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$typeahead', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'typeahead',\n      prefixEvent: '$typeahead',\n      placement: 'bottom-left',\n      template: 'typeahead/typeahead.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      minLength: 1,\n      filter: 'filter',\n      limit: 6,\n      comparator: ''\n    };\n\n    this.$get = [\"$window\", \"$rootScope\", \"$tooltip\", \"$timeout\", function($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n\n      function TypeaheadFactory(element, controller, config) {\n\n        var $typeahead = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $typeahead = $tooltip(element, options);\n        var parentScope = config.scope;\n        var scope = $typeahead.$scope;\n\n        scope.$resetMatches = function(){\n          scope.$matches = [];\n          scope.$activeIndex = 0;\n        };\n        scope.$resetMatches();\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $typeahead.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $typeahead.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $typeahead.$isVisible();\n        };\n\n        // Public methods\n\n        $typeahead.update = function(matches) {\n          scope.$matches = matches;\n          if(scope.$activeIndex >= matches.length) {\n            scope.$activeIndex = 0;\n          }\n        };\n\n        $typeahead.activate = function(index) {\n          scope.$activeIndex = index;\n        };\n\n        $typeahead.select = function(index) {\n          var value = scope.$matches[index].value;\n          // console.log('$setViewValue', value);\n          controller.$setViewValue(value);\n          controller.$render();\n          scope.$resetMatches();\n          if(parentScope) parentScope.$digest();\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $typeahead);\n        };\n\n        // Protected methods\n\n        $typeahead.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return !!scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && angular.isString(controller.$viewValue) && controller.$viewValue.length >= options.minLength;\n        };\n\n        $typeahead.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $typeahead.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown\n          evt.preventDefault();\n          evt.stopPropagation();\n        };\n\n        $typeahead.$onKeyDown = function(evt) {\n          if(!/(38|40|13)/.test(evt.keyCode)) return;\n\n          // Let ngSubmit pass if the typeahead tip is hidden\n          if($typeahead.$isVisible()) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // Select with enter\n          if(evt.keyCode === 13 && scope.$matches.length) {\n            $typeahead.select(scope.$activeIndex);\n          }\n\n          // Navigate with keyboard\n          else if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n          scope.$digest();\n        };\n\n        // Overrides\n\n        var show = $typeahead.show;\n        $typeahead.show = function() {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $typeahead.$element.on('mousedown', $typeahead.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $typeahead.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var hide = $typeahead.hide;\n        $typeahead.hide = function() {\n          $typeahead.$element.off('mousedown', $typeahead.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $typeahead.$onKeyDown);\n          }\n          hide();\n        };\n\n        return $typeahead;\n\n      }\n\n      TypeaheadFactory.defaults = defaults;\n      return TypeaheadFactory;\n\n    }];\n\n  })\n\n  .directive('bsTypeahead', [\"$window\", \"$parse\", \"$q\", \"$typeahead\", \"$parseOptions\", function($window, $parse, $q, $typeahead, $parseOptions) {\n\n    var defaults = $typeahead.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'filter', 'limit', 'minLength', 'watchOptions', 'selectMode', 'comparator', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Build proper ngOptions\n        var filter = options.filter || defaults.filter;\n        var limit = options.limit || defaults.limit;\n        var comparator = options.comparator || defaults.comparator;\n\n        var ngOptions = attr.ngOptions;\n        if(filter) ngOptions += ' | ' + filter + ':$viewValue';\n        if (comparator) ngOptions += ':' + comparator;\n        if(limit) ngOptions += ' | limitTo:' + limit;\n        var parsedOptions = $parseOptions(ngOptions);\n\n        // Initialize typeahead\n        var typeahead = $typeahead(element, controller, options);\n\n        // Watch options on demand\n        if(options.watchOptions) {\n          // Watch ngOptions values before filtering for changes, drop function calls\n          var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').replace(/\\(.*\\)/g, '').trim();\n          scope.$watch(watchedOptions, function (newValue, oldValue) {\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n            parsedOptions.valuesFn(scope, controller).then(function (values) {\n              typeahead.update(values);\n              controller.$render();\n            });\n          }, true);\n        }\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('$watch', element.attr('ng-model'), newValue);\n          scope.$modelValue = newValue; // Publish modelValue on scope for custom templates\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            // Prevent input with no future prospect if selectMode is truthy\n            // @TODO test selectMode\n            if(options.selectMode && !values.length && newValue.length > 0) {\n              controller.$setViewValue(controller.$viewValue.substring(0, controller.$viewValue.length - 1));\n              return;\n            }\n            if(values.length > limit) values = values.slice(0, limit);\n            var isVisible = typeahead.$isVisible();\n            isVisible && typeahead.update(values);\n            // Do not re-queue an update if a correct value has been selected\n            if(values.length === 1 && values[0].value === newValue) return;\n            !isVisible && typeahead.update(values);\n            // Queue a new rendering that will leverage collection loading\n            controller.$render();\n          });\n        });\n\n        // modelValue -> $formatters -> viewValue\n        controller.$formatters.push(function(modelValue) {\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n          var displayValue = parsedOptions.displayValue(modelValue);\n          return displayValue === undefined ? '' : displayValue;\n        });\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          if(controller.$isEmpty(controller.$viewValue)) return element.val('');\n          var index = typeahead.$getIndex(controller.$modelValue);\n          var selected = angular.isDefined(index) ? typeahead.$scope.$matches[index].label : controller.$viewValue;\n          selected = angular.isObject(selected) ? parsedOptions.displayValue(selected) : selected;\n          element.val(selected ? selected.toString().replace(/<(?:.|\\n)*?>/gm, '').trim() : '');\n        };\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (typeahead) typeahead.destroy();\n          options = null;\n          typeahead = null;\n        });\n\n      }\n    };\n\n  }]);\n\n})(window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/angular-strap/dist/angular-strap.js\n// module id = ../node_modules/angular-strap/dist/angular-strap.js\n// module chunks = 0","module.exports = \"<div class=\\\"dropdown-menu datepicker\\\" ng-class=\\\"'datepicker-mode-' + $mode\\\" style=max-width:320px>\\n<table style=table-layout:fixed;height:100%;width:100%>\\n  <thead>\\n    <tr class=text-center>\\n      <th>\\n        <button tabindex=-1 type=button class=\\\"btn btn-default pull-left\\\" ng-click=$selectPane(-1)>\\n          <i class={{$iconLeft}}></i>\\n        </button>\\n      </th>\\n      <th colspan=\\\"{{ rows[0].length - 2 }}\\\">\\n        <button tabindex=-1 type=button class=\\\"btn btn-default btn-block text-strong\\\" ng-click=$toggleMode()>\\n          <strong style=text-transform:capitalize ng-bind=title></strong>\\n        </button>\\n      </th>\\n      <th>\\n        <button tabindex=-1 type=button class=\\\"btn btn-default pull-right\\\" ng-click=$selectPane(+1)>\\n          <i class={{$iconRight}}></i>\\n        </button>\\n      </th>\\n    </tr>\\n    <tr ng-show=showLabels ng-bind-html=labels></tr>\\n  </thead>\\n  <tbody>\\n    <tr ng-repeat=\\\"(i, row) in rows\\\" height=\\\"{{ 100 / rows.length }}%\\\">\\n      <td class=text-center ng-repeat=\\\"(j, el) in row\\\">\\n        <button tabindex=-1 type=button class=\\\"btn btn-default\\\" style=width:100% ng-class=\\\"{'btn-primary': el.selected, 'btn-info btn-today': el.isToday && !el.selected}\\\" ng-click=$select(el.date) ng-disabled=el.disabled>\\n          <span ng-class=\\\"{'text-muted': el.muted}\\\" ng-bind=el.label></span>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/angular-strap/src/datepicker/datepicker.tpl.html\n// module id = ../node_modules/angular-strap/src/datepicker/datepicker.tpl.html\n// module chunks = 0 1","module.exports = __webpack_public_path__ + \"assets/aside.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/file-loader?name=assets/aside.html!./modules/docs/templates/aside.inc\n// module id = ../node_modules/file-loader/index.js?name=assets/aside.html!./modules/docs/templates/aside.inc\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/config/docsConfig.json\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/file-loader?name=assets/config/[name].[ext]!./modules/docs/assets/config/docsConfig.json\n// module id = ../node_modules/file-loader/index.js?name=assets/config/[name].[ext]!./modules/docs/assets/config/docsConfig.json\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/highlightjs/styles/github.css\n// module id = ../node_modules/highlightjs/styles/github.css\n// module chunks = 0","module.exports = {\n\t\"FIELD_ERROR\": {\n\t\t\"TEMPLATE\": {\n\t\t\t\"REQUIRED\": \"Please enter {{pronoun}} {{fieldLabel}}.\"\n\t\t},\n\t\t\"NAME_REQUIRED\": \"@:ERROR.TEMPLATE.REQUIRED\",\n\t\t\"TITLE_REQUIRED\": \"@:ERROR.TEMPLATE.REQUIRED\",\n\t\t\"TEXT_ERROR\": \" Text error from translation file.\"\n\t},\n\t\"FIELD\": {\n\t\t\"TITLE\": \"Title (from translation file)\",\n\t\t\"LABEL\": \"Label (from translation file)\",\n\t\t\"LABEL_SUFFIX\": \"40 chars max (from translation file)\"\n\t},\n\t\"OTHER\": {\n\t\t\"HINT\": \"This is a hint from the translation file\",\n\t\t\"PLACEHOLDER\": \"Select an item from the translation file\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/json-loader!./modules/docs/assets/language/enAU.json\n// module id = ../node_modules/json-loader/index.js!./modules/docs/assets/language/enAU.json\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.common.utility', []);\n\nexport default mod.name;\n\nmod.constant('ngFormLibDateUtil', {\n  convertDate: function(dateStr, newSep) {\n    // Converts a date between dd/mm/yyyy and yyyy-mm-dd\n    if (!dateStr || !newSep || !(newSep === '/' || newSep === '-')) {\n      return dateStr;\n    }\n\n    // Choose a separator string that is the 'opposite' of the desired separator\n    let oldSep = newSep === '/' ? '-' : '/';\n    let parts = dateStr.split(oldSep);\n\n    // if we get a dodgy date OR you tried to convert a date that was already in the correct format, return the input\n    if (isNaN(parts.join('')) || parts.length !== 3) {\n      return dateStr;\n    }\n\n    // Swap the year and day parts around\n    return parts[2] + newSep + parts[1] + newSep + parts[0];\n  },\n  formatDay: function(dayOrDate, month, year) {\n    let dd = dayOrDate;\n    let mm = month;\n    let yyyy = year;\n\n    if (dayOrDate.getUTCDay) {\n      dd = dayOrDate.getDate();\n      mm = dayOrDate.getMonth() + 1;// January is 0!`\n      yyyy = dayOrDate.getFullYear();\n    }\n    return (dd < 10 ? '0' + dd : dd) + '/' + (mm < 10 ? '0' + mm : mm) + '/' + yyyy;\n  },\n  dateAdd: function(dateStr, numDays) {\n    // Return a modified date in ISO format\n    let myDate = this.getDate(dateStr);\n\n    myDate.setDate(myDate.getDate() + numDays);\n\n    return this.formatDay(myDate);\n  },\n  getToday: function(optionalDate) {\n    return this.formatDay(optionalDate || new Date());\n  },\n  isISODate: function(dateStr) {\n    return typeof dateStr === 'string' && dateStr.indexOf('-') > 0;\n  },\n  getDate: function(dateStr) {\n    if (!this.isISODate(dateStr)) {\n      dateStr = this.convertDate(dateStr, '-');\n    }\n    return new Date(dateStr);\n  },\n  monthsBetween: function(date1, date2) {\n    return date2.getMonth() - date1.getMonth() + (12 * (date2.getFullYear() - date1.getFullYear()));  // eslint-disable-line no-extra-parens\n  },\n});\n\n\nmod.constant('ngFormLibStringUtil', (function() {\n  let trimRegExp = /^\\s+|\\s+$/g;\n\n  return {\n    trim: function(text) {\n      if (typeof text === 'string') {\n        return text.replace(trimRegExp, '');\n      }\n      return text;\n    },\n  };\n})());\n\n\nmod.constant('ngFormLibNumberUtil', (function() {\n  let isDigitsRegExp = /^\\d+$/;\n\n  return {\n    isDigits: function(text) {\n      return isDigitsRegExp.test(text);\n    },\n  };\n})());\n\n\nmod.constant('ngFormLibObjectUtil', {\n  getUniqueId: function() {\n    return ('' + (new Date()).getTime() + Math.random()).replace(/\\./, '');\n  },\n  toArray: function(obj) {\n    let arr = [];\n\n    for (let i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        arr[arr.length] = {key: i, value: obj[i]};\n      }\n    }\n    arr.sort(function compare(a, b) {\n      return a.key < b.key;\n    });\n    return arr;\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/common/Utility.js","import angular from 'angular';\n\n// import all of the documentation JS files\n// There should be a nicer way to do this, but this won't change very often...\nimport formControlsCommonDocs from '../ngFormLib/controls/common/docs/formControlsCommon.docs';\nimport formControlsCommonPropertiesDocs from '../ngFormLib/controls/common/docs/formControlsCommonProperties.docs';\nimport formControlsDemosDocs from '../ngFormLib/controls/common/docs/formControlsDemos.docs';\nimport formControlServiceDocs from '../ngFormLib/controls/common/docs/formControlService.docs';\nimport formPolicyDocs from '../ngFormLib/policy/docs/formPolicy.docs';\nimport formSubmitDocs from '../ngFormLib/controls/formSubmit/docs/formSubmit.docs';\nimport formResetDocs from '../ngFormLib/controls/formReset/docs/formReset.docs';\nimport formInputDocs from '../ngFormLib/controls/formInput/docs/formInput.docs';\nimport formCheckboxDocs from '../ngFormLib/controls/formCheckbox/docs/formCheckbox.docs';\nimport formRadioButtonDocs from '../ngFormLib/controls/formRadioButton/docs/formRadioButton.docs';\nimport formSelectDocs from '../ngFormLib/controls/formSelect/docs/formSelect.docs';\nimport formDateDocs from '../ngFormLib/controls/formDate/docs/formDate.docs';\nimport errorMessageContainerDocs from '../ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs';\nimport requiredMarkerDocs from '../ngFormLib/controls/requiredMarker/docs/requiredMarker.docs';\n\n\nconst mod = angular.module('ngFormLibDocs.docs.fixtures', [\n  formControlsCommonDocs,\n  formControlsCommonPropertiesDocs,\n  formControlsDemosDocs,\n  formControlServiceDocs,\n  formPolicyDocs,\n  formResetDocs,\n  formSubmitDocs,\n  formInputDocs,\n  formCheckboxDocs,\n  formRadioButtonDocs,\n  formSelectDocs,\n  formDateDocs,\n  errorMessageContainerDocs,\n  requiredMarkerDocs,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/docs/docFixtures.js","import angular from 'angular';\nimport angularAnimate from 'angular-animate';   // Allows animations to run\nimport 'angular-strap';   // No export, currently\nimport highlightjs from 'highlightjs/highlight.pack.js';\nimport {ngFormLib, defaultPolicies} from '../ngFormLib';\nimport ngTranslate from 'angular-translate';\n\n// import all of the documentation JS files\nimport docFixtures from './docFixtures';\n\n\nconst mod = angular.module('ngFormLibDocs.docs', [\n  'mgcrea.ngStrap',\n  ngFormLib,\n  defaultPolicies,\n  angularAnimate,\n  ngTranslate,\n\n  // require ALL of the docs /demo components\n  docFixtures,\n]);\n\nexport default mod.name;\n\n\n// Needed to bind to HTML and compile it when it is loaded\nmod.directive('bindCompile', ['$compile', function($compile) {\n  return {\n    restrict: 'A',\n    replace: true,\n    link: function(scope, element, attrs) {\n      scope.$watch(attrs.bindCompile, function(html) {\n        element[0].innerHTML = html;\n        $compile(element.contents())(scope);\n      });\n    },\n  };\n}]);\n\nmod.config(['$locationProvider', function($locationProvider) {\n  // configure html5 to get links working on jsfiddle\n  $locationProvider.html5Mode(false);\n}]);\n\nmod.config(['$anchorScrollProvider', function($anchorScrollProvider) {\n  $anchorScrollProvider.disableAutoScrolling();\n}]);\n\nmod.config(['$translateProvider', function($translateProvider) {\n  let translations = require('json-loader!./assets/language/enAU.json');\n\n  $translateProvider.translations('enAU', translations);\n  $translateProvider.preferredLanguage('enAU');\n  $translateProvider.useSanitizeValueStrategy(null);\n}]);\n\n// Set the field-error-focus-scroll-position, to allow for the website's fixed header\nmod.config(['formPolicyBehaviourOnStateChangeProvider', function(stateChangeBehavePolicy) {\n  stateChangeBehavePolicy.config.fieldFocusScrollOffset = 80;\n}]);\n\nmod.config(['formPolicyAccessibilityBehaviourProvider', 'formPolicyAccessibilityLibrary', function(a11yPolicy, lib) {\n  // Configure the formPolicyAccessibilityBehaviour to use the short-error version of the onErrorChangeBehaviour\n  a11yPolicy.config.onErrorChangeBehaviour = lib.createShortErrorDescription;\n}]);\n\n\n// mod.config(['formPolicyCheckForStateChangesProvider', 'formPolicyCheckForStateChangesLibrary', function(statePolicy, lib) {\n//  // DEMO: Check for errors as soon as the control is changed\n//  statePolicy.config.checker = lib.onChange;\n// }]);\n\n// mod.config(['formPolicyStateDefinitionsProvider', 'formPolicyErrorDefinitionLibrary', function(stateDefs, errorLib) {\n//  // DEMO: Show errors immediately\n//  stateDefs.config.states.error = errorLib.immediately;\n// }]);\n\n\nmod.controller('MainController', ['$http', function Controller($http) {\n  let vm = this; // view-model\n\n  // Fetch the documentation config and store it on the rootScope (for laughs :)\n  let fileName = require('file-loader?name=assets/config/[name].[ext]!./assets/config/docsConfig.json');\n\n  $http.get(fileName).then(function(result) {\n    vm.DOC_CONFIG = result.data;\n    vm.REPO_HOST = result.data.repository.host;\n    vm.REPO = vm.REPO_HOST + result.data.repository.branch;\n    vm.VERSION = result.data.version;\n  });\n}]);\n\n\nmod.directive('docsComponent', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    controller: 'MainController',\n    controllerAs: 'mainCtrl',\n    template: require('./templates/docs-component.html'),\n  };\n}]);\n\n\nmod.directive('docsNavbar', [() => {\n  require('file-loader?name=assets/aside.html!./templates/aside.inc');    // If the file is called *.html, it gets wrapped inside a JS module. This gives us just the HTML\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/navbar.html'),\n  };\n}]);\n\nmod.directive('docsHeader', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/header.html'),\n  };\n}]);\n\nmod.directive('docsFooter', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/footer.html'),\n  };\n}]);\n\nmod.directive('docsAffixedSidenav', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/affixed-sidenav.html'),\n  };\n}]);\n\n\nmod.directive('docsSidenav', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/sidenav.html'),\n  };\n}]);\n\nmod.directive('docsGettingStarted', [() => {\n  return {\n    restrict: 'A',    // IE8 support\n    template: require('./templates/getting-started.html'),\n  };\n}]);\n\n\n// These directives are purely needed for documentation purposes\nmod.directive('code', function() {\n  return {restrict: 'E', terminal: true};\n});\n\n\nmod.directive('appendSource', ['$compile', 'indent', function($compile, indent) {\n  return {\n    compile: function(element, attr) {\n      // Directive options\n      let options = {placement: 'after'};\n\n      angular.forEach(['placement', 'hlClass'], function(key) {\n        if (angular.isDefined(attr[key])) {\n          options[key] = attr[key];\n        }\n      });\n\n      let hlElement = angular.element('<div class=\"highlight\" ng-non-bindable><pre><code class=\"html\" style=\"margin:0\"></code></pre></div>');\n      let codeElement = hlElement.children('pre').children('code');\n      let elementHtml = indent(element.html());\n\n      codeElement.text(elementHtml);\n      if (options.hlClass) {\n        codeElement.addClass(options.hlClass);\n      }\n      element[options.placement](hlElement);\n      highlightjs.highlightBlock(codeElement[0]);\n    },\n  };\n}]);\n\n\nmod.directive('highlightBlock', ['indent', function(indent) {\n  return {\n    compile: function(element) {\n      element.html(indent(element.html()));\n      return function postLink(scope, element) {\n        highlightjs.highlightBlock(element[0]);\n      };\n    },\n  };\n}]);\n\n\nmod.value('indent', function(text, spaces) {\n  if (!text) {\n    return text;\n  }\n  let lines = text.split(/\\r?\\n/);\n  let prefix = '      '.substr(0, spaces || 0);\n  let i;\n\n  // Remove any leading blank lines\n  while (lines.length && lines[0].match(/^\\s*$/)) {\n    lines.shift();\n  }\n  // Remove any trailing blank lines\n  while (lines.length && lines[lines.length - 1].match(/^\\s*$/)) {\n    lines.pop();\n  }\n  // Calculate proper indent\n  let minIndent = 999;\n\n  for (i = 0; i < lines.length; i++) {\n    let line = lines[0];\n    let indent = line.match(/^\\s*/)[0];\n\n    if (indent !== line && indent.length < minIndent) {\n      minIndent = indent.length;\n    }\n  }\n\n  for (i = 0; i < lines.length; i++) {\n    lines[i] = prefix + lines[i].substring(minIndent).replace(/=\"\"/g, '');\n  }\n  lines.push('');\n  return lines.join('\\n');\n});\n\n\n// Anchor directive\n// Add anchor-like behaviour to any element, and take advantage of smooth scrolling\nmod.directive('ahref', ['$location', '$document', 'scrollContainerAPI', 'duScrollDuration',\n  function($location, $document, scrollContainerAPI, duScrollDuration) {\n    return {\n      restrict: 'A',\n      link: function(scope, element, attrs) {\n        element.on('click', function() {\n          // The anchor reference should be valid\n          let ahref = attrs.ahref;\n\n          if (!ahref || ahref.indexOf('#') === -1) {\n            return;\n          }\n          let elemId = ahref.replace(/.*(?=#[^\\s]+$)/, '').substring(1);\n\n          // Only add the scroll to the history if directed to\n          if (attrs.useHash) {\n            $location.hash(elemId);  // Change the URL\n            scope.$apply();\n          }\n          let target = $document[0].getElementById(elemId);\n\n          if (!target || !target.getBoundingClientRect) {\n            return;\n          }\n\n          let offset = parseInt(attrs.scrollOffset || 0) + (attrs.scrollBottom === 'true' ? -target.offsetHeight : 0);\n          let duration = attrs.duration ? parseInt(attrs.duration, 10) : duScrollDuration;\n          let container = scrollContainerAPI.getContainer(scope);\n\n          container.scrollToElement(angular.element(target), isNaN(offset) ? 0 : offset, isNaN(duration) ? 0 : duration);\n        });\n      },\n    };\n  },\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/docs/docs.js","import angular from 'angular';\nimport docs from './docs';\n\nconst mod = angular.module('ngFormLibDocs', [docs]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/docs/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/styles/docs.styl\n// module id = ./modules/docs/styles/docs.styl\n// module chunks = 0","module.exports = \"<div class=\\\"bs-sidebar hidden-print\\\" role=complementary data-offset-top=-100 bs-affix bs-scrollspy-list docs-sidenav></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/affixed-sidenav.html\n// module id = ./modules/docs/templates/affixed-sidenav.html\n// module chunks = 0","module.exports = \"<div docs-navbar></div>\\n<div docs-header></div>\\n\\n<div role=content>\\n  <div class=container>\\n    <main role=main class=main>\\n\\n      <div class=row>\\n        <div class=\\\"col-md-2 hidden-sm hidden-xs\\\">\\n          <div docs-affixed-sidenav></div>\\n        </div>\\n        <div class=col-md-10>\\n          <div docs-getting-started></div>\\n          <div id=directives>\\n            <div ng-repeat=\\\"menuContent in mainCtrl.DOC_CONFIG.sitemap\\\" bind-compile=menuContent.template></div>\\n          </div>\\n          <div docs-footer></div>\\n        </div>\\n      </div>\\n    </main>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/docs-component.html\n// module id = ./modules/docs/templates/docs-component.html\n// module chunks = 0","module.exports = \"<footer class=bs-footer>\\n  <p class=pull-right><a href=#>Back to top</a></p>\\n  <p>Documentation based upon <a href=http://http://mgcrea.github.io/angular-strap target=_blank>AngularStrap</a> created by <a href=\\\"//plus.google.com/+OlivierLouvignes/posts?rel=author\\\" target=_blank>Olivier Louvignes</a>.</p>\\n  <p>Using <a href=http://twitter.github.com/bootstrap target=_blank>Twitter Bootstrap</a> and the <a href=css/doc.css target=_blank>Bootstrap's docs styles</a> designed and built by <a href=http://twitter.com/mdo target=_blank>@mdo</a> and <a href=http://twitter.com/fat target=_blank>@fat</a>.</p>\\n  <p>Code licensed under <a href={{mainCtrl.REPO}}LICENSE.md target=_blank>The MIT License</a>, documentation under <a href=http://creativecommons.org/licenses/by/3.0/ >CC BY 3.0</a>.</p>\\n  <ul class=footer-links>\\n    <li><a href=\\\"{{mainCtrl.REPO_HOST}}issues?state=open\\\">Issues</a>\\n    </li>\\n    <li class=muted>·</li>\\n    <li><a href={{mainCtrl.REPO_HOST}}wiki>Roadmap and changelog</a>\\n    </li>\\n    <li class=muted>·</li>\\n      <li><a href={{mainCtrl.REPO_HOST}}releases>Releases</a>\\n    </li>\\n  </ul>\\n</footer>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/footer.html\n// module id = ./modules/docs/templates/footer.html\n// module chunks = 0","module.exports = \"<div class=bs-docs-section>\\n\\n  <div class=page-header>\\n    <h1 id=gettingStarted>Getting started <a class=small href={{mainCtrl.REPO}}readme.md target=_blank>readme.md</a>\\n    </h1>\\n    <code>ngFormLib</code>\\n  </div>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4 id=project-history>About the project</h4>\\n    <p>Angular Form Library is a set of Angular components that allow you to configure how form validation works across your entire site,\\n      plus a set of accessibility-aware input controls that are easy to integrate into your AngularJS 1.2+ application.</p>\\n    <p>Designed with Bootstrap CSS styles and markup in mind, Angular Form Library can be easily customised to work with your existing\\n      CSS and form markup.</p>\\n  </div>\\n\\n  <h2 id=project-quickstart>Quick Start</h2>\\n  <p>Install and manage Angular Form Library with NPM.</p>\\n  <div class=highlight>\\n    <pre>\\n      <code class=bash highlight-block>\\n        $ npm install angular-form-lib --save\\n      </code>\\n    </pre>\\n  </div>\\n\\n  <div class=\\\"callout callout-warning\\\">\\n    <h4>Dependencies</h4>\\n    <p>Angular Form Library has a dependency on <strong>Angular 1.2+</strong> and <code>angular-scroll</code>.\\n       You <strong>must</strong> load Angular 1.2+ and <code>angular-scroll</code> yourself.</p>\\n    <p>Additionally, <code>angular-translate</code> are optional dependencies which will be used if loaded.\\n      Angular Scroll provides smooth-scrolling to an element that receives focus (such as the first error-field in a form). Angular Translate\\n      allows strings to be loaded from resource files, which can help standardise error messages.</p>\\n  </div>\\n\\n\\n  <p>Inject the <code>ngFormLib</code>module into your Angular application.</p>\\n  <div class=highlight>\\n    <pre>\\n      <code class=javascript highlight-block>\\n        // ES5\\n        angular.module('myApp', ['ngFormLib']);\\n\\n        // ES6 / Webpack\\n        import {ngFormLib} from 'angular-form-lib';\\n\\n        const app = angular.module('myApp', [ngFormLib]);\\n      </code>\\n    </pre>\\n  </div>\\n\\n  <p>Typically you would load both the module and the default policies into your application:</p>\\n  <div class=highlight>\\n    <pre>\\n      <code class=javascript highlight-block>\\n        // ES5\\n        angular.module('myApp', [\\n          'ngFormLib',\\n          'duScroll',   // Scrolling behaviour for when the state changes to an error and we wish to focus the field\\n          'ngFormLib.policy.behaviourOnStateChange',\\n          'ngFormLib.policy.checkForStateChanges',\\n          'ngFormLib.policy.stateDefinitions',\\n          'pascalprecht.translate'    // Adds translation support, which will be used for certain properties when available\\n        ]);\\n\\n        // ES6 / Webpack\\n        import {ngFormLib, defaultPolicies} from 'angular-form-lib';\\n        import 'angular-scroll';   // Scrolling behaviour for when the state changes to an error and we wish to focus the field\\n        import ngTranslate from 'angular-translate';\\n\\n        const app = angular.module('myApp', ['duScroll', ngTranslate, ngFormLib, defaultPolicies]);\\n      </code>\\n    </pre>\\n  </div>\\n\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Custom builds</h4>\\n    <p>Angular Form Library provides independently built modules that can be loaded separately:</p>\\n    <div class=highlight>\\n      <pre>\\n        <code class=javascript highlight-block>\\n          angular.module('myApp', [ 'ngFormLib.policy', 'ngFormLib.controls.formInput']);\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Message translation</h4>\\n    <p>Angular Form Library will optionally use the <code>pascalprecht.translate</code> module and the <code>$translate.instant()</code> method\\n      to perform translation of error messages, placeholder text, field hints and labels,\\n      if the module has been loaded. See <a href=http://angular-translate.github.io/ >Angular Translate</a>.</p>\\n  </div>\\n\\n  <h2 id=project-contribute>Contributing</h2>\\n  <div class=highlight>\\n    <pre>\\n      <code class=bash highlight-block>\\n        // Fork https://github.com/odecee/angular-form-lib.git on Github\\n        mkdir {newDir}\\n        cd {newDir}\\n        git clone {your forked repo}\\n        npm i commitizen -g   // Install commitizen to help generate conventional commit messages\\n        npm i\\n\\n        // Serve and watch docs, ideal to develop\\n        $ npm start\\n        // Continuous integration\\n        $ npm test\\n        // Build Angular Form Library and serve documentation site\\n        $ npm build:serve\\n\\n        // Make some changes then commit them\\n        git add.\\n        git cz\\n        // Then create pull request with your changes, push to GitHub, get feedback, rinse, repeat, merge.\\n      </code>\\n    </pre>\\n  </div>\\n\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/getting-started.html\n// module id = ./modules/docs/templates/getting-started.html\n// module chunks = 0","module.exports = \"<div class=bs-header id=content>\\n  <div class=container>\\n    <div class=col-md-9>\\n      <h1>Angular Form Library</h1>\\n      <p>AngularJS 1.2+ directives for controlling form behaviour using policies with accessible form controls.</p>\\n    </div>\\n    <div class=\\\"bs-docs-social col-md-3\\\">\\n      <ul>\\n        <li class=github-btn>\\n          <iframe src=\\\"//ghbtns.com/github-btn.html?user=odecee&repo=angular-form-lib&type=watch&count=true\\\" allowtransparency=true frameborder=0 scrolling=0 width=100 height=20></iframe>\\n        </li>\\n        <li class=github-btn>\\n          <iframe src=\\\"//ghbtns.com/github-btn.html?user=odecee&repo=angular-form-lib&type=fork&count=true\\\" allowtransparency=true frameborder=0 scrolling=0 width=100 height=20></iframe>\\n        </li>\\n        <li class=github-btn>\\n          <iframe src=\\\"//ghbtns.com/github-btn.html?user=odecee&type=follow&count=true\\\" allowtransparency=true frameborder=0 scrolling=0 width=160 height=20></iframe>\\n        </li>\\n        <li class=twitter-btn>\\n          <a href=//twitter.com/share class=twitter-share-button data-url=http://odecee.github.io/angular-form-lib data-text=\\\"Angular Form Library - AngularJS 1.2+ directives for controlling form behaviour using policies with accessible form controls.\\\" data-related=u_glow></a>\\n        </li>\\n        <li>\\n          <div class=g-plusone data-size=medium data-href=http://odecee.github.io/angular-form-lib></div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/header.html\n// module id = ./modules/docs/templates/header.html\n// module chunks = 0","module.exports = \"<header class=\\\"navbar navbar-inverse navbar-fixed-top bs-docs-nav\\\" role=banner>\\n  <div class=container>\\n    <div class=navbar-header>\\n      <button class=navbar-toggle type=button data-template=assets/aside.html data-animation=am-fade-and-slide-left data-placement=left title=Menu data-container=body bs-aside>\\n        <span class=sr-only>Toggle navigation</span>\\n        <span class=icon-bar></span>\\n        <span class=icon-bar></span>\\n        <span class=icon-bar></span>\\n      </button>\\n      <a href=./ class=navbar-brand>Angular Form Library</a>\\n    </div>\\n    <nav class=\\\"collapse navbar-collapse bs-navbar-collapse\\\" role=navigation>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li>\\n          <a ahref=#gettingStarted use-hash=true scroll-offset=50>Top</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <a class=github-badge href=//travis-ci.org/odecee/angular-form-lib target=_blank>\\n            \\n          </a>\\n        </li>\\n        <li>\\n          <a class=github-badge href=//codeclimate.com/github/odecee/angular-form-lib target=_blank>\\n            \\n          </a>\\n        </li>\\n        <li>\\n          <a href={{mainCtrl.REPO_HOST}} target=_blank>\\n            <i class=\\\"fa fa-github\\\"></i>&nbsp;GitHub\\n          </a>\\n        </li>\\n        \\n        <li>\\n          <a href={{mainCtrl.REPO_HOST}}releases target=_blank>\\n            <i class=\\\"fa fa-download\\\"></i>&nbsp;v<span ng-bind=mainCtrl.VERSION></span>\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n  </div>\\n</header>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/navbar.html\n// module id = ./modules/docs/templates/navbar.html\n// module chunks = 0","module.exports = \"<ul class=\\\"nav bs-sidenav\\\" ng-if=mainCtrl.DOC_CONFIG.sitemap>\\n  <li bs-scrollspy data-target=#gettingStarted>\\n    <a ahref=#gettingStarted use-hash=true scroll-offset=50>Getting started</a>\\n  </li>\\n\\n  <hr style=\\\"margin:2px 0\\\">\\n\\n  <li ng-repeat=\\\"menuItem in mainCtrl.DOC_CONFIG.sitemap\\\" bs-scrollspy data-target={{menuItem.href}} data-offset=50>\\n    <a ahref={{menuItem.href}} use-hash=true scroll-offset=50>{{menuItem.title}}</a>\\n    <ul class=nav>\\n      <li ng-repeat=\\\"subMenuItem in menuItem.subSection\\\" bs-scrollspy data-target={{subMenuItem.href}} data-offset=50><a ahref={{subMenuItem.href}} use-hash=true scroll-offset=50>{{subMenuItem.title}}</a></li>\\n    </ul>\\n    <hr ng-if=menuItem.separateAfter style=\\\"margin:2px 0\\\">\\n  </li>\\n</ul>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/docs/templates/sidenav.html\n// module id = ./modules/docs/templates/sidenav.html\n// module chunks = 0","import angular from 'angular';\nimport FormControlService from './FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.common.fieldErrorController', [\n  FormControlService,\n]);\n\nexport default mod.name;\n\n/**\n * The Field Error Controller directive is designed to indicate to the browser when the field is in error\n *  and what the errors are. It applies the form-policy for showing errors\n *\n * It works in tandem with the form controller (and FormPolicy.js) to identify when a form-element has an error, and decorates\n *  the element accordingly.\n *\n * It also toggles the fieldController.fieldState flag, based on the form policy provided\n *\n */\n\n// INPUT:\n//  <input ... field-error-controller></input>\n\n// OUTPUT:\n//  <input ... aria-invalid=\"false/true\" aria-describedby=\"fieldId-errors\">\n\n\nmod.directive('fieldErrorController', ['formControlService', '$timeout', function(formControlService, $timeout) {\n  function setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name) {\n    // Using the form policy, determine when to show errors for this field\n    let formPolicy = formController._policy;\n    let formName = formController.$name;\n    let fieldName = formName + '[\"' + name + '\"]';\n    let stateConditions = formPolicy.stateDefinitions.create(formName, fieldName);\n\n    formPolicy.checkForStateChanges(formController._scope, element, name, stateConditions, ngModelController, formController);\n  }\n\n\n  return {\n    restrict: 'AE',\n    require: ['?ngModel', '?^form', '?^formGroup'],  // Require the formController controller somewhere in the parent hierarchy\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n      let ngModelController = controllers[0];\n      let formController = controllers[1];\n      let formGroupElement = (controllers[2] || {}).$element || element;// This looks for a parent directive called formGroup, which has a controller, which has an $element property\n      let name = attr.name;\n\n      if (formController) {\n        let formName = formController.$name;\n        let stateChangeBehaviour = formController._applyFormBehaviourOnStateChangePolicy; // returns a function which encapsulates the form policy rules for the behaviour to apply when errors show\n\n        if (ngModelController) {\n          setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name);\n        }\n\n        // When the error-showing flag changes, update the field style\n        formController._scope.$watch(formName + '[\"' + name + '\"].fieldState', function(fieldState) {\n          // fieldState is set to '' when the form is reset. So must respond to that too.\n          stateChangeBehaviour.applyBehaviour(element, fieldState, false, formName, name, formGroupElement);\n        });\n\n        // Listen to form-submit events, to determine what to focus on too\n        scope.$on('event:FormSubmitAttempted', () => {\n          // Make sure that the field-level watchers have a chance to fire first, so use a timeout\n          $timeout(() => stateChangeBehaviour.applyBehaviour(element, ngModelController.fieldState, true, formName, name, formGroupElement), 1);\n        });\n      }\n    },\n  };\n}]);\n\n\n// This directive wraps all of the form elements and binds the universe together.\n// It MUST be used as a class as the form focus behaviour references '.form-control .ng-invalid' when finding controls to focus\nmod.directive('formGroup', [function() {\n  return {\n    restrict: 'C',\n    controller: ['$scope', '$element', function Controller($scope, $element) {\n      this.$element = $element;\n    }],\n  };\n}]);\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/FieldErrorController.js","import angular from 'angular';\nimport Utility from '../../../common/Utility';\n\nconst mod = angular.module('ngFormLib.controls.common.formControlService', [Utility]);\n\nexport default mod.name;\n\n// Workaround for bug #1404\n// https://github.com/angular/angular.js/issues/1404\n// Source: http://plnkr.co/edit/hSMzWC?p=preview\n// Not so great for IE8, but necessary for using radio buttons inside of dynamic forms (ng-repeat)\nmod.config(['$provide', function($provide) {\n  $provide.decorator('ngModelDirective', ['$delegate', function($delegate) {\n    let ngModel = $delegate[0];\n    let controller = ngModel.controller;\n\n    ngModel.controller = ['$scope', '$element', '$attrs', '$injector', function Controller(scope, element, attrs, $injector) {\n      let $interpolate = $injector.get('$interpolate');\n\n      attrs.$set('name', $interpolate(attrs.name || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs,\n      });\n    }];\n    return $delegate;\n  }]);\n  $provide.decorator('formDirective', ['$delegate', function($delegate) {\n    let form = $delegate[0];\n    let controller = form.controller;\n\n    form.controller = ['$scope', '$element', '$attrs', '$injector', function Controller(scope, element, attrs, $injector) {\n      let $interpolate = $injector.get('$interpolate');\n\n      attrs.$set('name', $interpolate(attrs.name || attrs.ngForm || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs,\n      });\n    }];\n    return $delegate;\n  }]);\n}]);\n\n\n// Shared code for the accessible controls\nmod.provider('formControlService', function Provider() {\n  let self = this;\n  let counter = 0;    // Private variable\n\n  //\n  self.defaults = {\n    idPrefix: 'fpFld',\n    inputGroupButtonTemplateFunction: (val, handler) => `<button type=\"button\" class=\"btn btn-default\" ${handler ? 'ng-click=\"' + handler + '\"' : ''}>${val}</button>`,\n    templates: {\n      formCheckbox: {\n        template: 'ngFormLib/template/formCheckbox.html',\n      },\n      formDate: {\n        template: 'ngFormLib/template/formDate.html',\n      },\n      formInput: {\n        template: 'ngFormLib/template/formInput.html',\n      },\n      formRadioButton: {\n        template: 'ngFormLib/template/formRadioButton.html',\n      },\n      formSelect: {\n        template: 'ngFormLib/template/formSelect.html',\n      },\n      requiredMarker: {\n        template: 'ngFormLib/template/requiredMarker.html',\n      },\n    },\n  };\n\n  this.$get = ['ngFormLibStringUtil', '$injector', function(StringUtil, $injector) {\n    let translator;\n\n    try {\n      translator = $injector.get('$translate').instant;\n    } catch (e) {\n      translator = angular.identity;\n    }\n\n    let service = {\n      defaults: self.defaults,\n\n      buildDirective: function(params) {\n        let directive = {\n          restrict: 'AE',\n          replace: true,\n          transclude: true,\n          compile: function(tElement, tAttr) {\n            service.validateComponentStructure(params.controlName, tElement, params.expectedTemplateElements, tAttr, params.expectedAttributes);\n\n            // For items that are inside repeaters, if more than one element has the same id, the checkbox stops working.\n            // By using an attribute that is not called 'id', we can avoid this issue\n            let id = tAttr.uid || service.getUniqueFieldId();\n            let name = tAttr.name || id; // Doing this *will* break radio buttons, but they SHOULD provide a name anyway (for their own good)\n            let inputElem = tElement.find(params.inputElementName || 'input');\n            let labelElem = tElement.find('label');\n            let required = service.getRequiredAttribute(tAttr.required);\n\n            service.decorateLabel(labelElem, required, id, tAttr.labelClass, tAttr.hideLabel, tAttr.hideRequiredIndicator, tAttr.labelSuffix);\n            inputElem = service.decorateInputField(inputElem, tElement, tAttr, id, name, required);\n\n            // Do component-specific config last\n            params.configFn(tElement, tAttr, id, name, inputElem, labelElem);\n\n            // Clean up special attributes (to make HTML look nicer)\n            tElement.removeAttr('uid').removeAttr('name').removeAttr('label').removeAttr('required').removeAttr('field-hint')\n              .removeAttr('input-type').removeAttr('hide-label').removeAttr('hideRequiredIndicator')\n              .removeAttr('label-class').removeAttr('field-errors').removeAttr('text-errors');\n          },\n          templateUrl: function(element, attr) {\n            // Check the element for a \"template\" attribute, which allows customisation-per-control. Otherwise, use the control-wide template.\n            return attr.template || service.getHTMLTemplate(element, params.controlName);\n          },\n        };\n\n        return directive;\n      },\n\n      getUniqueFieldId: function() {\n        return '' + self.defaults.idPrefix + counter++;\n      },\n\n      getHTMLTemplate: function(element, type) {\n        // Allow different templates to be applied for different form-styles (eg for horizontal forms, inline forms, \"normal\" forms).\n        // This is an advanced feature that most users will not need.\n        // E.g.: self.defaults.templates['select']['form-inline'] = 'path/to/your/custom/template.html'\n\n        // Check this element's parent-form-element-classes to see if they match. First match, wins.\n        let parentFormClasses = (element.inheritedData('formElementClasses') || '').split(' ');\n        let result = self.defaults.templates[type].template;  // The default template, if nothing else is specified.\n\n        for (let i = 0; i < parentFormClasses.length; i++) {\n          let template = self.defaults.templates[type][parentFormClasses[i]];\n\n          if (template) {\n            result = template;\n            break;\n          }\n        }\n\n        return result;\n      },\n\n      addToAttribute: function(element, attributeName, value) {\n        let existingValues = element.attr(attributeName) || '';\n\n        // Don't add the same attribute value - remove it first before adding it back\n        if (existingValues.split(' ').indexOf(value) === -1) {\n          element.attr(attributeName, existingValues + (existingValues ? ' ' : '') + value);\n        }\n      },\n\n\n      removeFromAttribute: function(element, attributeName, value) {\n        // Borrowed this statement from Angular.js\n        let newValue = StringUtil.trim(\n          (' ' + (element.attr(attributeName) || '') + ' ')\n          .replace(/[\\n\\t]/g, ' ')\n          .replace(' ' + StringUtil.trim(value) + ' ', ' ')\n        );\n\n        // Remove the attribute if it is empty\n        if (newValue === '') {\n          element.removeAttr(attributeName);\n        } else {\n          element.attr(attributeName, newValue);\n        }\n      },\n\n\n      getRequiredAttribute: function(required) {\n        // When we set required=\"true\" on a parent directive (like on-off-button), inputElem.attr('required', 'true')\n        // becomes <input required=\"required\" due to browser interference. So detect this case, and replace it with \"true\"\n        // In v1.3, required=\"true\" becomes required=\"\".\n        if (required === 'required' || required === '' || required === 'true') {\n          return 'true';\n        } else if (required === undefined) {\n          return 'false';\n        }\n        return required;\n      },\n\n      addLabelText: function(labelElem, labelText) {\n        labelElem.prepend(service.translate(labelText));\n      },\n\n      addInputGroup: function(inputElem, attr) {\n        const inputGroupMapping = [\n          {inputAttr: 'inputPrefix', className: 'input-group-addon', attachFn: 'prepend', clickHandler: '', content: (val) => val},\n          {inputAttr: 'inputSuffix', className: 'input-group-addon', attachFn: 'append', clickHandler: '', content: (val) => val},\n          {inputAttr: 'inputButtonPrefix', className: 'input-group-btn', attachFn: 'prepend', clickHandler: 'inputButtonPrefixClick', content: self.defaults.inputGroupButtonTemplateFunction},\n          {inputAttr: 'inputButtonSuffix', className: 'input-group-btn', attachFn: 'append', clickHandler: 'inputButtonSuffixClick', content: self.defaults.inputGroupButtonTemplateFunction},\n        ];\n        let contentToAppend = [];\n\n        inputGroupMapping.forEach((igConfig) => {\n          if (attr[igConfig.inputAttr]) {\n            contentToAppend.push({\n              attachFn: igConfig.attachFn,\n              html: `<span class=\"${igConfig.className}\">${igConfig.content(attr[igConfig.inputAttr], attr[igConfig.clickHandler])}</span>`,\n            });\n          }\n        });\n\n        if (contentToAppend.length) {\n          inputElem.wrap('<div class=\"input-group\">');// This should be the 'control-row' element\n          let wrapper = inputElem.parent();\n\n          contentToAppend.forEach((content) => wrapper[content.attachFn](content.html));\n        }\n\n        return !!contentToAppend.length;\n      },\n\n      decorateLabel: function(labelElem, required, id, labelClass, hideLabelExpr, hideRequiredIndicator, labelSuffix) {\n        if (id) {\n          labelElem.attr('for', id);\n        }\n        if (labelClass) {\n          labelElem.addClass(labelClass);\n        }\n        if (hideLabelExpr) {\n          labelElem.attr('ng-class', '{\\'sr-only\\': ' + hideLabelExpr + '}');\n        }\n        // Some labels have suffix text - text that helps with describing the label, but isn't really the label text.\n        // E.g. Amount ($AUD)\n        if (labelSuffix) {\n          labelElem.append('&nbsp;' + service.translate(labelSuffix));\n        }\n\n        if (!hideRequiredIndicator) {\n          labelElem.append('<span required-marker hide=\"!(' + required + ')\"></span>');\n        }\n      },\n\n\n      decorateInputField: function(inputElem, hostElement, attr, id, name, required) {\n        if (attr.inputType) {\n          // inputElem.attr('type', attr.inputType); // THIS WILL NOT WORK ON IE8!\n          // Instead, we must replace the entire node with the only property which SHOULD exist on the template: 'class'\n          inputElem.replaceWith('<input type=\"' + attr.inputType + '\" class=\"' + inputElem.attr('class') + '\">');\n          inputElem = hostElement.find('input');\n        }\n\n        inputElem.attr('id', id);\n\n        // Allow the name to be interpolated\n        inputElem.attr('name', name);\n\n        // Apply all of the ff-* attributes to the input element. Use the original attribute names\n        // attr.$attr contains the snake-case names e.g. 'form-field' vs camel case 'formField'\n        for (let a in attr.$attr) {\n          if (a.indexOf('ff') === 0) {    // Don't search for 'ff-' as the '-' has been replaced with camel case now\n            let origAttrName = attr.$attr[a].substr(3);\n\n            if (origAttrName === 'class') {\n              inputElem.addClass(attr[a]);\n\n            // Special case for type property. It *must* be read-only. Therefore, don't write it to the element\n            // See http://stackoverflow.com/questions/8378563/why-cant-i-change-the-type-of-an-input-element-to-submit\n            } else if (origAttrName !== 'type') {\n              inputElem.attr(origAttrName, attr[a]);\n            }\n\n            // Remove all attributes off the host element\n            hostElement.removeAttr(attr.$attr[a]);\n          }\n        }\n\n        inputElem.attr('ng-required', required);\n        return inputElem;\n      },\n\n\n      createErrorFeatures: function(parentElement, inputElement, name, fieldLabel, fieldErrors, textErrors) {\n        if (fieldErrors || textErrors) {\n          // Add an fieldErrorControllers attribute to the element, to hook-up the error features\n          inputElement.attr('field-error-controller', '');\n\n          let fieldLabelStr = fieldLabel ? ' field-label=\"' + fieldLabel + '\"' : '';\n          let errorContainerElem = angular.element('<div error-container field-name=\"' + name + '\"' + fieldLabelStr + '></div>');\n\n          if (fieldErrors) {\n            errorContainerElem.attr('field-errors', fieldErrors);\n          }\n          if (textErrors) {\n            errorContainerElem.attr('text-errors', textErrors);\n          }\n          parentElement.append(errorContainerElem);\n        }\n      },\n\n      createFieldHint: function(hostElement, inputElement, fieldHint, fieldHintId, fieldHintDisplay) {\n        let hintElement;\n\n        if (fieldHint) {\n          let hintText = service.translate(fieldHint);\n\n          // If we have a field hint, add that as well\n          if (fieldHintDisplay) {\n            // If a field hint display rule exists, implement.\n            hintElement = angular.element('<p ng-if=\"' + fieldHintDisplay + '\" class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          } else {\n            hintElement = angular.element('<p class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          }\n          hostElement.append(hintElement);\n          inputElement.attr('aria-describedby', fieldHintId);\n        }\n      },\n\n      buildNgClassExpression: function(inputElem, targetElem) {\n        // If the inputElem has an ngModel and/or ngChecked attribute, create the ng-class attribute\n        // todo.. test checkbox implementation\n        let modelStr = inputElem.attr('ng-model');\n        let checkedStr = inputElem.attr('ng-checked');\n        let disabledStr = inputElem.attr('ng-disabled');\n        let value = inputElem.attr('value');        // a string - used for Radio buttons\n        let ngValue = inputElem.attr('ng-value');   // an expression - used for Radio buttons\n        let ngTrueValue = inputElem.attr('ng-true-value');\n\n        if (modelStr) {\n          if (ngValue || ngTrueValue) {\n            modelStr += ' === ' + (ngValue || ngTrueValue);\n          } else if (value) {\n            // The value is ALWAYS a string\n            modelStr += ' === \\'' + value + '\\'';\n          } else {\n            modelStr += ' === true';  // For checkboxes, in the absence of ng-true-value\n          }\n        }\n\n        if (modelStr && checkedStr) {\n          modelStr += ' || ' + checkedStr;\n        } else if (checkedStr) {\n          modelStr = checkedStr;\n        }\n\n        if (modelStr && disabledStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + ', \\'disabled\\': ' + disabledStr + '}');\n        } else if (modelStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + '}');\n        }\n      },\n\n      translate: (str, interpolatedParams) => translator(str || '', interpolatedParams),\n\n      validateComponentStructure: function(componentName, element, requiredElements, attr, requiredAttributes) {\n        for (let i = 0; i < requiredElements.length; i++) {\n          if (!element.find(requiredElements[i])) {\n            throw new Error('The ' + componentName + ' component template requires a ' + requiredElements[i] + ' element.');\n          }\n        }\n\n        for (let j = 0; j < requiredAttributes.length; j++) {\n          if (!attr[requiredAttributes[j]]) {\n            throw new Error('The ' + componentName + ' component requires a ' + requiredAttributes[j] + ' attribute.');\n          }\n        }\n      },\n\n    };\n\n    return service;\n  }];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/FormControlService.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormControlServiceDemoCtrl as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formControlService>Form Control Service <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/common/FormControlService.js target=_blank>FormControlService.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.common.formControlService</code>\\n  </div>\\n\\n  <p>The Form Control Service service provides common functions used by the form controls, and allows default values for the form controls to be changed from a central place.</p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>The Form Control Service requires the <a ahref=#requiredMarker>RequiredMarker module</a> and the <a href={{mainCtrl.REPO}}src/modules/common target=_blank>ngFormLib.common.utility</a> module to be loaded.</p>\\n  </div>\\n\\n  <h2 id=formControlServiceOptions>Options</h2>\\n\\n  <p>Options can be configured like so:</p>\\n  <div class=highlight>\\n    <pre><code class=js highlight-block>angular.module('myApp', ['ngFormLib'])\\n  .config(['FormControlServiceProvider', function(FormControlServiceProvider) {\\n      FormControlServiceProvider.defaults.select.template = 'path/to/my/template.html'\\n  }])</code></pre>\\n  </div>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th style=width:100px>Name</th>\\n          <th style=width:100px>Type</th>\\n          <th style=width:50px>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>idPrefix</td>\\n          <td>String</td>\\n          <td>fpFld</td>\\n          <td>The prefix string for generated form-control id values. Generated <code>id</code> values are used\\n          when the form-control does not have it's own <code>cid</code> attribute with a non-empty value</td>\\n        </tr>\\n        <tr>\\n          <td>formCheckbox.template</td>\\n          <td>URL</td>\\n          <td>ngFormLib/controls/formCheckbox/ template/FormCheckboxTemplate.html</td>\\n          <td>Template for the <a ahref=#formCheckbox>Form Checkbox</a> control</td>\\n        </tr>\\n        <tr>\\n          <td>formDate.template</td>\\n          <td>URL</td>\\n          <td>ngFormLib/controls/formDate/ template/FormDateTemplate.html</td>\\n          <td>Template for the <a ahref=#formDate>Form Date</a> control</td>\\n        </tr>\\n        <tr>\\n          <td>formInput.template</td>\\n          <td>String</td>\\n          <td>&lt;div class=\\\"form-group\\\"&gt;&lt;label class=\\\"control-label\\\"&gt;&lt;/label&gt;&lt;div class=\\\"control-row\\\"&gt;&lt;input #type# class=\\\"form-control\\\"&gt;&lt;span ng-transclude&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</td>\\n          <td>Template for the <a ahref=#formInput>Form Input</a> control. <br>\\n          <strong>Note:</strong> The <code>#type#</code> string is replaced with the input's type (text|tel|number|...) prior to the template\\n          being compiled. This is due to the <code>type</code> attribute being read-only on an <code>input</code> element (see <a href=http://stackoverflow.com/questions/8378563/why-cant-i-change-the-type-of-an-input-element-to-submit target=_blank>here</a>)</td>\\n        </tr>\\n        <tr>\\n          <td>formRadioButton.template</td>\\n          <td>URL</td>\\n          <td>ngFormLib/controls/formRadioButton/ template/FormRadioButtonTemplate.html</td>\\n          <td>Template for the <a ahref=#formRadioButton>Form RadioButton</a> control</td>\\n        </tr>\\n        <tr>\\n          <td>formSelect.template</td>\\n          <td>URL</td>\\n          <td>ngFormLib/controls/formSelect/ template/FormSelectTemplate.html</td>\\n          <td>Template for the <a ahref=#formSelect>Form Select</a> control</td>\\n        </tr>\\n        <tr>\\n          <td>requiredMarker.template</td>\\n          <td>URL</td>\\n          <td>ngFormLib/controls/requiredMarker/ template/RequiredMarker.html</td>\\n          <td>Template for the <a ahref=#requiredMarker>Required Marker</a> control</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/common/docs/formControlService.docs.html\n// module id = ./modules/ngFormLib/controls/common/docs/formControlService.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.common.docs.formControlService', []);\n\nexport default mod.name;\n\nmod.directive('formControlServiceDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormControlServiceDemoCtrl',\n    template: require('./formControlService.docs.html'),\n  };\n});\n\nmod.controller('FormControlServiceDemoCtrl', function Controller() {\n  // var vm = this;\n  //\n  // vm.titleData = [\n  //   {label: 'Dr'},\n  //   {label: 'Mr'},\n  //   {label: 'Ms'}\n  // ];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/docs/formControlService.docs.js","module.exports = \"<div class=bs-docs-section>\\n\\n  <div class=page-header>\\n    <h1 id=formControls>Form Controls <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/common/ target=_blank>Form Controls Common</a>\\n    </h1>\\n    <code>ngFormLib.controls.common</code>\\n  </div>\\n\\n  <p>The Form Controls Common module provides common functions used by the form controls, and allows default values for the form controls to be changed from a central place.</p>\\n\\n  <h2 id=formControlsCommonOptions>Common Control Options</h2>\\n\\n  <p>The following options are available for <code>form-checkbox</code>, <code>form-input</code>, <code>form-radio-button</code> and <code>form-select</code>:</p>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/common/docs/formControlsCommon.docs.html\n// module id = ./modules/ngFormLib/controls/common/docs/formControlsCommon.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.common.docs.formControlsCommon', []);\n\nexport default mod.name;\n\nmod.directive('formControlsCommonDocs', function() {\n  return {\n    restrict: 'A',\n    template: require('./formControlsCommon.docs.html'),\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/docs/formControlsCommon.docs.js","module.exports = \"<tr>\\n  <td>uid</td>\\n  <td>string</td>\\n  <td>generated</td>\\n  <td>The control's unique identifier, which is used in the <code>id=\\\"...\\\"</code> attribute on the control and to link the label to the form field element.\\n    When the form field is inside a repeater, use a variable like <code>uid=\\\"...{{$index}}\\\"</code>, so that the control\\n    has a page-unique id, which is required to make the control fully accessible.\\n    <strong>If the <code>uid</code> is not specified, one will be generated by the formControlService.</strong>\\n  </td>\\n</tr>\\n<tr>\\n  <td>name</td>\\n  <td>string</td>\\n  <td>generated</td>\\n  <td>The name of the element, which is used to make form-validation work correctly.\\n    Only use an <code>{{interpolationExpression}}</code> inside this attribute when using <code>form-radio</code> buttons inside\\n    <code>ng-form</code> inside <code>ng-repeat</code> (<a ahref=formDemo4>see example</a>).\\n    <strong>If the <code>name</code> is not specified, one will be generated by the formControlService using the <code>uid</code>.</strong>\\n    <p><strong class=text-danger><code>form-radio</code> controls that are inside a radio-button-group MUST specify this attribute explicitly for the grouping-behaviour to work!</strong></p>\\n  </td>\\n</tr>\\n\\n<tr>\\n  <td>required</td>\\n  <td>expression</td>\\n  <td>false</td>\\n  <td>An expression that determines the value of <code>ng-required</code> and the required indicator on the <code>&lt;label&gt;</code></td>\\n</tr>\\n<tr>\\n  <td>hide-required-indicator</td>\\n  <td>expression</td>\\n  <td>false</td>\\n  <td>An expression that determines whether to show or hide the required indicator</td>\\n</tr>\\n<tr>\\n  <td>label-class</td>\\n  <td>CSS class list</td>\\n  <td></td>\\n  <td>Optional list of CSS classes to apply to the <code>label</code> element</td>\\n</tr>\\n<tr>\\n  <td>label-suffix</td>\\n  <td>string</td>\\n  <td></td>\\n  <td>Optional text to append to a label, but is not displayed when an error message uses the <code>fieldLabel</code> variable.\\n    This property is useful to convey formatting information about the field inside the field label, without that information\\n    appearing in any error messages.\\n  </td>\\n</tr>\\n\\n<tr>\\n  <td>hide-label</td>\\n  <td>expression</td>\\n  <td>false</td>\\n  <td>An expression that determines whether to show or hide the label.</td>\\n</tr>\\n<tr>\\n  <td>field-errors</td>\\n  <td>object</td>\\n  <td></td>\\n  <td>A key-value pair object linking an error to a message. The value can be a language-resource-key if `angular-translate` is loaded.</td>\\n</tr>\\n<tr>\\n  <td>text-errors</td>\\n  <td>array</td>\\n  <td></td>\\n  <td>An array of scope-properties to watch for \\\"truthiness\\\". E.g. For `text-errors=\\\"['scopeProp']\\\"`, the text-value of `scope.scopeProp` will be\\n    displayed when the value is \\\"truthy\\\" (typically a non empty string).\\n    This property is useful for handling error messages returned from calling APIs.\\n    The scope value can be a language-resource-key if <code>angular-translate</code> is loaded.</td>\\n</tr>\\n<tr>\\n  <td>ff-ng-model</td>\\n  <td>expression</td>\\n  <td></td>\\n  <td><strong>Required</strong> - the AngularJS <code>ngModel</code> directive, which is applied to the <code>select</code> element.</td>\\n</tr>\\n<tr>\\n  <td>ff-*</td>\\n  <td>*</td>\\n  <td></td>\\n  <td>Additional attributes/directives that are copied onto the <strong>input/select element</strong> can be specified using by prefixing them with <code>ff-</code>. For example <code>ff-size=\\\"3\\\"</code>\\n    would be compiled to <code>size=\\\"3\\\"</code> on the <code>input</code>/<code>select</code> element.</td>\\n</tr>\\n<tr>\\n  <td>template</td>\\n  <td>URL</td>\\n  <td>See <a ahref=#formControlServiceOptions>Form Controls Service options</a></td>\\n  <td>The HTML template to use for the control. The default value can be overridden on the element, or globally by setting the default value in the <a ahref=#formControlService>FormControlService</a></td>\\n</tr>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/common/docs/formControlsCommonProperties.docs.html\n// module id = ./modules/ngFormLib/controls/common/docs/formControlsCommonProperties.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.common.docs.formControlsCommonProperties', []);\n\nexport default mod.name;\n\nmod.directive('formControlsCommonPropertiesDocs', function() {\n  return {\n    restrict: 'A',\n    template: require('./formControlsCommonProperties.docs.html'),\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/docs/formControlsCommonProperties.docs.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormControlsDemosController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formDemos>Demos</h1>\\n  </div>\\n\\n  <h2 id=formDemo1>Standard form</h2>\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    <form name=formDemo1 class=form novalidate form-submit=\\\"\\\">\\n      <fieldset>\\n        \\n        <div class=form-group>\\n          <label class=control-label for=formDemo1_fldTitle>Title</label>\\n          <div class=control-row>\\n            <select id=formDemo1_fldTitle name=formDemo1_fldTitle ng-model=ctrl.formDemo1.title ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" class=form-control ng-required=true field-error-controller></select>\\n          </div>\\n          <div error-container field-name=formDemo1_fldTitle field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n        </div>\\n\\n        \\n        <div form-input uid=formDemo1-fieldName-with-hypens label=Name label-suffix=\\\"(40 chars)\\\" required=true input-type=text ff-ng-model=ctrl.formDemo1.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'FIELD_ERROR.TEMPLATE.REQUIRED', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n        <div form-checkbox uid=formDemo1_fld3 name=formDemo1_fld3 required=true ff-ng-model=ctrl.formDemo1.fld1_3 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n        <div form-input uid=formDemo1-with.dots label=Income required=true input-type=text input-prefix=$ input-suffix=\\\"per month\\\" ff-ng-model=ctrl.formDemo1.fld4 field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n\\n        <fieldset class=\\\"form-group form-group-radio\\\">\\n          <div ng-repeat=\\\"item in ctrl.titleData\\\">\\n            <div form-radio-button uid=formDemo1_fld{{$index}} name=formDemo1_group1 ff-ng-model=ctrl.formDemo1.group1 ff-ng-value=$index required=true>{{item.label}}</div>\\n          </div>\\n          <div error-container field-name=formDemo1_group1 field-errors=\\\"{required: 'Please select one of the above options'}\\\"></div>\\n        </fieldset>\\n\\n        <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=button class=btn form-reset=ctrl.formDemo1>Reset</button>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <h2 id=formDemo2>Horizontal Form</h2>\\n\\n  <p>This form takes advantage of the default control-templates' HTML structure to render the controls inside a form with <code>class=\\\"form-horizontal\\\"</code>\\n    as expected within Bootstrap. See the <a href=/css/sampleFormStyle.css target=_blank>sample style sheet</a> to see how to do this.</p>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n    <form name=formDemo2 class=\\\"form form-horizontal\\\" novalidate form-submit=\\\"\\\">\\n      <fieldset>\\n\\n        <div form-input uid=formDemo2_fld1 name=formDemo2_fld1 label=\\\"Nick Name\\\" required=true input-type=text ff-ng-model=ctrl.formDemo2.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n        <div form-select uid=formDemo2_fld2-weird.title label=\\\"Common field\\\" required=true ff-ng-model=ctrl.formDemo2.fld2 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n        <div form-checkbox uid=formDemo2_fld3 name=formDemo2_fld3 required=true ff-ng-model=ctrl.formDemo2.fld2_3 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n        <div form-input uid=formDemo2_fld4 label=Income required=true input-type=text input-prefix=$ input-suffix=\\\"per month\\\" ff-ng-model=ctrl.formDemo2.fld4 field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n\\n        <fieldset class=\\\"form-group form-group-radio\\\">\\n          <div ng-repeat=\\\"item in ctrl.titleData\\\">\\n            <div form-radio-button uid=formDemo2_rbfld{{$index}} name=formDemo2_group1 ff-ng-model=ctrl.formDemo2.group1 ff-ng-value=$index required=true hide-required-indicator=true>{{item.label}}</div>\\n          </div>\\n          <div error-container field-name=formDemo2_group1 field-errors=\\\"{required: 'Please select one of the above options'}\\\"></div>\\n        </fieldset>\\n\\n        <div class=button-row>\\n          <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=button class=btn form-reset=ctrl.formDemo2>Reset</button>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <h2 id=formDemo3>Inline Form</h2>\\n  <p>This form takes advantage of the default control-templates' HTML structure to render the controls inside a form with <code>class=\\\"form-inline\\\"</code>\\n    as expected within Bootstrap. See the <a href=/css/sampleFormStyle.css target=_blank>sample style sheet</a> to see how to do this.</p>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n    <form name=formDemo3 class=\\\"form form-inline\\\" novalidate form-submit=\\\"\\\">\\n      <fieldset>\\n\\n        <div form-input uid=formDemo3_fld1 name=formDemo3_fld1 label=\\\"Nick Name\\\" hide-label=true required=true input-type=text ff-ng-model=ctrl.formDemo3.fld1 ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" ff-placeholder=\\\"Enter Nick Name\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n        <div form-input uid=formDemo3_fld4 label=Income hide-label=true required=true ff-style=width:40px input-type=text input-prefix=$ ff-ng-model=ctrl.formDemo3.fld4 field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n\\n        <div form-select uid=formDemo3_fld2 name=formDemo3_fld2 label=\\\"Common field\\\" hide-label=true required=true ff-ng-model=ctrl.formDemo3.fld2 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" placeholder=\\\"Enter Title\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n        <div form-checkbox uid=formDemo3_fld3 name=formDemo3_fld3 required=true ff-ng-model=ctrl.formDemo3.fld3 hide-required-indicator=true field-errors=\\\"{required: 'You must agree'}\\\">I agree</div>\\n\\n        <fieldset class=\\\"form-group form-group-radio\\\">\\n          <span ng-repeat=\\\"item in ctrl.titleData\\\">\\n            <div form-radio-button uid=formDemo3_fld{{$index}} name=formDemo3_group1 ff-ng-model=ctrl.formDemo3.group1 ff-ng-value=$index required=true hide-required-indicator=true>{{item.label}}</div>\\n          </span>\\n          <div error-container field-name=formDemo3_group1 field-errors=\\\"{required: 'Please select one of the above options'}\\\"></div>\\n        </fieldset>\\n\\n        <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=button class=btn form-reset=ctrl.formDemo3>Reset</button>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <h2 id=formDemo4>Form with repeating sections</h2>\\n\\n  <p>This is probably as complex as it gets - a horizontal-form with a repeating inline-form.</p>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n    <style>[name=formDemo4] .form-inline .form-group{margin-right:0}[name=formDemo4] .form-inline .control-label{display:none}[name=formDemo4] .form-inline .control-row{width:auto;padding:0;margin-left:15px}[name=formDemo4] .form-inline .form-group-checkbox,[name=formDemo4] .form-inline .form-group-radio{margin-left:0;width:auto;float:none}[name=formDemo4] .form-inline .btn{margin-bottom:15px}</style>\\n    <form name=formDemo4 class=\\\"form form-horizontal\\\" novalidate form-submit=\\\"\\\">\\n      <fieldset>\\n\\n        <div form-input uid=formDemo4_fld1 name=formDemo4_fld1 label=\\\"Last Name\\\" required=true input-type=text ff-ng-model=ctrl.formDemo4.name ff-maxlength=40 field-errors=\\\"{required: 'Last name is required'}\\\"></div>\\n\\n        <div form-select uid=formDemo4_fld2 name=formDemo4_fld2 label=Type required=true placeholder=\\\"Select Title\\\" ff-ng-model=ctrl.formDemo4.title ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n        <div class=form-group>\\n          <label class=control-label>Education History</label>\\n\\n          <div class=control-row>\\n            <div ng-repeat=\\\"school in ctrl.formDemo4.education\\\" class=\\\"form form-inline\\\" ng-init=\\\"schoolIndex = $index\\\">\\n              <div ng-form=formDemo4_subform>\\n                <div form-input uid=formDemo4_subform{{$index}}_fld1 name=formDemo4_subform_fld1 label=School hide-label=true required=true input-type=text ff-placeholder=\\\"School Name\\\" ff-ng-model=school.name ff-maxlength=30 ff-style=\\\"width: 100px\\\" field-errors=\\\"{required: 'School name is required'}\\\"></div>\\n\\n                <div form-input uid=formDemo4_subform{{$index}}_fld4 label=Income hide-label=true required=true ff-style=width:40px input-type=text input-prefix=$ ff-ng-model=school.income field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n\\n                <div form-select uid=formDemo4_subform{{$index}}_fld2 name=formDemo4_subform_fld2 label=Type hide-label=true required=true placeholder=\\\"School Type\\\" ff-ng-model=school.type ff-ng-options=\\\"item.label for item in ctrl.schoolData track by item.label\\\" field-errors=\\\"{required: 'Type is required'}\\\"></div>\\n\\n                <div form-checkbox uid=formDemo4_subform{{$index}}_fld3 name=formDemo4_subform_fld3 required=true ff-ng-model=school.isCoEd field-errors=\\\"{required: 'Uniforms are required'}\\\">Uniform</div>\\n\\n\\n                <fieldset class=\\\"form-group form-group-radio\\\">\\n                  <span ng-repeat=\\\"item in ctrl.titleData\\\">\\n                    <div form-radio-button uid=formDemo4_subform{{schoolIndex}}_fld4_{{$index}} name=formDemo4_subform_group{{schoolIndex}} ff-ng-model=school.title ff-ng-value=$index required=true hide-required-indicator=true>{{item.label}}</div>\\n                  </span>\\n                  <div error-container field-name=formDemo4_subform_group{{schoolIndex}} field-errors=\\\"{required: 'Please select an option'}\\\"></div>\\n                </fieldset>\\n\\n                <button type=button class=\\\"btn btn-success\\\" ng-click=ctrl.addSchool() ng-if=$last>+</button>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <div class=button-row>\\n          <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=button class=btn form-reset=ctrl.formDemo4>Reset</button>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <h2 id=formDemo5>Child forms that are conditionally shown</h2>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Focus management</h4>\\n    <p>The default <code>behaviourOnStateChange</code> policy correctly sets the focus to the top-most field that contains an error, making it easy for users to find and fix the problem.</p>\\n  </div>\\n\\n  <div class=\\\"callout callout-warning\\\">\\n    <h4><code>ng-if</code> versus <code>ng-show/ng-hide</code></h4>\\n    <p>Use <code>ng-if</code> instead of <code>ng-show/ng-hide</code> when dynamically showing form elements. <code>ng-show/hide</code> keeps the form field in the DOM\\n    which means that the <code>ngModelController</code> of each hidden field is <strong>still attached to the <code>ngModelController</code> of the form</strong>. This\\n    causes problems when trying to submit the form, as the form will contain an error, but the field with the error is not visible!</p>\\n\\n    <p>Using <code>ng-if</code> prevents this issue from occurring, as <code>ng-if</code> removes the hidden form elements from the DOM,\\n    which detaches them from the form's <code>ngModelController</code>.</p>\\n  </div>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n    <form name=formDemo5 class=form novalidate form-submit=ctrl.submit()>\\n      <fieldset>\\n\\n        <div form-checkbox uid=formDemo5_toggle name=formDemo5_toggle ff-ng-model=ctrl.toggleChildForm><strong>Toggle child form</strong></div>\\n\\n        \\n        <div class=form-group>\\n          <label class=control-label for=formDemo5_fldTitle>Title</label>\\n          <div class=control-row>\\n            <select id=formDemo5_fldTitle name=formDemo5_fldTitle ng-model=ctrl.formDemo5.title ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" class=form-control ng-required=true field-error-controller></select>\\n          </div>\\n          <div error-container field-name=formDemo5_fldTitle field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n        </div>\\n\\n        <div form-checkbox uid=formDemo5_fld3 name=formDemo5_fld3 required=true ff-ng-model=ctrl.formDemo5.fld1_3 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n        <ng-form name=formDemo5_subform ng-if=!ctrl.toggleChildForm>\\n          <div form-input uid=formDemo5_fld4 label=Income required=true input-type=text input-prefix=$ input-suffix=\\\"per month\\\" ff-ng-model=ctrl.formDemo5.fld4 field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n        </ng-form>\\n\\n        \\n        <div form-input uid=formDemo5_fldName name=formDemo5_fldName label=Name label-suffix=\\\"(40 chars)\\\" required=true input-type=text ff-ng-model=ctrl.formDemo5.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'FIELD_ERROR.TEMPLATE.REQUIRED', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n        <fieldset class=\\\"form-group form-group-radio\\\">\\n          <div ng-repeat=\\\"item in ctrl.titleData\\\">\\n            <div form-radio-button uid=formDemo5_fld{{$index}} name=formDemo5_group1 ff-ng-model=ctrl.formDemo5.group1 ff-ng-value=$index required=true>{{item.label}}</div>\\n          </div>\\n          <div error-container field-name=formDemo5_group1 field-errors=\\\"{required: 'Please select one of the above options'}\\\"></div>\\n        </fieldset>\\n\\n        <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=button class=btn form-reset=ctrl.formDemo5>Reset</button>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/common/docs/formControlsDemos.docs.html\n// module id = ./modules/ngFormLib/controls/common/docs/formControlsDemos.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.common.docs.formControlsDemos', []);\n\nexport default mod.name;\n\nmod.directive('formControlsDemosDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormControlsDemosController',\n    template: require('./formControlsDemos.docs.html'),\n  };\n});\n\nmod.controller('FormControlsDemosController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n\n  vm.schoolData = [\n    {label: 'Primary'},\n    {label: 'Secondary'},\n    {label: 'Tertiary'},\n  ];\n\n  vm.formDemo4 = {\n    name: '',\n    education: [\n      {\n        name: 'Melbourne High School',\n        type: vm.schoolData[1],\n      },\n      {\n        name: undefined,\n        type: undefined,\n      },\n    ],\n  };\n\n  vm.addSchool = function() {\n    vm.formDemo4.education.push({name: '', type: undefined});\n  };\n\n  vm.submit = function() {\n    alert('Submitted');\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/docs/formControlsDemos.docs.js","import angular from 'angular';\nimport FieldErrorController from './FieldErrorController';\nimport FormControlService from './FormControlService';\nimport RequiredMarker from '../requiredMarker/RequiredMarker';    // TODO: Not sure why this is here\n\nconst mod = angular.module('ngFormLib.controls.common', [\n  FieldErrorController,\n  FormControlService,\n  RequiredMarker,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/index.js","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\nimport {ERROR_STATE} from '../../policy/stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.controls.errorMessageContainer', [FormControlService]);\n\nexport default mod.name;\n\n/*\n * This directive is really a FIELD error message container - it is designed to work with fields exclusively\n */\nmod.directive('errorContainer', ['$compile', 'formControlService', function($compile, formControlService) {\n  function ErrorController(ariaElement, a11yPolicy) {\n    let errors = {};\n\n    return {\n      addError: function(errorType, errorMessage, fieldLabel) {\n        errors[errorType] = translateError(errorMessage, fieldLabel);\n      },\n      removeError: (errorType) => delete errors[errorType],\n      updateAriaErrorElement: () => a11yPolicy.onErrorChangeBehaviour(ariaElement, errors),\n    };\n  }\n\n  function translateError(errorMessage, fieldLabel) {\n    let firstLetterIsAVowel = fieldLabel ? 'aeiou'.indexOf(fieldLabel[0].toLowerCase() !== -1) : undefined;\n\n    return formControlService.translate(errorMessage, {pronoun: firstLetterIsAVowel ? 'an' : 'a', fieldLabel: fieldLabel});\n  }\n\n\n  function generateErrorTag(errorType, errorText, fieldLabel) {\n    return '<div class=\"text-error ec2-' + errorType + '\"><span class=\"text-error-wrap\">' + translateError(errorText, fieldLabel) + '</span></div>';\n  }\n\n  /*\n   * Handle the field-based error messages\n   */\n  function toggleErrorVisibilityOnError(errorController, formController, scope, element, watchExpr, errorType, errorText, fieldLabel) {\n    // console.log('watchExpr = ' + watchExpr);\n    formController._scope.$watch(watchExpr, function(newValue) {\n      if (newValue) {\n        // The error text could contain an interpolation string, so we need to compile it\n        let val = $compile(generateErrorTag(errorType, errorText, fieldLabel))(scope);\n\n        element.append(val);\n        errorController.addError(errorType, errorText, fieldLabel);\n      } else {\n        removeErrorMessage(errorController, formController, element, errorType);\n      }\n      errorController.updateAriaErrorElement();\n    });\n  }\n\n  function removeErrorMessage(controller, formController, element, errorType) {\n    // find the div with our special class, then remove it\n    let divs = element.find('div');\n\n    for (let len = divs.length, i = len - 1; i > -1; i--) {\n      if (divs.eq(i).hasClass('ec2-' + errorType)) {\n        divs.eq(i).remove();\n      }\n    }\n    controller.removeError(errorType);\n  }\n\n  /*\n   * Handle text errors. Text errors are associated with a scope, rather than with a field.\n   * This means we can clear them from the scope when the field-they-are-associated-with is changed.\n   */\n  function toggleErrorVisibilityForTextError(errorController, formController, fieldController, scope, element, watchExpr, fieldLabel) {\n    // console.log('Watching error: ' + watchExpr);\n\n    formController._scope.$watch(watchExpr, function(newValue) {\n      // Update the validity of the field's \"watchExpr\" error-key to match the value of the errorText\n      fieldController.$setValidity(watchExpr, !newValue);\n\n      // Remove the old error message for this same errorType first, in cases where the error message is changing.\n      removeErrorMessage(errorController, formController, element, watchExpr);\n      if (newValue) {\n        // No need to compile the error message as we already have its value\n        element.append(generateErrorTag(watchExpr, newValue, fieldLabel));\n\n        errorController.addError(watchExpr, newValue, fieldLabel);\n        // Turn the border red by sending a 'form-submit-attempted' event\n        formController.setSubmitted(true);\n      }\n      errorController.updateAriaErrorElement();\n    });\n\n    // When the field changes, clear the errorText value\n    fieldController.$viewChangeListeners.push(function() {\n      if (scope.$eval(watchExpr)) {\n        scope.$eval(watchExpr + ' = null');\n      }\n    });\n  }\n\n\n  return {\n    restrict: 'AE',\n    require: ['^form'], // Require the formController controller somewhere in the parent hierarchy (mandatory for field-errors)\n    template: '<div class=\"container-error\"></div>',\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n      let fieldName = attr.fieldName;\n      let fieldLabel = attr.fieldLabel || '';\n      let formController = controllers[0];\n      let formName = formController.$name;\n      let formField = formName + '[\"' + fieldName + '\"]';\n      let fieldErrors = scope.$eval(attr.fieldErrors || []);  // You can escape interpolation brackets inside strings by doing  \\{\\{   - wow!\n      let textErrors = scope.$eval(attr.textErrors || []);\n\n      element.attr('id', formName + '-' + fieldName + '-errors');\n\n      // Get a reference to the form policy\n      let a11yPolicy = formController._policy.accessibilityBehaviour;\n      let ariaElement = a11yPolicy.createAriaErrorElement(formName, fieldName);\n      let errorController = new ErrorController(ariaElement, a11yPolicy);   // This controller contains state pertaining to this error container instance. Not a shareable controller across multiple instances.\n\n      element.append(ariaElement);\n\n      for (let error in fieldErrors) {\n        if (fieldErrors.hasOwnProperty(error)) {\n          let errorShowCondition = `${formField}.fieldState === \"${ERROR_STATE}\" && ${formField}.$error.${error}`;\n\n          toggleErrorVisibilityOnError(errorController, formController, scope, element, errorShowCondition, error, fieldErrors[error], fieldLabel);\n        }\n      }\n\n      // Watch formController[fieldName] - it may not have loaded yet. When it loads, call the main function.\n      if (textErrors) {\n        // console.log('textErrors: ' + textErrors + ', fieldName = ' + fieldName);\n        let fieldWatcher = scope.$watch(function() {\n          return formController[fieldName];\n        }, function(newValue) {\n          if (newValue) {\n            fieldWatcher(); // Cancel the watcher\n\n            // Do the actual thing you planned to do...\n            for (let item in textErrors) {\n              if (textErrors.hasOwnProperty(item)) {\n                toggleErrorVisibilityForTextError(errorController, formController, formController[fieldName], scope, element, textErrors[item], fieldLabel);\n              }\n            }\n          }\n        });\n      }\n\n      element.removeAttr('error-container').removeAttr('field-name').removeAttr('field-errors').removeAttr('text-errors');\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"ErrorMessageContainerDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=errorMessageContainer>Error Message Container <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js target=_blank>ErrorMessageContainer.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.errorMessageContainer</code>\\n  </div>\\n\\n  <p>The Error Message Container is a directive which shows & hides error messages based on the parent-form's policy and the corresponding input-field's state.\\n    It links the error message(s) to the field using ARIA attributes. This increases the accessibility of form-elements quite a bit.</p>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Message translation</h4>\\n    <p>Error Message Controller will optionally use the <code>pascalprecht.translate</code> module and the <code>$translate.instant()</code> method to perform translation of error messages,\\n      if it has been loaded. See <a href=http://angular-translate.github.io/ >Angular Translate</a>.</p>\\n  </div>\\n\\n  <p>Error messages typically have a consistent grammer.\\n    <a href=http://angular-translate.github.io/ >Angular Translate</a> makes it really easy to provide consistent error\\n    syntax for the error messages across your application, with the bonus of providing multi-language support as well.\\n    However, you can still use this directive without configuring Angular Translate - the error message strings will be rendered as-is.\\n  </p>\\n\\n  <h2 id=errorMessageContainerExamples>Examples</h2>\\n  <p><code>error-message-container</code> was designed to be used by the form controls in this library. However, it is possible to use\\n  this directive without using the form controls. A good use case is when dealing with a collection of <code>form-radio-button</code> elements where there is no initial selection, but a selection is required</p>\\n  <p>Use <code>error-message-container</code> to show an error message when a validation error occurs.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    <form name=errMsgDemo class=form novalidate>\\n      <fieldset>\\n        <div class=form-group>\\n          <label class=control-label for=errMsgDemo_fldTitle>Title</label>\\n          <div class=control-row>\\n            <select id=errMsgDemo_fldTitle name=errMsgDemo_fldTitle ng-model=ctrl.errMsgDemo.title ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" class=form-control ng-required=true field-error-controller></select>\\n          </div>\\n          <div error-container field-name=errMsgDemo_fldTitle field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n        </div>\\n\\n        <div class=form-group>\\n          <label class=control-label for=errMsgDemo_fldName>Name</label>\\n          <div class=control-row>\\n            <input type=text id=errMsgDemo_fldName name=errMsgDemo_fldName ng-model=ctrl.errMsgDemo.name class=form-control ng-required=true field-error-controller>\\n          </div>\\n          <div error-container field-name=errMsgDemo_fldName field-label=\\\"custom error label\\\" field-errors=\\\"{required: 'FIELD_ERROR.TEMPLATE.REQUIRED'}\\\" text-errors=\\\"['ctrl.myTextError', 'ctrl.translationKey']\\\"></div>\\n        </div>\\n\\n        <div form-input uid=errMsgDemo_fldName2 label=FIELD.LABEL label-suffix=FIELD.LABEL_SUFFIX required=true input-type=text ff-ng-model=ctrl.formDemo1.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'FIELD_ERROR.TEMPLATE.REQUIRED', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      </fieldset>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\" form-submit=\\\"\\\">Submit</button>\\n      <button type=button class=btn form-reset=ctrl.errMsgDemo>Reset</button>\\n      <div tabindex=0 class=btn ng-click=ctrl.toggleTextError()>Toggle text error</div>\\n    </form>\\n  </div>\\n\\n  <h2 id=errorMessageContainerUsage>Usage</h2>\\n  <p>Add the <code>error-message-container</code> directive to any element, or use one of the form controls (above) which uses <code>error-message-container</code> already.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>field-name</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>The reference to a form-control. The must match the <code>name</code> attribute of the form-control. This property allows the directive to watch the form control and show errors for that form control.</td>\\n        </tr>\\n        <tr>\\n          <td>field-label</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>The label to display when a translated-error message contains <code>{{fieldLabel}}</code>. Relies on the use of the translation service to specify error messages as translation IDs.</td>\\n        </tr>\\n        <tr>\\n          <td>field-errors</td>\\n          <td>object</td>\\n          <td></td>\\n          <td>A key-value pair object linking an error to a message. The value can be a language-resource-key if `angular-translate` is loaded.</td>\\n        </tr>\\n        <tr>\\n          <td>text-errors</td>\\n          <td>array</td>\\n          <td></td>\\n          <td>An array of scope-properties to watch for \\\"truthiness\\\". E.g. For `text-errors=\\\"['scopeProp']\\\"`, the text-value of `scope.scopeProp` will be\\n            displayed when the value is \\\"truthy\\\" (typically a non empty string).\\n            This property is useful for handling error messages returned from calling APIs.\\n            The scope value can be a language-resource-key if <code>angular-translate</code> is loaded.</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs.html\n// module id = ./modules/ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.errorMessageContainer.docs.errorMessageContainer', []);\n\nexport default mod.name;\n\nmod.directive('errorMessageContainerDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'ErrorMessageContainerDemoController',\n    template: require('./errorMessageContainer.docs.html'),\n  };\n});\n\nmod.controller('ErrorMessageContainerDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n\n  vm.toggleTextError = function() {\n    vm.myTextError = vm.myTextError ? '' : 'My text error. ';\n    vm.translationKey = vm.translationKey ? '' : 'FIELD_ERROR.TEXT_ERROR';\n  };\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/errorMessageContainer/docs/errorMessageContainer.docs.js","import angular from 'angular';\nimport FormLibCommon from '../common/index';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formCheckbox', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-checkbox id=\"id\" name=\"name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" ff-ng-model=\"application.contentType\" ff-value=\"software\" ff-aria-label=\"Software\"\n//        ff-ng-click=\"doSomething()\"\n//      field-errors=\"{required: 'Please select'}\"\n//      text-errors=\"['wrong value']\"\n//      >My label with <a href=\"http://www.google.com/\">HTML bits</a> in it</form-checkbox>\n\n// OUTPUT:\n\n\nmod.directive('formCheckbox', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formCheckbox',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [],\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formCheckbox.html', require('./template/FormCheckboxTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormCheckboxDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formCheckbox>Form Checkbox <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formCheckbox/FormCheckbox.js target=_blank>FormCheckbox.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formCheckbox</code>\\n  </div>\\n\\n  <p>The Form Checkbox directive acts like a macro in that it expands into a <code>&lt;label&gt;</code>,<code>&lt;input type=\\\"checkbox\\\"&gt;</code> and some auxillary HTML elements, but does change the <code>$scope</code> of those elements.</p>\\n\\n  <p>It works this way because the elements are inter-related. For example, when the <code>required</code> attribute is set to <code>true</code>\\n    the <code>&lt;label&gt;</code> element is changed so that a required-indicator-CSS-class is applied to the element.\\n  </p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>FormCheckbox requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a>, the <a ahref=#fieldErrorController>field error controller module</a>\\n      , the <a ahref=#errorMessageContainer>error message container module</a> and the <a href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html target=_blank>FormCheckboxTemplate.html</a> template to be loaded.</p>\\n  </div>\\n\\n  <h2 id=formCheckboxExamples>Examples</h2>\\n  <p>Use <code>form-checkbox</code> to create a complete HTML structure containing a <code>label</code> and <code>input type=\\\"checkbox\\\"</code> element that reacts to the error state of the field.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formCheckbox1 class=form novalidate form-submit>\\n\\n      <div form-checkbox uid=formCheckbox1_fld1 name=formCheckbox1_fld1 required=true ff-ng-model=ctrl.data.fld1 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n      <div form-checkbox uid=formCheckbox1_fld2 name=formCheckbox1_fld2 ff-ng-model=ctrl.data.fld2 ff-ng-true-value=\\\"'dog'\\\" ff-ng-false-value=\\\"'cat'\\\">Optional Checkbox with value: {{ctrl.data.fld2}}</div>\\n\\n      <div form-checkbox uid=formCheckbox1_fld3 name=formCheckbox1_fld3 class=image-checkbox required=true field-errors=\\\"{required: 'You must agree'}\\\" ff-ng-model=ctrl.data.fld3>Styled accessible checkbox</div>\\n\\n      <div form-checkbox uid=formCheckbox1_fld4 name=formCheckbox1_fld4 class=image-checkbox ff-ng-disabled=ctrl.data.fld3 ff-ng-model=ctrl.data.fld4>Occassionally disabled checkbox</div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formCheckboxUsage>Usage</h2>\\n  <p>Add the <code>form-check</code> directive to an element, and supply a label as the content of the element (see example above).</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th style=width:100px>Name</th>\\n          <th style=width:100px>Type</th>\\n          <th style=width:50px>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>ff-ng-true-value</td>\\n          <td>expression</td>\\n          <td></td>\\n          <td>The value to use in the model-value when the checkbox is checked.</td>\\n        </tr>\\n        <tr>\\n          <td>ff-ng-false-value</td>\\n          <td>expression</td>\\n          <td></td>\\n          <td>The value to use in the model-value when the checkbox is not checked.</td>\\n        </tr>\\n      </tbody>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formCheckbox/docs/formCheckbox.docs.html\n// module id = ./modules/ngFormLib/controls/formCheckbox/docs/formCheckbox.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formCheckbox.docs.formCheckbox', []);\n\nexport default mod.name;\n\nmod.directive('formCheckboxDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormCheckboxDemoController',\n    template: require('./formCheckbox.docs.html'),\n  };\n});\n\nmod.controller('FormCheckboxDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formCheckbox/docs/formCheckbox.docs.js","module.exports = \"<div class=\\\"form-group form-group-checkbox\\\">\\n\\t<div class=checkbox>\\n\\t\\t<input type=checkbox field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html\n// module id = ./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\n\nconst mod = angular.module('ngFormLib.controls.formDate', [\n  FormLibCommon,\n  ErrorMessageContainer,\n  // 'mgcrea.ngStrap.datepicker'   We are using this, but if it is not loaded, we can still offer basic functionality\n]);\n\nexport default mod.name;\n\n// INPUT:\n//    <div form-date id=\"toDate\" name=\"toDate\" label=\"To date\" hide-label=\"true\"\n//    ff-ng-model=\"acctCtrl.search.toDate\" ff-max-date=\"today\" ff-bs-show=\"acctCtrl.datePickers.datePickerTo\"\n//    ff-ng-blur=\"acctCtrl.toggleDatePicker('datePickerTo', true)\"\n//    ff-ng-focus=\"acctCtrl.toggleDatePicker('datePickerFrom', true)\"\n//    ff-class=\"form-control input-beta input-date\"\n//    field-errors=\"{date: 'ERROR.DATE_INVALID'}\" >\n//      <i class=\"calendar\" ng-click=\"acctCtrl.toggleDatePicker('datePickerTo')\"></i>\n//    </div>\n\n\nmod.directive('formDate', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formDate',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use addons (either text or buttons), change the DOM\n      let hasInputGroup = formControlService.addInputGroup(inputElem, tAttr);\n      let parentElemForErrors = hasInputGroup ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formDate.html', require('./template/FormDateInputTemplate.html'));\n  try {\n    $templateCache.put('datepicker/datepicker.tpl.html', require('angular-strap/src/datepicker/datepicker.tpl.html'));\n  } catch (err) {\n    console.debug('angular-strap/src/datepicker/datepicker.tpl.html is not available for the formDate control');\n  }\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\nmod.directive('formDateFormat', ['ngFormLibDateUtil', function(DateUtil) {\n  // All dates greater than AD 0 and less than AD 10000 in dd/mm/yyyy format\n  // RegEx behaves oddly if /g is uses in Regexp.test() situations\n  let dateRegEx = /^(((0[1-9]|[12][0-9]|3[01])([\\/])(0[13578]|10|12)([\\/])(\\d{4}))|(([0][1-9]|[12][0-9]|30)([\\/])(0[469]|11)([\\/])(\\d{4}))|((0[1-9]|1[0-9]|2[0-8])([\\/])(02)([\\/])(\\d{4}))|((29)(\\/)(02)([\\/])([02468][048]00))|((29)([\\/])(02)([\\/])([13579][26]00))|((29)([\\/])(02)([\\/])([0-9][0-9][0][48]))|((29)([\\/])(02)([\\/])([0-9][0-9][2468][048]))|((29)([\\/])(02)([\\/])([0-9][0-9][13579][26])))$/;\n\n  return {\n    require: 'ngModel',\n    priority: 150,    // Higher priority than ui-mask (100), so the postLink function runs last\n    link: function(scope, elem, attrs, ctrl) {\n      function resetValidators() {\n        ctrl.$setValidity('dateFormat', true);\n        ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n        ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n      }\n\n      ctrl.$parsers.unshift(function(viewValue) {\n        // If viewValue or modelValue is undefined or null, jump out\n        if (!viewValue) {\n          resetValidators();\n          return viewValue;\n        }\n\n        if (viewValue.getTime) {\n          // Convert the date value to a date string\n          viewValue = DateUtil.formatDay(viewValue);\n        }\n\n        // If viewValue is a string of 8 digits, then convert it to dd/dd/dddd first\n        if (viewValue.length === 8 && !isNaN(viewValue * 1)) {\n          viewValue = viewValue.substr(0, 2) + '/' + viewValue.substr(2, 2) + '/' + viewValue.substr(4);\n        }\n\n        // Check that it is a valid date\n        let dateFormatValid = dateRegEx.test(viewValue) || typeof viewValue === 'undefined' || !viewValue;\n\n        ctrl.$setValidity('dateFormat', dateFormatValid);\n\n        // console.log('dateInput: ' + viewValue + ', ' + ctrl.$modelValue);\n\n        // If the date is valid\n        if (dateFormatValid && viewValue) {\n          let fieldDate = DateUtil.getDate(viewValue);\n\n          // and there is a min date, check if the value is greater than the min date\n          if (attrs.minDate) {\n            let minDate = DateUtil.getDate(attrs.minDate);\n\n            ctrl.$setValidity('minDate', fieldDate.getTime() >= minDate.getTime());\n          } else {\n            ctrl.$setValidity('minDate', true);\n          }\n          // and there is a max date, check if the value is less than the max date\n          if (attrs.maxDate) {\n            let maxDate;\n\n            if (attrs.maxDate === 'today') {\n              maxDate = DateUtil.getDate(DateUtil.getToday());\n            } else {\n              maxDate = DateUtil.getDate(attrs.maxDate);\n            }\n\n            ctrl.$setValidity('maxDate', fieldDate.getTime() <= maxDate.getTime());\n          } else {\n            ctrl.$setValidity('maxDate', true);\n          }\n        } else {\n          ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n          ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n        }\n        return viewValue;\n      });\n\n      ctrl.$viewChangeListeners.push(function() {\n        // If there is a date-change attribute, execute it when the control is valid\n        if (attrs.dateChange && ctrl.$valid) {\n          scope.$eval(attrs.dateChange);\n        }\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formDate/FormDate.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormDateDocsController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formDate>Form Date <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formDate/formDate.js target=_blank>FormDate.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formDate</code>\\n  </div>\\n\\n  <p>Same as the Form Input directive, but with additional date validation. The date validation is DD/MM/YYYY-centric. Feel free to refactor it to be more international-friendly.</p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>Form Date requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a>, the <a href=#fieldErrorController>field error controller module</a>\\n      , the <a ahref=#errorMessageContainer>error message container module</a> and the <a href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html target=_blank>FormDateInputTemplate.html</a> template to be loaded.\\n      Additionally, if the <code>mgcrea.ngStrap.datepicker</code> module is loaded (as part of <a href=http://http://mgcrea.github.io/angular-strap target=_blank>AngularStrap</a>, then a calendar control will be displayed.\\n      See the <a href=http://mgcrea.github.io/angular-strap/#/datepickers>Date Picker API</a> for more options.\\n    </p>\\n  </div>\\n\\n  <h2 id=formDateExamples>Examples</h2>\\n  <p>Use <code>form-date</code> to create a complete HTML structure containing a <code>label</code> and <code>input</code> element that reacts to the state of the field.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formDate1 class=form novalidate form-submit>\\n\\n      <div form-date uid=formDate1_fld1 label=\\\"Date field\\\" required=true ff-ng-model=ctrl.date1 field-hint=OTHER.HINT ff-min-date=07/07/2010 ff-max-date=today ff-date-type=string ff-date-format=dd/MM/yyyy ff-model-date-format=dd/MM/yyyy field-errors=\\\"{required: 'Date is required', dateFormat: 'Date must be correct format',\\n            minDate: 'Must be greater than 07/07/2010', maxDate: 'Date must not be greater than today'}\\\"></div>\\n\\n      <div>{{ctrl.date1}}</div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formDateUsage>Usage</h2>\\n  <p>Add the <code>form-date</code> directive to an element.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th style=width:100px>Name</th>\\n          <th style=width:100px>Type</th>\\n          <th style=width:50px>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>ff-min-date</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Minimum valid date. A string representation of a date in dd/mm/yyyy format, or the string 'today'</td>\\n        </tr>\\n        <tr>\\n          <td>ff-max-date</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Maximum valid date. A string representation of a date in dd/mm/yyyy format, or the string 'today'</td>\\n        </tr>\\n        <tr>\\n          <td>field-hint</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Text that is related to the field but is not the field's label. Often used to provide additional information about the field. This string can be a language-resource-key.</td>\\n        </tr>\\n      </tbody>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formDate/docs/formDate.docs.html\n// module id = ./modules/ngFormLib/controls/formDate/docs/formDate.docs.html\n// module chunks = 0","import angular from 'angular';\nimport FormLibCommon from '../../common';\n\nconst mod = angular.module('ngFormLibDocs.controls.formDate.docs.formDate', [FormLibCommon]);\n\nexport default mod.name;\n\nmod.directive('formDateDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormDateDocsController',\n    template: require('./formDate.docs.html'),\n  };\n});\n\n\nmod.controller('FormDateDocsController', ['ngFormLibDateUtil', function Controller(DateUtil) {\n  this.date1 = DateUtil.getToday();\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formDate/docs/formDate.docs.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><input type=text class=form-control maxlength=10 placeholder=dd/mm/yyyy bs-datepicker form-date-format mask-date-digits><span ng-transclude></span></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html\n// module id = ./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formInput', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-input id=\"\" name=\"\" label=\"Last name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" input-type=\"text|tel|email\" ff-ng-model=\"application.lastName\"\n//      ff-maxlength=\"40\" ff-ng-pattern=\"/^[a-zA-Z0-9 \\-.']+$/\"\n//      field-hint=\"This must be the last name of the person who originally applied for the service.\"\n//      field-errors=\"{required: 'Please enter a valid last name', pattern: 'Please enter a valid last name'}\"\n//      text-errors=\"['data.errors.']\"\n//      content-class=\"span3\"\n//      >My content</form-input>\n\n// OUTPUT:\n\n\nmod.directive('formInput', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formInput',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label', 'inputType'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use addons (either text or buttons), change the DOM\n      let hasInputGroup = formControlService.addInputGroup(inputElem, tAttr);\n      let parentElemForErrors = hasInputGroup ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formInput.html', require('./template/FormInputTemplate.html'));\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formInput/FormInput.js","module.exports = \"<div class=bs-docs-section>\\n\\n  <div class=page-header>\\n    <h1 id=formInput>Form Input <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formInput/FormInput.js target=_blank>FormInput.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formInput</code>\\n  </div>\\n\\n  <p>The Form Input directive acts like a macro in that it expands into a <code>&lt;label&gt;</code><code>&lt;input&gt;</code> and some auxillary HTML elements, but does change the <code>$scope</code> of those elements.</p>\\n\\n  <p>It works this way because the elements are inter-related. For example, when the <code>required</code> attribute is set to <code>true</code>\\n    the <code>&lt;label&gt;</code> element is changed so that a required-indicator-CSS-class is applied to the element.\\n  </p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>Form Input requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a>, the <a href=#fieldErrorController>field error controller module</a>\\n      , the <a ahref=#errorMessageContainer>error message container module</a> to be loaded.</p>\\n  </div>\\n\\n  <h2 id=formInputExamples>Examples</h2>\\n  <p>Use <code>form-input</code> to create a complete HTML structure containing a <code>label</code> and <code>select</code> element that reacts to the error state of the field.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formInput1 class=form novalidate form-submit>\\n\\n      <div form-input uid=formInput1_fld1 name=formInput1_fld1 label=\\\"Text type field\\\" required=true input-type=text ff-ng-model=ctrl.formInput1.fld1 field-hint=\\\"{{'OTHER.HINT' | translate}}\\\" field-errors=\\\"{required: 'Title is required'}\\\" placeholder=\\\"Placeholder text\\\"></div>\\n\\n      <div form-input uid=formInput1_fld2 name=formInput1_fld2 label=\\\"Date type field\\\" required=false input-type=date ff-ng-model=ctrl.formInput1.fld2></div>\\n\\n      <div form-input uid=formInput1_fld3 name=formInput1_fld3 label=Income required=true input-type=text ff-ng-model=ctrl.formInput1.fld3 input-prefix=$ input-button-suffix=\\\"per month\\\" input-button-suffix-click=$ctrl.igbSuffixHandler() field-errors=\\\"{required: 'Income is required'}\\\"></div>\\n\\n      \\n      <div form-input label=\\\"Generated id field\\\" required=true input-type=text ff-ng-model=ctrl.formInput1.fld4 placeholder=\\\"This field has a generated name and id\\\" input-button-prefix=$ input-button-prefix-click=$ctrl.igbPrefixHandler() input-suffix=\\\"per month\\\" field-errors=\\\"{required: 'FIELD_ERROR.TEMPLATE.REQUIRED'}\\\"></div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formInputUsage>Usage</h2>\\n  <p>Add the <code>form-input</code> directive to an element.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th style=width:100px>Name</th>\\n          <th style=width:100px>Type</th>\\n          <th style=width:50px>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>field-hint</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Text that is related to the field but is not the field's label. Often used to provide additional information about the field.</td>\\n        </tr>\\n        <tr>\\n          <td>input-button-prefix</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Creates a Bootstrap <a href=http://getbootstrap.com/components/#input-groups-buttons target=_blank>input group button</a> at the front of an input control.\\n            To handle the button click, call a controller/scope function inside of the `input-button-prefix-click` attribute (see example above).\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>input-button-suffix</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Creates a Bootstrap <a href=http://getbootstrap.com/components/#input-groups-buttons target=_blank>input group button</a> at the end of an input control.\\n            To handle the button click, call a controller/scope function inside of the `input-button-suffix-click` attribute (see example above).\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>input-prefix</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Creates a Bootstrap <a href=http://getbootstrap.com/components/#input-groups target=_blank>input group</a> around the input\\n            element and displays the <strong>input-prefix</strong> string inside a <code>&lt;span class=\\\"input-group-addon\\\"&gt;&lt;/span&gt;</code> element, which appears <strong>before</strong> the <code>input</code> element.\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>input-suffix</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Creates a Bootstrap <a href=http://getbootstrap.com/components/#input-groups target=_blank>input group</a> around the input\\n            element and displays the <strong>input-suffix</strong> string inside a <code>&lt;span class=\\\"input-group-addon\\\"&gt;&lt;/span&gt;</code> element, which appears <strong>after</strong> the <code>input</code> element.\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>placeholder</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Placeholder text that appears inside the input element when there is no existing value. Alias for <code>ff-placeholder</code>.</td>\\n        </tr>\\n      </tbody>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formInput/docs/formInput.docs.html\n// module id = ./modules/ngFormLib/controls/formInput/docs/formInput.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formInput.docs.formInput', []);\n\nexport default mod.name;\n\nmod.directive('formInputDocs', function() {\n  let prefixCount = 0;\n  let suffixCount = 0;\n\n  return {\n    restrict: 'A',\n    template: require('./formInput.docs.html'),\n    controller: function() {\n      this.igbPrefixHandler = () => window.alert(`input group button prefix clicked ${++prefixCount} times`);\n      this.igbSuffixHandler = () => window.alert(`input group button suffix clicked ${++suffixCount} times`);\n    },\n    controllerAs: '$ctrl',\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formInput/docs/formInput.docs.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><input class=form-control><span ng-transclude></span></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html\n// module id = ./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formRadioButton', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-radio-button uid=\"fld\" name=\"name\" aria-label=\"Book Type\" label-class=\"btn btn-toggle\"\n//    ff-class=\"someCSS\" ff-ng-model=\"application.bookType\" ff-value=\"Fiction\" ng-click=\"loadFiction()\" class=\"span6\">\n//     <icon class=\"icon-fiction\"></icon>Fiction\n//  </form-radio-button>\n\n// OUTPUT:\n\nmod.directive('formRadioButton', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formRadioButton',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [], // The template should NOT have a form-group element inside it, as this has to be specified externally (due to the group-nature of radio buttons)\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      // Move the class attribute from the outer-DIV to the radio-button DIV (special case)\n      let rbDiv = tElement.find('div');\n\n      rbDiv.addClass(tElement.attr('class'));\n      tElement.removeAttr('class');\n\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    },\n  });\n}]);\n\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formRadioButton.html', require('./template/FormRadioButtonTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormRadioButtonDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formRadioButton>Form RadioButton <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formRadioButton/FormRadioButton.js target=_blank>FormRadioButton.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formRadioButton</code>\\n  </div>\\n\\n  <p>Form RadioButton is a directive that is a wrapper for a <code>label</code>,<code>input type=\\\"radio\\\"</code> and some auxillary HTML elements, designed to work within Bootstrap form-structures.</p>\\n\\n  <p>It works this way because the <code>label</code>,<code>input type=\\\"radio\\\"</code> and error-display elements are inter-related.\\n    For example, when the <code>required</code> attribute is set to <code>true</code>\\n    the <code>&lt;label&gt;</code> element is changed so that a required-indicator-CSS-class is applied to the element.\\n  </p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>Form RadioButton requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a>, the <a ahref=#fieldErrorController>field error controller module</a>\\n      , the <a ahref=#errorMessageContainer>error message container module</a> and the\\n      <a href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formRadioButton/template/formRadioButtonTemplate.html target=_blank>FormRadioButtonTemplate.html</a> template to be loaded.</p>\\n  </div>\\n\\n  <h2 id=formRadioButtonExamples>Examples</h2>\\n  <p>Use <code>form-radio-button</code> to create a complete HTML structure containing a <code>label</code> and <code>input type=\\\"radio\\\"</code> element that reacts to the state of the field.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formRadio1 class=form novalidate form-submit>\\n\\n      \\n      <fieldset class=\\\"form-group form-group-radio\\\">\\n        <div ng-repeat=\\\"item in ctrl.titleData\\\">\\n          <div form-radio-button uid=formRadio1_fld{{$index}} name=formRadio1_group1 ff-ng-model=ctrl.data.radioVal1 ff-ng-value=$index required=true hide-required-indicator>{{item.label}}</div>\\n        </div>\\n        <div error-container field-name=formRadio1_group1 field-errors=\\\"{required: 'Please select one of the above options'}\\\"></div>\\n      </fieldset>\\n\\n      <p>Selected value: {{ctrl.data1.radioVal1}}</p>\\n\\n      \\n      <fieldset class=\\\"form-group form-group-radio\\\">\\n        <div ng-repeat=\\\"item in ctrl.titleData\\\">\\n          <div form-radio-button uid=formRadio1_fld2{{$index}} name=formRadio1_group2 ff-ng-model=ctrl.data.radioVal2 ff-ng-value=$index>{{item.label}}</div>\\n        </div>\\n      </fieldset>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n      <button type=button class=btn form-reset=ctrl.data>Reset</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formRadioButtonUsage>Usage</h2>\\n  <p>Add the <code>form-radio-button</code> directive to an element, and supply a label as the content of the element (see example above).</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>ff-ng-value</td>\\n        <td>expression</td>\\n        <td></td>\\n        <td>The value to use in the model-value when the radio-button is selected.</td>\\n      </tr>\\n      </tbody>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formRadioButton/docs/formRadioButton.docs.html\n// module id = ./modules/ngFormLib/controls/formRadioButton/docs/formRadioButton.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formRadioButton.docs.formRadioButton', []);\n\nexport default mod.name;\n\nmod.directive('formRadioButtonDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormRadioButtonDemoController',\n    template: require('./formRadioButton.docs.html'),\n  };\n});\n\n\nmod.controller('FormRadioButtonDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Amazing Spiderman, The'},\n    {label: 'Batman'},\n    {label: 'Catwoman'},\n  ];\n\n  vm.data = {\n    radioVal2: 2,   // Initial value of second radio button\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formRadioButton/docs/formRadioButton.docs.js","module.exports = \"<div>\\n\\t<div class=radio>\\n\\t\\t<input type=radio field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html\n// module id = ./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html\n// module chunks = 0 1","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formReset', []);\n\nexport default mod.name;\n\n\nmod.directive('formReset', ['$parse', function($parse) {\n  function resetFieldState(controlMap) {\n    // Loops through the controlMap and reset's each field's state\n    for (let item in controlMap) {\n      if (controlMap.hasOwnProperty(item)) {\n        let controlList = controlMap[item];\n\n        for (let j = 0, jLen = controlList.length; j < jLen; j++) {\n          controlList[j].controller.fieldState = '';\n        }\n      }\n    }\n  }\n\n  return {\n    restrict: 'A',\n    require: '^form',\n    link: function(scope, element, attr, controller) {\n      let ngModelGet = $parse(attr.formReset);\n      let ngModelSet = ngModelGet.assign;\n\n      if (!ngModelSet) {\n        throw Error('formReset requires an assignable scope-expression. \"' + attr.formReset + '\" is un-assignable.');\n      }\n\n      // Get a copy of the data as soon as the directive is created, which is after the scope/controller has been initialised (safe)\n      let originalData = angular.copy(ngModelGet(scope));\n\n      element.on('click', function() {\n        if (typeof controller.setSubmitted === 'function') {\n          controller.setSubmitted(false);\n        }\n        // Use a *copy* of the original data, as we don't want originalData to be modified by subsequent changes to the model by the form controls\n        ngModelSet(scope, angular.copy(originalData));\n        resetFieldState(controller._controls || {});\n        controller.$setPristine();\n\n        scope.$emit('event:FormReset');\n        scope.$digest();\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formReset/FormReset.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormResetDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formReset>Form Reset <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formReset/FormReset.js target=_blank>FormReset.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formReset</code>\\n  </div>\\n\\n  <p>Form Reset is a directive which resets each form-field to it's initial state, by copying the initial state of the form's data-model.<br/>\\n    This requires every form controls' <code>ng-model</code> expression to refer to a common scope-object.\\n  </p>\\n\\n  <h2 id=formResetExamples>Examples</h2>\\n  <p>Add <code>form-reset</code> directive to any <code>button</code> element inside a form.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    <form name=formReset class=form novalidate form-submit=ctrl.callWhenValid()>\\n\\n      <div form-input uid=formReset_fldName name=formReset_fldName label=Name required=true input-type=text ff-ng-model=ctrl.data.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      <div form-input uid=formReset_fldNickName name=formReset_fldNickName label=\\\"Nick Name\\\" required=true input-type=text ff-ng-model=ctrl.data.nickName ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Nick name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      <div form-select uid=formReset_fldTitle name=formReset_fldTitle label=\\\"Title with default value\\\" required=true ff-ng-model=ctrl.data.title ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n      <div form-select uid=formReset_fldTitle2 name=formReset_fldTitle2 label=\\\"Title with no default value\\\" required=true ff-ng-model=ctrl.data.title2 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n      <div form-select uid=formReset_fldTitle3 name=formReset_fldTitle3 label=\\\"Title with placeholder\\\" required=true placeholder=\\\"Select title\\\" ff-ng-model=ctrl.data.title3 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n      <button type=button class=btn form-reset=ctrl.data>Reset</button>\\n    </form>\\n\\n  </div>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>ngOptions <strong>must</strong> use 'track by'</h4>\\n    <p>Due to the way <code>form-reset</code> works (copying the data-object used by the controls, then changing the data-object back to the original value),\\n    <code>select</code> elements which use <code>ng-options</code> <strong>MUST</strong> use the <code>ng-options=\\\"... track by ...\\\"</code> variant\\n    of the syntax, if the <code>select</code> element has an initial value. See the example above.</p>\\n  </div>\\n\\n  <h2 id=formResetUsage>Usage</h2>\\n  <p>Add the <code>form-reset</code> directive to a <code>button</code> element.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>form-reset</td>\\n        <td>expression</td>\\n        <td></td>\\n        <td><strong>Required </strong>This expression should represent the parent scope-model-object that the form controls bind to.\\n          For example, a Customer Profile form should have a set of form controls that bind to 'myObject.&lt;name|age|birthDate|...&gt;'.\\n          In this example, use <code>form-reset=\\\"myObject\\\"</code>.</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formReset/docs/formReset.docs.html\n// module id = ./modules/ngFormLib/controls/formReset/docs/formReset.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formReset.docs.formReset', []);\n\nexport default mod.name;\n\nmod.directive('formResetDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormResetDemoController',\n    template: require('./formReset.docs.html'),\n  };\n});\n\nmod.controller('FormResetDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n\n  // Demonstrate the reset directive with non-empty data models\n  vm.data = {\n    name: 'Not-empty-initially',\n    title: vm.titleData[2],\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formReset/docs/formReset.docs.js","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formSelect', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n// INPUT:\n//  <form-select id=\"frm-size\" name=\"bookSize\" required=\"true\" label=\"Approximate size\"\n//    ff-class=\"span12\" ff-ng-model=\"model.size\" placeholder=\"Select a size bracket\"\n//    ff-ng-options=\"option.value as option.name for option in refData.bookSizes\"\n//    field-errors=\"{required: 'Please select a size bracket'}\"\n//    text-errors=\"['data.errors']\"></form-select>\n\n// OUTPUT:\n\n\nmod.directive('formSelect', ['formControlService', function(formControlService) {\n  function addPlaceholder(selectElem, placeholderText) {\n    if (placeholderText) {\n      selectElem.append('<option translate value=\"\">' + placeholderText + '</option>');\n    }\n  }\n\n  return formControlService.buildDirective({\n    controlName: 'formSelect',\n    inputElementName: 'select',\n    expectedTemplateElements: ['select', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, tAttr.placeholder);  // Adds the extra option element to the start of the <option>\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(inputElem.parent(), inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formSelect.html', require('./template/FormSelectTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSelect/FormSelect.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormSelectDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formSelect>Form Select <a class=small href={{mainCtrl.REPO}}/src/modules/ngFormLib/controls/formSelect/FormSelect.js target=_blank>FormSelect.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formSelect</code>\\n  </div>\\n\\n  <p>The Form Select directive acts like a macro in that it expands into a <code>&lt;label&gt;</code><code>&lt;select&gt;</code> and some auxillary HTML elements, but does change the <code>$scope</code> of those elements.</p>\\n\\n  <p>It works this way because the elements are inter-related. For example, when the <code>required</code> attribute is set to <code>true</code>\\n    the <code>&lt;label&gt;</code> element is changed so that a required-indicator-CSS-class is applied to the element.\\n  </p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>FormSelect requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a>, the <a href=#fieldErrorController>field error controller module</a>\\n      , the <a ahref=#errorMessageContainer>error message container module</a> and the <a href={{mainCtrl.REPO}}/src/modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html target=_blank>FormSelectTemplate.html</a> template to be loaded.</p>\\n  </div>\\n\\n  <h2 id=formSelectExamples>Examples</h2>\\n  <p>Use <code>form-select</code> to create a complete HTML structure containing a <code>label</code> and <code>select</code> element that reacts to the error state of the field.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formFormSelect class=form novalidate form-submit>\\n\\n      <div form-select uid=formFormSelect_fldDemo1 name=formFormSelect_fldDemo1 label=\\\"Common field\\\" required=true ff-ng-model=ctrl.data.demo1 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n      <div form-select uid=formFormSelect_fldDemo2 name=formFormSelect_fldDemo2 label=\\\"Field with placeholder\\\" required=false ff-ng-model=ctrl.data.demo2 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" placeholder=\\\"{{'OTHER.PLACEHOLDER' | translate}}\\\"></div>\\n\\n      <div form-select uid=formFormSelect_fldDemo3 name=formFormSelect_fldDemo3 label=\\\"{{'FIELD.TITLE' | translate}}\\\" required=false ff-ng-model=ctrl.data.demo3 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-hint=OTHER.HINT></div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n      <button type=button class=btn form-reset=ctrl.data>Reset</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formSelectUsage>Usage</h2>\\n  <p>Add the <code>form-select</code> directive to an element.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th style=width:100px>Name</th>\\n          <th style=width:100px>Type</th>\\n          <th style=width:50px>Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>field-hint</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Text that is related to the field but is not the field's label. Often used to provide additional information about the field. This string can be a language-resource-key.</td>\\n        </tr>\\n        <tr>\\n          <td>placeholder</td>\\n          <td>string</td>\\n          <td></td>\\n          <td>Text to display when there is no initial value.</td>\\n        </tr>\\n        <tr>\\n          <td>ff-ng-options</td>\\n          <td>expression</td>\\n          <td></td>\\n          <td><strong>Required</strong> - the AngularJS <code>ngOptions</code> directive, which is applied to the <code>select</code> element.\\n          Note that the 'track by' syntax is required in this expression for the control to work correctly with the <code>form-reset</code> directive.</td>\\n        </tr>\\n      </tbody>\\n      <tbody form-controls-common-properties-docs></tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formSelect/docs/formSelect.docs.html\n// module id = ./modules/ngFormLib/controls/formSelect/docs/formSelect.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formSelect.docs.formSelect', []);\n\nexport default mod.name;\n\nmod.directive('formSelectDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormSelectDemoController',\n    template: require('./formSelect.docs.html'),\n  };\n});\n\nmod.controller('FormSelectDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSelect/docs/formSelect.docs.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><select class=form-control></select></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html\n// module id = ./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html\n// module chunks = 0 1","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formSubmit', []);\n\nexport default mod.name;\n\n\n/**\n * formSubmit - Executes an expression when the form is valid (essentially a form.submit() handler).\n *\n * It can be applied to either the form element or to a button.\n *\n * @param {Object} $parse   The $parse service\n *\n * @return {Object} Directive definition object\n */\nmod.directive('formSubmit', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    require: ['^form'],   // Get the form controller\n    link: function(scope, element, attr, controller) {\n      let fn = $parse(attr.formSubmit) || angular.noop;\n      let isForm = element[0].tagName === 'FORM';\n      let formController = controller[0];\n\n      element.bind(isForm ? 'submit' : 'click', function(event) {\n        formController.setSubmitted(true);\n\n        scope.$apply(function() {\n          // scope.$emit('event:FormSubmitAttempted');\n\n          if (formController.$valid) {\n            if (fn(scope, {$event: event}) !== false) {\n              // Needed by the tracking tool as it clears the input data after a submission.\n              // Potentially, form field validation to be done here, but unnecessary at the moment.\n              // The reset behaviour can be over-ridden by returning false from the called function(maybe prevent default aswell?)\n              formController.setSubmitted(false);\n              formController.$setPristine();\n            }\n          } else {\n            event.preventDefault();\n          }\n        });\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSubmit/FormSubmit.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormSubmitDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formSubmit>Form Submit <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/formSubmit/FormSubmit.js target=_blank>FormSubmit.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.formSubmit</code>\\n  </div>\\n\\n  <p>Form Submit is a directive which can contain an expression to execute <strong>when the form is valid</strong>.<br/>\\n    This directive is useful when you need to execute a function on the <code>$scope</code> once the form data has been successfully validated.\\n    The function would typically do some minor data-transformation on (a copy of) the form's data before sending the data to a service for further processing.\\n  </p>\\n\\n  <h2 id=formSubmitExamples>Examples</h2>\\n  <p>Add <code>form-submit</code> directive to any form element <strong>or</strong> to any button inside a form.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formSubmit class=form novalidate form-submit=ctrl.callWhenValid()>\\n      \\n      <div form-input uid=formSubmit_fldName name=formSubmit_fldName label=Name required=true input-type=text ff-ng-model=ctrl.data.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      <input type=submit class=btn value=\\\"Input type=submit\\\">\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n      <button type=button class=btn>Non-submit button</button>\\n    </form>\\n\\n    <hr>\\n\\n    \\n    <form name=formSubmit2 class=form novalidate>\\n      \\n      <div form-input uid=formSubmit2_fldNickName name=formSubmit2_fldNickName label=\\\"Nick Name\\\" required=true input-type=text ff-ng-model=ctrl.data.nickName ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      <input type=submit class=btn value=\\\"Input type=submit\\\">\\n      <button type=submit class=\\\"btn btn-primary\\\" form-submit=ctrl.callWhenValid()>Submit button with directive</button>\\n      <button type=button class=btn form-submit=ctrl.callWhenValid()>Non-submit button with directive</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=formSubmitUsage>Usage</h2>\\n  <p>Add the <code>form-submit</code> directive to a <code>form</code> or <code>button</code> element, with a value that is a scope-expression.</p>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formSubmit/docs/formSubmit.docs.html\n// module id = ./modules/ngFormLib/controls/formSubmit/docs/formSubmit.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.formSubmit.docs.formSubmit', []);\n\nexport default mod.name;\n\nmod.directive('formSubmitDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormSubmitDemoController',\n    template: require('./formSubmit.docs.html'),\n  };\n});\n\nmod.controller('FormSubmitDemoController', function Controller() {\n  let vm = this;\n\n  vm.callWhenValid = function() {\n    window.alert('Form is valid');\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSubmit/docs/formSubmit.docs.js","import angular from 'angular';\nimport ErrorMessageContainer from './errorMessageContainer/ErrorMessageContainer';\nimport FormCheckbox from './formCheckbox/FormCheckbox';\nimport FormDate from './formDate/FormDate';\nimport FormInput from './formInput/FormInput';\nimport FormRadioButton from './formRadioButton/FormRadioButton';\nimport FormReset from './formReset/FormReset';\nimport FormSelect from './formSelect/FormSelect';\nimport FormSubmit from './formSubmit/FormSubmit';\n\n  // We need the utility module for the ngFormLibDateUtil.getDate() method for the formDateFormat directive, and ngFormLibStringUtil.trim() in controls.common\nconst mod = angular.module('ngFormLib.controls', [\n  ErrorMessageContainer,\n  FormCheckbox,\n  FormDate,\n  FormInput,\n  FormRadioButton,\n  FormReset,\n  FormSelect,\n  FormSubmit,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/index.js","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.requiredMarker', [FormControlService]);\n\nexport default mod.name;\n\n\n// Add a simple \"required\" marker that is not read-out by screen readers (as the field should also have a required indicator)\n//\n// INPUT:\n//  <span required-marker></span>\n//  <span required-marker hide=\"isNotRequired\">Some Text</span>\n\n// OUTPUT:\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\"></span>\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\" hide=\"isNotRequired\">Some Text</span>\n\nmod.directive('requiredMarker', ['formControlService', function(formControlService) {\n  return {\n    restrict: 'AE',\n    replace: true,\n    transclude: true,\n    templateUrl: function(element, attr) {\n      return attr.template || formControlService.getHTMLTemplate(element, 'requiredMarker');\n    },\n    scope: {\n      hide: '=',\n    },\n  };\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/requiredMarker.html', require('./template/RequiredMarkerTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"RequiredMarkerDemoController as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=requiredMarker>Required Marker <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/controls/requiredMarker/RequiredMarker.js target=_blank>RequiredMarker.js</a>\\n    </h1>\\n    <code>ngFormLib.controls.requiredMarker</code>\\n  </div>\\n\\n  <p>Required Marker is a small directive which emits HTML which can be styled to display a symbol/content to indicate that a form-field is required.\\n    The default template makes the marker accessible by hiding the element from a screen reader and reading out 'required' instead.</p>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Plugin dependency</h4>\\n    <p>Required Marker requires the <a ahref=#formControlService use-hash=true scroll-offset=50>FormControlService module</a> template to be loaded.</p>\\n  </div>\\n\\n  <h2 id=requiredMarkerExamples>Examples</h2>\\n  <p>Use <code>required-marker</code> to add an indicator inside a <code>label</code> element.</p>\\n\\n  <h3>Live demo</h3>\\n\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    \\n    <form name=formRequiredMarker class=form novalidate form-submit>\\n\\n      \\n      <div class=form-group>\\n        <label for=formRequiredMarker_fldTitle>My field<span required-marker></span></label>\\n        <div class=control-row>\\n          <select uid=formRequiredMarker_fldTitle name=formRequiredMarker_fldTitle ng-model=ctrl.data.title ng-options=\\\"item.label for item in ctrl.titleData\\\" class=form-control ng-required=true field-error-controller></select>\\n        </div>\\n        <div error-container field-name=formRequiredMarker_fldTitle field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n      </div>\\n\\n\\n      \\n      <div class=form-group>\\n        <label for=formRequiredMarker_fldTitle2>Optionally required field</label><span required-marker hide=\\\"ctrl.data.title.label === 'Mr'\\\"></span>\\n        <div class=control-row>\\n          <select uid=formRequiredMarker_fldTitle2 name=formRequiredMarker_fldTitle2 ng-model=ctrl.data.title2 ng-options=\\\"item.label for item in ctrl.titleData\\\" class=form-control ng-required=\\\"ctrl.data.title.label !== 'Mr'\\\" field-error-controller></select>\\n        </div>\\n        <div error-container field-name=formRequiredMarker_fldTitle2 field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n      </div>\\n\\n\\n      \\n      <div form-input uid=formRequiredMarker_fldName name=formRequiredMarker_fldName label=Name required=true input-type=text ff-ng-model=ctrl.formInput.demo1 field-errors=\\\"{required: 'Name is required'}\\\"></div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit button</button>\\n    </form>\\n\\n  </div>\\n\\n  <h2 id=requiredMarkerUsage>Usage</h2>\\n  <p>Add the <code>required-marker</code> directive to an element.</p>\\n\\n  <h3>Options</h3>\\n  <p>Options can be passed via attributes on the directive.</p>\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>hide</td>\\n        <td>expression</td>\\n        <td>false</td>\\n        <td>A scope-expression which causes the required marker to appear (false) or disappear (true)</td>\\n      </tr>\\n      <tr>\\n        <td>template</td>\\n        <td>URL</td>\\n        <td>ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html</td>\\n        <td>The HTML template to use for the control. The default value can be overridden on the element, or globally by setting the default value in the <a ahref=#formControlService>formControlService</a></td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/requiredMarker/docs/requiredMarker.docs.html\n// module id = ./modules/ngFormLib/controls/requiredMarker/docs/requiredMarker.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.controls.requiredMarker.docs.requiredMarker', []);\n\nexport default mod.name;\n\nmod.directive('requiredMarkerDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'RequiredMarkerDemoController',\n    template: require('./requiredMarker.docs.html'),\n  };\n});\n\nmod.controller('RequiredMarkerDemoController', function Controller() {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/requiredMarker/docs/requiredMarker.docs.js","module.exports = \"<span class=required aria-hidden=true ng-class=\\\"{'ng-hide': hide}\\\" ng-transclude></span>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html\n// module id = ./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormPolicy from './policy/FormPolicy';\nimport FormControls from './controls';\n\n// Don't include this in the angular module, only export it here for convenience\nimport policyDefaults from './policy/defaultPolicies';\n\nconst mod = angular.module('ngFormLib', [\n  FormPolicy,\n  FormControls,\n]);\n\n// The library, and the default policies\n\nconst ngFormLib = mod.name;\nconst defaultPolicies = policyDefaults;\nexport {ngFormLib, defaultPolicies};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/index.js","import angular from 'angular';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy', []);\n\nexport default mod.name;\n\n\n// This is a configurable service\n// It should contain the _default_ values for form policies\n\nmod.provider('formPolicyService', function Provider() {\n  let self = this;\n  let noop = () => {};\n  let nullBehaviourOnStateChange = {\n    behaviour: () => {\n      return {\n        applyBehaviour: noop,\n        resetBehaviour: noop,\n      };\n    },\n  };\n  let nullStateDefinitions = {\n    create: () => ({}),   // Return an empty object\n    states: () => ({}),\n  };\n  let nullAccessibilityBehaviour = {\n    createAriaErrorElement: () => '',\n    onErrorChangeBehaviour: noop,\n  };\n\n  // The self.defaults property allows the formPolicy to be customised for a specific form\n  self.defaults = {\n    formSubmitAttemptedClass: 'form-submit-attempted',\n    accessibilityBehaviour: null,\n    behaviourOnStateChange: null,\n    checkForStateChanges: null,\n    stateDefinitions: null,\n  };\n\n  this.$get = ['$injector', function($injector) {\n    function getService(name) {\n      try {\n        return $injector.get(name);\n      } catch (e) {\n        return null;    // Provider-not-found error, ignore and move on\n      }\n    }\n\n    // Policy precedence: this.defaults, policy-value-object, noop\n    self.defaults.accessibilityBehaviour = self.defaults.accessibilityBehaviour || getService('formPolicyAccessibilityBehaviour') || nullAccessibilityBehaviour;\n    self.defaults.behaviourOnStateChange = self.defaults.behaviourOnStateChange || getService('formPolicyBehaviourOnStateChange') || nullBehaviourOnStateChange;\n    self.defaults.checkForStateChanges = self.defaults.checkForStateChanges || (getService('formPolicyCheckForStateChanges') || {}).checker || noop;\n    self.defaults.stateDefinitions = self.defaults.stateDefinitions || getService('formPolicyStateDefinitions') || nullStateDefinitions;\n\n    let policyService = {\n      getCurrentPolicy: function() {\n        return angular.copy(self.defaults);\n      },\n    };\n\n    return policyService;\n  }];\n});\n\n\nfunction formDirective(formPolicyService) {\n  return {\n    // priority: -1,\n    restrict: 'AE',\n    require: ['?form'], // Tells the directive to get the controller for the 'form' directive, which is the FormController controller\n    compile: function(tElement, tAttr) {\n      // Use element.data() to store a reference to this element for use by child.inheritedData()\n      // Will storing an element this way cause a memory leak? Or should I just store the data I currently need (attr.class)\n      // This has to happen during the compile step, as the children need access to the variable when they are compiled\n      //  ('class' is a reserved word to JavaScript, so we need to treat it as a string)\n      tElement.data('formElementClasses', tAttr['class']);\n\n      return {\n        pre: function(scope, element, attr, controller) {\n          // We want to extend the FormController by adding a form policy\n          let formController = controller[0];\n\n          formController._policy = angular.extend(formPolicyService.getCurrentPolicy(), scope.$eval(attr.formPolicy));\n\n          // Add a reference to the <form> element's scope to the formController, to support showing errors for nested components\n          formController._scope = scope;\n\n          // Determine if we have a parent form controller. If we do, we want to use it for the focus behaviour\n          formController._parentController = element.parent().controller('form');\n\n          if (!formController._parentController) {\n            // We also want to add an element reference when a control is added\n            formController._controls = {};\n          }\n\n          // Generate the focus policy function for use by other directive\n          formController._applyFormBehaviourOnStateChangePolicy = formController._policy.behaviourOnStateChange.behaviour(formController);\n\n          // Add/remove a class onto the form based on the value of the formSubmitted variable\n          formController.setSubmitted = function(value, tellNoOne) {\n            element[value ? 'addClass' : 'removeClass'](formController._policy.formSubmitAttemptedClass);\n            formController._formSubmitAttempted = value;\n            formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n            if (value && !tellNoOne) {\n              scope.$broadcast('event:FormSubmitAttempted');\n            }\n          };\n\n          // Flag to indicate whether the form has been submitted\n          formController._formSubmitAttempted = false;\n          formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n          // If this form is an ngForm (in that it has a parent 'form'), then we need to make sure that\n          // when the parent form is submitted or reset, the same thing happens to the child forms\n          if (formController._parentController) {\n            scope.$watch(function() {\n              return formController._parentController._formSubmitAttempted;\n            }, function(value) {\n              if (value !== undefined) {\n                // formController.setSubmitted(!!value, true);  // Don't send another notification, just update our own state\n                formController.setSubmitted(!!value);  // Don't send another notification, just update our own state\n              }\n            });\n          }\n        },\n      };\n    },\n  };\n}\nmod.directive('form', ['formPolicyService', formDirective]);\nmod.directive('ngForm', ['formPolicyService', formDirective]);\n\n\n// We want our formController to expose the list of controls that are registered with the form,\n// including controls inside sub-forms. That allows us to reset them directly. Relying simply on the fieldName\n// does not work when using sub-forms inside ng-repeaters.\n\nlet inputElements = ['input', 'select'];\n\nangular.forEach(inputElements, function(inputElem) {\n  mod.directive(inputElem, function() {\n    function hookupElementToNameToElementMap(formController, element, fieldName, fieldController) {\n      // Each element in the map is an array, because form elements *can have the same name*!\n      let map = formController._controls;\n\n      if (!map[fieldName]) {\n        map[fieldName] = [];\n      }\n      // Add the field to the end of the list of items with the same name\n      map[fieldName][map[fieldName].length] = {'element': element, 'controller': fieldController};\n\n\n      element.on('$destroy', function() {\n        // Delete just this element from the map of controls\n        let map = formController._controls[element.attr('name')];\n        let elementId = element.attr('id');\n\n        for (let i = 0; i < map.length; i++) {\n          if (map[i].element.attr('id') === elementId) {\n            map.splice(i, 1);\n            break;\n          }\n        }\n      });\n    }\n\n    return {\n      restrict: 'E',\n      require: ['?^form', '?ngModel'],\n      link: {\n        pre: function(scope, element, attr, controllers) {\n          if (!controllers[0]) {\n            return;\n          }\n\n          let rootFormController = controllers[0]._parentController || controllers[0];\n          let fieldController = controllers[1];\n          let name = attr.name;\n\n          if (rootFormController && rootFormController._controls) {\n            hookupElementToNameToElementMap(rootFormController, element, name, fieldController);\n          }\n        },\n      },\n    };\n  });\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/FormPolicy.js","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.policy.formAccessibility', []);\n\nexport default mod.name;\n\nconst ariaErrorElementSuffix = '-errors-aria';\nconst ariaErrorElementTemplate = '<span class=\"sr-only\" aria-hidden=\"true\"></span>';\n\n\nfunction createAriaErrorElement(formName, fieldName) {\n  let elem = angular.element(ariaErrorElementTemplate);\n\n  elem.attr('id', getAriaErrorElementId(formName, fieldName));\n  return elem;\n}\n\n// EXPORTED! Allows the PolicyBehaviourOnStateChange.onErrorSetAriaDescribedByToAriaErrorElement to work.\n// Not perfect... still feels like ARIA behaviour is not in one place...\nexport function getAriaErrorElementId(formName, fieldName) {\n  return formName + '-' + fieldName + ariaErrorElementSuffix;\n}\n\nfunction createLongErrorDescription(ariaElement, errors) {\n  let str = '';\n  let i = 0;\n\n  for (let type in errors) {\n    if (errors.hasOwnProperty(type)) {\n      str += 'Error ' + ++i + ', ' + errors[type] + ',';\n    }\n  }\n\n  if (i === 1) {\n    str = '. There is 1 error for this field. ' + str;\n  } else if (i > 1) {\n    str = '. There are ' + i + ' errors for this field. ' + str;\n  }\n  ariaElement.text(str);\n}\n\n\nfunction createShortErrorDescription(ariaElement, errors) {\n  let errorMsgs = [];\n  let prefix = '';\n\n  for (let type in errors) {\n    if (errors.hasOwnProperty(type)) {\n      errorMsgs.push(errors[type]);\n    }\n  }\n\n  if (errorMsgs.length > 1) {\n    prefix = errorMsgs.length + ' errors: ';\n  }\n  ariaElement.text(prefix + errorMsgs.join('. '));\n}\n\n\n// Define the different display trigger implementations available\nmod.constant('formPolicyAccessibilityLibrary', {\n  createAriaErrorElement,\n  createLongErrorDescription,\n  createShortErrorDescription,\n});\n\n\nmod.provider('formPolicyAccessibilityBehaviour', ['formPolicyAccessibilityLibrary', function Provider(lib) {\n  let config = this.config = {\n    createAriaErrorElement: lib.createAriaErrorElement,\n    onErrorChangeBehaviour: lib.createLongErrorDescription,\n  };\n\n  this.$get = () => config;\n}]);\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/accessibility/PolicyFormAccessibility.js","import angular from 'angular';\nimport 'angular-scroll';\nimport FormControlService from '../../controls/common/FormControlService';\nimport {getAriaErrorElementId} from '../accessibility/PolicyFormAccessibility';\nimport {ERROR_STATE} from '../stateDefinitions/PolicyStateDefinitions';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy.behaviourOnStateChange', ['duScroll', FormControlService]);\n\nexport default mod.name;\n\n\n// Helper functions\nlet timeoutPromise;\nlet scrollPromise;\n\nfunction isElementVisible(element) {\n  return !!element.getBoundingClientRect().top;\n}\n\nfunction setFocusOnField($document, $timeout, duration, element, offset) {\n  // If no offsetHeight then assume it's invisible and let the next error field take the scroll position\n  if (isElementVisible(element[0])) {\n    // console.log('Error focus set to: ' + domElement.id);\n    $timeout.cancel(timeoutPromise);\n    $timeout.cancel(scrollPromise);   // This doesn't seem to make a difference on a Mac - user-generated scrolling does not get cancelled\n    timeoutPromise = $timeout(function() {\n     element[0].focus();\n    }, duration);\n    scrollPromise = $document.scrollToElement(element, offset, duration);  // scrollToElement() comes from the angular-scroll directive // No offset\n    return true;\n  }\n  return false; // Indicate that we did NOT set the focus\n}\n\n// Make this available for people that want to add behaviours:\nexport function combineBehaviours(a, b) {\n  // If 'a' is undefined, return b\n  if (!a) {\n    return b;\n  }\n\n  return function(...args) {\n    let resultA = a(...args);\n    let resultB = b(...args);\n\n    return {\n      applyBehaviour: (...args2) => {\n        resultA.applyBehaviour.apply(null, args2);\n        resultB.applyBehaviour.apply(null, args2);\n      },\n      resetBehaviour: (...args2) => {\n        resultA.resetBehaviour.apply(null, args2);\n        resultB.resetBehaviour.apply(null, args2);\n      },\n    };\n  };\n}\n\n/*\n * Returns a function that can be called when an error is showing FOR THIS FIELD. The function is dynamically created\n *  based on the form policy.\n *\n *  The dynamic function sets the focus if the form policy allows it to\n *  The input parameters are:\n *    - DOMElement of the current form-field control that could get focus\n *    - whether an error is showing on the form-field\n *    - whether the form was just attempted to be submitted\n *\n *  The returned function is stored against the form controller as _applyFormFocusPolicy(...)\n *  _applyFormFocusPolicy() should be called by the field-error-controller directive whenever the field state changes,\n *   and when a form-submit event occurs.\n */\nmod.service('formPolicyBehaviourOnStateChangeLibrary', ['$document', '$timeout', 'duScrollDuration', 'formControlService',\n  function($document, $timeout, duScrollDuration, formControlService) {\n    // Policy implementation functions\n    function onSubmitFocusFirstFieldIfError(formController) {\n      // We want to pretend that there is a single controller for the form, for the purpose of managing the focus.\n      // Otherwise, the main form sets the focus, then the subform (ng-form) also sets the focus\n      let focusController = formController._parentController || formController;\n\n      return {\n\n        // This function is called by the fieldErrorController when the fieldState changes and when the form is submitted\n        applyBehaviour: function(fieldElem, fieldState, formSubmitAttempted/* , formName, fieldName*/) {\n          // Set the focus to the field if there is an error showing and a form-submit has been attempted\n          if (fieldState === ERROR_STATE && formSubmitAttempted) {\n            // Make sure element is the first field with an error based on DOM order\n            let elems = $document[0][focusController.$name].querySelectorAll('.form-group .ng-invalid');\n            let firstElement;\n\n            angular.forEach(elems, function(elem) {\n              if (isElementVisible(elem) && !firstElement) {\n                firstElement = elem;\n              }\n            });\n            let isFirstElement = firstElement ? firstElement.id === fieldElem[0].id : false;\n\n            // ...and if the focusErrorElement is blank...\n            let scrollOffset = formController._policy.behaviourOnStateChange.fieldFocusScrollOffset;\n\n            if (!focusController._focusErrorElement && isFirstElement && setFocusOnField($document, $timeout, duScrollDuration, fieldElem, scrollOffset)) {\n              focusController._focusErrorElement = fieldElem;\n            }\n          }\n        },\n\n        resetBehaviour: () => {\n          focusController._focusErrorElement = null;\n        },\n      };\n    }\n\n\n    function onErrorSetAriaDescribedByToAriaErrorElement(/* formController*/) {\n      return {\n        applyBehaviour: function(fieldElem, fieldState, formSubmitAttempted, formName, fieldName) {\n          fieldElem.attr('aria-invalid', fieldState === ERROR_STATE);\n          // Get a reference to the error element\n          let errorElemId = getAriaErrorElementId(formName, fieldName);\n\n          // Link the field to the ariaErrorElement.\n          if (fieldState === ERROR_STATE) {\n            formControlService.addToAttribute(fieldElem, 'aria-describedby', errorElemId);\n          } else {\n            formControlService.removeFromAttribute(fieldElem, 'aria-describedby', errorElemId);\n          }\n        },\n        resetBehaviour: () => {},\n      };\n    }\n\n\n    function updateElementStyle(formController) {\n      return {\n        applyBehaviour: (fieldElem, fieldState, formSubmitAttempted, formName, fieldName, formGroupElement) => {\n          let policy = formController._policy.behaviourOnStateChange;\n\n          formGroupElement[fieldState === ERROR_STATE ? 'addClass' : 'removeClass'](policy.fieldErrorClass);\n          formGroupElement[fieldState === 'success' ? 'addClass' : 'removeClass'](policy.fieldSuccessClass);\n        },\n        resetBehaviour: () => {},\n      };\n    }\n\n    return {\n      onSubmitFocusFirstFieldIfError,\n      onErrorSetAriaDescribedByToAriaErrorElement,\n      updateElementStyle,\n    };\n  },\n]);\n\n\nmod.provider('formPolicyBehaviourOnStateChange', function Provider() {\n  let config = this.config = {\n    behaviour: undefined,\n    fieldErrorClass: 'has-error',\n    fieldSuccessClass: 'has-success',\n    fieldFocusScrollOffset: 0,\n  };\n\n  this.$get = ['formPolicyBehaviourOnStateChangeLibrary', function(lib) {\n    // If the behaviour has been over-ridden, great. Otherwise this is the default.\n    config.behaviour = config.behaviour || [\n      lib.onSubmitFocusFirstFieldIfError,\n      lib.onErrorSetAriaDescribedByToAriaErrorElement,\n      lib.updateElementStyle,\n    ].reduce(combineBehaviours);\n\n    return config;\n  }];\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js","import angular from 'angular';\nimport {ERROR_STATE} from '../stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.policy.checkForStateChanges', []);\n\nexport default mod.name;\n\n\n// Policy implementation functions\nfunction checkForStateChangesOnBlurUntilSubmitThenOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  let errorWatch;\n\n  scope.$on('event:FormSubmitAttempted', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    errorWatch = watchForErrorChanges(scope, stateDefinitions, ngModelController);\n    // console.log('heard formSubmitAttempted');\n  });\n\n\n  // Listen for the form reset event and cancel the submit-watcher\n  scope.$on('event:FormReset', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    errorWatch = undefined;\n    // console.log('heard formReset');\n  });\n\n  // Initially just watch for blur event. But once there's an error, watch for keyup events too\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\nfunction checkForStateChangesOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  // Watch the error condition for changes, and flag the field as inErrorShowing when the errorCondition is true\n  return watchForErrorChanges(scope, stateDefinitions, ngModelController);\n}\n\nfunction checkForStateChangesOnBlur(scope, element, name, stateDefinitions, ngModelController) {\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\n// Helper methods\nfunction createWatch(scope, ngModelController, stateName, stateCondition) {\n  return scope.$watch(stateCondition, function(value) {\n    if (value === true) {\n      ngModelController.fieldState = stateName;       // THIS IS THE KEY FLAG\n      // console.log('A: ' + stateCondition + ' = ' + value);\n    }\n  });\n}\n\nfunction watchForErrorChanges(scope, stateDefinitions, ngModelController) {\n  // Set up a watch for each state definition... expensive?\n  let watchers = [];\n\n  for (let stateName in stateDefinitions) {\n    if (stateDefinitions.hasOwnProperty(stateName)) {\n      watchers.push(createWatch(scope, ngModelController, stateName, stateDefinitions[stateName]));\n    }\n  }\n\n  // Return a de-registration function\n  return () => {\n    // console.log('Remove error watchers...', watchers);\n    watchers.forEach((deregistrationFn) => deregistrationFn());\n  };\n}\n\nfunction evaluateFieldStates(scope, stateDefinitions, ngModelController) {\n  for (let prop in stateDefinitions) {\n    if (scope.$eval(stateDefinitions[prop]) === true) {\n      ngModelController.fieldState = prop;\n      // console.log('B: ' + stateDefinitions[prop] + ' = ' + prop);\n      break;\n    }\n  }\n}\n\nfunction watchForBlurEvent(scope, element, fieldName, stateDefinitions, ngModelController) {\n  // Determine the initial field state. First state to evaluate to TRUE wins\n  evaluateFieldStates(scope, stateDefinitions, ngModelController);\n\n  let handleErrorsOnKeyChangeWatcher;\n\n  element.bind('blur', function ngShowWatchAction() {\n    let initialFieldState = ngModelController.fieldState;\n\n    evaluateFieldStates(scope, stateDefinitions, ngModelController);\n    // console.log(initialFieldState, '=>', ngModelController.fieldState);\n\n    // If onBlur we change into an error state (from a non error state), start watching for error-changes (as soon as the field become valid).\n    if (initialFieldState !== ngModelController.fieldState && ngModelController.fieldState === ERROR_STATE && !handleErrorsOnKeyChangeWatcher) {\n      // console.log('adding change watchers');\n      handleErrorsOnKeyChangeWatcher = watchForErrorChanges(scope, stateDefinitions, ngModelController);\n    // If we are already watching for error-changes and the field is no longer in error, stop watching for error changes\n    } else if (handleErrorsOnKeyChangeWatcher && ngModelController.fieldState !== ERROR_STATE) {\n      handleErrorsOnKeyChangeWatcher();   // Remove the watcher\n      handleErrorsOnKeyChangeWatcher = undefined;\n    }\n\n    scope.$apply(); // We are in a jQueryLite handler and have changed a scope property - fire the watchers!\n  });\n}\n\n// Define the different display trigger implementations available\nmod.constant('formPolicyCheckForStateChangesLibrary', (function() {\n  return {\n    onChange: checkForStateChangesOnChange,\n    onBlur: checkForStateChangesOnBlur,\n    onBlurUntilSubmitThenOnChange: checkForStateChangesOnBlurUntilSubmitThenOnChange,\n  };\n})());\n\n\nmod.provider('formPolicyCheckForStateChanges', ['formPolicyCheckForStateChangesLibrary', function Provider(lib) {\n  let config = this.config = {\n    checker: lib.onBlurUntilSubmitThenOnChange,\n  };\n\n  this.$get = function() {\n    return config;\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js","import angular from 'angular';\nimport defaultFormAccessibility from './accessibility/PolicyFormAccessibility';\nimport defaultStateChangeBehaviour from './behaviourOnStateChange/PolicyBehaviourOnStateChange';\nimport defaultStateChangeChecks from './checkForStateChanges/PolicyCheckForStateChanges';\nimport defaultStateDefinitions from './stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.defaultPolicies', [\n  defaultFormAccessibility,\n  defaultStateChangeBehaviour,\n  defaultStateChangeChecks,\n  defaultStateDefinitions,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/defaultPolicies.js","module.exports = \"<div class=bs-docs-section ng-controller=\\\"FormPolicyDemoCtrl as ctrl\\\">\\n\\n  <div class=page-header>\\n    <h1 id=formPolicy>Form Policy <a class=small href={{mainCtrl.REPO}}src/modules/ngFormLib/policy/FormPolicy.js target=_blank>FormPolicy.js</a>\\n    </h1>\\n    <code>ngFormLib.policy</code>\\n  </div>\\n\\n  <p>Form Policy is a service which is used in conjunction with decorated <code>form</code> and <code>ng-form</code> directives to\\n  apply validation behaviours to any form.<br/><strong><code>ngFormLib.policy</code> is a required module for all other Form Policy directives.</strong>\\n\\n  </p><p>This service exposes the following configurable policies:</p>\\n  <ul>\\n    <li><strong>field state definition</strong> (policies which define what state a component should be in for the component to be consider in an error-state, a success-state, or some-other-state which you can define</li>\\n    <li><strong>when to check for field-state changes</strong> - which user-or-application events should cause the component-state to be checked to see if it has changed state (according to the definition in the above policy)</li>\\n    <li><strong>what to do when a state-change occurs</strong> - such as setting the focus to the first field that has an error, when the field is in an error-state</li>\\n    <li><strong>accessible form behaviour</strong> - defines how form-field error messages are associated with form-fields</li>\\n  </ul>\\n\\n  <h2 id=formPolicyExamples>Examples</h2>\\n  <p>Apply the default form policy to a form.</p>\\n\\n  <h3>Live demo</h3>\\n  <pre class=bs-example-scope>  // Load policy and policy libraries FIRST. The policy libraries define a default policy for each policy-type\\n  angular.module('myApp', ['ngFormLib',\\n    'ngFormLib.policy.behaviourOnStateChange',\\n    'ngFormLib.policy.checkForStateChanges',\\n    'ngFormLib.policy.stateDefinitions',\\n    'ngFormLib.policy.formAccessibility']\\n  );</pre>\\n  <div class=bs-example style=padding-bottom:24px append-source>\\n\\n    <form name=formPolicy class=form novalidate form-submit=\\\"\\\">\\n      \\n      <div class=form-group>\\n        <label class=control-label for=formPolicy_fldTitle>Title</label>\\n        <div class=control-row>\\n          <select id=formPolicy_fldTitle name=formPolicy_fldTitle ng-model=ctrl.employee.title ng-options=\\\"item.label for item in ctrl.titleData\\\" class=form-control ng-required=false field-error-controller></select>\\n        </div>\\n        <div error-container field-name=formPolicy_fldTitle field-errors=\\\"{required: 'Please select a title'}\\\"></div>\\n      </div>\\n\\n      \\n      <div form-input uid=formPolicy_fldName name=formPolicy_fldName label=Name required=true input-type=text ff-ng-model=ctrl.employee.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n      <div form-checkbox uid=formPolicy_fld3 name=formPolicy_fld3 required=true ff-ng-model=ctrl.employee.fld1_3 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n      <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n      <button type=button class=\\\"btn btn-secondary\\\" form-reset=ctrl.employee>Reset</button>\\n    </form>\\n\\n    <hr/>\\n\\n    <form name=formPolicy2 class=form novalidate form-submit=\\\"\\\" form-policy=ctrl.myCustomPolicy>\\n      <fieldset>\\n        <legend>Custom Form Policy</legend>\\n\\n        <p>This form takes advantage of the default control-templates' HTML structure to render the controls inside a form with <code>class=\\\"form-horizontal\\\"</code>\\n        as expected within Bootstrap. See the <a href=/css/sampleFormStyle.css target=_blank>sample style sheet</a> to see how to do this.</p>\\n\\n        <div form-input uid=formPolicy2_fld1 name=formPolicy2_fld1 label=\\\"Nick Name\\\" required=true input-type=text ff-ng-model=ctrl.fldFPCustPolicy.name ff-maxlength=40 ff-ng-pattern=\\\"/^[a-zA-Z0-9 \\\\-.']+$/\\\" field-errors=\\\"{required: 'Last name is required', pattern: 'Please enter a valid last name'}\\\"></div>\\n\\n        <div form-select uid=formPolicy2_fld2 name=formPolicy2_fld2 label=\\\"Common field\\\" required=true ff-ng-model=ctrl.data.demo1 ff-ng-options=\\\"item.label for item in ctrl.titleData track by item.label\\\" field-errors=\\\"{required: 'Title is required'}\\\"></div>\\n\\n        <div form-checkbox uid=formPolicy2_fld3 name=formPolicy2_fld3 required=true ff-ng-model=ctrl.data.fld2_3 field-errors=\\\"{required: 'You must agree'}\\\">You are required to agree to this</div>\\n\\n        <button type=submit class=\\\"btn btn-primary\\\">Submit</button>\\n      </fieldset>\\n    </form>\\n  </div>\\n\\n  <h2 id=formPolicyUsage>Usage</h2>\\n  <p>Load the <code>ngFormLib</code>module and (normally) the standard form policy libraries.</p>\\n  <div class=highlight>\\n    <pre><code class=js highlight-block>\\n      // ES5\\n      angular.module('myApp', [\\n        'ngFormLib',\\n        'duScroll',   // Scrolling behaviour for when the state changes to an error and we wish to focus the field\\n        'ngFormLib.policy.behaviourOnStateChange',\\n        'ngFormLib.policy.checkForStateChanges',\\n        'ngFormLib.policy.stateDefinitions',\\n        'pascalprecht.translate'    // Adds translation support, which will be used for certain properties when available\\n      ]);\\n\\n      // ES6 / Webpack\\n      import {ngFormLib, defaultPolicies} from 'angular-form-lib';\\n      import 'angular-scroll';   // Scrolling behaviour for when the state changes to an error and we wish to focus the field\\n      import ngTranslate from 'angular-translate';\\n      const app = angular.module('myApp', ['duScroll', ngTranslate, ngFormLib, defaultPolicies]);\\n    </code></pre>\\n  </div>\\n\\n  <div class=\\\"callout callout-danger\\\">\\n    <h4>Heads up!</h4>\\n    <p>For the form policy to work as above, the following configuration must exist:</p>\\n    <ul>\\n      <li>the <code>form</code> must have a non-empty <code>name</code> attribute</li>\\n      <li>the <code>form-submit</code> directive <strong>must</strong> exist on the <code>form</code> element, or on a <code>button</code> element inside the form</li>\\n      <li>each form field must have a non-empty <code>name</code> and <code>ng-model</code> attribute</li>\\n      <li>each form field must use the <code>field-error-controller</code> directive for errors to appear when using the <code>error-container</code> directive</li>\\n    </ul>\\n  </div>\\n\\n\\n  <h3><code>FormPolicy</code> Options</h3>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>formSubmitAttemptedClass</td>\\n        <td>string</td>\\n        <td>'form-submit-attempted'</td>\\n        <td>a CSS class-name that is applied to the <code>form</code> element when an attempt to submit the form is made (via the <code>formSubmit</code> directive)</td>\\n      </tr>\\n      <tr>\\n        <td>accessibilityBehaviour</td>\\n        <td>object</td>\\n        <td></td>\\n        <td>See PolicyBehaviourOnStateChange Options below.</td>\\n      </tr>\\n      <tr>\\n        <td>behaviourOnStateChange</td>\\n        <td>function</td>\\n        <td>noop</td>\\n        <td>See PolicyBehaviourOnStateChange Options below.</td>\\n      </tr>\\n      <tr>\\n        <td>checkForStateChanges</td>\\n        <td>function</td>\\n        <td>noop</td>\\n        <td>See PolicyCheckForStateChanges Options below.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>stateDefinitions</td>\\n        <td>function</td>\\n        <td>noop</td>\\n        <td>See PolicyStateDefinitions Options below.\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h3><code>PolicyFormAccessibility</code> Options</h3>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>createAriaErrorElement</td>\\n        <td>function</td>\\n        <td><code>formPolicyAccessibilityLibrary.createAriaErrorElement</code></td>\\n        <td>Creates and returns a DOM element which will be used to render error messages designed to be read by a screen-reader.</td>\\n      </tr>\\n      <tr>\\n        <td>onErrorChangeBehaviour</td>\\n        <td>function</td>\\n        <td><code>formPolicyAccessibilityLibrary.createLongErrorDescription</code></td>\\n        <td>Function with the signature <code>(ariaElement, errorObj)</code> which updates the text-content inside the\\n          ariaElement based on the errors that are showing. The <code>formPolicyAccessibilityLibrary</code> also has\\n          a <code>createShortErrorDescription()</code> method.\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h3><code>PolicyBehaviourOnStateChange</code> Options</h3>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>fieldErrorClass</td>\\n        <td>string</td>\\n        <td>'has-error'</td>\\n        <td>a CSS class-name that is applied to the field's form-group when an error is showing</td>\\n      </tr>\\n      <tr>\\n        <td>fieldSuccessClass</td>\\n        <td>string</td>\\n        <td>'has-success'</td>\\n        <td>a CSS class-name that is applied to the field's form-group when the field has been successfully validated</td>\\n      </tr>\\n      <tr>\\n        <td>behaviour</td>\\n        <td>function</td>\\n        <td>\\n          <code>formPolicyBehaviourOnStateChangeLibrary.onSubmitFocusFirstFieldIfError</code>\\n          <code>formPolicyBehaviourOnStateChangeLibrary.onErrorSetAriaDescribedByToAriaErrorElement</code>\\n          <code>formPolicyBehaviourOnStateChangeLibrary.updateElementStyle</code>\\n        </td>\\n        <td>The behaviour-on-state-change policy function. This function returns an object with two methods on it: <code>applyBehaviour()</code> which is called when an the field's state changes,\\n          and <code>resetBehaviour()</code> function which is called when the form is reset and when the form is submitted again. Function signature:\\n\\n          <pre class=bs-example-code><code class=javascript highlight-block>function myBehaviourOnStateChange(formController) {\\n            return {\\n              applyBehaviour: function (fieldElem, fieldState, formSubmitAttempted, formName, fieldName, formGroupElement) {...},\\n              resetBehaviour: function() {...}\\n            };\\n          }</code></pre>\\n          where:\\n          <ul>\\n            <li><code>formController</code> is the <code>form</code> controller, which has a reference to the form state and policy,</li>\\n            <li><code>fieldElem</code> is a jqLite element</li>\\n            <li><code>fieldState</code> is a boolean indicating whether an error for this field is showing or not</li>\\n            <li><code>formSubmitAttempted</code> is a boolean indicating whether the user has attempted to submit the form</li>\\n            <li><code>formName</code> is the <code>name</code> of the parent form</li>\\n            <li><code>fieldName</code> is the <code>name</code> of the field itself</li>\\n            <li><code>formGroupElement</code> is a jqLite element reference to the <code>form-group</code> element (used to set error/success styles on)</li>\\n          </ul></td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h3><code>PolicyCheckForStateChanges</code> Options</h3>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>checker</td>\\n        <td>function</td>\\n        <td><code>formPolicyCheckForStateChangesLibrary.onBlurUntilSubmitThenOnChange</code></td>\\n        <td>The check-for-state-changes policy function. This function is responsible for determining <strong>when</strong> to evaluate whether a field has changed state (into an error state or into a success state).\\n          Function signature:\\n\\n          <pre class=bs-example-code><code class=javascript highlight-block>function myCheckForStateChangesFunc(scope, element, fieldName, stateDefinitions, ngModelController) {...}</code></pre>\\n          where <ul>\\n            <li><code>scope</code> is the Angular $scope for the element</li>\\n            <li><code>element</code> is a jqLite field element</li>\\n            <li><code>name</code> is the string-name of the field</li>\\n            <li><code>stateDefinitions</code> is an Angular fieldState expression that is $watch()ed</li>\\n            <li><code>ngModelController</code> is the ngModelController of the field, which contains the <code>fieldState</code> property</li>\\n          </ul>\\n\\n          The <code>formPolicyCheckForStateChangesLibrary</code> also has <code>onChange()</code> and <code>onBlur</code> method.\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h3><code>PolicyStateDefinitions</code> Options</h3>\\n\\n  <div class=table-responsive>\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th style=width:100px>Name</th>\\n        <th style=width:100px>Type</th>\\n        <th style=width:50px>Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>states</td>\\n        <td>object</td>\\n        <td><code>formPolicyErrorDefinitionLibrary.onSubmitOrDirty</code> and <code>formPolicySuccessDefinitionLibrary.onSubmitOrDirty</code></td>\\n        <td>An object listing the states and the state-definition functions for all fields.\\n          Each state-definition function returns a string-expression which is used to determine <strong>if</strong> a field is in the corresponding state.\\n          Function signature:\\n\\n          <pre class=bs-example-code><code class=javascript highlight-block>function stateDefnFunction(formName, fieldName) {\\n            return {\\n              stateName: libraryFunction(formName, fieldName)\\n            };\\n          }</code></pre>\\n          where <ul>\\n            <li><code>stateName</code> is the name of a field state (typically 'error' or 'success')</li>\\n            <li><code>formName</code> is the string-name of the form that the field is situated inside of</li>\\n            <li><code>fieldName</code> is string-name of the field</li>\\n          </ul>\\n\\n          The <code>formPolicyErrorDefinitionLibrary</code> has the following state definitions:\\n          <ul>\\n            <li><code>onSubmit()</code> - when the form has been submitted and field is invalid</li>\\n            <li><code>onDirty()</code> - when field has been changed and is invalid</li>\\n            <li><code>immediately()</code> - when the field is invalid</li>\\n            <li><code>onSubmitAndDirty()</code> - when the form has been submitted AND the field has changed AND the field is invalid</li>\\n            <li><code>onSubmitOrDirty()</code> - (when the form has been submitted OR the field has changed) AND the field is invalid</li>\\n          </ul>\\n\\n          The <code>formPolicySuccessDefinitionLibrary</code> has the following state definitions:\\n          <ul>\\n            <li><code>onSubmit()</code> - when the form has been submitted and field is valid</li>\\n            <li><code>onDirty()</code> - when field has been changed and is valid</li>\\n            <li><code>immediately()</code> - when the field is valid</li>\\n            <li><code>onSubmitAndDirty()</code> - when the form has been submitted AND the field has changed AND the field is valid</li>\\n            <li><code>onSubmitOrDirty()</code> - (when the form has been submitted OR the field has changed) AND the field is valid</li>\\n          </ul>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>create</td>\\n        <td>function</td>\\n        <td></td>\\n        <td>Calls the state definition functions, passing the <code>formName</code> and <code>fieldName</code>.\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h2 id=formPolicyConfig>Configuration</h2>\\n  <p>Form policies can be defined in 3 ways: application-wide, per-form, or a combination of the two (application-wide with per-form overrides).</p>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Application-wide configuration</h4>\\n\\n    <p>You can override the default policies by configuring the policy-providers for each policy:</p>\\n    <div class=highlight>\\n      <pre class=bs-example-code>\\n        <code class=javascript highlight-block>\\n          var mod = angular.module('myApp', ['ngFormLib',\\n            'ngFormLib.policy.behaviourOnStateChange',\\n            'ngFormLib.policy.checkForStateChanges',\\n            'ngFormLib.policy.stateDefinitions',\\n            'ngFormLib.policy.formAccessibility'\\n          ])\\n\\n          // Set the field-error-focus-scroll-position, to allow for the website's fixed header\\n          mod.config(['formPolicyBehaviourOnStateChangeProvider', function(stateChangeBehavePolicy) {\\n            stateChangeBehavePolicy.config.fieldFocusScrollOffset = 80;\\n          }]);\\n\\n          mod.config(['formPolicyAccessibilityBehaviourProvider', 'formPolicyAccessibilityLibrary', function(a11yPolicy, lib) {\\n            // Configure the formPolicyAccessibilityBehaviour to use the short-error version of the onErrorChangeBehaviour\\n            a11yPolicy.config.onErrorChangeBehaviour = lib.createShortErrorDescription;\\n          }]);\\n\\n          mod.config(['formPolicyCheckForStateChangesProvider', 'formPolicyCheckForStateChangesLibrary', function(statePolicy, lib) {\\n            // Check for errors as soon as the control is changed\\n            statePolicy.config.checker = lib.onChange;\\n          }]);\\n\\n          mod.config(['formPolicyStateDefinitionsProvider', 'formPolicyErrorDefinitionLibrary', function(stateDefs, errorLib) {\\n            // Show errors immediately\\n            stateDefs.config.states.error = errorLib.immediately;\\n          }]);\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"callout callout-info\\\">\\n    <h4>Per-Form configuration</h4>\\n\\n    <p>You can override the application-wide (default) policies by specifying a policy-object on the form via a <code>form-policy</code> attribute:</p>\\n    <div class=highlight>\\n      <pre class=bs-example-code><code class=html highlight-block>\\n        &lt;div ng-controller=\\\"myController as ctrl\\\"&gt;\\n          &lt;form form-policy=\\\"myPolicy\\\"&gt;...&lt;/form&gt;\\n        &lt;/div&gt;\\n      </code></pre>\\n    </div>\\n    <div class=highlight>\\n      <pre class=bs-example-code><code class=javascript highlight-block>\\nmodule.controller('myController', function() {\\n  var vm = this;\\n\\n  function wonderChecker(scope, element, name, errorCondition, ngModelController) {\\n      //...\\n  }\\n\\n  // This will overwrite only the checkForStateChanges policy\\n  vm.myPolicy = {\\n    checkForStateChanges: wonderChecker,\\n  };\\n}\\n        </code>\\n      </pre>\\n    </div>\\n  </div>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/policy/docs/formPolicy.docs.html\n// module id = ./modules/ngFormLib/policy/docs/formPolicy.docs.html\n// module chunks = 0","import angular from 'angular';\n\nconst mod = angular.module('ngFormLibDocs.policy.docs.formPolicy', []);\n\nexport default mod.name;\n\nmod.directive('formPolicyDocs', function() {\n  return {\n    restrict: 'A',\n    controller: 'FormPolicyDemoCtrl',\n    template: require('./formPolicy.docs.html'),\n  };\n});\n\n\nmod.controller('FormPolicyDemoCtrl', ['formPolicyCheckForStateChangesLibrary', function Controller(formPolicyCheckForStateChangesLibrary) {\n  let vm = this;\n\n  vm.titleData = [\n    {label: 'Dr'},\n    {label: 'Mr'},\n    {label: 'Ms'},\n  ];\n\n  vm.myCustomPolicy = {\n    checkForStateChanges: formPolicyCheckForStateChangesLibrary.onChange,\n  };\n}]);\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/docs/formPolicy.docs.js","import angular from 'angular';\n\n// TODO: What if the state definition expressions returned the statename, rather than true or false, so we wouldn't need\n// to create a watch for each state definition. Instead, the expressions for each state would be like a big\n// switch statement, returning a state name or undefined.\n\n\n// Define the different display trigger implementations available\nconst mod = angular.module('ngFormLib.policy.stateDefinitions', []);\n\nexport default mod.name;\nexport const ERROR_STATE = 'error';\n\n// Error Conditions\nfunction errorOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorImmediately(formName, fieldName) {\n  return fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$invalid';\n}\n\nmod.constant('formPolicyErrorDefinitionLibrary', {\n  onSubmit: errorOnSubmit,\n  onDirty: errorOnDirty,\n  immediately: errorImmediately,\n  onSubmitAndDirty: errorOnSubmitAndDirty,\n  onSubmitOrDirty: errorOnSubmitOrDirty,\n});\n\n\n// Success Definitions\nfunction successOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$valid';\n}\n\nfunction successOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successImmediately(formName, fieldName) {\n  return fieldName + '.$valid';\n}\n\nfunction successOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$valid';\n}\n\nmod.constant('formPolicySuccessDefinitionLibrary', {\n  onSubmit: successOnSubmit,\n  onDirty: successOnDirty,\n  immediately: successImmediately,\n  onSubmitAndDirty: successOnSubmitAndDirty,\n  onSubmitOrDirty: successOnSubmitOrDirty,\n});\n\n\nmod.provider('formPolicyStateDefinitions', ['formPolicyErrorDefinitionLibrary', 'formPolicySuccessDefinitionLibrary', function Provider(errorLib, successLib) {\n  let config = this.config = {\n    states: {\n      [ERROR_STATE]: errorLib.onSubmitOrDirty,\n      success: successLib.onSubmitOrDirty,\n    },\n  };\n\n  config.create = (formName, fieldName) => {\n    let result = {};\n\n    for (let state in config.states) {\n      if (config.states.hasOwnProperty(state)) {\n        result[state] = config.states[state](formName, fieldName);\n      }\n    }\n    return result;\n  };\n\n  this.$get = function() {\n    return config;\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js"],"sourceRoot":""}