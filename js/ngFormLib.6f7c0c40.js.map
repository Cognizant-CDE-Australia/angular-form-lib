{"version":3,"sources":["webpack:///../~/angular-strap/src/datepicker/datepicker.tpl.html?ce50","webpack:///./modules/common/Utility.js?f4cc","webpack:///./modules/ngFormLib/controls/common/FieldErrorController.js?1c76","webpack:///./modules/ngFormLib/controls/common/FormControlService.js?b2d7","webpack:///./modules/ngFormLib/controls/common/index.js?dc60","webpack:///./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js?4ccb","webpack:///./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js?1786","webpack:///./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html?2e97","webpack:///./modules/ngFormLib/controls/formDate/FormDate.js?fcc1","webpack:///./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html?dc03","webpack:///./modules/ngFormLib/controls/formInput/FormInput.js?bdd1","webpack:///./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html?53f5","webpack:///./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js?adf1","webpack:///./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html?31f8","webpack:///./modules/ngFormLib/controls/formReset/FormReset.js?9e6d","webpack:///./modules/ngFormLib/controls/formSelect/FormSelect.js?7430","webpack:///./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html?6132","webpack:///./modules/ngFormLib/controls/formSubmit/FormSubmit.js?1552","webpack:///./modules/ngFormLib/controls/index.js?3961","webpack:///./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js?519f","webpack:///./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html?015d","webpack:///./modules/ngFormLib/index.js?c7c9","webpack:///./modules/ngFormLib/policy/FormPolicy.js?76b2","webpack:///./modules/ngFormLib/policy/accessibility/PolicyFormAccessibility.js?a0a9","webpack:///./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js?fdaa","webpack:///./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js?7bfb","webpack:///./modules/ngFormLib/policy/defaultPolicies.js?bb80","webpack:///./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js?6ef8"],"names":["mod","angular","module","name","constant","convertDate","dateStr","newSep","oldSep","parts","split","isNaN","join","length","formatDay","dayOrDate","month","year","dd","mm","yyyy","getUTCDay","getDate","getMonth","getFullYear","dateAdd","numDays","myDate","setDate","getToday","optionalDate","Date","isISODate","indexOf","monthsBetween","date1","date2","trimRegExp","trim","text","replace","isDigitsRegExp","isDigits","test","getUniqueId","getTime","Math","random","toArray","obj","arr","i","hasOwnProperty","key","value","sort","compare","a","b","directive","formControlService","$timeout","setupCanShowErrorPropertyOnNgModelController","scope","formController","ngModelController","element","formPolicy","_policy","formName","$name","fieldName","stateConditions","stateDefinitions","create","checkForStateChanges","_scope","restrict","require","link","attr","controllers","formGroupElement","$element","stateChangeBehaviour","_applyFormBehaviourOnStateChangePolicy","$watch","fieldState","applyBehaviour","$on","controller","Controller","$scope","config","$provide","decorator","$delegate","ngModel","attrs","$injector","$interpolate","get","$set","invoke","form","ngForm","provider","Provider","self","counter","defaults","idPrefix","inputGroupButtonTemplateFunction","val","handler","templates","formCheckbox","template","formDate","formInput","formRadioButton","formSelect","requiredMarker","$get","StringUtil","translator","instant","e","identity","service","buildDirective","params","transclude","compile","tElement","tAttr","validateComponentStructure","controlName","expectedTemplateElements","expectedAttributes","id","uid","getUniqueFieldId","inputElem","find","inputElementName","labelElem","required","getRequiredAttribute","decorateLabel","labelClass","hideLabel","hideRequiredIndicator","labelSuffix","decorateInputField","configFn","removeAttr","templateUrl","getHTMLTemplate","type","parentFormClasses","inheritedData","result","addToAttribute","attributeName","existingValues","removeFromAttribute","newValue","undefined","addLabelText","labelText","prepend","translate","addInputGroup","inputGroupMapping","inputAttr","className","attachFn","clickHandler","content","contentToAppend","forEach","igConfig","push","html","wrap","wrapper","parent","hideLabelExpr","addClass","append","hostElement","inputType","replaceWith","$attr","origAttrName","substr","createErrorFeatures","parentElement","inputElement","fieldLabel","fieldErrors","textErrors","fieldLabelStr","errorContainerElem","createFieldHint","fieldHint","fieldHintId","fieldHintDisplay","hintElement","hintText","buildNgClassExpression","targetElem","modelStr","checkedStr","disabledStr","ngValue","ngTrueValue","str","interpolatedParams","componentName","requiredElements","requiredAttributes","Error","j","$compile","ErrorController","ariaElement","a11yPolicy","errors","addError","errorType","errorMessage","translateError","removeError","updateAriaErrorElement","onErrorChangeBehaviour","firstLetterIsAVowel","toLowerCase","pronoun","generateErrorTag","errorText","toggleErrorVisibilityOnError","errorController","watchExpr","removeErrorMessage","divs","len","eq","hasClass","remove","toggleErrorVisibilityForTextError","fieldController","$setValidity","setSubmitted","$viewChangeListeners","$eval","formField","accessibilityBehaviour","createAriaErrorElement","error","errorShowCondition","fieldWatcher","item","run","$templateCache","put","label","addPlaceholder","placeholder","hasInputGroup","parentElemForErrors","err","console","debug","placeholderText","DateUtil","dateRegEx","priority","elem","ctrl","resetValidators","$parsers","unshift","viewValue","dateFormatValid","fieldDate","minDate","maxDate","dateChange","$valid","rbDiv","$parse","resetFieldState","controlMap","controlList","jLen","ngModelGet","formReset","ngModelSet","assign","originalData","copy","on","_controls","$setPristine","$emit","$digest","selectElem","fn","formSubmit","noop","isForm","tagName","bind","event","$apply","$event","preventDefault","hide","ngFormLib","defaultPolicies","nullBehaviourOnStateChange","behaviour","resetBehaviour","nullStateDefinitions","states","nullAccessibilityBehaviour","formSubmitAttemptedClass","behaviourOnStateChange","getService","checker","policyService","getCurrentPolicy","formDirective","formPolicyService","data","pre","extend","_parentController","tellNoOne","_formSubmitAttempted","$broadcast","inputElements","hookupElementToNameToElementMap","map","elementId","splice","rootFormController","ariaErrorElementSuffix","ariaErrorElementTemplate","getAriaErrorElementId","createLongErrorDescription","createShortErrorDescription","errorMsgs","prefix","lib","timeoutPromise","scrollPromise","isElementVisible","getBoundingClientRect","top","setFocusOnField","$document","duration","offset","cancel","focus","scrollToElement","combineBehaviours","resultA","resultB","args2","apply","duScrollDuration","onSubmitFocusFirstFieldIfError","focusController","fieldElem","formSubmitAttempted","elems","querySelectorAll","firstElement","isFirstElement","scrollOffset","fieldFocusScrollOffset","_focusErrorElement","onErrorSetAriaDescribedByToAriaErrorElement","errorElemId","updateElementStyle","policy","fieldErrorClass","fieldSuccessClass","reduce","checkForStateChangesOnBlurUntilSubmitThenOnChange","errorWatch","watchForErrorChanges","watchForBlurEvent","checkForStateChangesOnChange","checkForStateChangesOnBlur","createWatch","stateName","stateCondition","watchers","deregistrationFn","evaluateFieldStates","prop","handleErrorsOnKeyChangeWatcher","ngShowWatchAction","initialFieldState","onChange","onBlur","onBlurUntilSubmitThenOnChange","ERROR_STATE","errorOnSubmit","errorOnDirty","errorImmediately","errorOnSubmitAndDirty","errorOnSubmitOrDirty","onSubmit","onDirty","immediately","onSubmitAndDirty","onSubmitOrDirty","successOnSubmit","successOnDirty","successImmediately","successOnSubmitAndDirty","successOnSubmitOrDirty","errorLib","successLib","state"],"mappings":"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","file":"js/ngFormLib.6f7c0c40.js","sourcesContent":["module.exports = \"<div class=\\\"dropdown-menu datepicker\\\" ng-class=\\\"'datepicker-mode-' + $mode\\\" style=max-width:320px>\\n<table style=table-layout:fixed;height:100%;width:100%>\\n  <thead>\\n    <tr class=text-center>\\n      <th>\\n        <button tabindex=-1 type=button class=\\\"btn btn-default pull-left\\\" ng-click=$selectPane(-1)>\\n          <i class={{$iconLeft}}></i>\\n        </button>\\n      </th>\\n      <th colspan=\\\"{{ rows[0].length - 2 }}\\\">\\n        <button tabindex=-1 type=button class=\\\"btn btn-default btn-block text-strong\\\" ng-click=$toggleMode()>\\n          <strong style=text-transform:capitalize ng-bind=title></strong>\\n        </button>\\n      </th>\\n      <th>\\n        <button tabindex=-1 type=button class=\\\"btn btn-default pull-right\\\" ng-click=$selectPane(+1)>\\n          <i class={{$iconRight}}></i>\\n        </button>\\n      </th>\\n    </tr>\\n    <tr ng-show=showLabels ng-bind-html=labels></tr>\\n  </thead>\\n  <tbody>\\n    <tr ng-repeat=\\\"(i, row) in rows\\\" height=\\\"{{ 100 / rows.length }}%\\\">\\n      <td class=text-center ng-repeat=\\\"(j, el) in row\\\">\\n        <button tabindex=-1 type=button class=\\\"btn btn-default\\\" style=width:100% ng-class=\\\"{'btn-primary': el.selected, 'btn-info btn-today': el.isToday && !el.selected}\\\" ng-click=$select(el.date) ng-disabled=el.disabled>\\n          <span ng-class=\\\"{'text-muted': el.muted}\\\" ng-bind=el.label></span>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/angular-strap/src/datepicker/datepicker.tpl.html\n// module id = ../node_modules/angular-strap/src/datepicker/datepicker.tpl.html\n// module chunks = 0 1","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.common.utility', []);\n\nexport default mod.name;\n\nmod.constant('ngFormLibDateUtil', {\n  convertDate: function(dateStr, newSep) {\n    // Converts a date between dd/mm/yyyy and yyyy-mm-dd\n    if (!dateStr || !newSep || !(newSep === '/' || newSep === '-')) {\n      return dateStr;\n    }\n\n    // Choose a separator string that is the 'opposite' of the desired separator\n    let oldSep = newSep === '/' ? '-' : '/';\n    let parts = dateStr.split(oldSep);\n\n    // if we get a dodgy date OR you tried to convert a date that was already in the correct format, return the input\n    if (isNaN(parts.join('')) || parts.length !== 3) {\n      return dateStr;\n    }\n\n    // Swap the year and day parts around\n    return parts[2] + newSep + parts[1] + newSep + parts[0];\n  },\n  formatDay: function(dayOrDate, month, year) {\n    let dd = dayOrDate;\n    let mm = month;\n    let yyyy = year;\n\n    if (dayOrDate.getUTCDay) {\n      dd = dayOrDate.getDate();\n      mm = dayOrDate.getMonth() + 1;// January is 0!`\n      yyyy = dayOrDate.getFullYear();\n    }\n    return (dd < 10 ? '0' + dd : dd) + '/' + (mm < 10 ? '0' + mm : mm) + '/' + yyyy;\n  },\n  dateAdd: function(dateStr, numDays) {\n    // Return a modified date in ISO format\n    let myDate = this.getDate(dateStr);\n\n    myDate.setDate(myDate.getDate() + numDays);\n\n    return this.formatDay(myDate);\n  },\n  getToday: function(optionalDate) {\n    return this.formatDay(optionalDate || new Date());\n  },\n  isISODate: function(dateStr) {\n    return typeof dateStr === 'string' && dateStr.indexOf('-') > 0;\n  },\n  getDate: function(dateStr) {\n    if (!this.isISODate(dateStr)) {\n      dateStr = this.convertDate(dateStr, '-');\n    }\n    return new Date(dateStr);\n  },\n  monthsBetween: function(date1, date2) {\n    return date2.getMonth() - date1.getMonth() + (12 * (date2.getFullYear() - date1.getFullYear()));  // eslint-disable-line no-extra-parens\n  },\n});\n\n\nmod.constant('ngFormLibStringUtil', (function() {\n  let trimRegExp = /^\\s+|\\s+$/g;\n\n  return {\n    trim: function(text) {\n      if (typeof text === 'string') {\n        return text.replace(trimRegExp, '');\n      }\n      return text;\n    },\n  };\n})());\n\n\nmod.constant('ngFormLibNumberUtil', (function() {\n  let isDigitsRegExp = /^\\d+$/;\n\n  return {\n    isDigits: function(text) {\n      return isDigitsRegExp.test(text);\n    },\n  };\n})());\n\n\nmod.constant('ngFormLibObjectUtil', {\n  getUniqueId: function() {\n    return ('' + (new Date()).getTime() + Math.random()).replace(/\\./, '');\n  },\n  toArray: function(obj) {\n    let arr = [];\n\n    for (let i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        arr[arr.length] = {key: i, value: obj[i]};\n      }\n    }\n    arr.sort(function compare(a, b) {\n      return a.key < b.key;\n    });\n    return arr;\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/common/Utility.js","import angular from 'angular';\nimport FormControlService from './FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.common.fieldErrorController', [\n  FormControlService,\n]);\n\nexport default mod.name;\n\n/**\n * The Field Error Controller directive is designed to indicate to the browser when the field is in error\n *  and what the errors are. It applies the form-policy for showing errors\n *\n * It works in tandem with the form controller (and FormPolicy.js) to identify when a form-element has an error, and decorates\n *  the element accordingly.\n *\n * It also toggles the fieldController.fieldState flag, based on the form policy provided\n *\n */\n\n// INPUT:\n//  <input ... field-error-controller></input>\n\n// OUTPUT:\n//  <input ... aria-invalid=\"false/true\" aria-describedby=\"fieldId-errors\">\n\n\nmod.directive('fieldErrorController', ['formControlService', '$timeout', function(formControlService, $timeout) {\n  function setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name) {\n    // Using the form policy, determine when to show errors for this field\n    let formPolicy = formController._policy;\n    let formName = formController.$name;\n    let fieldName = formName + '[\"' + name + '\"]';\n    let stateConditions = formPolicy.stateDefinitions.create(formName, fieldName);\n\n    formPolicy.checkForStateChanges(formController._scope, element, name, stateConditions, ngModelController, formController);\n  }\n\n\n  return {\n    restrict: 'AE',\n    require: ['?ngModel', '?^form', '?^formGroup'],  // Require the formController controller somewhere in the parent hierarchy\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n      let ngModelController = controllers[0];\n      let formController = controllers[1];\n      let formGroupElement = (controllers[2] || {}).$element || element;// This looks for a parent directive called formGroup, which has a controller, which has an $element property\n      let name = attr.name;\n\n      if (formController) {\n        let formName = formController.$name;\n        let stateChangeBehaviour = formController._applyFormBehaviourOnStateChangePolicy; // returns a function which encapsulates the form policy rules for the behaviour to apply when errors show\n\n        if (ngModelController) {\n          setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name);\n        }\n\n        // When the error-showing flag changes, update the field style\n        formController._scope.$watch(formName + '[\"' + name + '\"].fieldState', function(fieldState) {\n          // fieldState is set to '' when the form is reset. So must respond to that too.\n          stateChangeBehaviour.applyBehaviour(element, fieldState, false, formName, name, formGroupElement);\n        });\n\n        // Listen to form-submit events, to determine what to focus on too\n        scope.$on('event:FormSubmitAttempted', () => {\n          // Make sure that the field-level watchers have a chance to fire first, so use a timeout\n          $timeout(() => stateChangeBehaviour.applyBehaviour(element, ngModelController.fieldState, true, formName, name, formGroupElement), 1);\n        });\n      }\n    },\n  };\n}]);\n\n\n// This directive wraps all of the form elements and binds the universe together.\n// It MUST be used as a class as the form focus behaviour references '.form-control .ng-invalid' when finding controls to focus\nmod.directive('formGroup', [function() {\n  return {\n    restrict: 'C',\n    controller: ['$scope', '$element', function Controller($scope, $element) {\n      this.$element = $element;\n    }],\n  };\n}]);\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/FieldErrorController.js","import angular from 'angular';\nimport Utility from '../../../common/Utility';\n\nconst mod = angular.module('ngFormLib.controls.common.formControlService', [Utility]);\n\nexport default mod.name;\n\n// Workaround for bug #1404\n// https://github.com/angular/angular.js/issues/1404\n// Source: http://plnkr.co/edit/hSMzWC?p=preview\n// Not so great for IE8, but necessary for using radio buttons inside of dynamic forms (ng-repeat)\nmod.config(['$provide', function($provide) {\n  $provide.decorator('ngModelDirective', ['$delegate', function($delegate) {\n    let ngModel = $delegate[0];\n    let controller = ngModel.controller;\n\n    ngModel.controller = ['$scope', '$element', '$attrs', '$injector', function Controller(scope, element, attrs, $injector) {\n      let $interpolate = $injector.get('$interpolate');\n\n      attrs.$set('name', $interpolate(attrs.name || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs,\n      });\n    }];\n    return $delegate;\n  }]);\n  $provide.decorator('formDirective', ['$delegate', function($delegate) {\n    let form = $delegate[0];\n    let controller = form.controller;\n\n    form.controller = ['$scope', '$element', '$attrs', '$injector', function Controller(scope, element, attrs, $injector) {\n      let $interpolate = $injector.get('$interpolate');\n\n      attrs.$set('name', $interpolate(attrs.name || attrs.ngForm || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs,\n      });\n    }];\n    return $delegate;\n  }]);\n}]);\n\n\n// Shared code for the accessible controls\nmod.provider('formControlService', function Provider() {\n  let self = this;\n  let counter = 0;    // Private variable\n\n  //\n  self.defaults = {\n    idPrefix: 'fpFld',\n    inputGroupButtonTemplateFunction: (val, handler) => `<button type=\"button\" class=\"btn btn-default\" ${handler ? 'ng-click=\"' + handler + '\"' : ''}>${val}</button>`,\n    templates: {\n      formCheckbox: {\n        template: 'ngFormLib/template/formCheckbox.html',\n      },\n      formDate: {\n        template: 'ngFormLib/template/formDate.html',\n      },\n      formInput: {\n        template: 'ngFormLib/template/formInput.html',\n      },\n      formRadioButton: {\n        template: 'ngFormLib/template/formRadioButton.html',\n      },\n      formSelect: {\n        template: 'ngFormLib/template/formSelect.html',\n      },\n      requiredMarker: {\n        template: 'ngFormLib/template/requiredMarker.html',\n      },\n    },\n  };\n\n  this.$get = ['ngFormLibStringUtil', '$injector', function(StringUtil, $injector) {\n    let translator;\n\n    try {\n      translator = $injector.get('$translate').instant;\n    } catch (e) {\n      translator = angular.identity;\n    }\n\n    let service = {\n      defaults: self.defaults,\n\n      buildDirective: function(params) {\n        let directive = {\n          restrict: 'AE',\n          replace: true,\n          transclude: true,\n          compile: function(tElement, tAttr) {\n            service.validateComponentStructure(params.controlName, tElement, params.expectedTemplateElements, tAttr, params.expectedAttributes);\n\n            // For items that are inside repeaters, if more than one element has the same id, the checkbox stops working.\n            // By using an attribute that is not called 'id', we can avoid this issue\n            let id = tAttr.uid || service.getUniqueFieldId();\n            let name = tAttr.name || id; // Doing this *will* break radio buttons, but they SHOULD provide a name anyway (for their own good)\n            let inputElem = tElement.find(params.inputElementName || 'input');\n            let labelElem = tElement.find('label');\n            let required = service.getRequiredAttribute(tAttr.required);\n\n            service.decorateLabel(labelElem, required, id, tAttr.labelClass, tAttr.hideLabel, tAttr.hideRequiredIndicator, tAttr.labelSuffix);\n            inputElem = service.decorateInputField(inputElem, tElement, tAttr, id, name, required);\n\n            // Do component-specific config last\n            params.configFn(tElement, tAttr, id, name, inputElem, labelElem);\n\n            // Clean up special attributes (to make HTML look nicer)\n            tElement.removeAttr('uid').removeAttr('name').removeAttr('label').removeAttr('required').removeAttr('field-hint')\n              .removeAttr('input-type').removeAttr('hide-label').removeAttr('hideRequiredIndicator')\n              .removeAttr('label-class').removeAttr('field-errors').removeAttr('text-errors');\n          },\n          templateUrl: function(element, attr) {\n            // Check the element for a \"template\" attribute, which allows customisation-per-control. Otherwise, use the control-wide template.\n            return attr.template || service.getHTMLTemplate(element, params.controlName);\n          },\n        };\n\n        return directive;\n      },\n\n      getUniqueFieldId: function() {\n        return '' + self.defaults.idPrefix + counter++;\n      },\n\n      getHTMLTemplate: function(element, type) {\n        // Allow different templates to be applied for different form-styles (eg for horizontal forms, inline forms, \"normal\" forms).\n        // This is an advanced feature that most users will not need.\n        // E.g.: self.defaults.templates['select']['form-inline'] = 'path/to/your/custom/template.html'\n\n        // Check this element's parent-form-element-classes to see if they match. First match, wins.\n        let parentFormClasses = (element.inheritedData('formElementClasses') || '').split(' ');\n        let result = self.defaults.templates[type].template;  // The default template, if nothing else is specified.\n\n        for (let i = 0; i < parentFormClasses.length; i++) {\n          let template = self.defaults.templates[type][parentFormClasses[i]];\n\n          if (template) {\n            result = template;\n            break;\n          }\n        }\n\n        return result;\n      },\n\n      addToAttribute: function(element, attributeName, value) {\n        let existingValues = element.attr(attributeName) || '';\n\n        // Don't add the same attribute value - remove it first before adding it back\n        if (existingValues.split(' ').indexOf(value) === -1) {\n          element.attr(attributeName, existingValues + (existingValues ? ' ' : '') + value);\n        }\n      },\n\n\n      removeFromAttribute: function(element, attributeName, value) {\n        // Borrowed this statement from Angular.js\n        let newValue = StringUtil.trim(\n          (' ' + (element.attr(attributeName) || '') + ' ')\n          .replace(/[\\n\\t]/g, ' ')\n          .replace(' ' + StringUtil.trim(value) + ' ', ' ')\n        );\n\n        // Remove the attribute if it is empty\n        if (newValue === '') {\n          element.removeAttr(attributeName);\n        } else {\n          element.attr(attributeName, newValue);\n        }\n      },\n\n\n      getRequiredAttribute: function(required) {\n        // When we set required=\"true\" on a parent directive (like on-off-button), inputElem.attr('required', 'true')\n        // becomes <input required=\"required\" due to browser interference. So detect this case, and replace it with \"true\"\n        // In v1.3, required=\"true\" becomes required=\"\".\n        if (required === 'required' || required === '' || required === 'true') {\n          return 'true';\n        } else if (required === undefined) {\n          return 'false';\n        }\n        return required;\n      },\n\n      addLabelText: function(labelElem, labelText) {\n        labelElem.prepend(service.translate(labelText));\n      },\n\n      addInputGroup: function(inputElem, attr) {\n        const inputGroupMapping = [\n          {inputAttr: 'inputPrefix', className: 'input-group-addon', attachFn: 'prepend', clickHandler: '', content: (val) => val},\n          {inputAttr: 'inputSuffix', className: 'input-group-addon', attachFn: 'append', clickHandler: '', content: (val) => val},\n          {inputAttr: 'inputButtonPrefix', className: 'input-group-btn', attachFn: 'prepend', clickHandler: 'inputButtonPrefixClick', content: self.defaults.inputGroupButtonTemplateFunction},\n          {inputAttr: 'inputButtonSuffix', className: 'input-group-btn', attachFn: 'append', clickHandler: 'inputButtonSuffixClick', content: self.defaults.inputGroupButtonTemplateFunction},\n        ];\n        let contentToAppend = [];\n\n        inputGroupMapping.forEach((igConfig) => {\n          if (attr[igConfig.inputAttr]) {\n            contentToAppend.push({\n              attachFn: igConfig.attachFn,\n              html: `<span class=\"${igConfig.className}\">${igConfig.content(attr[igConfig.inputAttr], attr[igConfig.clickHandler])}</span>`,\n            });\n          }\n        });\n\n        if (contentToAppend.length) {\n          inputElem.wrap('<div class=\"input-group\">');// This should be the 'control-row' element\n          let wrapper = inputElem.parent();\n\n          contentToAppend.forEach((content) => wrapper[content.attachFn](content.html));\n        }\n\n        return !!contentToAppend.length;\n      },\n\n      decorateLabel: function(labelElem, required, id, labelClass, hideLabelExpr, hideRequiredIndicator, labelSuffix) {\n        if (id) {\n          labelElem.attr('for', id);\n        }\n        if (labelClass) {\n          labelElem.addClass(labelClass);\n        }\n        if (hideLabelExpr) {\n          labelElem.attr('ng-class', '{\\'sr-only\\': ' + hideLabelExpr + '}');\n        }\n        // Some labels have suffix text - text that helps with describing the label, but isn't really the label text.\n        // E.g. Amount ($AUD)\n        if (labelSuffix) {\n          labelElem.append('&nbsp;' + service.translate(labelSuffix));\n        }\n\n        if (!hideRequiredIndicator) {\n          labelElem.append('<span required-marker hide=\"!(' + required + ')\"></span>');\n        }\n      },\n\n\n      decorateInputField: function(inputElem, hostElement, attr, id, name, required) {\n        if (attr.inputType) {\n          // inputElem.attr('type', attr.inputType); // THIS WILL NOT WORK ON IE8!\n          // Instead, we must replace the entire node with the only property which SHOULD exist on the template: 'class'\n          inputElem.replaceWith('<input type=\"' + attr.inputType + '\" class=\"' + inputElem.attr('class') + '\">');\n          inputElem = hostElement.find('input');\n        }\n\n        inputElem.attr('id', id);\n\n        // Allow the name to be interpolated\n        inputElem.attr('name', name);\n\n        // Apply all of the ff-* attributes to the input element. Use the original attribute names\n        // attr.$attr contains the snake-case names e.g. 'form-field' vs camel case 'formField'\n        for (let a in attr.$attr) {\n          if (a.indexOf('ff') === 0) {    // Don't search for 'ff-' as the '-' has been replaced with camel case now\n            let origAttrName = attr.$attr[a].substr(3);\n\n            if (origAttrName === 'class') {\n              inputElem.addClass(attr[a]);\n\n            // Special case for type property. It *must* be read-only. Therefore, don't write it to the element\n            // See http://stackoverflow.com/questions/8378563/why-cant-i-change-the-type-of-an-input-element-to-submit\n            } else if (origAttrName !== 'type') {\n              inputElem.attr(origAttrName, attr[a]);\n            }\n\n            // Remove all attributes off the host element\n            hostElement.removeAttr(attr.$attr[a]);\n          }\n        }\n\n        inputElem.attr('ng-required', required);\n        inputElem.attr('aria-required', '{{!!(' + required + ')}}');  // evaluates to true / false\n        return inputElem;\n      },\n\n\n      createErrorFeatures: function(parentElement, inputElement, name, fieldLabel, fieldErrors, textErrors) {\n        if (fieldErrors || textErrors) {\n          // Add an fieldErrorControllers attribute to the element, to hook-up the error features\n          inputElement.attr('field-error-controller', '');\n\n          let fieldLabelStr = fieldLabel ? ' field-label=\"' + fieldLabel + '\"' : '';\n          let errorContainerElem = angular.element('<div error-container field-name=\"' + name + '\"' + fieldLabelStr + '></div>');\n\n          if (fieldErrors) {\n            errorContainerElem.attr('field-errors', fieldErrors);\n          }\n          if (textErrors) {\n            errorContainerElem.attr('text-errors', textErrors);\n          }\n          parentElement.append(errorContainerElem);\n        }\n      },\n\n      createFieldHint: function(hostElement, inputElement, fieldHint, fieldHintId, fieldHintDisplay) {\n        let hintElement;\n\n        if (fieldHint) {\n          let hintText = service.translate(fieldHint);\n\n          // If we have a field hint, add that as well\n          if (fieldHintDisplay) {\n            // If a field hint display rule exists, implement.\n            hintElement = angular.element('<p ng-if=\"' + fieldHintDisplay + '\" class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          } else {\n            hintElement = angular.element('<p class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          }\n          hostElement.append(hintElement);\n          inputElement.attr('aria-describedby', fieldHintId);\n        }\n      },\n\n      buildNgClassExpression: function(inputElem, targetElem) {\n        // If the inputElem has an ngModel and/or ngChecked attribute, create the ng-class attribute\n        // todo.. test checkbox implementation\n        let modelStr = inputElem.attr('ng-model');\n        let checkedStr = inputElem.attr('ng-checked');\n        let disabledStr = inputElem.attr('ng-disabled');\n        let value = inputElem.attr('value');        // a string - used for Radio buttons\n        let ngValue = inputElem.attr('ng-value');   // an expression - used for Radio buttons\n        let ngTrueValue = inputElem.attr('ng-true-value');\n\n        if (modelStr) {\n          if (ngValue || ngTrueValue) {\n            modelStr += ' === ' + (ngValue || ngTrueValue);\n          } else if (value) {\n            // The value is ALWAYS a string\n            modelStr += ' === \\'' + value + '\\'';\n          } else {\n            modelStr += ' === true';  // For checkboxes, in the absence of ng-true-value\n          }\n        }\n\n        if (modelStr && checkedStr) {\n          modelStr += ' || ' + checkedStr;\n        } else if (checkedStr) {\n          modelStr = checkedStr;\n        }\n\n        if (modelStr && disabledStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + ', \\'disabled\\': ' + disabledStr + '}');\n        } else if (modelStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + '}');\n        }\n      },\n\n      translate: (str, interpolatedParams) => translator(str || '', interpolatedParams),\n\n      validateComponentStructure: function(componentName, element, requiredElements, attr, requiredAttributes) {\n        for (let i = 0; i < requiredElements.length; i++) {\n          if (!element.find(requiredElements[i])) {\n            throw new Error('The ' + componentName + ' component template requires a ' + requiredElements[i] + ' element.');\n          }\n        }\n\n        for (let j = 0; j < requiredAttributes.length; j++) {\n          if (!attr[requiredAttributes[j]]) {\n            throw new Error('The ' + componentName + ' component requires a ' + requiredAttributes[j] + ' attribute.');\n          }\n        }\n      },\n\n    };\n\n    return service;\n  }];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/FormControlService.js","import angular from 'angular';\nimport FieldErrorController from './FieldErrorController';\nimport FormControlService from './FormControlService';\nimport RequiredMarker from '../requiredMarker/RequiredMarker';    // TODO: Not sure why this is here\n\nconst mod = angular.module('ngFormLib.controls.common', [\n  FieldErrorController,\n  FormControlService,\n  RequiredMarker,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/common/index.js","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\nimport {ERROR_STATE} from '../../policy/stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.controls.errorMessageContainer', [FormControlService]);\n\nexport default mod.name;\n\n/*\n * This directive is really a FIELD error message container - it is designed to work with fields exclusively\n */\nmod.directive('errorContainer', ['$compile', 'formControlService', function($compile, formControlService) {\n  function ErrorController(ariaElement, a11yPolicy) {\n    let errors = {};\n\n    return {\n      addError: function(errorType, errorMessage, fieldLabel) {\n        errors[errorType] = translateError(errorMessage, fieldLabel);\n      },\n      removeError: (errorType) => delete errors[errorType],\n      updateAriaErrorElement: () => a11yPolicy.onErrorChangeBehaviour(ariaElement, errors),\n    };\n  }\n\n  function translateError(errorMessage, fieldLabel) {\n    let firstLetterIsAVowel = fieldLabel ? 'aeiou'.indexOf(fieldLabel[0].toLowerCase() !== -1) : undefined;\n\n    return formControlService.translate(errorMessage, {pronoun: firstLetterIsAVowel ? 'an' : 'a', fieldLabel: fieldLabel});\n  }\n\n\n  function generateErrorTag(errorType, errorText, fieldLabel) {\n    return '<div class=\"text-error ec2-' + errorType + '\"><span class=\"text-error-wrap\">' + translateError(errorText, fieldLabel) + '</span></div>';\n  }\n\n  /*\n   * Handle the field-based error messages\n   */\n  function toggleErrorVisibilityOnError(errorController, formController, scope, element, watchExpr, errorType, errorText, fieldLabel) {\n    // console.log('watchExpr = ' + watchExpr);\n    formController._scope.$watch(watchExpr, function(newValue) {\n      if (newValue) {\n        // The error text could contain an interpolation string, so we need to compile it\n        let val = $compile(generateErrorTag(errorType, errorText, fieldLabel))(scope);\n\n        element.append(val);\n        errorController.addError(errorType, errorText, fieldLabel);\n      } else {\n        removeErrorMessage(errorController, formController, element, errorType);\n      }\n      errorController.updateAriaErrorElement();\n    });\n  }\n\n  function removeErrorMessage(controller, formController, element, errorType) {\n    // find the div with our special class, then remove it\n    let divs = element.find('div');\n\n    for (let len = divs.length, i = len - 1; i > -1; i--) {\n      if (divs.eq(i).hasClass('ec2-' + errorType)) {\n        divs.eq(i).remove();\n      }\n    }\n    controller.removeError(errorType);\n  }\n\n  /*\n   * Handle text errors. Text errors are associated with a scope, rather than with a field.\n   * This means we can clear them from the scope when the field-they-are-associated-with is changed.\n   */\n  function toggleErrorVisibilityForTextError(errorController, formController, fieldController, scope, element, watchExpr, fieldLabel) {\n    // console.log('Watching error: ' + watchExpr);\n\n    formController._scope.$watch(watchExpr, function(newValue) {\n      // Update the validity of the field's \"watchExpr\" error-key to match the value of the errorText\n      fieldController.$setValidity(watchExpr, !newValue);\n\n      // Remove the old error message for this same errorType first, in cases where the error message is changing.\n      removeErrorMessage(errorController, formController, element, watchExpr);\n      if (newValue) {\n        // No need to compile the error message as we already have its value\n        element.append(generateErrorTag(watchExpr, newValue, fieldLabel));\n\n        errorController.addError(watchExpr, newValue, fieldLabel);\n        // Turn the border red by sending a 'form-submit-attempted' event\n        formController.setSubmitted(true);\n      }\n      errorController.updateAriaErrorElement();\n    });\n\n    // When the field changes, clear the errorText value\n    fieldController.$viewChangeListeners.push(function() {\n      if (scope.$eval(watchExpr)) {\n        scope.$eval(watchExpr + ' = null');\n      }\n    });\n  }\n\n\n  return {\n    restrict: 'AE',\n    require: ['^form'], // Require the formController controller somewhere in the parent hierarchy (mandatory for field-errors)\n    template: '<div class=\"container-error\"></div>',\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n      let fieldName = attr.fieldName;\n      let fieldLabel = attr.fieldLabel || '';\n      let formController = controllers[0];\n      let formName = formController.$name;\n      let formField = formName + '[\"' + fieldName + '\"]';\n      let fieldErrors = scope.$eval(attr.fieldErrors || []);  // You can escape interpolation brackets inside strings by doing  \\{\\{   - wow!\n      let textErrors = scope.$eval(attr.textErrors || []);\n\n      element.attr('id', formName + '-' + fieldName + '-errors');\n\n      // Get a reference to the form policy\n      let a11yPolicy = formController._policy.accessibilityBehaviour;\n      let ariaElement = a11yPolicy.createAriaErrorElement(formName, fieldName);\n      let errorController = new ErrorController(ariaElement, a11yPolicy);   // This controller contains state pertaining to this error container instance. Not a shareable controller across multiple instances.\n\n      element.append(ariaElement);\n\n      for (let error in fieldErrors) {\n        if (fieldErrors.hasOwnProperty(error)) {\n          let errorShowCondition = `${formField}.fieldState === \"${ERROR_STATE}\" && ${formField}.$error.${error}`;\n\n          toggleErrorVisibilityOnError(errorController, formController, scope, element, errorShowCondition, error, fieldErrors[error], fieldLabel);\n        }\n      }\n\n      // Watch formController[fieldName] - it may not have loaded yet. When it loads, call the main function.\n      if (textErrors) {\n        // console.log('textErrors: ' + textErrors + ', fieldName = ' + fieldName);\n        let fieldWatcher = scope.$watch(function() {\n          return formController[fieldName];\n        }, function(newValue) {\n          if (newValue) {\n            fieldWatcher(); // Cancel the watcher\n\n            // Do the actual thing you planned to do...\n            for (let item in textErrors) {\n              if (textErrors.hasOwnProperty(item)) {\n                toggleErrorVisibilityForTextError(errorController, formController, formController[fieldName], scope, element, textErrors[item], fieldLabel);\n              }\n            }\n          }\n        });\n      }\n\n      element.removeAttr('error-container').removeAttr('field-name').removeAttr('field-errors').removeAttr('text-errors');\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js","import angular from 'angular';\nimport FormLibCommon from '../common/index';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formCheckbox', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-checkbox id=\"id\" name=\"name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" ff-ng-model=\"application.contentType\" ff-value=\"software\" ff-aria-label=\"Software\"\n//        ff-ng-click=\"doSomething()\"\n//      field-errors=\"{required: 'Please select'}\"\n//      text-errors=\"['wrong value']\"\n//      >My label with <a href=\"http://www.google.com/\">HTML bits</a> in it</form-checkbox>\n\n// OUTPUT:\n\n\nmod.directive('formCheckbox', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formCheckbox',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [],\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formCheckbox.html', require('./template/FormCheckboxTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js","module.exports = \"<div class=\\\"form-group form-group-checkbox\\\">\\n\\t<div class=checkbox>\\n\\t\\t<input type=checkbox field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html\n// module id = ./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\n\nconst mod = angular.module('ngFormLib.controls.formDate', [\n  FormLibCommon,\n  ErrorMessageContainer,\n  // 'mgcrea.ngStrap.datepicker'   We are using this, but if it is not loaded, we can still offer basic functionality\n]);\n\nexport default mod.name;\n\n// INPUT:\n//    <div form-date id=\"toDate\" name=\"toDate\" label=\"To date\" hide-label=\"true\"\n//    ff-ng-model=\"acctCtrl.search.toDate\" ff-max-date=\"today\" ff-bs-show=\"acctCtrl.datePickers.datePickerTo\"\n//    ff-ng-blur=\"acctCtrl.toggleDatePicker('datePickerTo', true)\"\n//    ff-ng-focus=\"acctCtrl.toggleDatePicker('datePickerFrom', true)\"\n//    ff-class=\"form-control input-beta input-date\"\n//    field-errors=\"{date: 'ERROR.DATE_INVALID'}\" >\n//      <i class=\"calendar\" ng-click=\"acctCtrl.toggleDatePicker('datePickerTo')\"></i>\n//    </div>\n\n\nmod.directive('formDate', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formDate',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use addons (either text or buttons), change the DOM\n      let hasInputGroup = formControlService.addInputGroup(inputElem, tAttr);\n      let parentElemForErrors = hasInputGroup ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formDate.html', require('./template/FormDateInputTemplate.html'));\n  try {\n    $templateCache.put('datepicker/datepicker.tpl.html', require('angular-strap/src/datepicker/datepicker.tpl.html'));\n  } catch (err) {\n    console.debug('angular-strap/src/datepicker/datepicker.tpl.html is not available for the formDate control');\n  }\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\nmod.directive('formDateFormat', ['ngFormLibDateUtil', function(DateUtil) {\n  // All dates greater than AD 0 and less than AD 10000 in dd/mm/yyyy format\n  // RegEx behaves oddly if /g is uses in Regexp.test() situations\n  let dateRegEx = /^(((0[1-9]|[12][0-9]|3[01])([\\/])(0[13578]|10|12)([\\/])(\\d{4}))|(([0][1-9]|[12][0-9]|30)([\\/])(0[469]|11)([\\/])(\\d{4}))|((0[1-9]|1[0-9]|2[0-8])([\\/])(02)([\\/])(\\d{4}))|((29)(\\/)(02)([\\/])([02468][048]00))|((29)([\\/])(02)([\\/])([13579][26]00))|((29)([\\/])(02)([\\/])([0-9][0-9][0][48]))|((29)([\\/])(02)([\\/])([0-9][0-9][2468][048]))|((29)([\\/])(02)([\\/])([0-9][0-9][13579][26])))$/;\n\n  return {\n    require: 'ngModel',\n    priority: 150,    // Higher priority than ui-mask (100), so the postLink function runs last\n    link: function(scope, elem, attrs, ctrl) {\n      function resetValidators() {\n        ctrl.$setValidity('dateFormat', true);\n        ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n        ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n      }\n\n      ctrl.$parsers.unshift(function(viewValue) {\n        // If viewValue or modelValue is undefined or null, jump out\n        if (!viewValue) {\n          resetValidators();\n          return viewValue;\n        }\n\n        if (viewValue.getTime) {\n          // Convert the date value to a date string\n          viewValue = DateUtil.formatDay(viewValue);\n        }\n\n        // If viewValue is a string of 8 digits, then convert it to dd/dd/dddd first\n        if (viewValue.length === 8 && !isNaN(viewValue * 1)) {\n          viewValue = viewValue.substr(0, 2) + '/' + viewValue.substr(2, 2) + '/' + viewValue.substr(4);\n        }\n\n        // Check that it is a valid date\n        let dateFormatValid = dateRegEx.test(viewValue) || typeof viewValue === 'undefined' || !viewValue;\n\n        ctrl.$setValidity('dateFormat', dateFormatValid);\n\n        // console.log('dateInput: ' + viewValue + ', ' + ctrl.$modelValue);\n\n        // If the date is valid\n        if (dateFormatValid && viewValue) {\n          let fieldDate = DateUtil.getDate(viewValue);\n\n          // and there is a min date, check if the value is greater than the min date\n          if (attrs.minDate) {\n            let minDate = DateUtil.getDate(attrs.minDate);\n\n            ctrl.$setValidity('minDate', fieldDate.getTime() >= minDate.getTime());\n          } else {\n            ctrl.$setValidity('minDate', true);\n          }\n          // and there is a max date, check if the value is less than the max date\n          if (attrs.maxDate) {\n            let maxDate;\n\n            if (attrs.maxDate === 'today') {\n              maxDate = DateUtil.getDate(DateUtil.getToday());\n            } else {\n              maxDate = DateUtil.getDate(attrs.maxDate);\n            }\n\n            ctrl.$setValidity('maxDate', fieldDate.getTime() <= maxDate.getTime());\n          } else {\n            ctrl.$setValidity('maxDate', true);\n          }\n        } else {\n          ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n          ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n        }\n        return viewValue;\n      });\n\n      ctrl.$viewChangeListeners.push(function() {\n        // If there is a date-change attribute, execute it when the control is valid\n        if (attrs.dateChange && ctrl.$valid) {\n          scope.$eval(attrs.dateChange);\n        }\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formDate/FormDate.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><input type=text class=form-control maxlength=10 placeholder=dd/mm/yyyy bs-datepicker form-date-format mask-date-digits><span ng-transclude></span></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html\n// module id = ./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formInput', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-input id=\"\" name=\"\" label=\"Last name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" input-type=\"text|tel|email\" ff-ng-model=\"application.lastName\"\n//      ff-maxlength=\"40\" ff-ng-pattern=\"/^[a-zA-Z0-9 \\-.']+$/\"\n//      field-hint=\"This must be the last name of the person who originally applied for the service.\"\n//      field-errors=\"{required: 'Please enter a valid last name', pattern: 'Please enter a valid last name'}\"\n//      text-errors=\"['data.errors.']\"\n//      content-class=\"span3\"\n//      >My content</form-input>\n\n// OUTPUT:\n\n\nmod.directive('formInput', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formInput',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label', 'inputType'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use addons (either text or buttons), change the DOM\n      let hasInputGroup = formControlService.addInputGroup(inputElem, tAttr);\n      let parentElemForErrors = hasInputGroup ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formInput.html', require('./template/FormInputTemplate.html'));\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formInput/FormInput.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><input class=form-control><span ng-transclude></span></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html\n// module id = ./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formRadioButton', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-radio-button uid=\"fld\" name=\"name\" aria-label=\"Book Type\" label-class=\"btn btn-toggle\"\n//    ff-class=\"someCSS\" ff-ng-model=\"application.bookType\" ff-value=\"Fiction\" ng-click=\"loadFiction()\" class=\"span6\">\n//     <icon class=\"icon-fiction\"></icon>Fiction\n//  </form-radio-button>\n\n// OUTPUT:\n\nmod.directive('formRadioButton', ['formControlService', function(formControlService) {\n  return formControlService.buildDirective({\n    controlName: 'formRadioButton',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [], // The template should NOT have a form-group element inside it, as this has to be specified externally (due to the group-nature of radio buttons)\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      // Move the class attribute from the outer-DIV to the radio-button DIV (special case)\n      let rbDiv = tElement.find('div');\n\n      rbDiv.addClass(tElement.attr('class'));\n      tElement.removeAttr('class');\n\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    },\n  });\n}]);\n\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formRadioButton.html', require('./template/FormRadioButtonTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js","module.exports = \"<div>\\n\\t<div class=radio>\\n\\t\\t<input type=radio field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html\n// module id = ./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html\n// module chunks = 0 1","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formReset', []);\n\nexport default mod.name;\n\n\nmod.directive('formReset', ['$parse', function($parse) {\n  function resetFieldState(controlMap) {\n    // Loops through the controlMap and reset's each field's state\n    for (let item in controlMap) {\n      if (controlMap.hasOwnProperty(item)) {\n        let controlList = controlMap[item];\n\n        for (let j = 0, jLen = controlList.length; j < jLen; j++) {\n          controlList[j].controller.fieldState = '';\n        }\n      }\n    }\n  }\n\n  return {\n    restrict: 'A',\n    require: '^form',\n    link: function(scope, element, attr, controller) {\n      let ngModelGet = $parse(attr.formReset);\n      let ngModelSet = ngModelGet.assign;\n\n      if (!ngModelSet) {\n        throw Error('formReset requires an assignable scope-expression. \"' + attr.formReset + '\" is un-assignable.');\n      }\n\n      // Get a copy of the data as soon as the directive is created, which is after the scope/controller has been initialised (safe)\n      let originalData = angular.copy(ngModelGet(scope));\n\n      element.on('click', function() {\n        if (typeof controller.setSubmitted === 'function') {\n          controller.setSubmitted(false);\n        }\n        // Use a *copy* of the original data, as we don't want originalData to be modified by subsequent changes to the model by the form controls\n        ngModelSet(scope, angular.copy(originalData));\n        resetFieldState(controller._controls || {});\n        controller.$setPristine();\n\n        scope.$emit('event:FormReset');\n        scope.$digest();\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formReset/FormReset.js","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formSelect', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n// INPUT:\n//  <form-select id=\"frm-size\" name=\"bookSize\" required=\"true\" label=\"Approximate size\"\n//    ff-class=\"span12\" ff-ng-model=\"model.size\" placeholder=\"Select a size bracket\"\n//    ff-ng-options=\"option.value as option.name for option in refData.bookSizes\"\n//    field-errors=\"{required: 'Please select a size bracket'}\"\n//    text-errors=\"['data.errors']\"></form-select>\n\n// OUTPUT:\n\n\nmod.directive('formSelect', ['formControlService', function(formControlService) {\n  function addPlaceholder(selectElem, placeholderText) {\n    if (placeholderText) {\n      selectElem.append('<option translate value=\"\">' + placeholderText + '</option>');\n    }\n  }\n\n  return formControlService.buildDirective({\n    controlName: 'formSelect',\n    inputElementName: 'select',\n    expectedTemplateElements: ['select', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, tAttr.placeholder);  // Adds the extra option element to the start of the <option>\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(inputElem.parent(), inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    },\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formSelect.html', require('./template/FormSelectTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSelect/FormSelect.js","module.exports = \"<div class=form-group><label class=control-label></label><div class=control-row><select class=form-control></select></div></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html\n// module id = ./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html\n// module chunks = 0 1","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formSubmit', []);\n\nexport default mod.name;\n\n\n/**\n * formSubmit - Executes an expression when the form is valid (essentially a form.submit() handler).\n *\n * It can be applied to either the form element or to a button.\n *\n * @param {Object} $parse   The $parse service\n *\n * @return {Object} Directive definition object\n */\nmod.directive('formSubmit', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    require: ['^form'],   // Get the form controller\n    link: function(scope, element, attr, controller) {\n      let fn = $parse(attr.formSubmit) || angular.noop;\n      let isForm = element[0].tagName === 'FORM';\n      let formController = controller[0];\n\n      element.bind(isForm ? 'submit' : 'click', function(event) {\n        formController.setSubmitted(true);\n\n        scope.$apply(function() {\n          // scope.$emit('event:FormSubmitAttempted');\n\n          if (formController.$valid) {\n            if (fn(scope, {$event: event}) !== false) {\n              // Needed by the tracking tool as it clears the input data after a submission.\n              // Potentially, form field validation to be done here, but unnecessary at the moment.\n              // The reset behaviour can be over-ridden by returning false from the called function(maybe prevent default aswell?)\n              formController.setSubmitted(false);\n              formController.$setPristine();\n            }\n          } else {\n            event.preventDefault();\n          }\n        });\n      });\n    },\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/formSubmit/FormSubmit.js","import angular from 'angular';\nimport ErrorMessageContainer from './errorMessageContainer/ErrorMessageContainer';\nimport FormCheckbox from './formCheckbox/FormCheckbox';\nimport FormDate from './formDate/FormDate';\nimport FormInput from './formInput/FormInput';\nimport FormRadioButton from './formRadioButton/FormRadioButton';\nimport FormReset from './formReset/FormReset';\nimport FormSelect from './formSelect/FormSelect';\nimport FormSubmit from './formSubmit/FormSubmit';\n\n  // We need the utility module for the ngFormLibDateUtil.getDate() method for the formDateFormat directive, and ngFormLibStringUtil.trim() in controls.common\nconst mod = angular.module('ngFormLib.controls', [\n  ErrorMessageContainer,\n  FormCheckbox,\n  FormDate,\n  FormInput,\n  FormRadioButton,\n  FormReset,\n  FormSelect,\n  FormSubmit,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/index.js","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.requiredMarker', [FormControlService]);\n\nexport default mod.name;\n\n\n// Add a simple \"required\" marker that is not read-out by screen readers (as the field should also have a required indicator)\n//\n// INPUT:\n//  <span required-marker></span>\n//  <span required-marker hide=\"isNotRequired\">Some Text</span>\n\n// OUTPUT:\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\"></span>\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\" hide=\"isNotRequired\">Some Text</span>\n\nmod.directive('requiredMarker', ['formControlService', function(formControlService) {\n  return {\n    restrict: 'AE',\n    replace: true,\n    transclude: true,\n    templateUrl: function(element, attr) {\n      return attr.template || formControlService.getHTMLTemplate(element, 'requiredMarker');\n    },\n    scope: {\n      hide: '=',\n    },\n  };\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/requiredMarker.html', require('./template/RequiredMarkerTemplate.html'));\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js","module.exports = \"<span class=required aria-hidden=true ng-class=\\\"{'ng-hide': hide}\\\" ng-transclude></span>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html\n// module id = ./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html\n// module chunks = 0 1","import angular from 'angular';\nimport FormPolicy from './policy/FormPolicy';\nimport FormControls from './controls';\n\n// Don't include this in the angular module, only export it here for convenience\nimport policyDefaults from './policy/defaultPolicies';\n\nconst mod = angular.module('ngFormLib', [\n  FormPolicy,\n  FormControls,\n]);\n\n// The library, and the default policies\n\nconst ngFormLib = mod.name;\nconst defaultPolicies = policyDefaults;\nexport {ngFormLib, defaultPolicies};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/index.js","import angular from 'angular';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy', []);\n\nexport default mod.name;\n\n\n// This is a configurable service\n// It should contain the _default_ values for form policies\n\nmod.provider('formPolicyService', function Provider() {\n  let self = this;\n  let noop = () => {};\n  let nullBehaviourOnStateChange = {\n    behaviour: () => {\n      return {\n        applyBehaviour: noop,\n        resetBehaviour: noop,\n      };\n    },\n  };\n  let nullStateDefinitions = {\n    create: () => ({}),   // Return an empty object\n    states: () => ({}),\n  };\n  let nullAccessibilityBehaviour = {\n    createAriaErrorElement: () => '',\n    onErrorChangeBehaviour: noop,\n  };\n\n  // The self.defaults property allows the formPolicy to be customised for a specific form\n  self.defaults = {\n    formSubmitAttemptedClass: 'form-submit-attempted',\n    accessibilityBehaviour: null,\n    behaviourOnStateChange: null,\n    checkForStateChanges: null,\n    stateDefinitions: null,\n  };\n\n  this.$get = ['$injector', function($injector) {\n    function getService(name) {\n      try {\n        return $injector.get(name);\n      } catch (e) {\n        return null;    // Provider-not-found error, ignore and move on\n      }\n    }\n\n    // Policy precedence: this.defaults, policy-value-object, noop\n    self.defaults.accessibilityBehaviour = self.defaults.accessibilityBehaviour || getService('formPolicyAccessibilityBehaviour') || nullAccessibilityBehaviour;\n    self.defaults.behaviourOnStateChange = self.defaults.behaviourOnStateChange || getService('formPolicyBehaviourOnStateChange') || nullBehaviourOnStateChange;\n    self.defaults.checkForStateChanges = self.defaults.checkForStateChanges || (getService('formPolicyCheckForStateChanges') || {}).checker || noop;\n    self.defaults.stateDefinitions = self.defaults.stateDefinitions || getService('formPolicyStateDefinitions') || nullStateDefinitions;\n\n    let policyService = {\n      getCurrentPolicy: function() {\n        return angular.copy(self.defaults);\n      },\n    };\n\n    return policyService;\n  }];\n});\n\n\nfunction formDirective(formPolicyService) {\n  return {\n    // priority: -1,\n    restrict: 'AE',\n    require: ['?form'], // Tells the directive to get the controller for the 'form' directive, which is the FormController controller\n    compile: function(tElement, tAttr) {\n      // Use element.data() to store a reference to this element for use by child.inheritedData()\n      // Will storing an element this way cause a memory leak? Or should I just store the data I currently need (attr.class)\n      // This has to happen during the compile step, as the children need access to the variable when they are compiled\n      //  ('class' is a reserved word to JavaScript, so we need to treat it as a string)\n      tElement.data('formElementClasses', tAttr['class']);\n\n      return {\n        pre: function(scope, element, attr, controller) {\n          // We want to extend the FormController by adding a form policy\n          let formController = controller[0];\n\n          formController._policy = angular.extend(formPolicyService.getCurrentPolicy(), scope.$eval(attr.formPolicy));\n\n          // Add a reference to the <form> element's scope to the formController, to support showing errors for nested components\n          formController._scope = scope;\n\n          // Determine if we have a parent form controller. If we do, we want to use it for the focus behaviour\n          formController._parentController = element.parent().controller('form');\n\n          if (!formController._parentController) {\n            // We also want to add an element reference when a control is added\n            formController._controls = {};\n          }\n\n          // Generate the focus policy function for use by other directive\n          formController._applyFormBehaviourOnStateChangePolicy = formController._policy.behaviourOnStateChange.behaviour(formController);\n\n          // Add/remove a class onto the form based on the value of the formSubmitted variable\n          formController.setSubmitted = function(value, tellNoOne) {\n            element[value ? 'addClass' : 'removeClass'](formController._policy.formSubmitAttemptedClass);\n            formController._formSubmitAttempted = value;\n            formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n            if (value && !tellNoOne) {\n              scope.$broadcast('event:FormSubmitAttempted');\n            }\n          };\n\n          // Flag to indicate whether the form has been submitted\n          formController._formSubmitAttempted = false;\n          formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n          // If this form is an ngForm (in that it has a parent 'form'), then we need to make sure that\n          // when the parent form is submitted or reset, the same thing happens to the child forms\n          if (formController._parentController) {\n            scope.$watch(function() {\n              return formController._parentController._formSubmitAttempted;\n            }, function(value) {\n              if (value !== undefined) {\n                // formController.setSubmitted(!!value, true);  // Don't send another notification, just update our own state\n                formController.setSubmitted(!!value);  // Don't send another notification, just update our own state\n              }\n            });\n          }\n        },\n      };\n    },\n  };\n}\nmod.directive('form', ['formPolicyService', formDirective]);\nmod.directive('ngForm', ['formPolicyService', formDirective]);\n\n\n// We want our formController to expose the list of controls that are registered with the form,\n// including controls inside sub-forms. That allows us to reset them directly. Relying simply on the fieldName\n// does not work when using sub-forms inside ng-repeaters.\n\nlet inputElements = ['input', 'select'];\n\nangular.forEach(inputElements, function(inputElem) {\n  mod.directive(inputElem, function() {\n    function hookupElementToNameToElementMap(formController, element, fieldName, fieldController) {\n      // Each element in the map is an array, because form elements *can have the same name*!\n      let map = formController._controls;\n\n      if (!map[fieldName]) {\n        map[fieldName] = [];\n      }\n      // Add the field to the end of the list of items with the same name\n      map[fieldName][map[fieldName].length] = {'element': element, 'controller': fieldController};\n\n\n      element.on('$destroy', function() {\n        // Delete just this element from the map of controls\n        let map = formController._controls[element.attr('name')];\n        let elementId = element.attr('id');\n\n        for (let i = 0; i < map.length; i++) {\n          if (map[i].element.attr('id') === elementId) {\n            map.splice(i, 1);\n            break;\n          }\n        }\n      });\n    }\n\n    return {\n      restrict: 'E',\n      require: ['?^form', '?ngModel'],\n      link: {\n        pre: function(scope, element, attr, controllers) {\n          if (!controllers[0]) {\n            return;\n          }\n\n          let rootFormController = controllers[0]._parentController || controllers[0];\n          let fieldController = controllers[1];\n          let name = attr.name;\n\n          if (rootFormController && rootFormController._controls) {\n            hookupElementToNameToElementMap(rootFormController, element, name, fieldController);\n          }\n        },\n      },\n    };\n  });\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/FormPolicy.js","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.policy.formAccessibility', []);\n\nexport default mod.name;\n\nconst ariaErrorElementSuffix = '-errors-aria';\nconst ariaErrorElementTemplate = '<span class=\"sr-only\" aria-hidden=\"true\"></span>';\n\n\nfunction createAriaErrorElement(formName, fieldName) {\n  let elem = angular.element(ariaErrorElementTemplate);\n\n  elem.attr('id', getAriaErrorElementId(formName, fieldName));\n  return elem;\n}\n\n// EXPORTED! Allows the PolicyBehaviourOnStateChange.onErrorSetAriaDescribedByToAriaErrorElement to work.\n// Not perfect... still feels like ARIA behaviour is not in one place...\nexport function getAriaErrorElementId(formName, fieldName) {\n  return formName + '-' + fieldName + ariaErrorElementSuffix;\n}\n\nfunction createLongErrorDescription(ariaElement, errors) {\n  let str = '';\n  let i = 0;\n\n  for (let type in errors) {\n    if (errors.hasOwnProperty(type)) {\n      str += 'Error ' + ++i + ', ' + errors[type] + ',';\n    }\n  }\n\n  if (i === 1) {\n    str = '. There is 1 error for this field. ' + str;\n  } else if (i > 1) {\n    str = '. There are ' + i + ' errors for this field. ' + str;\n  }\n  ariaElement.text(str);\n}\n\n\nfunction createShortErrorDescription(ariaElement, errors) {\n  let errorMsgs = [];\n  let prefix = '';\n\n  for (let type in errors) {\n    if (errors.hasOwnProperty(type)) {\n      errorMsgs.push(errors[type]);\n    }\n  }\n\n  if (errorMsgs.length > 1) {\n    prefix = errorMsgs.length + ' errors: ';\n  }\n  ariaElement.text(prefix + errorMsgs.join('. '));\n}\n\n\n// Define the different display trigger implementations available\nmod.constant('formPolicyAccessibilityLibrary', {\n  createAriaErrorElement,\n  createLongErrorDescription,\n  createShortErrorDescription,\n});\n\n\nmod.provider('formPolicyAccessibilityBehaviour', ['formPolicyAccessibilityLibrary', function Provider(lib) {\n  let config = this.config = {\n    createAriaErrorElement: lib.createAriaErrorElement,\n    onErrorChangeBehaviour: lib.createLongErrorDescription,\n  };\n\n  this.$get = () => config;\n}]);\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/accessibility/PolicyFormAccessibility.js","import angular from 'angular';\nimport 'angular-scroll';\nimport FormControlService from '../../controls/common/FormControlService';\nimport {getAriaErrorElementId} from '../accessibility/PolicyFormAccessibility';\nimport {ERROR_STATE} from '../stateDefinitions/PolicyStateDefinitions';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy.behaviourOnStateChange', ['duScroll', FormControlService]);\n\nexport default mod.name;\n\n\n// Helper functions\nlet timeoutPromise;\nlet scrollPromise;\n\nfunction isElementVisible(element) {\n  return !!element.getBoundingClientRect().top;\n}\n\nfunction setFocusOnField($document, $timeout, duration, element, offset) {\n  // If no offsetHeight then assume it's invisible and let the next error field take the scroll position\n  if (isElementVisible(element[0])) {\n    // console.log('Error focus set to: ' + domElement.id);\n    $timeout.cancel(timeoutPromise);\n    $timeout.cancel(scrollPromise);   // This doesn't seem to make a difference on a Mac - user-generated scrolling does not get cancelled\n    timeoutPromise = $timeout(function() {\n     element[0].focus();\n    }, duration);\n    scrollPromise = $document.scrollToElement(element, offset, duration);  // scrollToElement() comes from the angular-scroll directive // No offset\n    return true;\n  }\n  return false; // Indicate that we did NOT set the focus\n}\n\n// Make this available for people that want to add behaviours:\nexport function combineBehaviours(a, b) {\n  // If 'a' is undefined, return b\n  if (!a) {\n    return b;\n  }\n\n  return function(...args) {\n    let resultA = a(...args);\n    let resultB = b(...args);\n\n    return {\n      applyBehaviour: (...args2) => {\n        resultA.applyBehaviour.apply(null, args2);\n        resultB.applyBehaviour.apply(null, args2);\n      },\n      resetBehaviour: (...args2) => {\n        resultA.resetBehaviour.apply(null, args2);\n        resultB.resetBehaviour.apply(null, args2);\n      },\n    };\n  };\n}\n\n/*\n * Returns a function that can be called when an error is showing FOR THIS FIELD. The function is dynamically created\n *  based on the form policy.\n *\n *  The dynamic function sets the focus if the form policy allows it to\n *  The input parameters are:\n *    - DOMElement of the current form-field control that could get focus\n *    - whether an error is showing on the form-field\n *    - whether the form was just attempted to be submitted\n *\n *  The returned function is stored against the form controller as _applyFormFocusPolicy(...)\n *  _applyFormFocusPolicy() should be called by the field-error-controller directive whenever the field state changes,\n *   and when a form-submit event occurs.\n */\nmod.service('formPolicyBehaviourOnStateChangeLibrary', ['$document', '$timeout', 'duScrollDuration', 'formControlService',\n  function($document, $timeout, duScrollDuration, formControlService) {\n    // Policy implementation functions\n    function onSubmitFocusFirstFieldIfError(formController) {\n      // We want to pretend that there is a single controller for the form, for the purpose of managing the focus.\n      // Otherwise, the main form sets the focus, then the subform (ng-form) also sets the focus\n      let focusController = formController._parentController || formController;\n\n      return {\n\n        // This function is called by the fieldErrorController when the fieldState changes and when the form is submitted\n        applyBehaviour: function(fieldElem, fieldState, formSubmitAttempted/* , formName, fieldName*/) {\n          // Set the focus to the field if there is an error showing and a form-submit has been attempted\n          if (fieldState === ERROR_STATE && formSubmitAttempted) {\n            // Make sure element is the first field with an error based on DOM order\n            let elems = $document[0][focusController.$name].querySelectorAll('.form-group .ng-invalid');\n            let firstElement;\n\n            angular.forEach(elems, function(elem) {\n              if (isElementVisible(elem) && !firstElement) {\n                firstElement = elem;\n              }\n            });\n            let isFirstElement = firstElement ? firstElement.id === fieldElem[0].id : false;\n\n            // ...and if the focusErrorElement is blank...\n            let scrollOffset = formController._policy.behaviourOnStateChange.fieldFocusScrollOffset;\n\n            if (!focusController._focusErrorElement && isFirstElement && setFocusOnField($document, $timeout, duScrollDuration, fieldElem, scrollOffset)) {\n              focusController._focusErrorElement = fieldElem;\n            }\n          }\n        },\n\n        resetBehaviour: () => {\n          focusController._focusErrorElement = null;\n        },\n      };\n    }\n\n\n    function onErrorSetAriaDescribedByToAriaErrorElement(/* formController*/) {\n      return {\n        applyBehaviour: function(fieldElem, fieldState, formSubmitAttempted, formName, fieldName) {\n          fieldElem.attr('aria-invalid', fieldState === ERROR_STATE);\n          // Get a reference to the error element\n          let errorElemId = getAriaErrorElementId(formName, fieldName);\n\n          // Link the field to the ariaErrorElement.\n          if (fieldState === ERROR_STATE) {\n            formControlService.addToAttribute(fieldElem, 'aria-describedby', errorElemId);\n          } else {\n            formControlService.removeFromAttribute(fieldElem, 'aria-describedby', errorElemId);\n          }\n        },\n        resetBehaviour: () => {},\n      };\n    }\n\n\n    function updateElementStyle(formController) {\n      return {\n        applyBehaviour: (fieldElem, fieldState, formSubmitAttempted, formName, fieldName, formGroupElement) => {\n          let policy = formController._policy.behaviourOnStateChange;\n\n          formGroupElement[fieldState === ERROR_STATE ? 'addClass' : 'removeClass'](policy.fieldErrorClass);\n          formGroupElement[fieldState === 'success' ? 'addClass' : 'removeClass'](policy.fieldSuccessClass);\n        },\n        resetBehaviour: () => {},\n      };\n    }\n\n    return {\n      onSubmitFocusFirstFieldIfError,\n      onErrorSetAriaDescribedByToAriaErrorElement,\n      updateElementStyle,\n    };\n  },\n]);\n\n\nmod.provider('formPolicyBehaviourOnStateChange', function Provider() {\n  let config = this.config = {\n    behaviour: undefined,\n    fieldErrorClass: 'has-error',\n    fieldSuccessClass: 'has-success',\n    fieldFocusScrollOffset: 0,\n  };\n\n  this.$get = ['formPolicyBehaviourOnStateChangeLibrary', function(lib) {\n    // If the behaviour has been over-ridden, great. Otherwise this is the default.\n    config.behaviour = config.behaviour || [\n      lib.onSubmitFocusFirstFieldIfError,\n      lib.onErrorSetAriaDescribedByToAriaErrorElement,\n      lib.updateElementStyle,\n    ].reduce(combineBehaviours);\n\n    return config;\n  }];\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js","import angular from 'angular';\nimport {ERROR_STATE} from '../stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.policy.checkForStateChanges', []);\n\nexport default mod.name;\n\n\n// Policy implementation functions\nfunction checkForStateChangesOnBlurUntilSubmitThenOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  let errorWatch;\n\n  scope.$on('event:FormSubmitAttempted', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    errorWatch = watchForErrorChanges(scope, stateDefinitions, ngModelController);\n    // console.log('heard formSubmitAttempted');\n  });\n\n\n  // Listen for the form reset event and cancel the submit-watcher\n  scope.$on('event:FormReset', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    errorWatch = undefined;\n    // console.log('heard formReset');\n  });\n\n  // Initially just watch for blur event. But once there's an error, watch for keyup events too\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\nfunction checkForStateChangesOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  // Watch the error condition for changes, and flag the field as inErrorShowing when the errorCondition is true\n  return watchForErrorChanges(scope, stateDefinitions, ngModelController);\n}\n\nfunction checkForStateChangesOnBlur(scope, element, name, stateDefinitions, ngModelController) {\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\n// Helper methods\nfunction createWatch(scope, ngModelController, stateName, stateCondition) {\n  return scope.$watch(stateCondition, function(value) {\n    if (value === true) {\n      ngModelController.fieldState = stateName;       // THIS IS THE KEY FLAG\n      // console.log('A: ' + stateCondition + ' = ' + value);\n    }\n  });\n}\n\nfunction watchForErrorChanges(scope, stateDefinitions, ngModelController) {\n  // Set up a watch for each state definition... expensive?\n  let watchers = [];\n\n  for (let stateName in stateDefinitions) {\n    if (stateDefinitions.hasOwnProperty(stateName)) {\n      watchers.push(createWatch(scope, ngModelController, stateName, stateDefinitions[stateName]));\n    }\n  }\n\n  // Return a de-registration function\n  return () => {\n    // console.log('Remove error watchers...', watchers);\n    watchers.forEach((deregistrationFn) => deregistrationFn());\n  };\n}\n\nfunction evaluateFieldStates(scope, stateDefinitions, ngModelController) {\n  for (let prop in stateDefinitions) {\n    if (scope.$eval(stateDefinitions[prop]) === true) {\n      ngModelController.fieldState = prop;\n      // console.log('B: ' + stateDefinitions[prop] + ' = ' + prop);\n      break;\n    }\n  }\n}\n\nfunction watchForBlurEvent(scope, element, fieldName, stateDefinitions, ngModelController) {\n  // Determine the initial field state. First state to evaluate to TRUE wins\n  evaluateFieldStates(scope, stateDefinitions, ngModelController);\n\n  let handleErrorsOnKeyChangeWatcher;\n\n  element.bind('blur', function ngShowWatchAction() {\n    let initialFieldState = ngModelController.fieldState;\n\n    evaluateFieldStates(scope, stateDefinitions, ngModelController);\n    // console.log(initialFieldState, '=>', ngModelController.fieldState);\n\n    // If onBlur we change into an error state (from a non error state), start watching for error-changes (as soon as the field become valid).\n    if (initialFieldState !== ngModelController.fieldState && ngModelController.fieldState === ERROR_STATE && !handleErrorsOnKeyChangeWatcher) {\n      // console.log('adding change watchers');\n      handleErrorsOnKeyChangeWatcher = watchForErrorChanges(scope, stateDefinitions, ngModelController);\n    // If we are already watching for error-changes and the field is no longer in error, stop watching for error changes\n    } else if (handleErrorsOnKeyChangeWatcher && ngModelController.fieldState !== ERROR_STATE) {\n      handleErrorsOnKeyChangeWatcher();   // Remove the watcher\n      handleErrorsOnKeyChangeWatcher = undefined;\n    }\n\n    scope.$apply(); // We are in a jQueryLite handler and have changed a scope property - fire the watchers!\n  });\n}\n\n// Define the different display trigger implementations available\nmod.constant('formPolicyCheckForStateChangesLibrary', (function() {\n  return {\n    onChange: checkForStateChangesOnChange,\n    onBlur: checkForStateChangesOnBlur,\n    onBlurUntilSubmitThenOnChange: checkForStateChangesOnBlurUntilSubmitThenOnChange,\n  };\n})());\n\n\nmod.provider('formPolicyCheckForStateChanges', ['formPolicyCheckForStateChangesLibrary', function Provider(lib) {\n  let config = this.config = {\n    checker: lib.onBlurUntilSubmitThenOnChange,\n  };\n\n  this.$get = function() {\n    return config;\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js","import angular from 'angular';\nimport defaultFormAccessibility from './accessibility/PolicyFormAccessibility';\nimport defaultStateChangeBehaviour from './behaviourOnStateChange/PolicyBehaviourOnStateChange';\nimport defaultStateChangeChecks from './checkForStateChanges/PolicyCheckForStateChanges';\nimport defaultStateDefinitions from './stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.defaultPolicies', [\n  defaultFormAccessibility,\n  defaultStateChangeBehaviour,\n  defaultStateChangeChecks,\n  defaultStateDefinitions,\n]);\n\nexport default mod.name;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/defaultPolicies.js","import angular from 'angular';\n\n// TODO: What if the state definition expressions returned the statename, rather than true or false, so we wouldn't need\n// to create a watch for each state definition. Instead, the expressions for each state would be like a big\n// switch statement, returning a state name or undefined.\n\n\n// Define the different display trigger implementations available\nconst mod = angular.module('ngFormLib.policy.stateDefinitions', []);\n\nexport default mod.name;\nexport const ERROR_STATE = 'error';\n\n// Error Conditions\nfunction errorOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorImmediately(formName, fieldName) {\n  return fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$invalid';\n}\n\nmod.constant('formPolicyErrorDefinitionLibrary', {\n  onSubmit: errorOnSubmit,\n  onDirty: errorOnDirty,\n  immediately: errorImmediately,\n  onSubmitAndDirty: errorOnSubmitAndDirty,\n  onSubmitOrDirty: errorOnSubmitOrDirty,\n});\n\n\n// Success Definitions\nfunction successOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$valid';\n}\n\nfunction successOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successImmediately(formName, fieldName) {\n  return fieldName + '.$valid';\n}\n\nfunction successOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$valid';\n}\n\nmod.constant('formPolicySuccessDefinitionLibrary', {\n  onSubmit: successOnSubmit,\n  onDirty: successOnDirty,\n  immediately: successImmediately,\n  onSubmitAndDirty: successOnSubmitAndDirty,\n  onSubmitOrDirty: successOnSubmitOrDirty,\n});\n\n\nmod.provider('formPolicyStateDefinitions', ['formPolicyErrorDefinitionLibrary', 'formPolicySuccessDefinitionLibrary', function Provider(errorLib, successLib) {\n  let config = this.config = {\n    states: {\n      [ERROR_STATE]: errorLib.onSubmitOrDirty,\n      success: successLib.onSubmitOrDirty,\n    },\n  };\n\n  config.create = (formName, fieldName) => {\n    let result = {};\n\n    for (let state in config.states) {\n      if (config.states.hasOwnProperty(state)) {\n        result[state] = config.states[state](formName, fieldName);\n      }\n    }\n    return result;\n  };\n\n  this.$get = function() {\n    return config;\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js"],"sourceRoot":""}