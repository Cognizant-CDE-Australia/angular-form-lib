{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e024b7f9b0857c0840b4","webpack:///external \"angular\"","webpack:///./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js","webpack:///./modules/ngFormLib/controls/common/index.js","webpack:///./modules/ngFormLib/controls/common/FormControlService.js","webpack:///./modules/common/Utility.js","webpack:///./modules/ngFormLib/controls/common/FieldErrorController.js","webpack:///./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js","webpack:///./modules/ngFormLib/controls/formDate/FormDate.js","webpack:///./modules/ngFormLib/controls/formInput/FormInput.js","webpack:///./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js","webpack:///./modules/ngFormLib/controls/formReset/FormReset.js","webpack:///./modules/ngFormLib/controls/formSelect/FormSelect.js","webpack:///./modules/ngFormLib/controls/formSubmit/FormSubmit.js","webpack:///./modules/ngFormLib/controls/index.js","webpack:///./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js","webpack:///./modules/ngFormLib/index.js","webpack:///./modules/ngFormLib/policy/FormPolicy.js","webpack:///./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js","webpack:///./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js","webpack:///./modules/ngFormLib/policy/defaultPolicies.js","webpack:///./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js","webpack:///../~/angular-strap/src/datepicker/datepicker.tpl.html","webpack:///./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html","webpack:///./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html","webpack:///./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html","webpack:///./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html","webpack:///./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html","webpack:///./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html","webpack:///external \"angular-scroll\""],"names":[],"mappings":"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","file":"es5/ngFormLib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-scroll\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"angular-scroll\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\"), require(\"angular-scroll\")) : factory(root[\"angular\"], root[\"angular-scroll\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_29__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e024b7f9b0857c0840b4\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.errorMessageContainer', [FormControlService]);\n\nexport default mod.name;\n\n\n//angular.module('ngFormLib.controls.errorMessageContainer', ['pascalprecht.translate'])\n\n/**\n * This directive is really a FIELD error message container - it is designed to work with fields exclusively\n */\nmod.directive('errorContainer', ['$compile', 'formControlService', function($compile, formControlService) {\n\n  function translateError(errorMessage, fieldLabel) {\n    var firstLetterIsAVowel = fieldLabel ? ('aeiou'.indexOf(fieldLabel[0].toLowerCase()) !== -1) : undefined;\n    return formControlService.translate(errorMessage, {pronoun: firstLetterIsAVowel ? 'an' : 'a', fieldLabel: fieldLabel});\n  }\n\n  function ErrorController(element) {\n    var errors = [],\n      ariaElement = element;\n\n    return {\n      addError: function(errorType, errorMessage, fieldLabel) {\n        errors[errorType] = translateError(errorMessage, fieldLabel);\n      },\n\n      removeError: function(errorType) {\n        delete errors[errorType];\n      },\n\n      refreshErrorText: function() {\n        var str = '', i = 0;\n        for (var type in errors) {\n          if (errors.hasOwnProperty(type)) {\n            str += 'Error ' + (++i) + ', ' + errors[type] + ',';\n          }\n        }\n\n        if (i === 1) {\n          str = '. There is 1 error for this field. ' + str;\n        } else if (i > 1) {\n          str = '. There are ' + i + ' errors for this field. ' + str;\n        }\n        ariaElement.text(str);\n      }\n    };\n  }\n\n  function generateErrorTag(errorType, errorText, fieldLabel) {\n    return '<div class=\"text-error ec2-' + errorType + '\"><span class=\"text-error-wrap\">' + translateError(errorText, fieldLabel) + '</span></div>';\n  }\n\n  /**\n   * Handle the field-based error messages\n   */\n  function toggleErrorVisibilityOnError(controller, formController, scope, element, watchExpr, errorType, errorText, fieldLabel) {\n    //console.log('watchExpr = ' + watchExpr);\n    formController._scope.$watch(watchExpr, function(newValue) {\n      if (newValue) {\n        // The error text could contain an interpolation string, so we need to compile it\n        var val = $compile(generateErrorTag(errorType, errorText, fieldLabel))(scope);\n        element.append(val);\n        controller.addError(errorType, errorText, fieldLabel);\n      } else {\n        removeErrorMessage(controller, formController, element, errorType);\n      }\n      controller.refreshErrorText();\n    });\n  }\n\n  /**\n   * Handle text errors. Text errors are associated with a scope, rather than with a field.\n   * This means we can clear them from the scope when the field-they-are-associated-with is changed.\n   */\n  function toggleErrorVisibilityForTextError(errorController, formController, fieldController, scope, element, watchExpr, fieldLabel) {\n    //console.log('Watching error: ' + watchExpr);\n\n    formController._scope.$watch(watchExpr, function(newValue) {\n      // Update the validity of the field's \"watchExpr\" error-key to match the value of the errorText\n      fieldController.$setValidity(watchExpr, !newValue);\n\n      // Remove the old error message for this same errorType first, in cases where the error message is changing.\n      removeErrorMessage(errorController, formController, element, watchExpr);\n\n      if (newValue) {\n        // No need to compile the error message as we already have its value\n        element.append(generateErrorTag(watchExpr, newValue, fieldLabel));\n        errorController.addError(watchExpr, newValue, fieldLabel);\n\n        // Turn the border red by sending a 'form-submit-attempted' event\n        formController.setSubmitted(true);\n      }\n      errorController.refreshErrorText();\n    });\n\n    // When the field changes, clear the errorText value\n    fieldController.$viewChangeListeners.push(function() {\n      if (scope.$eval(watchExpr)) {\n        scope.$eval(watchExpr + ' = null');\n      }\n    });\n  }\n\n\n  function removeErrorMessage(controller, formController, element, errorType) {\n    // find the div with our special class, then remove it\n    var divs = element.find('div');\n    for (var len = divs.length, i = len - 1; i > -1; i--) {\n      if (divs.eq(i).hasClass('ec2-' + errorType)) {\n        divs.eq(i).remove();\n      }\n    }\n    controller.removeError(errorType);\n  }\n\n  return {\n    restrict: 'AE',\n    require: ['^form'], // Require the formController controller somewhere in the parent hierarchy (mandatory for field-errors)\n    template: '<div class=\"container-error\"></div>',\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n\n      var fieldName = attr.fieldName,\n        fieldLabel = attr.fieldLabel || '',\n        formController = controllers[0],\n        formName = formController.$name,\n        formField = formName + '.' + fieldName,\n        fieldErrors = scope.$eval(attr.fieldErrors || []),  // You can escape interpolation brackets inside strings by doing  \\{\\{   - wow!\n        textErrors = scope.$eval(attr.textErrors || []);\n\n      element.attr('id', formName + '-' + fieldName + '-errors');\n      element.append('<span class=\"sr-only\" aria-hidden=\"true\" id=\"' + formName + '-' + fieldName + '-errors-aria\"></span>');\n\n      var ariaElement = element.find('span'),\n        errorController = new ErrorController(ariaElement);   // new? Maybe make this the directive's controller instead\n\n      for (var error in fieldErrors) {\n        if (fieldErrors.hasOwnProperty(error)) {\n          var errorShowCondition = formField + '.fieldState === \"error\" && ' + formField + '.$error.' + error;\n          toggleErrorVisibilityOnError(errorController, formController, scope, element, errorShowCondition, error, fieldErrors[error], fieldLabel);\n        }\n      }\n\n      // Watch formController[fieldName] - it may not have loaded yet. When it loads, call the main function.\n      if (textErrors) {\n        //console.log('textErrors: ' + textErrors + ', fieldName = ' + fieldName);\n        var fieldWatcher = scope.$watch(function() {\n          return formController[fieldName];\n        }, function(newValue) {\n          if (newValue) {\n            fieldWatcher(); // Cancel the watcher\n\n            // Do the actual thing you planned to do...\n            for (var item in textErrors) {\n              if (textErrors.hasOwnProperty(item)) {\n                toggleErrorVisibilityForTextError(errorController, formController, formController[fieldName], scope, element, textErrors[item], fieldLabel);\n              }\n            }\n          }\n        });\n      }\n\n      element.removeAttr('error-container').removeAttr('field-name').removeAttr('field-errors').removeAttr('text-errors');\n    }\n  };\n}]);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/errorMessageContainer/ErrorMessageContainer.js\n **/","import angular from 'angular';\nimport FieldErrorController from './FieldErrorController';\nimport FormControlService from './FormControlService';\nimport RequiredMarker from '../requiredMarker/RequiredMarker';\n\nconst mod = angular.module('ngFormLib.controls.common', [\n  FieldErrorController,\n  FormControlService,\n  RequiredMarker\n]);\n\nexport default mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/common/index.js\n **/","import angular from 'angular';\nimport Utility from '../../../common/Utility';\n\nconst mod = angular.module('ngFormLib.controls.common.formControlService', [Utility]);\n\nexport default mod.name;\n\n// Workaround for bug #1404\n// https://github.com/angular/angular.js/issues/1404\n// Source: http://plnkr.co/edit/hSMzWC?p=preview\n// Not so great for IE8, but necessary for using radio buttons inside of dynamic forms (ng-repeat)\nmod.config(['$provide', function($provide) {\n  $provide.decorator('ngModelDirective', ['$delegate', function($delegate) {\n    var ngModel = $delegate[0], controller = ngModel.controller;\n    ngModel.controller = ['$scope', '$element', '$attrs', '$injector', function(scope, element, attrs, $injector) {\n      var $interpolate = $injector.get('$interpolate');\n      attrs.$set('name', $interpolate(attrs.name || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs\n      });\n    }];\n    return $delegate;\n  }]);\n  $provide.decorator('formDirective', ['$delegate', function($delegate) {\n    var form = $delegate[0], controller = form.controller;\n    form.controller = ['$scope', '$element', '$attrs', '$injector', function(scope, element, attrs, $injector) {\n      var $interpolate = $injector.get('$interpolate');\n      attrs.$set('name', $interpolate(attrs.name || attrs.ngForm || '')(scope));\n      $injector.invoke(controller, this, {\n        '$scope': scope,\n        '$element': element,\n        '$attrs': attrs\n      });\n    }];\n    return $delegate;\n  }]);\n}]);\n\n\n// Shared code for the accessible controls\nmod.provider('formControlService', function() {\n  var self = this,\n      counter = 0;    // Private variable\n\n  //\n  self.defaults = {\n    idPrefix: 'fpFld',\n    templates: {\n      formCheckbox: {\n        template:           'ngFormLib/template/formCheckbox.html'\n      },\n      formDate: {\n        template:           'ngFormLib/template/formDate.html'\n      },\n      formInput: {\n        template:           'ngFormLib/template/formInput.html'\n      },\n      formRadioButton: {\n        template:           'ngFormLib/template/formRadioButton.html'\n      },\n      formSelect: {\n        template:           'ngFormLib/template/formSelect.html'\n      },\n      requiredMarker: {\n        template:           'ngFormLib/template/requiredMarker.html'\n      }\n    }\n  };\n\n  this.$get = ['ngFormLibStringUtil', '$injector', function(StringUtil, $injector) {\n    let translator;\n    try {\n      translator = $injector.get('$translate').instant;\n    } catch (e) {\n      translator = angular.identity;\n    }\n\n\n    let service = {\n      defaults: self.defaults,\n\n      buildDirective: function(params) {\n        var directive = {\n          restrict: 'AE',\n          replace: true,\n          transclude: true,\n          compile: function(tElement, tAttr) {\n\n            service.validateComponentStructure(params.controlName, tElement, params.expectedTemplateElements, tAttr, params.expectedAttributes);\n\n            // For items that are inside repeaters, if more than one element has the same id, the checkbox stops working.\n            // By using an attribute that is not called 'id', we can avoid this issue\n            var id = tAttr.uid || service.getUniqueFieldId(),\n              name = tAttr.name || id,// Doing this *will* break radio buttons, but they SHOULD provide a name anyway (for their own good)\n              inputElem = tElement.find(params.inputElementName || 'input'),\n              labelElem = tElement.find('label'),\n              required = service.getRequiredAttribute(tAttr.required);\n\n            service.decorateLabel(labelElem, required, id, tAttr.labelClass, tAttr.hideLabel, tAttr.hideRequiredIndicator, tAttr.labelSuffix);\n            inputElem = service.decorateInputField(inputElem, tElement, tAttr, id, name, required);\n\n            // Do component-specific config last\n            params.configFn(tElement, tAttr, id, name, inputElem, labelElem);\n\n            // Clean up special attributes (to make HTML look nicer)\n            tElement.removeAttr('uid').removeAttr('name').removeAttr('label').removeAttr('required').removeAttr('field-hint')\n              .removeAttr('input-type').removeAttr('hide-label').removeAttr('hideRequiredIndicator')\n              .removeAttr('label-class').removeAttr('field-errors').removeAttr('text-errors');\n          },\n          templateUrl: function(element, attr) {\n            // Check the element for a \"template\" attribute, which allows customisation-per-control. Otherwise, use the control-wide template.\n            return attr.template || service.getHTMLTemplate(element, params.controlName);\n          }\n        };\n\n        return directive;\n      },\n\n      getUniqueFieldId: function() {\n        return '' + self.defaults.idPrefix + counter++;\n      },\n\n      getHTMLTemplate: function(element, type) {\n        // Allow different templates to be applied for different form-styles (eg for horizontal forms, inline forms, \"normal\" forms).\n        // This is an advanced feature that most users will not need.\n        // E.g.: self.defaults.templates['select']['form-inline'] = 'path/to/your/custom/template.html'\n\n        // Check this element's parent-form-element-classes to see if they match. First match, wins.\n        var parentFormClasses = (element.inheritedData('formElementClasses') || '').split(' ');\n        var result = self.defaults.templates[type].template;  // The default template, if nothing else is specified.\n\n        for (var i = 0; i < parentFormClasses.length; i++) {\n          var template = self.defaults.templates[type][parentFormClasses[i]];\n          if (template) {\n            result = template;\n            break;\n          }\n        }\n\n        return result;\n      },\n\n      addToAttribute: function(element, attributeName, value) {\n        var existingVal = element.attr(attributeName);\n        element.attr(attributeName, ((existingVal) ? existingVal + ' ' : '') + value);\n      },\n\n\n      removeFromAttribute: function(element, attributeName, value) {\n        // Borrowed this statement from Angular.js\n        var newValue = StringUtil.trim(\n          (' ' + (element.attr(attributeName) || '') + ' ')\n          .replace(/[\\n\\t]/g, ' ')\n          .replace(' ' + StringUtil.trim(value) + ' ', ' ')\n        );\n\n        // Remove the attribute if it is empty\n        if (newValue === '') {\n          element.removeAttr(attributeName);\n        } else {\n          element.attr(attributeName, newValue);\n        }\n      },\n\n\n      getRequiredAttribute: function(required) {\n        // When we set required=\"true\" on a parent directive (like on-off-button), inputElem.attr('required', 'true')\n        // becomes <input required=\"required\" due to browser interference. So detect this case, and replace it with \"true\"\n        // In v1.3, required=\"true\" becomes required=\"\".\n        if (required === 'required' || required === '' || required === 'true') {\n          return 'true';\n        } else if (required === undefined) {\n          return 'false';\n        }\n        return required;\n      },\n\n      addLabelText: function(labelElem, labelText) {\n        labelElem.prepend(service.translate(labelText));\n      },\n\n      addInputGroup: function(inputElem, inputGroupPrefix, inputGroupSuffix) {\n        if (inputGroupPrefix || inputGroupSuffix) {\n          inputElem.wrap('<div class=\"input-group\">');//inputElem.parent(); // This should be the 'control-row' element//wrap('<div class=\"input-group\">');\n          var wrapper = inputElem.parent();\n\n          if (inputGroupPrefix) {\n            wrapper.prepend('<span class=\"input-group-addon\">' + inputGroupPrefix + '</span>');\n          }\n          if (inputGroupSuffix) {\n            wrapper.append('<span class=\"input-group-addon\">' + inputGroupSuffix + '</span>');\n          }\n          return true;\n        }\n        return false;\n      },\n\n      decorateLabel: function(labelElem, required, id, labelClass, hideLabelExpr, hideRequiredIndicator, labelSuffix) {\n        if (id) {\n          labelElem.attr('for', id);\n        }\n        if (labelClass) {\n          labelElem.addClass(labelClass);\n        }\n        if (hideLabelExpr) {\n          labelElem.attr('ng-class', '{\\'sr-only\\': ' + hideLabelExpr + '}');\n        }\n        if (!hideRequiredIndicator) {\n          labelElem.append('<span required-marker hide=\"!(' + required + ')\"></span>');\n        }\n        // Some labels have suffix text - text that helps with describing the label, but isn't really the label text.\n        // E.g. Amount ($AUD)\n        if (labelSuffix) {\n          labelElem.text(labelElem.text() + ' ' + service.translate(labelSuffix));\n        }\n      },\n\n\n\n      decorateInputField: function(inputElem, hostElement, attr, id, name, required) {\n        if (attr.inputType) {\n          // inputElem.attr('type', attr.inputType); // THIS WILL NOT WORK ON IE8!\n          // Instead, we must replace the entire node with the only property which SHOULD exist on the template: 'class'\n          inputElem.replaceWith('<input type=\"' + attr.inputType + '\" class=\"' + inputElem.attr('class') + '\">');\n          inputElem = hostElement.find('input');\n        }\n\n        inputElem.attr('id', id);\n\n        // Allow the name to be interpolated\n        inputElem.attr('name', name);\n\n        // Apply all of the ff-* attributes to the input element. Use the original attribute names\n        // attr.$attr contains the snake-case names e.g. 'form-field' vs camel case 'formField'\n        for (var a in attr.$attr) {\n          if (a.indexOf('ff') === 0) {    // Don't search for 'ff-' as the '-' has been replaced with camel case now\n            var origAttrName = attr.$attr[a].substr(3);\n\n            if (origAttrName === 'class') {\n              inputElem.addClass(attr[a]);\n\n            // Special case for type property. It *must* be read-only. Therefore, don't write it to the element\n            // See http://stackoverflow.com/questions/8378563/why-cant-i-change-the-type-of-an-input-element-to-submit\n            } else if (origAttrName !== 'type') {\n              inputElem.attr(origAttrName, attr[a]);\n            }\n\n            // Remove all attributes off the host element\n            hostElement.removeAttr(attr.$attr[a]);\n          }\n        }\n\n        inputElem.attr('ng-required', required);\n        inputElem.attr('aria-required', '{{!!(' + required + ')}}');  // evaluates to true / false\n        return inputElem;\n      },\n\n\n      createErrorFeatures: function(parentElement, inputElement, name, fieldLabel, fieldErrors, textErrors) {\n        if (fieldErrors || textErrors) {\n          // Add an fieldErrorControllers attribute to the element, to hook-up the error features\n          inputElement.attr('field-error-controller', '');\n\n          var fieldLabelStr = (fieldLabel) ? ' field-label=\"' + fieldLabel + '\"' : '';\n          var errorContainerElem = angular.element('<div error-container field-name=\"' + name + '\"' + fieldLabelStr + '></div>');\n          if (fieldErrors) {\n            errorContainerElem.attr('field-errors', fieldErrors);\n          }\n          if (textErrors) {\n            errorContainerElem.attr('text-errors', textErrors);\n          }\n          parentElement.append(errorContainerElem);\n        }\n      },\n\n      createFieldHint: function(hostElement, inputElement, fieldHint, fieldHintId, fieldHintDisplay) {\n        var hintElement;\n\n        if (fieldHint) {\n          let hintText = service.translate(fieldHint);\n          // If we have a field hint, add that as well\n          if (fieldHintDisplay) {\n            // If a field hint display rule exists, implement.\n            hintElement = angular.element('<p ng-if=\"' + fieldHintDisplay + '\" class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          } else {\n            hintElement = angular.element('<p class=\"help-block\" id=\"' + fieldHintId + '\">' + hintText + '</p>');\n          }\n          hostElement.append(hintElement);\n          inputElement.attr('aria-describedby', fieldHintId);\n        }\n      },\n\n      buildNgClassExpression: function(inputElem, targetElem) {\n        // If the inputElem has an ngModel and/or ngChecked attribute, create the ng-class attribute\n        //todo.. test checkbox implementation\n        var modelStr = inputElem.attr('ng-model'),\n            checkedStr = inputElem.attr('ng-checked'),\n            disabledStr = inputElem.attr('ng-disabled'),\n            value = inputElem.attr('value'),        // a string - used for Radio buttons\n            ngValue = inputElem.attr('ng-value'),   // an expression - used for Radio buttons\n            ngTrueValue = inputElem.attr('ng-true-value');\n\n        if (modelStr) {\n          if (ngValue || ngTrueValue) {\n            modelStr += ' === ' + (ngValue || ngTrueValue);\n          } else if (value) {\n            // The value is ALWAYS a string\n            modelStr += ' === \\'' + value + '\\'';\n          } else {\n            modelStr += ' === true';  // For checkboxes, in the absence of ng-true-value\n          }\n        }\n\n        if (modelStr && checkedStr) {\n          modelStr += ' || ' + checkedStr;\n        } else if (checkedStr) {\n          modelStr = checkedStr;\n        }\n\n        if (modelStr && disabledStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + ', \\'disabled\\': ' + disabledStr + '}');\n        } else if (modelStr) {\n          targetElem.attr('ng-class', '{\\'checked\\': ' + modelStr + '}');\n        }\n      },\n\n      translate: (str, interpolatedParams) => translator(str || '', interpolatedParams),\n\n      validateComponentStructure: function(componentName, element, requiredElements, attr, requiredAttributes) {\n        for (var i = 0; i < requiredElements.length; i++) {\n          if (!element.find(requiredElements[i])) {\n            throw new Error('The ' + componentName + ' component template requires a ' + requiredElements[i] + ' element.');\n          }\n        }\n\n        for (var j = 0; j < requiredAttributes.length; j++) {\n          if (!attr[requiredAttributes[j]]) {\n            throw new Error('The ' + componentName + ' component requires a ' + requiredAttributes[j] + ' attribute.');\n          }\n        }\n      }\n\n    };\n    return service;\n  }];\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/common/FormControlService.js\n **/","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.common.utility', []);\n\nexport default mod.name;\n\nmod.constant('ngFormLibDateUtil', {\n  convertDate: function(dateStr, newSep) {\n    // Converts a date between dd/mm/yyyy and yyyy-mm-dd\n    if (!dateStr || !newSep || !(newSep === '/' || newSep === '-')) {\n      return dateStr;\n    }\n\n    // Choose a separator string that is the 'opposite' of the desired separator\n    var oldSep = (newSep === '/') ? '-' : '/',\n      parts = dateStr.split(oldSep);\n\n    // if we get a dodgy date OR you tried to convert a date that was already in the correct format, return the input\n    if (isNaN(parts.join('')) || parts.length !== 3) {\n      return dateStr;\n    }\n\n    // Swap the year and day parts around\n    return parts[2] + newSep + parts[1] + newSep + parts[0];\n  },\n  formatDay: function(dayOrDate, month, year) {\n    var dd = dayOrDate, mm = month, yyyy = year;\n    if (dayOrDate.getUTCDay) {\n      dd = dayOrDate.getDate();\n      mm = dayOrDate.getMonth() + 1;//January is 0!`\n      yyyy = dayOrDate.getFullYear();\n    }\n    return ((dd < 10) ? '0' + dd : dd) + '/' + ((mm < 10) ? '0' + mm : mm) + '/' + yyyy;\n  },\n  dateAdd: function(dateStr, numDays) {\n    // Return a modified date in ISO format\n    var myDate = this.getDate(dateStr);\n    myDate.setDate(myDate.getDate() + numDays);\n\n    return this.formatDay(myDate);\n  },\n  getToday: function(optionalDate) {\n    return this.formatDay(optionalDate || new Date());\n  },\n  isISODate: function(dateStr) {\n    return (typeof dateStr === 'string' && dateStr.indexOf('-') > 0);\n  },\n  getDate: function(dateStr) {\n    if (!this.isISODate(dateStr)) {\n      dateStr = this.convertDate(dateStr, '-');\n    }\n    return new Date(dateStr);\n  },\n  monthsBetween: function(date1, date2) {\n    return date2.getMonth() - date1.getMonth() + (12 * (date2.getFullYear() - date1.getFullYear()));\n  }\n});\n\n\nmod.constant('ngFormLibStringUtil', (function() {\n  var trimRegExp = /^\\s+|\\s+$/g;\n\n  return {\n    trim: function(text) {\n      if (typeof text === 'string') {\n        return text.replace(trimRegExp, '');\n      }\n      return text;\n    }\n  };\n})());\n\n\nmod.constant('ngFormLibNumberUtil', (function() {\n  var isDigitsRegExp = /^\\d+$/;\n\n  return {\n    isDigits: function(text) {\n      return isDigitsRegExp.test(text);\n    }\n  };\n})());\n\n\nmod.constant('ngFormLibObjectUtil', {\n  getUniqueId: function() {\n    return ('' + (new Date()).getTime() + Math.random()).replace(/\\./, '');\n  },\n  toArray: function(obj) {\n    var arr = [];\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        arr[arr.length] = {key: i, value: obj[i]};\n      }\n    }\n    arr.sort(function compare(a, b) {\n      return a.key < b.key;\n    });\n    return arr;\n  }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/common/Utility.js\n **/","import angular from 'angular';\nimport FormControlService from './FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.common.fieldErrorController', [\n  FormControlService\n]);\n\nexport default mod.name;\n\n/**\n * The Field Error Controller directive is designed to indicate to the browser when the field is in error\n *  and what the errors are. It applies the form-policy for showing errors\n *\n * It works in tandem with the form controller (and FormPolicy.js) to identify when a form-element has an error, and decorates\n *  the element accordingly.\n *\n * It also toggles the fieldController.fieldState flag, based on the form policy provided\n *\n */\n\n// INPUT:\n//  <input ... field-error-controller></input>\n\n// OUTPUT:\n//  <input ... aria-invalid=\"false/true\" aria-describedby=\"fieldId-errors\">\n\n\nmod.directive('fieldErrorController', ['formControlService', '$timeout', function(formControlService, $timeout) {\n\n  function updateAriaFeatures(fieldState, element, formName, fieldName) {\n    element.attr('aria-invalid', fieldState === 'error');\n    var errorElemId = formName + '-' + fieldName + '-errors-aria';\n\n    if (fieldState === 'error') {\n      // Use the errorContainer's special ARIA element as the source of the error text\n      formControlService.addToAttribute(element, 'aria-describedby', errorElemId);\n    } else {\n      formControlService.removeFromAttribute(element, 'aria-describedby', errorElemId);\n    }\n  }\n\n  function updateElementStyle(fieldState, element, formPolicy) {\n    element[(fieldState === 'error') ? 'addClass' : 'removeClass'](formPolicy.fieldErrorClass);\n    element[(fieldState === 'success') ? 'addClass' : 'removeClass'](formPolicy.fieldSuccessClass);\n  }\n\n  function setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name) {\n    // Using the form policy, determine when to show errors for this field\n    var formPolicy = formController._policy,\n      formName = formController.$name,\n      fieldName = formName + '.' + name,\n      stateConditions = formPolicy.stateDefinitions(formName, fieldName);\n\n    formPolicy.checkForStateChanges(formController._scope, element, name, stateConditions, ngModelController, formController);\n  }\n\n\n  return {\n    restrict: 'AE',\n    require: ['?ngModel', '?^form', '?^formGroup'],  // Require the formController controller somewhere in the parent hierarchy\n    replace: true,\n    link: function(scope, element, attr, controllers) {\n      // Tried to use a template string, but the model was not binding properly. Using $compile() works :)\n      var ngModelController = controllers[0],\n        formController = controllers[1],\n        formGroupElement = (controllers[2] || {}).$element || element,// This looks for a parent directive called formGroup, which has a controller, which has an $element property\n        name = attr.name;\n\n\n      if (formController) {\n        var formName = formController.$name,\n          errorBehaviour = formController._applyFormBehaviourOnStateChangePolicy; // returns a function which encapsulates the form policy rules for the behaviour to apply when errors show\n\n        if (ngModelController) {\n          setupCanShowErrorPropertyOnNgModelController(scope, formController, ngModelController, element, name);\n        }\n\n        // When the error-showing flag changes, update the field style\n        formController._scope.$watch(formName + '.' + name + '.fieldState', function(fieldState) {\n          updateAriaFeatures(fieldState, element, formName, name);\n          updateElementStyle(fieldState, formGroupElement, formController._policy);\n\n          // Apply the error behaviour behaviour\n          errorBehaviour.applyBehaviour(element, fieldState, false);\n        });\n\n        // Listen to form-submit events, to determine what to focus on too\n        scope.$on('event:FormSubmitAttempted', function() {\n          // Make sure that the field-level watchers have a chance to fire first, so use a timeout\n          $timeout(function() {\n            errorBehaviour.applyBehaviour(element, ngModelController.fieldState, true);\n          }, 1);\n        });\n      }\n    }\n  };\n}]);\n\n\n// This directive wraps all of the form elements and binds the universe together.\n// It MUST be used as a class as the form focus behaviour references '.form-control .ng-invalid' when finding controls to focus\nmod.directive('formGroup', [function() {\n  return {\n    restrict: 'C',\n    controller: ['$scope', '$element', function($scope, $element) {\n      this.$element = $element;\n    }]\n  };\n}]);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/common/FieldErrorController.js\n **/","import angular from 'angular';\nimport FormLibCommon from '../common/index';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formCheckbox', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-checkbox id=\"id\" name=\"name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" ff-ng-model=\"application.contentType\" ff-value=\"software\" ff-aria-label=\"Software\"\n//        ff-ng-click=\"doSomething()\"\n//      field-errors=\"{required: 'Please select'}\"\n//      text-errors=\"['wrong value']\"\n//      >My label with <a href=\"http://www.google.com/\">HTML bits</a> in it</form-checkbox>\n\n// OUTPUT:\n\n\nmod.directive('formCheckbox', ['formControlService', function(formControlService) {\n\n  return formControlService.buildDirective({\n    controlName: 'formCheckbox',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [],\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      // Move the class attribute from the outer-DIV to the checkbox DIV (special case)\n      var checkboxDiv = tElement.find('div');\n      checkboxDiv.addClass(tElement.attr('class'));\n      tElement.removeAttr('class');\n\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    }\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formCheckbox.html', require('./template/FormCheckboxTemplate.html'));\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formCheckbox/FormCheckbox.js\n **/","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\n\nconst mod = angular.module('ngFormLib.controls.formDate', [\n  FormLibCommon,\n  ErrorMessageContainer,\n  //'mgcrea.ngStrap.datepicker'   We are using this, but if it is not loaded, we can still offer basic functionality\n]);\n\nexport default mod.name;\n\n// INPUT:\n//    <div form-date id=\"toDate\" name=\"toDate\" label=\"To date\" hide-label=\"true\"\n//    ff-ng-model=\"acctCtrl.search.toDate\" ff-max-date=\"today\" ff-bs-show=\"acctCtrl.datePickers.datePickerTo\"\n//    ff-ng-blur=\"acctCtrl.toggleDatePicker('datePickerTo', true)\"\n//    ff-ng-focus=\"acctCtrl.toggleDatePicker('datePickerFrom', true)\"\n//    ff-class=\"form-control input-beta input-date\"\n//    field-errors=\"{date: 'ERROR.DATE_INVALID'}\" >\n//      <i class=\"calendar\" ng-click=\"acctCtrl.toggleDatePicker('datePickerTo')\"></i>\n//    </div>\n\n\nmod.directive('formDate', ['formControlService', function(formControlService) {\n\n  return formControlService.buildDirective({\n    controlName: 'formDate',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use 'input-addon-prefix' or 'input-addon-suffix', change the DOM\n      var hasInputGroup = formControlService.addInputGroup(inputElem, tAttr.inputPrefix, tAttr.inputSuffix);\n      var parentElemForErrors = (hasInputGroup) ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    }\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formDate.html', require('./template/FormDateInputTemplate.html'));\n  try {\n    $templateCache.put('datepicker/datepicker.tpl.html', require('angular-strap/src/datepicker/datepicker.tpl.html'));\n  } catch (err) {\n    console.debug('angular-strap/src/datepicker/datepicker.tpl.html is not available for the formDate control');\n  }\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\nmod.directive('formDateFormat', ['ngFormLibDateUtil', function(DateUtil) {\n  // All dates greater than AD 0 and less than AD 10000 in dd/mm/yyyy format\n  // RegEx behaves oddly if /g is uses in Regexp.test() situations\n  var dateRegEx = /^(((0[1-9]|[12][0-9]|3[01])([\\/])(0[13578]|10|12)([\\/])(\\d{4}))|(([0][1-9]|[12][0-9]|30)([\\/])(0[469]|11)([\\/])(\\d{4}))|((0[1-9]|1[0-9]|2[0-8])([\\/])(02)([\\/])(\\d{4}))|((29)(\\/)(02)([\\/])([02468][048]00))|((29)([\\/])(02)([\\/])([13579][26]00))|((29)([\\/])(02)([\\/])([0-9][0-9][0][48]))|((29)([\\/])(02)([\\/])([0-9][0-9][2468][048]))|((29)([\\/])(02)([\\/])([0-9][0-9][13579][26])))$/;\n\n  return {\n    require: 'ngModel',\n    priority: 150,    // Higher priority than ui-mask (100), so the postLink function runs last\n    link: function(scope, elem, attrs, ctrl) {\n\n      function resetValidators() {\n        ctrl.$setValidity('dateFormat', true);\n        ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n        ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n      }\n\n      ctrl.$parsers.unshift(function(viewValue) {\n\n        // If viewValue or modelValue is undefined or null, jump out\n        if (!viewValue) {\n          resetValidators();\n          return viewValue;\n        }\n\n        if (viewValue.getTime) {\n          // Convert the date value to a date string\n          viewValue = DateUtil.formatDay(viewValue);\n        }\n\n        // If viewValue is a string of 8 digits, then convert it to dd/dd/dddd first\n        if (viewValue.length === 8 && !isNaN(viewValue * 1)) {\n          viewValue = viewValue.substr(0, 2) + '/' + viewValue.substr(2, 2) + '/' + viewValue.substr(4);\n        }\n\n        // Check that it is a valid date\n        var dateFormatValid = dateRegEx.test(viewValue) || typeof viewValue === 'undefined' || !viewValue;\n        ctrl.$setValidity('dateFormat', dateFormatValid);\n\n        //console.log('dateInput: ' + viewValue + ', ' + ctrl.$modelValue);\n\n        // If the date is valid\n        if (dateFormatValid && viewValue) {\n          var fieldDate = DateUtil.getDate(viewValue);\n          // and there is a min date, check if the value is greater than the min date\n          if (attrs.minDate) {\n            var minDate = DateUtil.getDate(attrs.minDate);\n            ctrl.$setValidity('minDate', fieldDate.getTime() >= minDate.getTime());\n          } else {\n            ctrl.$setValidity('minDate', true);\n          }\n          // and there is a max date, check if the value is less than the max date\n          if (attrs.maxDate) {\n            var maxDate;\n\n            if (attrs.maxDate === 'today') {\n              maxDate = DateUtil.getDate(DateUtil.getToday());\n            } else {\n              maxDate = DateUtil.getDate(attrs.maxDate);\n            }\n\n            ctrl.$setValidity('maxDate', fieldDate.getTime() <= maxDate.getTime());\n          } else {\n            ctrl.$setValidity('maxDate', true);\n          }\n        } else {\n          ctrl.$setValidity('minDate', true);  // Turn off the error if the date format isn't valid\n          ctrl.$setValidity('maxDate', true);  // Turn off the error if the date format isn't valid\n        }\n        return viewValue;\n      });\n\n      ctrl.$viewChangeListeners.push(function() {\n        // If there is a date-change attribute, execute it when the control is valid\n        if (attrs.dateChange && ctrl.$valid) {\n          scope.$eval(attrs.dateChange);\n        }\n      });\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formDate/FormDate.js\n **/","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formInput', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-input id=\"\" name=\"\" label=\"Last name\" required=\"{{expression}}\"\n//      ff-class=\"span12\" input-type=\"text|tel|email\" ff-ng-model=\"application.lastName\"\n//      ff-maxlength=\"40\" ff-ng-pattern=\"/^[a-zA-Z0-9 \\-.']+$/\"\n//      field-hint=\"This must be the last name of the person who originally applied for the service.\"\n//      field-errors=\"{required: 'Please enter a valid last name', pattern: 'Please enter a valid last name'}\"\n//      text-errors=\"['data.errors.']\"\n//      content-class=\"span3\"\n//      >My content</form-input>\n\n// OUTPUT:\n\n\nmod.directive('formInput', ['formControlService', function(formControlService) {\n\n  return formControlService.buildDirective({\n    controlName: 'formInput',\n    expectedTemplateElements: ['input', 'label'],\n    expectedAttributes: ['label', 'inputType'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, formControlService.translate(tAttr.placeholder)); // Do this to be API-compatible with the form-select control. ff-placeholder is still supported. Use one or the other.\n\n      // If the user wants to use 'input-addon-prefix' or 'input-addon-suffix', change the DOM\n      var hasInputGroup = formControlService.addInputGroup(inputElem, tAttr.inputPrefix, tAttr.inputSuffix);\n      var parentElemForErrors = (hasInputGroup) ? inputElem.parent().parent() : inputElem.parent();\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(parentElemForErrors, inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    }\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formInput.html', require('./template/FormInputTemplate.html'));\n}]);\n\n\nfunction addPlaceholder(inputElem, placeholderText) {\n  if (placeholderText) {\n    inputElem.attr('placeholder', placeholderText);\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formInput/FormInput.js\n **/","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formRadioButton', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n\n// INPUT:\n//  <form-radio-button uid=\"fld\" name=\"name\" aria-label=\"Book Type\" label-class=\"btn btn-toggle\"\n//    ff-class=\"someCSS\" ff-ng-model=\"application.bookType\" ff-value=\"Fiction\" ng-click=\"loadFiction()\" class=\"span6\">\n//     <icon class=\"icon-fiction\"></icon>Fiction\n//  </form-radio-button>\n\n// OUTPUT:\n\nmod.directive('formRadioButton', ['formControlService', function(formControlService) {\n\n  return formControlService.buildDirective({\n    controlName: 'formRadioButton',\n    expectedTemplateElements: ['input', 'label', 'div'],\n    expectedAttributes: [], // The template should NOT have a form-group element inside it, as this has to be specified externally (due to the group-nature of radio buttons)\n    configFn: function(tElement, tAttr, id, name, inputElem) {\n      // Move the class attribute from the outer-DIV to the radio-button DIV (special case)\n      var rbDiv = tElement.find('div');\n      rbDiv.addClass(tElement.attr('class'));\n      tElement.removeAttr('class');\n\n      formControlService.createErrorFeatures(tElement, inputElem, name, '', tAttr.fieldErrors, tAttr.textErrors);\n      formControlService.buildNgClassExpression(inputElem, inputElem);  // Put the ng-class onto the input element itself, as this makes styling easier\n    }\n  });\n}]);\n\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formRadioButton.html', require('./template/FormRadioButtonTemplate.html'));\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formRadioButton/FormRadioButton.js\n **/","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formReset', []);\n\nexport default mod.name;\n\n\nmod.directive('formReset', ['$parse', function($parse) {\n\n  function resetFieldState(controlMap) {\n    // Loops through the controlMap and reset's each field's state\n    for (var item in controlMap) {\n      if (controlMap.hasOwnProperty(item)) {\n        var controlList = controlMap[item];\n        for (var j = 0, jLen = controlList.length; j < jLen; j++) {\n          var control = controlList[j].controller;\n          control.fieldState = '';\n        }\n      }\n    }\n  }\n\n\n  return {\n    restrict: 'A',\n    require: '^form',\n    link: function(scope, element, attr, controller) {\n      var ngModelGet = $parse(attr.formReset),\n          ngModelSet = ngModelGet.assign;\n\n      if (!ngModelSet) {\n        throw Error('formReset requires an assignable scope-expression. \"' + attr.formReset + '\" is un-assignable.');\n      }\n\n      // Get a copy of the data as soon as the directive is created, which is after the scope/controller has been initialised (safe)\n      var originalData = angular.copy(ngModelGet(scope));\n\n      element.on('click', function() {\n        if (typeof controller.setSubmitted === 'function') {\n          controller.setSubmitted(false);\n        }\n        // Use a *copy* of the original data, as we don't want originalData to be modified by subsequent changes to the model by the form controls\n        ngModelSet(scope, angular.copy(originalData));\n        resetFieldState(controller._controls || {});\n        controller.$setPristine();\n\n        scope.$emit('event:FormReset');\n        scope.$digest();\n      });\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formReset/FormReset.js\n **/","import angular from 'angular';\nimport FormLibCommon from '../common';\nimport ErrorMessageContainer from '../errorMessageContainer/ErrorMessageContainer';\n\nconst mod = angular.module('ngFormLib.controls.formSelect', [FormLibCommon, ErrorMessageContainer]);\n\nexport default mod.name;\n\n// INPUT:\n//  <form-select id=\"frm-size\" name=\"bookSize\" required=\"true\" label=\"Approximate size\"\n//    ff-class=\"span12\" ff-ng-model=\"model.size\" placeholder=\"Select a size bracket\"\n//    ff-ng-options=\"option.value as option.name for option in refData.bookSizes\"\n//    field-errors=\"{required: 'Please select a size bracket'}\"\n//    text-errors=\"['data.errors']\"></form-select>\n\n// OUTPUT:\n\n\n\nmod.directive('formSelect', ['formControlService', function(formControlService) {\n\n  function addPlaceholder(selectElem, placeholderText) {\n    if (placeholderText) {\n      selectElem.append('<option translate value=\"\">' + placeholderText + '</option>');\n    }\n  }\n\n  return formControlService.buildDirective({\n    controlName: 'formSelect',\n    inputElementName: 'select',\n    expectedTemplateElements: ['select', 'label'],\n    expectedAttributes: ['label'],\n    configFn: function(tElement, tAttr, id, name, inputElem, labelElem) {\n      formControlService.addLabelText(labelElem, tAttr.label);\n      addPlaceholder(inputElem, tAttr.placeholder);  // Adds the extra option element to the start of the <option>\n\n      formControlService.createFieldHint(tElement, inputElem, tAttr.fieldHint, id + '-hint', tAttr.fieldHintDisplay);\n      formControlService.createErrorFeatures(inputElem.parent(), inputElem, name, tAttr.label, tAttr.fieldErrors, tAttr.textErrors);\n    }\n  });\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/formSelect.html', require('./template/FormSelectTemplate.html'));\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formSelect/FormSelect.js\n **/","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.controls.formSubmit', []);\n\nexport default mod.name;\n\n\n/**\n *  formSubmit - Executes an expression when the form is valid (essentially a form.submit() handler).\n *\n *  It can be applied to either the form element or to a button.\n *\n */\nmod.directive('formSubmit', ['$parse', function($parse) {\n  return {\n    restrict: 'A',\n    require: ['^form'],   // Get the form controller\n    link: function(scope, element, attr, controller) {\n\n      var fn = $parse(attr.formSubmit) || angular.noop,\n        isForm = element[0].tagName === 'FORM',\n        formController = controller[0];\n\n      element.bind(isForm ? 'submit' : 'click', function(event) {\n\n        formController.setSubmitted(true);\n\n        scope.$apply(function() {\n          //scope.$emit('event:FormSubmitAttempted');\n\n          if (formController.$valid) {\n            if (fn(scope, {$event: event}) !== false) {\n              // Needed by the tracking tool as it clears the input data after a submission.\n              // Potentially, form field validation to be done here, but unnecessary at the moment.\n              // The reset behaviour can be over-ridden by returning false from the called function(maybe prevent default aswell?)\n              formController.setSubmitted(false);\n              formController.$setPristine();\n            }\n\n          } else {\n            event.preventDefault();\n          }\n        });\n      });\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/formSubmit/FormSubmit.js\n **/","import angular from 'angular';\nimport ErrorMessageContainer from './errorMessageContainer/ErrorMessageContainer';\nimport FormCheckbox from './formCheckbox/FormCheckbox';\nimport FormDate from './formDate/FormDate';\nimport FormInput from './formInput/FormInput';\nimport FormRadioButton from './formRadioButton/FormRadioButton';\nimport FormReset from './formReset/FormReset';\nimport FormSelect from './formSelect/FormSelect';\nimport FormSubmit from './formSubmit/FormSubmit';\n\n  // We need the utility module for the ngFormLibDateUtil.getDate() method for the formDateFormat directive, and ngFormLibStringUtil.trim() in controls.common\nconst mod = angular.module('ngFormLib.controls', [\n  ErrorMessageContainer,\n  FormCheckbox,\n  FormDate,\n  FormInput,\n  FormRadioButton,\n  FormReset,\n  FormSelect,\n  FormSubmit\n]);\n\nexport default mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/index.js\n **/","import angular from 'angular';\nimport FormControlService from '../common/FormControlService';\n\nconst mod = angular.module('ngFormLib.controls.requiredMarker', [FormControlService]);\n\nexport default mod.name;\n\n\n// Add a simple \"required\" marker that is not read-out by screen readers (as the field should also have a required indicator)\n//\n// INPUT:\n//  <span required-marker></span>\n//  <span required-marker hide=\"isNotRequired\">Some Text</span>\n\n// OUTPUT:\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\"></span>\n//  <span class=\"required\" aria-hidden=\"true\" ng-class=\"{\\'ng-hide\\': hide}\" ng-transclude=\"\" hide=\"isNotRequired\">Some Text</span>\n\nmod.directive('requiredMarker', ['formControlService', function(formControlService) {\n\n  return {\n    restrict: 'AE',\n    replace: true,\n    transclude: true,\n    templateUrl: function(element, attr) {\n      return attr.template || formControlService.getHTMLTemplate(element, 'requiredMarker');\n    },\n    scope: {\n      hide: '='\n    }\n  };\n}]);\n\n// Populate the template cache with the default template\nmod.run(['$templateCache', ($templateCache) => {\n  $templateCache.put('ngFormLib/template/requiredMarker.html', require('./template/RequiredMarkerTemplate.html'));\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/controls/requiredMarker/RequiredMarker.js\n **/","import angular from 'angular';\nimport FormPolicy from './policy/FormPolicy';\nimport FormControls from './controls';\n\n// Don't include this in the angular module, only export it here for convenience\nimport policyDefaults from './policy/defaultPolicies';\n\nconst mod = angular.module('ngFormLib', [\n  FormPolicy,\n  FormControls\n]);\n\n// The library, and the default policies\nexport default {\n  ngFormLib: mod.name,\n  defaultPolicies: policyDefaults\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/index.js\n **/","import angular from 'angular';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy', []);\n\nexport default mod.name;\n\n\n// This is a configurable service\n// It should contain the _default_ values for form policies\n\nmod.provider('formPolicyService', function() {\n  var self = this,\n    noop = angular.noop,\n    nullBehaviourOnStateChange = function() {\n      return {\n        applyBehaviour: noop,\n        resetBehaviour: noop\n      };\n    },\n    nullStateChanges = function() {\n      return {};\n    };\n\n  self.defaults = {\n    formSubmitAttemptedClass: 'form-submit-attempted',\n    fieldErrorClass: 'has-error',\n    fieldSuccessClass: 'has-success',\n    behaviourOnStateChange: null,    // Previously called focusBehavior\n    checkForStateChanges: null,\n    stateDefinitions: null,\n    fieldFocusScrollOffset: 0\n  };\n\n  this.$get = ['$injector', function($injector) {\n\n    function getService(name) {\n      try {\n        return $injector.get(name);\n      } catch (e) {\n        return null;    // Provider-not-found error, ignore and move on\n      }\n    }\n\n    // Policy precedence: this.defaults, policy-value-object, noop\n    self.defaults.behaviourOnStateChange = self.defaults.behaviourOnStateChange || getService('formPolicyBehaviourOnStateChange') || nullBehaviourOnStateChange;\n    self.defaults.checkForStateChanges = self.defaults.checkForStateChanges || getService('formPolicyCheckForStateChanges') || noop;\n    self.defaults.stateDefinitions = self.defaults.stateDefinitions || getService('formPolicyStateDefinitions') || nullStateChanges;\n\n    var policyService = {\n      getCurrentPolicy: function() {\n        return angular.copy(self.defaults);\n      }\n    };\n\n    return policyService;\n  }];\n});\n\n\nfunction formDirective(formPolicyService) {\n\n  return {\n    //priority: -1,\n    restrict: 'AE',\n    require: ['?form'], // Tells the directive to get the controller for the 'form' directive, which is the FormController controller\n    compile: function(tElement, tAttr) {\n\n      // Use element.data() to store a reference to this element for use by child.inheritedData()\n      // Will storing an element this way cause a memory leak? Or should I just store the data I currently need (attr.class)\n      // This has to happen during the compile step, as the children need access to the variable when they are compiled\n      //  ('class' is a reserved word to JavaScript, so we need to treat it as a string)\n      tElement.data('formElementClasses', tAttr['class']);  //jscs:ignore\n\n      return {\n        pre: function(scope, element, attr, controller) {\n          // We want to extend the FormController by adding a form policy\n          var formController = controller[0];\n          formController._policy = angular.extend(formPolicyService.getCurrentPolicy(), scope.$eval(attr.formPolicy));\n\n          // Add a reference to the <form> element's scope to the formController, to support showing errors for nested components\n          formController._scope = scope;\n\n          // Determine if we have a parent form controller. If we do, we want to use it for the focus behaviour\n          formController._parentController = element.parent().controller('form');\n\n          if (!formController._parentController) {\n            // We also want to add an element reference when a control is added\n            formController._controls = {};\n          }\n\n          // Generate the focus policy function for use by other directive\n          formController._applyFormBehaviourOnStateChangePolicy = formController._policy.behaviourOnStateChange(formController);\n\n          // Add/remove a class onto the form based on the value of the formSubmitted variable\n          formController.setSubmitted = function(value, tellNoOne) {\n            element[value ? 'addClass' : 'removeClass'](formController._policy.formSubmitAttemptedClass);\n            formController._formSubmitAttempted = value;\n            formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n            if (value && !tellNoOne) {\n              scope.$broadcast('event:FormSubmitAttempted');\n            }\n          };\n\n          // Flag to indicate whether the form has been submitted\n          formController._formSubmitAttempted = false;\n          formController._applyFormBehaviourOnStateChangePolicy.resetBehaviour();\n\n          // If this form is an ngForm (in that it has a parent 'form'), then we need to make sure that\n          // when the parent form is submitted or reset, the same thing happens to the child forms\n          if (formController._parentController) {\n            scope.$watch(function() { return formController._parentController._formSubmitAttempted; }, function(value) {\n              if (value !== undefined) {\n                //formController.setSubmitted(!!value, true);  // Don't send another notification, just update our own state\n                formController.setSubmitted(!!value);  // Don't send another notification, just update our own state\n              }\n            });\n          }\n        }\n      };\n    }\n  };\n}\nmod.directive('form', ['formPolicyService', formDirective]);\nmod.directive('ngForm', ['formPolicyService', formDirective]);\n\n\n// We want our formController to expose the list of controls that are registered with the form,\n// including controls inside sub-forms. That allows us to reset them directly. Relying simply on the fieldName\n// does not work when using sub-forms inside ng-repeaters.\n\nvar inputElements = ['input', 'select'];\n\nangular.forEach(inputElements, function(inputElem) {\n  mod.directive(inputElem, function() {\n\n    function hookupElementToNameToElementMap(formController, element, fieldName, fieldController) {\n      // Each element in the map is an array, because form elements *can have the same name*!\n      var map = formController._controls;\n      if (!map[fieldName]) {\n        map[fieldName] = [];\n      }\n      // Add the field to the end of the list of items with the same name\n      map[fieldName][map[fieldName].length] = {'element': element, 'controller': fieldController};\n\n\n      element.on('$destroy', function() {\n        // Delete just this element from the map of controls\n        var map = formController._controls[element.attr('name')];\n        var elementId = element.attr('id');\n        for (var i = 0; i < map.length; i++) {\n          if (map[i].element.attr('id') === elementId) {\n            map.splice(i, 1);\n            break;\n          }\n        }\n      });\n    }\n\n    return {\n      restrict: 'E',\n      require: ['?^form', '?ngModel'],\n      link: {\n        pre: function(scope, element, attr, controllers) {\n          if (!controllers[0]) {\n            return;\n          }\n\n          var rootFormController = controllers[0]._parentController || controllers[0],\n              fieldController = controllers[1],\n              name = attr.name;\n\n          if (rootFormController && rootFormController._controls) {\n            hookupElementToNameToElementMap(rootFormController, element, name, fieldController);\n          }\n        }\n      }\n    };\n  });\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/policy/FormPolicy.js\n **/","import angular from 'angular';\nimport 'angular-scroll';\n\n// The form policy intentionally has no hard dependencies.\n// If there are form-policy values that exist when the service is being constructed, it will use them.\n// Otherwise it will use no-op policy functions.\nconst mod = angular.module('ngFormLib.policy.behaviourOnStateChange', ['duScroll']);\n\nexport default mod.name;\n\n\n// Helper functions\nvar timeoutPromise, scrollPromise;\n\nfunction setFocusOnField($document, $timeout, duration, element, offset) {\n  // If no offsetHeight then assume it's invisible and let the next error field take the scroll position\n  if (element[0].offsetHeight) {\n    //console.log('Error focus set to: ' + domElement.id);\n    $timeout.cancel(timeoutPromise);\n    $timeout.cancel(scrollPromise);   // This doesn't seem to make a difference on a Mac - user-generated scrolling does not get cancelled\n    timeoutPromise = $timeout(function() { element[0].focus();}, duration);\n    scrollPromise = $document.scrollToElement(element, offset, duration);  // scrollToElement() comes from the angular-scroll directive // No offset\n    return true;\n  }\n  return false; // Indicate that we did NOT set the focus\n}\n\n\n\n/**\n * Returns a function that can be called when an error is showing FOR THIS FIELD. The function is dynamically created\n *  based on the form policy.\n *\n *  The dynamic function sets the focus if the form policy allows it to\n *  The input parameters are:\n *    - DOMElement of the current form-field control that could get focus\n *    - whether an error is showing on the form-field\n *    - whether the form was just attempted to be submitted\n *\n *  The returned function is stored against the form controller as _applyFormFocusPolicy(...)\n *  _applyFormFocusPolicy() should be called by the field-error-controller directive whenever the field state changes,\n *   and when a form-submit event occurs.\n */\nmod.service('formPolicyBehaviourOnStateChangeLibrary', ['$document', '$timeout', 'duScrollDuration',\n  function($document, $timeout, duScrollDuration) {\n\n    // Policy implementation functions\n    function behaviourOnErrorFocusFirstField(formController) {\n      // We want to pretend that there is a single controller for the form, for the purpose of managing the focus.\n      // Otherwise, the main form sets the focus, then the subform (ng-form) also sets the focus\n      var focusController = formController._parentController || formController;\n\n      return {\n        // This function is called by the fieldErrorController when the fieldState changes and when the form is submitted\n        applyBehaviour: function(fieldElem, fieldState, formSubmitAttempted) {\n          // Set the focus to the field if there is an error showing and a form-submit has been attempted\n          if (fieldState === 'error' && formSubmitAttempted) {\n            // Make sure element is the first field with an error based on DOM order\n            var elems = $document[0][focusController.$name].querySelectorAll('.form-group .ng-invalid');\n            var firstElement;\n            angular.forEach(elems, function(elem) {\n              console.log(elem.getBoundingClientRect());\n              if (elem.getBoundingClientRect().top && !firstElement) {\n                firstElement = elem;\n              }\n            });\n            var isFirstElement = firstElement ? (firstElement.id === fieldElem[0].id) : false;\n\n            // ...and if the focusErrorElement is blank...\n            if (!focusController._focusErrorElement && isFirstElement && setFocusOnField($document, $timeout, duScrollDuration, fieldElem, formController._policy.fieldFocusScrollOffset)) {\n              focusController._focusErrorElement = fieldElem;\n            }\n          }\n        },\n        resetBehaviour: function() {\n          focusController._focusErrorElement = null;\n        }\n      };\n    }\n\n    return {\n      onSubmitFocusFirstFieldIfError: behaviourOnErrorFocusFirstField\n    };\n  }\n]);\n\nmod.factory('formPolicyBehaviourOnStateChange', ['formPolicyBehaviourOnStateChangeLibrary', function(formPolicyBehaviourOnStateChangeLibrary) {\n  return formPolicyBehaviourOnStateChangeLibrary.onSubmitFocusFirstFieldIfError;\n}]);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/policy/behaviourOnStateChange/PolicyBehaviourOnStateChange.js\n **/","import angular from 'angular';\n\nconst mod = angular.module('ngFormLib.policy.checkForStateChanges', []);\n\nexport default mod.name;\n\n\n// Policy implementation functions\nfunction checkForStateChangesOnBlurUntilSubmitThenOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  var errorWatch;\n\n  scope.$on('event:FormSubmitAttempted', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    errorWatch = watchForErrorChanges(scope, stateDefinitions, ngModelController);\n    //console.log('heard formSubmitAttempted');\n  });\n\n\n  // Listen for the form reset event and cancel the submit-watcher\n  scope.$on('event:FormReset', function() {\n    (errorWatch || angular.noop)(); // Remove the error watcher, which may-or-may-not be present\n    //console.log('heard formReset');\n  });\n\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\nfunction checkForStateChangesOnChange(scope, element, name, stateDefinitions, ngModelController) {\n  // Watch the error condition for changes, and flag the field as inErrorShowing when the errorCondition is true\n  watchForErrorChanges(scope, stateDefinitions, ngModelController);\n}\n\nfunction checkForStateChangesOnBlur(scope, element, name, stateDefinitions, ngModelController) {\n  watchForBlurEvent(scope, element, name, stateDefinitions, ngModelController);\n}\n\n\n// Helper methods\nfunction createWatch(scope, ngModelController, stateName, stateCondition) {\n  scope.$watch(stateCondition, function(value) {\n    if (value === true) {\n      ngModelController.fieldState = stateName;       // THIS IS THE KEY FLAG\n      //console.log('A: ' + stateCondition + ' = ' + value);\n    }\n  });\n}\n\nfunction watchForErrorChanges(scope, stateDefinitions, ngModelController) {\n  // Set up a watch for each state definition... expensive?\n  for (var stateName in stateDefinitions) {\n    if (stateDefinitions.hasOwnProperty(stateName)) {\n      createWatch(scope, ngModelController, stateName, stateDefinitions[stateName]);\n    }\n  }\n}\n\nfunction evaluateFieldStates(scope, stateDefinitions, ngModelController) {\n  for (var prop in stateDefinitions) {\n    if (scope.$eval(stateDefinitions[prop]) === true) {\n      ngModelController.fieldState = prop;\n      //console.log('B: ' + stateDefinitions[prop] + ' = ' + prop);\n      break;\n    }\n  }\n}\n\nfunction watchForBlurEvent(scope, element, fieldName, stateDefinitions, ngModelController) {\n  // Determine the initial field state. First state to evaluate to TRUE wins\n  evaluateFieldStates(scope, stateDefinitions, ngModelController);\n\n  element.bind('blur', function ngShowWatchAction() {\n    evaluateFieldStates(scope, stateDefinitions, ngModelController);\n    scope.$apply(); // We are in a jQueryLite handler and have changed a scope property - fire the watchers!\n  });\n}\n\n// Define the different display trigger implementations available\nmod.constant('formPolicyCheckForStateChangesLibrary', (function() {\n  return {\n    onChange: checkForStateChangesOnChange,\n    onBlur: checkForStateChangesOnBlur,\n    onBlurUntilSubmitThenOnChange: checkForStateChangesOnBlurUntilSubmitThenOnChange\n  };\n})());\n\n  // This 'service' is the default implementation of the check-for-errors policy\nmod.factory('formPolicyCheckForStateChanges', ['formPolicyCheckForStateChangesLibrary', function(formPolicyCheckForStateChangesLibrary) {\n  return formPolicyCheckForStateChangesLibrary.onBlurUntilSubmitThenOnChange;\n}]);\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/policy/checkForStateChanges/PolicyCheckForStateChanges.js\n **/","import angular from 'angular';\nimport defaultStateChangeBehaviour from './behaviourOnStateChange/PolicyBehaviourOnStateChange';\nimport defaultStateChangeChecks from './checkForStateChanges/PolicyCheckForStateChanges';\nimport defaultStateDefinitions from './stateDefinitions/PolicyStateDefinitions';\n\nconst mod = angular.module('ngFormLib.defaultPolicies', [\n  defaultStateChangeBehaviour,\n  defaultStateChangeChecks,\n  defaultStateDefinitions\n]);\n\nexport default mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/policy/defaultPolicies.js\n **/","import angular from 'angular';\n\n// Define the different display trigger implementations available\nconst mod = angular.module('ngFormLib.policy.stateDefinitions', []);\n\nexport default mod.name\n\n// Error Conditions\nfunction errorOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorImmediately(formName, fieldName) {\n  return fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$invalid';\n}\n\nfunction errorOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$invalid';\n}\n\nmod.value('formPolicyErrorDefinitionLibrary', (function() {\n  return {\n    onSubmit: errorOnSubmit,\n    onDirty: errorOnDirty,\n    immediately: errorImmediately,\n    onSubmitAndDirty: errorOnSubmitAndDirty,\n    onSubmitOrDirty: errorOnSubmitOrDirty\n  };\n})());\n\n\n// Success Definitions\nfunction successOnSubmit(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$valid';\n}\n\nfunction successOnDirty(formName, fieldName) {\n  return fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successImmediately(formName, fieldName) {\n  return fieldName + '.$valid';\n}\n\nfunction successOnSubmitAndDirty(formName, fieldName) {\n  return formName + '._formSubmitAttempted && ' + fieldName + '.$dirty && ' + fieldName + '.$valid';\n}\n\nfunction successOnSubmitOrDirty(formName, fieldName) {\n  return '(' + formName + '._formSubmitAttempted || ' + fieldName + '.$dirty) && ' + fieldName + '.$valid';\n}\n\nmod.value('formPolicySuccessDefinitionLibrary', (function() {\n  return {\n    onSubmit: successOnSubmit,\n    onDirty: successOnDirty,\n    immediately: successImmediately,\n    onSubmitAndDirty: successOnSubmitAndDirty,\n    onSubmitOrDirty: successOnSubmitOrDirty\n  };\n})());\n\n// This 'service' is the default implementation of the check-for-errors policy\nmod.factory('formPolicyStateDefinitions', ['formPolicyErrorDefinitionLibrary', 'formPolicySuccessDefinitionLibrary',\n  function(formPolicyErrorDefinitionLibrary, formPolicySuccessDefinitionLibrary) {\n\n    // The FieldErrorController will ask for the stateDefinitions, passing the formName and fieldName as parameters\n    return function(formName, fieldName) {\n      // Return an object with the stateName(key) and the stateDefinition string(value)\n      return {\n        'error': formPolicyErrorDefinitionLibrary.onSubmitOrDirty(formName, fieldName),\n        'success': formPolicySuccessDefinitionLibrary.onSubmitOrDirty(formName, fieldName)\n      };\n    };\n  }\n]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/ngFormLib/policy/stateDefinitions/PolicyStateDefinitions.js\n **/","module.exports = \"<div class=\\\"dropdown-menu datepicker\\\" ng-class=\\\"'datepicker-mode-' + $mode\\\" style=\\\"max-width:320px\\\">\\n<table style=\\\"table-layout:fixed;height:100%;width:100%\\\">\\n  <thead>\\n    <tr class=\\\"text-center\\\">\\n      <th>\\n        <button tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" ng-click=\\\"$selectPane(-1)\\\">\\n          <i class=\\\"{{$iconLeft}}\\\"></i>\\n        </button>\\n      </th>\\n      <th colspan=\\\"{{ rows[0].length - 2 }}\\\">\\n        <button tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-block text-strong\\\" ng-click=\\\"$toggleMode()\\\">\\n          <strong style=\\\"text-transform:capitalize\\\" ng-bind=\\\"title\\\"></strong>\\n        </button>\\n      </th>\\n      <th>\\n        <button tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default pull-right\\\" ng-click=\\\"$selectPane(+1)\\\">\\n          <i class=\\\"{{$iconRight}}\\\"></i>\\n        </button>\\n      </th>\\n    </tr>\\n    <tr ng-show=\\\"showLabels\\\" ng-bind-html=\\\"labels\\\"></tr>\\n  </thead>\\n  <tbody>\\n    <tr ng-repeat=\\\"(i, row) in rows\\\" height=\\\"{{ 100 / rows.length }}%\\\">\\n      <td class=\\\"text-center\\\" ng-repeat=\\\"(j, el) in row\\\">\\n        <button tabindex=\\\"-1\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" style=\\\"width:100%\\\" ng-class=\\\"{'btn-primary': el.selected, 'btn-info btn-today': el.isToday && !el.selected}\\\" ng-click=\\\"$select(el.date)\\\" ng-disabled=\\\"el.disabled\\\">\\n          <span ng-class=\\\"{'text-muted': el.muted}\\\" ng-bind=\\\"el.label\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/angular-strap/src/datepicker/datepicker.tpl.html\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group form-group-checkbox\\\">\\n\\t<div class=\\\"checkbox\\\">\\n\\t\\t<input type=\\\"checkbox\\\" field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/formCheckbox/template/FormCheckboxTemplate.html\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\"><label class=\\\"control-label\\\"></label><div class=\\\"control-row\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"10\\\" placeholder=\\\"dd/mm/yyyy\\\" bs-datepicker form-date-format mask-date-digits><span ng-transclude></span></div></div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/formDate/template/FormDateInputTemplate.html\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\"><label class=\\\"control-label\\\"></label><div class=\\\"control-row\\\"><input class=\\\"form-control\\\"><span ng-transclude></span></div></div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/formInput/template/FormInputTemplate.html\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<div>\\n\\t<div class=\\\"radio\\\">\\n\\t\\t<input type=\\\"radio\\\" field-error-controller>\\n\\t\\t<label><span ng-transclude></span></label>\\n\\t</div>\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/formRadioButton/template/FormRadioButtonTemplate.html\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group\\\"><label class=\\\"control-label\\\"></label><div class=\\\"control-row\\\"><select class=\\\"form-control\\\"></select></div></div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/formSelect/template/FormSelectTemplate.html\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<span class=\\\"required\\\" aria-hidden=\\\"true\\\" ng-class=\\\"{'ng-hide': hide}\\\" ng-transclude></span>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ngFormLib/controls/requiredMarker/template/RequiredMarkerTemplate.html\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular-scroll\"\n ** module id = 29\n ** module chunks = 0\n **/"],"sourceRoot":""}